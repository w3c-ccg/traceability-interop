{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "345b837b-7649-4cc8-86cb-28a2dc071f6f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b441d11-fa5e-45bf-a843-d5f67e7ad596",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bd551f9-0891-4ab1-993d-e107d9c7b729",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f8cad79-42eb-454e-9504-6890283a7bf6"
                }
              }
            ]
          },
          {
            "id": "acbeeb6f-e1f4-4427-addc-22f8c4217c48",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7668a9c4-dce9-4536-b7ac-090f4d4ecdd9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3babb4f7-fdac-41c6-9e78-f7936908fbee"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5d8e9e8c-4129-4933-b889-866029351f58",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8a371162-a6b1-4292-b9bf-b1e0446a3be0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfe0ae03-e7d8-42c4-b25b-f22b2219a391",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4570a0c-c2f9-4c75-ac39-7a02a4245de6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a8692af-4696-4f1b-a7ef-cc9c7d976225"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f62210b5-f86e-4d4b-a18e-0c7cdc5e74fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab5700a3-4878-41fb-9cd4-de02e18c238a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f744d283-90eb-4356-9b4a-6f81b86cca61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8927f08c-0f62-46ee-b060-6f266f29825c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68812aa7-dd51-44ab-bbc0-50fdacef93b4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "38b08d96-afec-4e32-8050-3a164b1f8d12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88e90aaf-2da4-4d4e-adfe-59bdf5d04aa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bba30990-52fa-41c2-b52f-1dae00d0e4d4"
            }
          }
        ]
      },
      {
        "id": "320bce33-091c-4698-b3c6-16e03bb4328f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "62ba23c8-2209-4bbe-8af3-5a3daf12fa92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ce9a4fa-3f6d-4285-880f-ea800cb9ca55",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ddfb4c6-d2a1-4405-b890-b8ae584732e9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed034bf-a3a3-4e0f-ad7b-521a0ee76786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5a2b65b-4642-4f8e-a923-b17333345728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffa322f-b30f-4973-b3dd-e9065ee46405",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22ad50f-0991-44ec-aed2-dd9476001392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68393453-b3d0-4f33-b9a5-13acf093fc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b918687-033a-4162-b401-615e305d7f6f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a0e170-a324-4ad0-8eb4-888cd52b05ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b7fbd76-a1b9-4098-962f-7903fb4910c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93f100dc-d2de-480f-8dc4-f07903b8f11c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3342c40f-01cf-4b8f-a6a5-525de4e3bbc7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38942151-963c-4526-a2d9-6c6e3e379a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "707739a4-38c8-422b-bf05-1bde12ec387b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4170da94-b045-4988-92f7-d9567a7e0ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb7ec21-b9dc-4d4a-b663-4833b8388d66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d93b6006-7c02-4d6c-9434-bcaaef9d0b92",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5840444-8c83-46cd-b218-85f6f6842976",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70800588-07d6-4afa-bde8-954bcfdb0ccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "adea9edf-9559-4332-955d-3dc10cbd3fe4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b49e93a-aa90-4d61-afce-146d3313e39a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ac5c97c3-a40c-4a69-ab59-583173c0d40c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0b35944-6d02-4c39-8252-4714309c5622",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d21dbca-7153-408b-8528-923c03c1166f"
            }
          }
        ]
      },
      {
        "id": "35df3f6f-0bda-436b-80b6-adcb8c05106d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a764c62f-0b01-43f0-8976-29dd6071e03b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a62d534-b771-4065-839d-069e01a8703d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "311740df-535b-42ec-97b9-5ada9dd777ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf1be2d-3a09-4f54-90ec-bde1afbc1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f1697d-d62b-4c6b-80c2-400dd181ebd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ef48df-87f7-4dfb-84ff-af957ec41b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95945633-d92f-42b8-a7de-604e32705732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6754f5-ab52-4b83-ac2d-11cdd354c1f0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9c75f1-c7c5-442f-aa80-bec3cce9e669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0989797f-996c-4b12-847b-fd11cd6d7891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53adbf00-9ffc-48ec-be28-8ac6f2c23e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21f027e7-3c13-457f-a030-65513f940a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b238fc1d-309c-485c-896d-5615528c6b5a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8a4263-cf9b-4861-903d-b4b8404c1152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee90134b-0cd4-40c8-9bb7-907a4dc86fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d15f440-b034-4af3-9339-6034c6edf264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4b64301-bd97-43e4-bc8b-2d222bf253c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b2e528-3f68-4b00-8111-325da4338b6b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e131a6-28d4-427a-b9f0-c519cb2e4712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3530b7c6-6f18-4d37-95fc-6268af87336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c40fd0-4f4d-4259-9371-6cea7b2623bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b51055-a547-4b30-87c7-99721729d133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f8c8ff-92df-4331-9732-01d23b7e2032",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cb83b7-0697-4610-ac2d-309a7e069c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2d906f-e654-4b02-8adc-dae6e1dda16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ab691-22d1-49ee-b222-e96623dd3cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff2cfc0f-3ac7-4fb1-99e5-9f43fded8594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55cb13d-195a-4133-aec9-185c5bfbade7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f1160d-f278-418a-90c4-1da3e44250af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4923a742-59c9-4e80-b685-7c5c4d176431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac785db-c571-409a-8047-64f331d8f741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "008d7dfb-c7ba-4b31-8ad2-50021faca73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03de14ec-e610-49d9-b246-80e470643947",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbbdd71-b220-43ea-8329-47c74148aac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee49e799-e555-4807-897e-f4bfa40ee0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d787929-524e-435c-b9ce-1e6a3f26cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83843798-1785-40c1-b85d-880d6ecda86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a339c4f-5db3-4f4b-bded-7da6f53b5002",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be0735a-8248-483a-84eb-cd93b1c91e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51eb343-cf31-4306-9e7a-927e694b6cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b1937-a0ba-4814-8196-2540f899581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4aa57e4-d482-4eb9-b9af-3cb70a39e9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd83108a-088c-4bd4-a69e-2ba7a9a1d874",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6822e538-e7c9-47fa-adf8-f8a698db09af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978d93c7-a919-407f-84b8-097759524bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50916153-3fa6-4a64-bf45-5b497068be53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0836c47-1c02-4ed1-97ac-a3340e0eb8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4aad6a-2ea1-4338-adf8-bee5791216fa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a780b2ca-5390-4a6a-a16c-c3b45a9f5c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a775bafa-d2ed-47b4-832c-f2ac87684b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2db3d3-573f-419e-8ff7-39c0f84acb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d8d924-1883-462d-9eae-385e1f3a772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500477b1-d3bd-409b-8be8-9042a0cca170",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e037eed-ff07-4df5-9ff5-eb9db04c161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e566d480-d116-468b-8e6f-58f555a75327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d11f92-0907-436b-97a1-e33b2d9d1ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e26cda01-3f44-42dc-a06e-57319ee1dfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a0d8e5-7650-4311-a520-b70868cc35e7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4794ba7-e0cf-4d67-9764-0b2cc81e825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ea9a24-bb55-4100-8bb5-b30a606f2f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a47166-c2cc-4572-a609-db92f72eb524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0925de6-1336-4d79-9cc5-f503be88ff49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb523d0-bd64-4696-8449-03d1ea35cd76",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6b5003-2895-4de9-a35e-db6e0dca299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c21c907-f07a-47a1-9364-37225a7f8fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cd9ec6-82f1-4506-960f-1ab0bcd9afad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61ed24bc-091d-4ed0-b246-17fd319bf27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6a819b-89a9-446d-b9ed-ec61c3982b0b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f50c63-e02d-489a-9bd6-bc28de17f9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72ee33d-c241-49de-8b13-baf6a4ac74e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9b6c45-a56f-4e03-be16-9a2a78b489f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62e9ffcc-ed31-400b-81ff-4beb9e254f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcde293c-ff13-48b0-a1a4-59d85470c808",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c4723a-c39b-4864-b456-2263abbc4f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eb86a7-ef4b-4961-9bb2-c231e7e58d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cebfae-7f1d-43d5-9b43-ed6e4d687aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bc4030b-ea02-4567-b20d-6d289224a4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1a5b1f-d8f6-415e-b630-70796563631f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c6b9c-5828-4934-bbb1-435cf14213f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74db6c46-f0bf-4b1a-a6b9-9c6c524fac84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9dbf7b-4e40-4d78-9e7d-dfed43bb9fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "047e5a27-3ed2-4b2d-8dbe-8c768a1e7619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae08eab5-0425-496b-aa3e-bae45dba9124",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2c497e-5138-45ff-b769-9199dfc0350a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f8c95e-74ff-44eb-8337-e784732161c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816fb7b9-e30f-425d-9942-54abf7be4797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be7b1282-db33-4a92-8cf3-08d8a62fafa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaee509-6119-4968-9696-7d79a6a1c997",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525fca24-8a2d-4861-9d1a-42c7130ecb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2eb0ee-3476-41cc-8405-fc58cf10d338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ae9aeb-ed84-486a-a573-b770fc225792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "335d15e2-c285-4239-8f08-f9e82533325d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c726d9a-fbc2-4d3a-b290-2fbe2593f5c1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c057d9-9b9d-497c-8fe1-e623d4d45c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877acf3b-4376-41e8-82be-6765bfef0392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6884520e-27a7-42dd-9e30-481eecdccdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a0a57d-d3c0-4ccd-9579-8a7c131ac29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c8dd2e-1307-4c76-b590-9c80fc302be3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef361d19-6aba-477b-9607-0bd948d5a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfcd9f8-4159-4d88-bf28-00fe13e12dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa6a248-c054-45a7-962d-20c56db01c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa5e466-9a89-4684-a10d-0957acd9c487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386a98b0-2633-4af8-a9f2-4e6cb16f53f9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5091fba-1290-4e8e-a169-98beb5567b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5ad73c-1e9a-437f-b62a-9afa7e3ded23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cdb74a-525f-4c60-a04d-84db0d992600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd439fc-9bc2-41b5-86e3-8485e9697e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ce996a-a1b0-4b4b-811f-ca06a178310d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbe95d8-d041-45c6-80fd-b03586f1f5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712c6155-bac7-46cd-8c09-ec7e9bda39c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a6869a-fabb-4e07-8ae8-f45560dccb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50d54c8d-6888-4d3e-91eb-084736d89c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a582055-0621-490a-ac66-a6cf7c5bd5ee",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1ddfb2-1d0d-45b7-8512-8b6f6b5791a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebaaf780-e1c3-48cc-80a0-b429b04b4d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732654bc-b2b8-4735-9f42-f86034c00753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a64acf95-f2c9-4225-af63-7e4b397eb756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f563b0a-c280-46fd-90cd-e50e7ba41559",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525824f8-ba29-4f54-85ba-fcc8840e6987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d52f00d-1099-492e-a08c-651a14f5c904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682ae72d-7e2d-4448-980d-7e5dfddfc6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1cc1b6-c66c-4358-a62f-1cee2dd420e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8f5f76-16ae-42a4-8844-daf8ad41d718",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b503362f-f354-4de9-b8d5-be5ff5122900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224e30a3-6c37-4456-a9e7-93d05d1feb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204ce390-e6de-4192-b28e-d3b91498762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a7b0d0-d0c6-4126-a314-63043c7f8bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b95ef86-926b-42b3-8849-6534b81ad9b3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ee8290-d8bb-4def-8ccc-84cc3157b1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c8ac0f-1032-4a5e-9197-cb0bff6ca30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93a852-7cd2-4be7-bf59-421d1aa2d0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c477d63-457a-46c2-8624-6be2b8b692a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b809c6f-f78d-411b-898d-00f4001cbf14",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf34f1b-af41-46a1-be8e-c66c3cbf5007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d988e9e-3f05-4a5d-a69b-46401cdaebeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4d08e7-b349-4885-bf0d-8bd00f181573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08bfe215-6eba-454e-a768-0d6ec6eb2a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5054b9bb-d448-4881-a360-09887aa32085",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415f857a-0e6d-49d0-a330-e239f4b59173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20614085-7238-485d-a12c-5576ca02a981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9ef3ea-72da-47b2-895c-1b1532965fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1950ab48-ad83-4090-8c1b-619358ce4388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89b3372-72b9-41a2-869a-d87d11c7338f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72332904-bdb1-4dfa-bf12-d9fe4cdd6682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96c1afa-4373-42d2-80bf-3a9e75d06eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49132b57-19c6-4458-b6a5-510ffffcfd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7893a927-ced5-4a36-975f-ac726aedbce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d47aaf-0bf1-434d-a7d1-885a504a067e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1de7fc-9644-4783-9231-a64160e77b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5808cf47-2b79-4837-884f-c26ec3a7abde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2893bf-14de-492f-922a-92842376e754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3058be8-4817-4721-aa43-ccee3c9201dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4662cd6-1ee6-4fde-87c7-afa57a154d52",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fb7886-377e-41aa-a410-0fe3e4de1e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2382a56a-c21e-48a8-80fb-242f1de42bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc10372a-2729-4f3a-bfaa-3e0f8514c7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb7b49b-80dc-44b7-8011-d4c9f50e1a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dac4db-cc39-43d3-a842-921f14de089b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cf048b-6bc2-452d-ab06-8101afb6fa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de909ab-46ff-4810-a096-2e11201cf9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3b50e1-e248-42a7-b102-d3f91cc415a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76580894-c5fb-4177-90ec-a81e1d6cc8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e37367-f0e7-47a1-854e-c7ac59f696eb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32439fa9-469a-4bed-a1ba-3cacfcee0914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ff5a73-c26c-496b-8493-3beccbd85563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec161aa-79d1-4fc7-a05d-8fa7711c9bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbef2fd-5f88-4558-9fc2-e1f17219595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffb772c-33a7-4b09-96b0-ea1bae79d2fa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93989655-81bb-492f-ac5b-0a58a9a728f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596fc6e5-fa40-405d-a68d-2e1fba649821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd804dcf-078f-40bc-b7ca-8f3f4917e1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "460e0c63-5581-4fda-ad74-8106f45c49b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb99aed-f2f2-46f1-af34-96e1852fea72",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc9c82e-965e-4db5-bb9c-548cc77c6e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa0b58c-179c-467c-bd92-248e1a7dcb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5973df0a-2c4f-45b8-88dd-b1356bbed239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d2e469-1433-4bf6-8dc0-098b6bc89146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e3b0c5-12e1-4136-8546-cbbd5890daa4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c967321-9c9f-4b6b-a146-9a24170ec997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4cd738d-699b-4206-8e5d-445c3e699bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f017f1ac-df21-4412-9f97-20ba4e14a740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a71b7245-31f1-483f-9ca1-f531de7e2f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f4ccb5-7143-4df4-83a7-af2b540f3b5e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8482bfe1-c5ed-4ce0-96c4-d663eaea7ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90496508-423c-4279-8712-4f1b85d5535b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af69d38d-0d1b-466d-8850-9249d89ac4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd390376-1857-44d9-b2c9-ae174c4abfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6181a1d7-a569-4d93-952d-62b3c2aeb226",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33905d23-4436-4910-b234-de39a7347576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d55fca-010b-40a9-a00d-5d253e631500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce5f74e-8a53-4060-963d-094d5cf24a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc98c3a-8c40-4a40-9666-87bf84d6a089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746f6f5d-1aee-4598-9891-9d579a358de5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d31cc43-624b-42d3-8413-db0fe27df421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0561e76-e564-4749-b390-f34731b6cd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3198f7-0272-4d4a-9d70-d31facd14a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fee73ca-bdfb-4819-bdf9-e3d0646f1a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bf5a9a-ce33-430e-b4b1-4aaa3cc31c58",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98277cf4-f641-4b44-a2b6-68e157fd9f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76530d4e-46b7-49df-9917-cb59d6019859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b81c66-a6dd-4158-92a0-247d5b31dc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1cc0ee-3c2b-4641-a1dc-c8c8cb19c299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733d1962-502d-4d05-9e36-05971cf27b5a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95a9dfa-a020-404c-8f1e-d8eddb086a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f653ca7-e2fa-44ab-a34f-5dd28ee83c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc63c6b-b606-4fc7-81c2-5043e89a8b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa41280-a612-45d4-bc5e-b85960785283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5380d834-c5ea-4d48-9bac-41849fdb7310",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cbc974-ff7c-47c1-8a90-58531bec646e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a85abe4-f937-4260-8daf-abfdba3414e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e344b7-b8f7-4ccb-bdd9-1beb836163d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "60b433cc-4064-4ef7-9825-caec77e25baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599e4d95-3813-47f2-b907-ab91778b176a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c434ffdb-659b-4e94-af6b-887ab6ade6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e206a76-ead8-41d1-ba24-7ff56afdecbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40fc8ea-1fbd-45c7-b5fd-346fedafebf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18b37b08-1df2-4a63-8e53-eca9f071f5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87effcd2-360b-4c6e-9bca-3cdc7bf851a9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ca8896-d31b-4e9c-bec0-6eb334ddd4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f7e847-92ee-4dc4-85ca-f75ca25684f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e96c77-d56a-4137-9975-eb4a9310a079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "02481027-30df-491c-a00d-e3f43b44e2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1b1c2d-d9e1-49fb-89f1-330c304462e7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f0f7a1-93bd-4de5-bf0a-df26572e4c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127802b5-61b2-4a54-accd-d3b0110578f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed01d748-2fcd-4f9f-8c60-3a5dc6f88988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8dae7f-3ca3-480c-9829-2d480f6a0b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75aa8429-68a8-4ed8-96e2-d09a69c936d5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b638199-2db5-4428-8a4c-fdf50bf6fa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5e1e3e-3d4b-4ee0-9947-16ac2badc468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea1e2a6-5084-4581-9061-fcca1fcc7eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69f6d052-e175-488f-bb23-991c01181b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b7f497-cb32-4c1d-9916-e0a8bddd1b56",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66c206d-8db7-4417-8827-273c44e0af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18907bad-6521-41ef-b85b-b3e986d213b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98461fe4-6dec-4632-9660-6aa53f1144a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a341d6bc-b0ba-40ca-a3ec-df19ddaad7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f452b250-61c4-4622-b348-02457efb3b8f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257c675c-6ef0-40a1-bee9-83de92e5ecf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d375699-c485-499e-b9e7-118a1202ef2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3329ee-0364-40c1-aa24-f6d2933e8391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25889cdc-a159-42f4-b44a-667474eaf8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e49daa-e47f-4730-ab60-b63ccf8fd590",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c592137a-a73c-4e38-bff3-e9d044b11a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e77fc3-75f9-48ac-aae6-6b7812d6f7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2406b2f-7027-4b5c-a79c-6802425311c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ab1e55-6551-4e37-a214-ee4991d800f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb755eb-02ca-455f-b5e2-d58aa0c4bbb9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a9076a-9312-4451-99a2-fd0b8229b0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244f65ac-47c0-40e4-9b0a-d43e44c09f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff804790-0e17-4a39-94e6-2c8efabd34e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ec212d-cb6f-4ecc-82a4-fae69f854b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45f141e-8584-4b67-9d3b-1793f708fbb0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8beb4af-635f-48cc-ba9b-feba0e7367a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0352ea-d3eb-4a95-a86c-7ec69a4d6c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d170f6-e9f2-44a9-9f14-af312456594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "27aebc5a-9ffe-41b0-8006-84481eecf060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff672fa-7d2e-4971-83dd-f59089966f6b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948393d2-97c1-4820-8836-106d861c41d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c136162d-c0e1-4ebe-b897-f85b80b7c300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc224f7b-7718-4874-b725-64fea2c6948a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "080fdad8-9977-4cb6-adec-325c5e61d1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82498d50-e9ce-4b3e-b2e2-24574e5ffb56",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a892a-dc24-48bd-a474-8ba2b40a859d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70818b28-3309-438a-87f0-f344b17c0df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142607b2-f523-4112-bc12-1522f5bdb6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8288fad-defe-41cc-adfe-7909c1c597a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94d05d9-831a-455a-9361-bf219dd9c70f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808b3d81-5799-469c-b6d2-6b7424529759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19fd3e7-f948-4e55-8991-f0744a7140c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27166255-92b2-47f2-8e4a-9059615a5ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98db2917-1e1a-4612-b084-7cdced9b3bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86e142c-3584-4bb8-bbb1-9554274209ea",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b37170f-9632-4ec2-8d5c-04396cdebbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bef36cc-badf-4c4a-8e66-e854c0d8ba8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f4d565-ef0f-44ec-a8cc-63181e241511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3069db-ac57-412c-abc7-4733028cbf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0525b6-b4ff-4cac-9b60-42ba0dfe2d14",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50bcf11-246e-42f5-bece-12b9837b29a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eb9d72-0736-4f3d-90ec-5176bd068deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff380125-a022-45a5-8753-0a49e0bc93f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4e3c7b-c033-4eb9-a2dd-f2aacc2dee6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d962b5-c569-44b9-b222-a41995d14f9f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfa0a00-118c-4269-897f-57feaf5fa1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4fa2ab-5c46-46a0-96fe-414cd175272d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e887949-25fa-4960-a9ea-cb666c830ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1012d5-9d6a-42cd-9027-70e000c9744c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea00edf8-f45b-4206-9669-8a46377de01e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b8d752-8b19-420d-b657-234d0403474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699eccb8-7e09-4502-95d8-9a75454d705a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508b3cb0-f801-4219-9422-0a59db5e76d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0343aaf-1543-4c00-b23e-7c96c7e57a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cfd0be-b778-45a4-bb6c-bdf6022d4c4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d431852-52db-4e17-96ff-9e0a3232f073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddc0cd3-cea0-4675-8687-f6b8fd79e899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63585cf7-528f-4dcd-80e7-c3aa30287318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0684cd-3d52-4418-b248-009fb07d833a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e216d138-d2bb-4d61-ac3d-b2980dc54627",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbce052-2f0f-4886-badd-c57c80d83b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82e6d89-8f0b-4499-a326-114f4831bc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa93353-eeea-414d-9f8b-8c906b6dc0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9be91b-c809-415d-b61c-145b3e8f5aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188487fb-d428-439a-bbbc-52a434832e32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d7834c-2431-41b2-a111-2dcf078bb6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdef49b-9d60-49fb-8f8f-c7c1e45a989b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a81b5a-1c26-4494-9cec-56ce17272741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ac1600-3198-45b9-a7e8-d7ecb471c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b85e3f9-beb2-474f-b6c4-a162f9d91b34",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3574587c-749c-4480-b60f-00e06dd9ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c937fade-0885-4657-a181-eae28bb1ac16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cab5e4-839a-482d-9ec7-41a3c3e4616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "15bb3d03-9219-46e6-980b-095d90827d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21dabf5-f95f-4a1b-909c-b3a29cd874c0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7992e481-fe6f-4d37-bf8b-efb312953265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ad1a90-44fa-44fd-90cd-4b59f13124f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b742267-5c31-4850-9cb4-4900d2a5f21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77160c6-03f0-4439-b2fe-6738790794a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3ecf5d-2589-4dca-9ecf-8a181b0435c6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8010b4c-1b9d-4000-9833-c613c10fd97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc22d579-d363-4306-be0d-a885dfc929d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefcafac-62af-46ff-b106-d4d54ceddea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec8d34a-aca2-419e-8427-a21e1c4a99b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b74f297-18d5-4dae-8b1e-3446bc5a96cd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae025739-c291-4bed-99be-6beacc02058c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d553cdf6-cbd9-416b-a58b-41dc48cf54e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab9bb23-2e66-4dcf-8151-d33b929413cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6866c5c-449a-41c7-8eab-f1fbffbef0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197cd07f-30e7-40cd-800a-6ffe4b412f17",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baff934d-b2dd-42e7-aa9d-c19f884e27a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0959fddf-2952-441a-94b8-352cf4435d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7783e44-367e-4c88-94cc-e183ddc4f23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ec3fa0-6328-4fe4-8f9d-107919690358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3136450-23e8-4d7e-9ad2-13b8e413e154",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe32f7e4-606c-4463-b949-3b38283ade2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657c2396-4d27-4a2c-894f-49465ba6ca54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0844775e-8376-4756-b959-d125c9ad9241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "483e4520-05d5-43d6-ab7c-1943063733c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556aed14-291c-4aee-a5b0-22508fc84373",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8da72d8-d6eb-4074-b5ae-363e2ec860e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a95732-8fb5-4c31-922b-7f098839f024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd3299b-2b6d-4748-a05b-918a53edd9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bcac2a-5025-417d-b449-ea38cccdfb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bac9fc6-923a-45eb-83b1-96ccd258b7ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb5ba70-03a6-4ef3-827a-8d6a1231fb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d41eff4-5d44-4a2a-97dc-e0e8e1b2ed08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49b2032-26cb-4e8b-bffc-bf7efd7c75bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bac60ec-3332-4093-b771-534d3bad4507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62ca7f6-8d3b-446b-9243-09211f5e9dd8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18000192-33a1-45b2-809d-d93a9b63c606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a55b84-9d80-4a08-a461-c435186deb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcf89d3-d9c7-4bfd-ba7b-2b0049739203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f130879-0e1f-434b-8bee-12587358d206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01acebfc-cd56-4ded-b43d-aa4be80e89ee",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c61a6f-d38c-4f78-b770-ee2da7636e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c543708-3ce6-4eb7-ab62-5b3a71ddcd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6110c6-5fe3-4e14-b784-e59000626e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8f4566-88ed-423d-a9ee-7a5b7560c316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb1a506-7ecd-4d95-906f-735b328640ea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd4d94d-ca65-44aa-a989-8bfc57930e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c0ca1f-f4c5-4540-81ee-a84c5e446e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83147093-91d9-4b8b-b652-7bf163281169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f830e7ff-3709-4ee1-9ecf-2d62f7fdddd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba104be-bc9a-4b1e-875d-d964d54bddc7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad64101c-06a5-4825-b7d8-8cf2b472631f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bc8345-c97d-43cc-b34d-1a17a4c8adc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a06f24-d7b7-4a64-a0e9-f989453fdcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df6ed837-e58f-4291-8d32-954f7cf9b875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beeab9b-c782-461c-9ea5-911a92ac4cdf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30751c8-6fae-444c-8b05-07459cc6a68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ae614f-e975-4704-b0bb-9ac5f84a8112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ff571b-92f0-468d-80f9-f9a8ea19ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70fe8f67-7327-445c-8014-9de17118aa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e05acf9-58d3-4197-8b8e-1d14edd19605",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c90091-e49e-4594-a7be-9dc6d581b502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72126815-ba4e-4e45-a95c-6d4cc4b8de81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c95fbe-1d56-4ea8-8130-46617aab1bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1005146-f9f3-4624-bdad-59af59d465e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a929dd2a-9751-4765-ae6e-43c5926fcc73",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ebdea8-cde6-45e5-885b-e2da298ed975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5723ab40-1d25-4ddd-a811-8ca3fce7fc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0750a134-d5f4-4232-8440-861e4c812c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b60f51-c8cd-42a1-b58d-a42122e04044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a22df1d-9f83-48c3-bf64-592dd25950c8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80cc31d-8036-41da-9b87-9a0e17ef1960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310d1a71-23c1-4ffe-8265-b41ba4683d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8b25f0-2659-4362-a6cc-8779b25918e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef45671-3976-4d7f-9c99-595efb36a95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f103510-1984-4c64-b6a4-a905c83aa9ac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd64e20-c822-43f7-94ed-3b0b552c5e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8074793-6b84-48b4-bf62-03b217d1a13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e953161f-28cf-433c-9c1e-aa680ae98b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d3e4ae-dc7f-4ea0-b78c-cf54eb27c6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83413d1-8986-4e52-b0d3-157ff66c0c50",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc6070c-012d-4167-9e68-7f6b22d1b02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33325fd-0128-4d20-b369-e4a66dcf00b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f92b47-cb46-463e-9159-b90a417a4b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a408adb-6625-47c0-a7b7-43321ae93534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19035191-e4bb-42ca-8925-32aef336ded5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbfa1ec-fb55-4bb3-8c94-617eadf1aed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea988e4-8d3e-4d67-be58-d2b41c727570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b7d038-cc25-4978-b08b-706519f1777b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6008a4a-80bd-4374-bc7b-2af7a535f679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64ea442-4cab-4d0e-8fe1-a51c17bd8732",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a6e678-b49c-4e6e-96b2-f4282840badd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1602ca-604e-4357-afd0-a62eaad49c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e953b488-db5c-4d5f-9edd-c6095e2c48fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfb5670-5fb1-48bc-ad0f-7e5836c4bc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd700972-3f35-43ab-9aa0-ba1bdacb0302",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806805fc-3588-4575-af2f-6457f68abcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a02e34-d3a4-4aae-93c6-99a485b2a3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bd372b-3144-4396-8f84-c2be0e2b937a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa647f1-a356-49ee-becb-b8d8497df4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be1b159-6dd2-4549-b685-b99d28dcd737",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413cd21f-921a-4664-9195-42b9a31d409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f1b1c8-c44a-46ac-9c11-a155dd5b7836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2665ad7f-eea7-4bf2-b3b7-91dc1966e96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d241c6-0cbd-48a7-bf07-1ca44d31dd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a9e040-b13d-4848-addf-1929926d4a4b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7258fe-27b0-41fc-9ea7-7af836475d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0bcd81-750b-4de2-b60b-b4efae2ab4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb72721-9bea-4a7b-b47d-bbfa83d946e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c189bd5c-7bcc-4fab-a149-87a230089166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd91d469-46ab-4678-a774-7692d462325f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df614a24-b703-4501-9dd7-2efbbedb94a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b9f87f-92af-42e3-900d-db148f848a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427817c7-1753-401e-b9ea-1823c8a731b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1abb99-2c2b-4c24-8cdd-ca571f077cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109dfddd-5aa0-4153-8d0f-df44b9625bae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6405bc69-9a86-4d1e-a2bf-d3aba09f4360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a47c232-31c6-4ab4-aba1-64a948885441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27241b5-60c4-4421-b3fa-4eb8bce460b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff94047-a4fe-40e9-938a-6df4125a13e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd94d943-9fa3-4331-9e3b-fa365388976a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbed5b44-2619-47e1-afd0-ccda7c973356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd6a227-d09a-4201-b25f-d8976978c0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06128e61-5b68-410d-84da-fceb9a38f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2dc0598-d46e-436e-8cad-eccd317f6861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3aa159-0996-4d7f-80fa-cc423c75c896",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8e6fae-0b6d-45ce-9a8c-cdd918e3f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628f4020-0eb4-447f-aadd-a0ac49f6e753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748046c5-1fbe-4556-8305-b0904abacdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b31db0ea-4010-4a64-8b00-01a4465a123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e57287-1d6d-48e1-99e1-0d92e45636de",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bf32d1-8035-42bd-9ded-515a1b8fe06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54286d95-d380-465b-a198-428db2facb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc51c7-9a51-4dea-8a3a-757544b2c508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cc859b-483c-47a3-87d3-bbc67ef7b411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc86f132-c56e-47de-a101-591a74d6d76c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6be13b-438a-45d9-a512-56caf2368e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d044a7e-2f9b-42fc-970c-93df10bf3974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd61b465-5c57-4ab6-bd43-3d8f6098a959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d821b2-b470-4849-bf48-743d26e77717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a93c44-f47b-466d-b0ca-840676494c7a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8dd7c0-ae4c-4376-9647-fa5f52db2c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d656f5-8bc3-4947-bf10-4f4517e6e72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92828f52-0d29-4e90-8317-13c38364915a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80b61df5-9ca2-457d-9584-67de3a9e6d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ae6846-175c-4b4d-bb04-607b6ae0c152",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46e77da-1870-4f8b-808c-8037dac98101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f512cdf9-3836-4141-8e19-e3b00389cbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb61dc2c-f124-456c-a1ed-52c6113e25ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceef8d02-f847-47da-a88d-db798e9f2cc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5d57c35-fac8-4c14-b7db-5694460b63a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "615e5010-2a75-43bb-87d9-14c236b26503",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0417e0a-817a-448c-bbb0-0aaf3a8cda63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9e9e5e5-b96e-4538-89d9-6169452c0f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31bc886-42c4-4521-8f47-1403362f49b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f46091e-f444-4850-9488-caadf9f89d0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d28df6c-97e2-43b8-9a38-ee2850a8a6c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2f1b43d-6930-4c0a-b204-096e50f1fd95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28ff23e5-8c0d-4443-a0c6-0a8e4af9ea06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59098110-20bf-4b05-8f75-c87c37933ada"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f4f356e-835c-4dc8-ba8d-7843af80a564",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "276c82aa-c7b4-40b2-9b13-87f748652c9c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d69882a-8367-4fbf-bf8e-acf9cc2a50d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45087b1a-f784-4309-a860-147240de3674"
                }
              }
            ]
          },
          {
            "id": "172956c2-b091-41fa-b3d5-ce4a3ee75e67",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8a19269-1771-44b0-8faf-2e9348f36cea",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2f80ff80-6ae6-41fd-9aa0-4374725e5bd9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4a5c2b-99be-4317-87cc-88b29ec5ae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a561f8e2-b92e-494f-bdd2-ee334bbcffb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cd78da-b6d6-424e-9ce4-9ed3b4afaa73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd52f5e8-fabd-42e2-a888-456796dba27d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2eb8a471-9f44-41d9-b352-9e8c0b1bb12d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7574ce35-217a-4d1d-8be5-47a3a7fd4484",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf2f6661-fc85-4910-a3c3-3f48789f45ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0782316-bffe-4050-a838-71e6901e31a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffc1e7b0-8421-4750-a81b-9772dcb1b81b"
                    }
                  }
                ]
              },
              {
                "id": "f2ee59eb-1c68-43e3-9f7a-488cfaf16a27",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1e26b2c-71cf-43cd-99e4-ad7e97894b83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92a1c854-d9f6-4f8e-a6af-f6ab7053b80c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8506bdc-d885-478d-bc8a-b9b066d3a574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e57cb38e-b30e-4741-a2ed-4e886ef9d687"
                    }
                  }
                ]
              },
              {
                "id": "20533fc6-41b2-401e-ac47-62bf69df5429",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "806aba1c-6d80-41ad-bccd-1dadf2dc0801",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aff7c8f4-acae-45b2-893d-88b5fb345db0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c0f7cc7-3b43-4766-9f00-c012e3fe4ccd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80b4e205-3b37-45d1-a256-52f13ca19003"
                    }
                  }
                ]
              },
              {
                "id": "186395dc-2f8a-4e21-9eb7-66043253ec98",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8a9ec1d-bba0-4a9a-935e-4b2153140ef8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4c9dd9e-4796-4c8d-9422-303410c6a398"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "129dfa4b-203d-4c72-93f2-66f351d5a526",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "05761d20-f325-4e14-bd59-d97223dd518d"
                    }
                  }
                ]
              },
              {
                "id": "5ba9169d-21bb-4044-9eff-f11216b75556",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f00b4166-12bf-4289-aec0-e6e7ba3f0dc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad8f045e-f185-4f64-be2b-f7a10b1cf53f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fee47e79-8d3b-4584-aeaa-589e2eb9486c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1efe6bb0-d7e4-466e-aaa9-091095c3e747"
                    }
                  }
                ]
              },
              {
                "id": "3d8c7163-6eef-4af7-a2c3-8940bba93718",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b291018a-f646-4e8e-bc27-78b6988e7ba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1f26b03-6841-4c2e-8ed8-0461e84199c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "608bbb8b-2049-4cc9-8a7a-a90a3de4f4ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72d2ecc5-05ff-4016-b43f-861a9db25533"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc5667dc-c8a7-48bb-a8e5-61f597cf14e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8f2f608-cbda-455b-a68e-1bcd7a0f9240"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a93f4888-510f-4469-b39a-19c24cbb4c37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8114bf05-c24a-4389-a301-5bb5cd7ae0c9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ad16c99-afde-423d-949c-a5e30bb26b91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bad387d8-4198-4b53-b910-798944e3c21d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cc28adc-c37d-4a83-801c-6d3466536f78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a55c9c5-f78a-49e9-a2d2-720472adbba2"
            }
          }
        ]
      },
      {
        "id": "32dab922-f4e8-415d-91b1-af1f32954c13",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "199c2bc3-f8dc-4c2e-a35d-3a2e215904b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8dff216-e8b0-462d-b19b-7c6003008d6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0a0dec1-cefd-48e5-9703-a7ee104d458b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190f0096-27a7-4586-a287-204e6fce50d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e303951-3a2d-4337-bd64-6392ef1c6ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491b022d-333a-4096-9013-58c56aa4665a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b459bda-8642-49ef-ae23-b92864ed2b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a747de7-8545-4626-af6a-eb85279d336d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f704b3d-217b-4e10-a1d9-9c5492aa6914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b00376b-1423-4d8e-b3bf-280f4d253997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe816f0-e317-4a5b-b3fc-db03f6019b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a111aaf-d793-4ff7-bd22-bd7ef067e3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04269b7e-021a-468d-87c1-a281c416e689",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70a05ca-0988-4a01-8ce0-4f89bd201101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60a629e-25a9-4f54-bd48-70f959ca4ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35260a64-ac17-43e1-a19f-f1eeb7ae15f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac24cec-91ff-43a1-823b-e69f3fabac9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2104c0e-4aee-4e04-b4f4-1e4e59f322f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c8d350-cf65-4879-80bf-30405a073cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cc61d8-1d39-4d26-80b2-507e9afa59fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a972fa-e107-491e-af62-faca2310058f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6831461-a37a-45b4-9858-1645b05b8c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b47d745-7d89-4f35-b1d5-630a9fd26be2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad6245f-21ba-4fdb-887f-b6a8d8cf704f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f900438-d45b-479b-96ad-ff45bd16e42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408489df-0623-4f04-bb04-7838e2e13009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b10eff-b479-41c0-84bb-38e75d5b903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2c518d-b4e1-4f9f-9fbc-b14bf4a2e439",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa2bac-1af3-482e-88aa-766fb2b77f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbc14d6-8d6f-4f59-a05e-0cb0669ee666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50678d53-03ee-4793-8dd8-74f6e38558e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16c40128-b4fe-4ca6-ae80-7d55a15ce174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147a265e-df15-4ac2-b975-819c896046bc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a9cbd9-5f9a-479c-a024-26fc751fb074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031bd2c7-16de-4948-8165-f4a28bba338a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66868d6-6c2e-4b75-b611-8f89c20fc4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8cb4e4-fe95-4be6-a5e9-e264714a98b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde55877-0739-4a78-b6a4-bcac06ebcbc9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c8a1a3-0552-45f2-b77e-eabe5dde4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ba268f-c5eb-4b36-846a-1b0053beb018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862ba381-5d4d-4d96-bf7a-56d654df9b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc6217e-0cea-4f98-84a1-ae5aa0c914a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922406a0-31c9-4586-81e7-06a9e81e738b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725d0845-eb83-4977-be90-aa0d2c432802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4875dddf-3bde-4f2a-8a3d-c08db24af4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce715d7-f39c-467c-bdd4-2109e8a90372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47afcf81-f6d2-4e22-a7b6-b4309681ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813a89b3-d881-49b1-afe7-5467bceb5d05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa4d382-4de6-4d42-bc1a-04f26467c941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72857e5c-d669-4508-bfa2-449e4eee6d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215bfef8-2eb2-46cf-a291-e4d5c581d823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8c7f19-86f7-49a7-a4e2-65bb7574aafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0157c0-346c-43b7-8995-bbf728a0bfd1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02ceba2-5f67-42fd-ac70-ac75a172a7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c3cb27-c663-46b3-84df-b80f777015c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a5034d-1b90-4cd6-b6ac-c7b4c6ba5f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "32dc64dc-3c2e-4752-b78d-fd21ffb159b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2d8804-ad25-473e-bb2e-23a554ccc27d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e24e2d-3e07-4aaf-b75e-57136afd433e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcad1204-b9f8-4380-a3a7-bd6e82d2ce1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659b62a8-67af-48dc-a69f-b8ce4da9da2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27b74241-30e7-4c62-8758-2d2124fcd651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45551c62-faac-4a9c-bc37-af9431e52d82",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fe675a-49a5-4d0b-ba04-c1f7fa6e9317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e30fed1-13e3-4fff-841a-a53be5018305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e651d52-12e1-4b82-823b-9f7b1b04eed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "471ff189-3346-4179-a752-11fcd854a44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92311f5c-aee7-4be8-ac2f-e4e66d6525c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a13958-e227-4964-ab48-43d0c0e6ae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cd805b-73e0-470a-a4ed-8b74b16f1e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197192e6-8a33-4f6d-8ac0-e6df4058baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f66ef34-c19f-4188-be47-3dffee49a99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc96e83e-f976-468f-983e-0859e39c323f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c60df7-d42f-4ad8-abd3-4654746cdc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc774977-8298-42cc-90e9-7dd7ec7b3734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b828ed-42d2-4111-95bb-eee4e8d6a258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d4c9cf-abc4-491b-bfcf-8a793f7e419e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d43e09-ced7-40d4-a271-3ef179124604",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c97a82-0fc3-4e27-8267-bfefa1e214ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a74a53-a0e3-47f5-a9ba-8f4e6b71a4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb3d812-f9bd-42d8-9cd2-4486c603d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8703792c-808f-4b08-bead-69bc03db1307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28efc3ba-15db-418b-bbfb-169d69959589",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3965bdf-b6e6-4b35-af27-ac8bed04bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66970bba-9012-4e3c-91d9-2d021e9fff0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce07d23-f8c4-4b48-9ec1-96522de63fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60d7a28-d4a7-44c4-bf4c-e5476481292b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fc22fc-a082-4c5c-b1e3-0dfd28f045a3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a4a9e0-9512-40f6-ab10-9c09f24d399f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c3ff8d-9e57-4809-99d9-7893ce625f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1570ce5d-2a8f-411a-9407-d454d7d9bedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb18d848-44c1-4a41-81e9-8dfe6288229a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d168964d-993c-4199-a030-86d2c40950a0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81689d67-22b4-4b6a-9f3f-282bfa844a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01474d19-fbf2-4938-8644-81da8086d769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba2102d-4759-49c7-a136-8c3c96eecf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e409893-ea4d-40d6-a668-0082b49a3a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa45ce56-6d98-40a3-8543-2a3f527af0af",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030a07e5-a2a1-425d-8d9e-8b64a2f91cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee13065e-d584-4cd3-94e1-e4244fd99c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbe2c07-84b8-4607-a01c-d20b329da583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ece9c1e-b85c-4bac-82b9-a067594d38d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60d5f07-4854-4adb-b253-b49c4eca7ea4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758859e5-9498-44a6-b601-f7efe7f14824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7977d53-805c-4d2f-abac-eccd8cc7b836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd41e99-ec2a-4d2a-bd7a-84c6d710373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f454bbf-5cef-4318-8b70-5ab46a0a8650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfd1067-7626-4902-8ede-e7c216b01a22",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ed5d84-c6a5-42cf-8138-5b5651328364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5970a0-80de-45db-b5c8-8c984596b61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b46814-97bc-4e23-85bc-71eeac90d562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02d19a3-cfbb-437c-ad00-e365f40a1d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49448eb6-a0a7-49e5-8763-b3c0d218cc82",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2652ff-aa02-4d01-be7f-f80f8489e5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cd90a0-12fe-471a-9815-9fcb5bfb461a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19798408-36aa-4316-9db6-987007e32eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c90cc4b-7062-4168-9a1f-ae1e8c3d11ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d579fe65-6c9b-4b60-afa3-a6de1416a23d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cfd41e-9284-4a26-a1ab-40f63c8dbee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f7d607-0655-4677-8978-21af839af15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b351d554-3906-40ff-9615-2dc7126b18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d68fa7-15de-427e-9608-a9b9eeba811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf3b461-14d1-4ab7-acb3-f3a41c9db366",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc3741-6b60-49a4-a4dc-232a7c0491e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4443f9f3-2970-4d4d-b19c-5105c5c27f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18a9843-e234-4d0c-8c57-31719bfd855a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e07eaa5-891a-4bf3-a1da-d2fda5d03d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d023bedb-1ca5-464b-9054-e3f68d6ff8f8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31a407f-4554-4ee7-a5b8-02e3eacb2010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0654da4-8653-43e0-ae07-25256f304052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b178a56-9c3d-49a3-ac59-10dfa268fe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef04fe9-acd1-4ed5-bb6a-53e56ce8735b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3517d10a-97af-453f-905d-fa25a8ccbf42",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29b3deb-d5ef-4558-90b7-05c237ef3f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d530f857-2524-4c4e-8ece-46b8c057ce87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1cde51-b76f-406e-936c-b85a4ac3446b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa69b61-e109-44b3-be3a-895a0dc210d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a79984-1763-41e3-ba3b-4ad3e502b948",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117f5346-b738-40f8-8cb6-6cef2b039144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0618373-0452-4f6a-97eb-8763512b6b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7377b89d-3a77-4ed9-9114-f242ba3e87b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab26c62a-5113-4997-a83b-365fa6525696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f455533-a25a-4366-a3d9-ce7c49cb553d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714501a3-5d78-4746-a8ef-8f269a423a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59578045-02c4-444e-8b66-90ada463d98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78e5a40-d1ba-4a4b-8712-76ea57cf07e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecd051a-b70b-445e-8e43-3c3fe330cc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ab5a09-6cf7-4d31-af04-62f60f150276",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec8b50b-4fdb-4c37-b480-b0325b1f2ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7be76c-4dc6-441f-b06d-51abf0c8c5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fa4e50-6bc4-4480-82e7-be938d99b6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec0de09-bd40-4ccb-a9a3-ddc7f8955a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05596071-253b-4d4a-9c4e-bc2649eb69d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5f3ca7-c634-4d6e-ac83-bcd6053db563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d4abe6-a515-4d2e-afb1-2d588c973d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041936f0-0a0c-423a-beed-eeb77b27acc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49a4027-e110-46a8-96b6-06f0b4027e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2264d7-906e-4fa9-b1ad-a8e55c21ac1a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171a57b0-9dfc-47ad-932f-367204db5611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b0743c-cf01-4223-bd60-6e9e51081d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e787070-783e-4389-b6ff-784ba80067b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0471637b-2997-46a6-9bf8-6440a5d86e17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d500760a-7818-4ecc-8816-36e42a34c3e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8652cf15-8801-42d5-bf1b-3338ad048667",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eecbf7-015e-4643-b965-4378179745f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6e0b74-8765-4159-9f20-b56593dfa7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c920ec5d-6bba-4750-92b4-35cfe94338a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "721e2c5a-795b-4451-944b-32d3985bcea9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "490b5a75-b30c-40b9-bd64-c496e3ec2390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9abadb5e-7d15-4db4-b26c-ccadff4514b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2979264c-6070-4f89-86f5-56c667f535c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ff6e628-5860-42ac-b776-da1761472063"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35974c94-937e-4051-a41b-db20470b012f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdd56263-7d96-493c-95fe-7f515dbfdafd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbbac8b9-6c8c-4b12-bb54-70d641a02f2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1d4169e-521a-4782-978e-43c88a485089"
            }
          }
        ]
      },
      {
        "id": "342ed288-798a-4c3c-ac41-697a23780b27",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "89c30f3b-559a-404c-bf45-2a79108cca1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9a852db-ed09-4909-87dd-9f2a45a6ef6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7312cff-926c-4d22-ba34-6a0182071073",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d6e4b-6569-4368-9ee5-79656918ceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033d8c65-7212-4e59-81bf-cebfca1d223d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d506ae-5f0d-4a66-9fe2-e9717d545505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "532309c3-20d2-44aa-8cb1-4dcdf6f0e41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7537a6fd-70f8-4b6a-94ef-cb704829b540",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e80824-f2bc-4ed0-a1ad-d2cb1c363de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dea69a-47fa-4f9b-8fb8-3e78b7b5e320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38a889d-96da-46cf-8e7c-eea467d87e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1801ce-f86c-4089-ac44-24c1b9d3b276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b816d61e-14ef-4329-a50e-c88135fa5c7b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dbfdf9-dfc9-49e7-a2a0-8bfcda94b9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80f4965-54f1-4f60-8d55-abb43af73932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d865456-7504-4154-b22f-eb18ed32bd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "453567e3-c466-43fc-86db-dadbafafa664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc468fe6-a983-414d-a456-e71eabe364ed",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f06e129-8708-4488-83d8-cbe2580acc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff66aebf-262b-4f60-b990-a2ad1a1e71f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6966cfa9-e426-4a94-9c6d-fd7854e1f103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9ce66a-fd24-47da-bfc3-f28ecb272057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59145001-9640-4107-abe4-ef5e0521b25d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f538e8-8e25-436a-a8df-4588696b7e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c679e06-2554-444c-8655-db2b7cde3f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07af394c-d1e0-421c-ba2c-47bec42d0281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdd4404-a36c-45f7-a90f-5698543b23d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716c8e51-3bcd-431b-a972-3e172e7b9aed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a753d40-9131-4849-87b3-fb2dd3087325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d9d89d-5e9d-416a-abe1-f2da5f2fe8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237e94cb-9b16-476d-b903-85c9d2b59305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af5b060-aa8e-4b40-8c30-7d76972be5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1918ec-c000-45f2-a00f-767f8b8c6c12",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67555ac0-f8e1-477b-b554-60b93fe24006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da64a92-6657-4a48-98e6-459b9a1bad20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e55cd6-6760-42b2-9b03-d47ad6011d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d53deb6-445c-42f2-b641-ead96c2e5498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beceebd-b47c-4772-8572-53582560f8c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829970ab-ff8b-46e0-90c0-63a25d84a321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83c5151-33ad-477f-85cd-27566cd11a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f575e1-f3a9-4144-9ec9-91078d4b07d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be6264f6-533c-4114-a32a-b71b2e8b069b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dce2f0-3eb3-4888-bc94-e5ed2fb8c712",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01477295-5628-454d-9e0b-eafc9bc01e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8688f11b-020d-4820-97b1-1441c597979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608fea76-56f2-4f51-a5c7-da8eff6440d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df12dc7b-84d6-4a0e-a68d-bf21ef8ba0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf086674-a7c2-48f0-85ca-fdaf3e9e1f4d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0daa33-bbaa-47bc-bd9d-ba69686b40a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71089c9-5d57-40a6-88f9-286a1813128a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc79f2d-ef39-4466-9b96-54c240c0a200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdabebeb-257e-454b-9541-bbfe131ebce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e53a30b-f328-49a9-b447-96c1b9cdc991",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f98a3e6-2a52-4de9-bd96-80c9efebede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a73b96d-b3d0-4e93-a388-f11b66418da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419bc3c4-5c66-499b-b951-ab741ad07b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a507d55a-3665-4ced-8b3a-21cfb12662d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8bcb13-400a-4701-9bed-a06a8414b2fa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277cad5d-5725-4e86-bf50-cfdb424caad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdcb27b-11fa-4488-99d7-034a605bdd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c487af63-b863-4d1d-8988-8a16e1c62e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d66e0c-0da4-4566-a1ef-bd7e74834516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51cbec9-57e9-4afe-a778-1047e15d9a24",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf44767-1415-4473-b711-5f3ff7443173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac964e81-8343-45fe-90ab-f498bc223338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e67eedb-404e-4e33-a9fe-d7542a423644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db468944-8c0a-4033-83df-01cb3c2f6dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fead8597-d3ae-4b23-99d4-470e6a7f067a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dd8981-b2c7-4922-9d29-623cce3c95e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187085e8-9db5-4c32-ad57-a21aa274ae5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210d90ea-f207-41c1-a283-dca54ae73cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7251457d-7f7e-4dbd-8424-24c304867432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913d133c-4a2b-452d-8e80-04a1b8a93920",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409e5b62-8fd9-46cc-92c9-78d566a3e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81636492-ea71-4964-b55b-f0a90f9cef0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7e7015-a966-4f25-84c8-9415a341f3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "264c9c70-e5d2-4cbe-8b57-358592db9105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f840a16-dcef-4b5b-b48b-ed4ef56eac49",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f0fb9a-da00-4e8a-828b-5d4f5ebea042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f649f9e-d2f7-4ec3-beb7-e8399a9b72d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27696c42-6f88-4ee8-928c-c5633e1dfb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d75e4fb-8a98-4f09-a806-6f278d98470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d0780-4350-43e2-9aa7-ead2d7ee1bf2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafad603-655c-45f4-8e55-421b2233bf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b226a8c-20c3-496a-a5bd-7d910e42b48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f5d7a0-39a8-427b-bef3-e7fb299766bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "155eee4b-a72e-4306-a5d5-d0eab6a7c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ced70-395c-420b-ae09-0233cb1fa707",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4b2e6a-8cf5-4359-870c-834318b4ea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58ea9b0-6eb9-4b9d-9ac1-92f5abab86e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0d1aa8-d22f-4b22-ad6a-3d55880743b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d71a0c30-a7d3-4dc6-8cbe-8ec9430ace8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2f0ebd-42f2-41ad-a2d9-517d4397a6bb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a66135-8359-442e-939a-d4e81f8bc32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4140fdd-a139-4f78-a5fa-c882097c1bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3445d4c-0bdc-461e-8bba-22712179433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312d039c-b084-4619-a597-62deff04bed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e0cc75-986e-441d-b7a8-998e1f2681e2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2478d94-99ea-4f3d-b907-3b61e9043144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f324375-faf2-4637-bc4b-c89d2348c648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565e29ee-82ac-443e-81fe-ec9c6ae25160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57437551-f8d0-499b-8106-f697349a59e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc59548-3774-4d94-bd8f-ce03ea173599",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e3be52-01e1-4813-bd97-f4e276cfcb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e11a2d-bc7a-49fd-94a3-c5a5c235b421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba9bd0d-a4c2-4856-a9b0-27f054f2c36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7761d6b3-9804-4f07-aa3a-3417cf4761fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f036c3b9-af46-40a6-8adf-b4242bd895e0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38de7a20-fcb3-4aab-8d3e-c5125e05ea68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bc837b-95e0-46d8-8447-771820141ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11211059-694b-4d73-865a-c684e4cd41be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a703d709-2c97-40a4-b3b0-78e1815a93d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ce8e32-f644-40ab-8da5-ff5406b1340d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6fa181-ad90-47c3-a009-bcaee6c84625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84a727a-73ab-4897-a72f-bf8f575280dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88924e0c-4e01-49bb-9442-7c895b327829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec935f3-28c9-4988-93b8-6704cbe6cc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997f8b60-756b-47b9-8d73-ab3d6886aa78",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62977723-ed50-4457-87e0-2929ccdb1f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82528f1c-532c-4e0d-a18b-e70ad1a386ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacc8784-172e-4f40-8871-42efe9f1e557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019bf075-151c-4e0d-8ead-a6b36776a9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d789434c-7afc-41ef-b697-3bd18c06282e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e38cf6d-0257-4a0c-97dd-8b5ea7ced57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef543d-834b-423a-9ea7-8a0ed5d28808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff53416d-c1ca-4ca8-95a0-ca01e95102ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f59de23-b389-4927-ab6a-44d247768c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6c900b-36d0-4b8e-a622-5d49b65364d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a985183-d884-49ec-96b6-7dfb0c9ad2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d98f20-856a-4bc1-8443-8c145f4bc123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63028863-df56-41fb-8a28-e34ff255e625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91079c6a-5c24-4870-a1c6-83e176077069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2cf789-7a36-432b-964a-8439c80eeacd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fbb188-9009-4934-80bf-de74d78d5b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75c864c-9601-4409-bcda-ca77f5aaf1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885fe9a2-1856-4093-a0d1-d5bd1b589d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fbdb7f-72ba-43ec-97ec-cb11358c6df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7196005-da3a-441a-a1da-03c7374e759f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85aee5d-40f2-4ab4-aef9-a8803d4c162d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daec005c-c06a-4f33-bbed-80079cbc77e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360eef4e-e2c6-40c1-8e8b-f9ce993abcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd21dd0-b4d2-48aa-8981-6c433ad88de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8406d21d-0aa2-47d8-a841-9c12a32fe007",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4070a856-6894-4d37-bd74-d3eeabbc9f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f31ce4f-49e8-429a-b2d6-6548490bbd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef75a46b-198d-4418-b3b3-7e327acdf931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c46a48b-bdfe-4fb8-bc25-6b0cef16187d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b1351c-5709-4baa-9a72-882c61248f26",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8710959-03af-4846-a43b-c59873557aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde6209e-a182-4453-802c-a78d1eb2430d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03742c2-5a7b-47a8-bd5a-f52213e96f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6189dee8-7071-4cb1-b383-33e4d4c6ecad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dcd834-dba2-4779-8709-fbece50947fb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d30b19-7e9e-4622-a967-07050573d1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd96f63-5101-45c1-a0c0-ff6dca8110bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3930f5bb-4932-4a9f-91d5-76a6934eaba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1d1265-b61f-46f5-9a1f-9f7477713721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9075fd-b79b-405b-ba6a-21db38633488",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7572c5-f2e4-42c2-a352-e1ec8f59d20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e3e9a7-e6ea-4bef-b2e3-1a2dc8e2a72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3539154-f5dd-447a-b85b-369d98daf5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19501f9-68af-47e8-a918-b7230e386481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a46004-55ff-4491-b752-56860ba28279",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c6cdaf-4843-46db-ad4c-00715adb52f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187bd76c-591a-4d89-ac92-af4f239c4d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d31816-d367-4aef-a112-afa32be83c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "346e4d22-3ce4-466f-932d-5ebd7391da98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee58c66-0468-4937-bc4d-2d62ed789ea5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e41e5f-313c-42d7-b1f1-758b3b38fd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5723474a-61e4-4869-8e91-6c18ae238959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64551bba-de75-4699-b99f-11344baaf652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31188d9-7d0b-48d0-b080-27f6b4ef4006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7a4d0d-6d52-46f7-b066-ccd000e44307",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ceb13a-dc47-475a-b07a-b960d2d57452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889ef24e-3a3c-499f-8de6-22d921651af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9044388-8923-42f2-9895-89d1187586ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "796a83f3-41c1-4b8c-9788-8a3975a02d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f77d34-e6f9-406b-b407-fa51c49a1492",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eecd1a-6a36-49d2-b0bb-1168466814e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c59d3d-7402-4d20-802e-49244c6df10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6a2f97-84f4-4bc3-8cf1-c4f7b4a08579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d093e985-8493-4d6b-8fd5-a335613a8f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ec71f4-2980-496c-99c6-6a7db013c25d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c06b26-d4c6-4034-946e-dead0818a599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1182196-1910-40ee-b06c-f56882484b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30e2b03-2365-486c-95a0-14851b6ba412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e0fef0-2693-4ebf-91b1-f2b4ae0b6d2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f76224ed-c357-41ff-b0cc-7d72245f6ef0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f467b78d-585b-4515-bc74-b9c01328b40e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746f20cb-c454-4500-b34f-bcc0d44feb3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "378f0907-fcf5-4be7-87d8-c75d3431cf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10153ac-ce51-4762-a7a4-c2a9f6048d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "187572af-c4f0-4a83-a280-09ad42fb8b96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12d50908-7908-46fd-a8c0-00a13f860306",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "025db443-5f3e-4709-be51-e4263f1f319b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4b09e5c-a7b0-44d2-897b-bfed6e1c3961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24f97483-051d-4c4d-b2d1-015109159602"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4fd6e77-c730-41fd-b423-65226ebb7e18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b9b4099-fe19-44ed-8f61-de0b24c43338"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f24a07c1-b2a7-4c6b-95c6-cf82ce3d4b6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83955a3b-2d63-4047-87bf-8241daf4fbd9"
            }
          }
        ]
      },
      {
        "id": "6d71e35f-0568-4047-b62f-d1faf84c4e9a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "068cc8ae-70e3-4058-9395-714ce1e4ca0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b16baee5-5058-43e1-af9c-cddaad718a0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec62024f-6ad3-45aa-b606-44350d2f322f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2f5803-6e40-42e2-aca8-e83c4c33fc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb76f57-161d-44d9-b1c6-72fa032fb16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0472a0ec-5dbb-4473-b151-dc8988a14e6e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e49055-4ad1-461a-910a-e4ccd359ca3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e68868b-9ba1-4054-91d9-c5cbb5a6a4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7896f7cb-ea23-40ac-9c28-0266e84faf3a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1d43db-6367-457d-a182-ea4dca8d25e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a55c7af-c20b-4e01-93b0-a0bfc98c588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29430eda-34e9-46b3-ae36-a8fdd4c42e0d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af3ec11-4f3f-4b4e-8e04-d4cc09e0d299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7e7e24-1fbc-4165-9199-ad6bc770a303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3bd187-b4c6-4b07-9667-9f66ace4b84c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9974729-b6f6-4060-97d8-51a3b8f2eb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d932997-9ba5-45ce-88de-929b55be8f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d60369b-1a46-49a9-978b-96c160626f3f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c925cf-f6de-4fe3-a956-a875ac258248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39563a47-96a6-4e29-bf19-be3da42daeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9a4af9-e422-4d7d-adbb-7bd68d551d8e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad1cb7d-c348-467b-b6e5-2a58d6998c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25038fa-cc01-4c3c-b94f-45bcea0e92ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b35b1e8-82ca-4f1d-8cd8-ff14dab13871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57291524-0d9f-47d3-95ea-fb1761d6f28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0062c028-18f6-4776-aebb-201acb799ea4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cb043e-acb7-4f35-9d74-2b4686bd3d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a18b26-a081-4790-87b1-bf3f138fd61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94d509e-ac5a-4461-81f1-0cc3e2b84361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b190c7-acff-442d-9b06-e91aa0169f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f47959a-f6a6-4a8a-8610-cbc0178cff35",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6050ea40-6420-4b23-b936-f5d26235c71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d044b7-6907-4813-9a5b-745d000529bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01764b78-d7c6-460b-9e6c-e413caa5eb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ddd35a-27ff-46ce-bc79-b4da1e7fb62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cb71c7-188a-4cfd-b050-2754d77e75de",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc43f44f-ad8f-40f0-817d-9e22955694be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a5936d-1176-454b-a4a1-d1a1e779a0ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac373230-e56f-40e8-a288-e3341e17e4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c3bf4b-9abb-4eb8-950d-dd6c4c463541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6b3bcd-9ccb-43b6-be9d-642725651a99",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caff93a-018a-40f6-a1ef-5e6a529568d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3271bee-8f5e-467d-92b1-629230b5048e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3ec4ac-4239-49c3-b994-9cf8c815969a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7808d08d-d096-48e2-8f35-91e56de256c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df72a5f-29a0-46d5-bb23-5d90122dd466",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88db28b0-f43a-4466-89db-d936e1751b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b115caf6-159f-4634-8cfc-2de0c71ee6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb63f6f-c5e7-4072-95e9-020bd8b746c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbf9218-7db5-45d7-8ab2-966bffebb7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecb9aab-fc73-4f40-82c1-f0e021f7984c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04c7f46-5c00-4d1c-a62a-57416c041406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc40799-417d-4123-b3cd-3dc71e843eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0672a2a-d29f-4776-979d-72e12e7001d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a6a15a-f9a0-44e2-a799-19c74152250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a419004-e8b8-4743-87f0-74e59de907e5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f909dfcf-18cb-4e2f-8ced-afbbf464f903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558c121e-f1fb-4e11-b8ec-9828b3864696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f9de96-4f84-4702-9e8d-14375374d080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ccda25-d33a-4a0a-b91b-1b61b0a14f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a5d6a9-74d1-4fe7-a224-1f24b24ff1a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b8f5e0-c689-4dab-832b-3ffb8dce9dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da092d5b-d2ef-4e7f-a783-8c3bbb87afad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de125d9-be86-4734-b555-10d07d3c6400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57c5995-ba71-4ce9-81fe-d44a30658c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621401d0-2f97-4bb1-bb00-eff63ced9587",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88703ab4-99d1-462b-88ef-5ad136c69f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a2c9e8-6e2e-404e-944a-145009a94964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f2b108-8716-47b1-97d6-7cc88d068c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37194b4e-b240-4bbf-8c84-7e5426f83783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7469981-7c7a-40f3-83b6-c143bbcf58a9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192533ed-94ae-47a4-a7f4-b731682c210a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a03b03-0f50-43ea-8ada-5fec49ba93de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcea93de-d2d3-45df-ad4d-2d6b239526a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acd8c33-a3a1-4653-93da-42e211cafd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753ef5eb-f88c-442a-80b9-cee692b7012f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1cd124-3599-40b9-b241-c6522d9df1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8b6a1d-b9b8-42f3-a51d-0dfa149b1005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929ec7ee-4a0d-4b63-9e3d-31284acdfd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e60bd3-22c4-47a8-a211-fee03cc95608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc8af17-e84a-4efa-9e81-01a9d4f23a7a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be7bf5d-bc35-446b-ba0a-2ee4e1c0c866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb256fc-3ade-4ec0-9fc2-69ffc80ba5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1af2c3-46a1-4166-a36c-ad8b0f385f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336b8127-8e19-47e4-b23a-916555767713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f43b48-de7d-4495-b967-0788475e6019",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef9fec5-9872-4c4f-8ac8-4a683242c63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ba7b27-39e0-4bb5-bc1f-f52c18fd276e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5af102-0b19-4c4c-b526-04808a1cb74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e12aa0-81be-4e5c-8068-fc2d71dd38fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2443c131-ea63-447c-9a7d-5ed518f7ae2a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f0ed91-dd56-4995-9a91-5c1636e9aaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f4aa66-158c-4dfe-b845-a675cd61171b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28278685-1676-4e7b-afc4-0b8021d42bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa95e84b-5f05-470d-bf2c-d75befb62b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c0607e-94d4-4788-8926-98d45581c960",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56042eeb-44bf-4897-a986-4fc4eee4d767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6235bc-039a-433d-a5fb-d74e3ac3e270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a548e82-47e7-4f9a-84e3-22ac1034bc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e749c5d-935e-437c-9e5c-c8f961ae627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4dd37b-b483-48cf-bc2e-cb3978718e60",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86966067-8db2-4983-a843-25b4926f60f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a0312-20b4-46e0-bf7b-7fb39a394833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d8f499-d309-4f15-9a94-4d6cd4e69166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53cc631-f9f9-4e5e-880e-dfc1d17d68fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0a9933-7435-40e0-a253-85ae4bc55dd2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c475d779-ecec-4441-941f-9d68ac643d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd4de385-489c-4986-ab43-a9c18e6c7cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6882ed4b-e374-46e6-91b9-b8ac1e640a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311d96fe-22d3-4821-9d35-c08c6e2f2287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a95789e-6eef-4d8a-8ff6-109a56a31801",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335e392-7aaa-4a3d-8174-d381d02171b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aee48d7-bb6a-47bd-ae3e-7804c1d03f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cc8116-395e-430a-a524-5b1ee135fde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6088e77f-e181-45f0-94bc-7991d32f2990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff53d101-0c2e-4526-83ba-ba6cf5ff0266",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd98766d-d026-44f8-8b56-5b750bd51a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c075d7d5-0399-4372-a026-6bc47318fb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce27e3-d4b5-4236-b411-35f26cb80c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc3299e-aae0-49ad-a8a5-344660c8f5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12281de-3b9c-48a9-acf5-ff10d45d6be8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f9a6dc-70a7-4799-880f-fd66e64df9f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d451a372-d67c-485d-97f1-b61a820913ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b95589-986c-4cc6-9d1c-2b41199e2f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0676d2df-b821-439e-9816-7e98070e70de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f002f9a-e720-4b98-b2ea-c12d7e684ff0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e243d3-74b8-46f6-9f77-dafc1a0a5520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35aa1d6e-2ed5-4b64-bed8-76cceb202617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748f5d16-5ac6-4cb5-bcc0-a3c945bada1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed7eefb-a9bb-4b07-85e7-c16b3e274fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33a5139-f510-4fc0-a032-ae8a7e8edf9f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184ab1d4-a8d1-4320-be9c-350e61680b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c52d7f-e319-4edc-a1b8-97fa40b94526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adb7b58-5157-48f2-8f5a-ee0175b2be0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ee4fcc-34ce-4fe7-b1fb-108673aaa54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205bd1b8-2f06-4cf4-a0b4-7414068e372a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d31f12-a5f5-4012-b6e1-4e55b3b957a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b87d36d-d528-487a-9d28-d6b298b0d2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1728241b-a602-4017-8439-296fbedb5440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdce0a8-c699-42e5-b790-f672312a9560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04bab9f-626a-4a85-834a-15e96345ca8d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bb88db-767f-4d9f-96cf-ccb18e396920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8013fbd-666b-4e03-90b5-da31a71e640a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01f8bad-f40b-4a29-8aef-d236f5140565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1b2998-8c10-4fd7-80d0-5bd5bd338297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156391e2-7d00-4b60-935d-9bfe5376dbb9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d75c456-3d54-4b8c-901b-a9631b2740d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56b1aff-1441-40b1-86d5-bc571e3274d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5cd1e7-9722-4f46-a04f-90110d864c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddedd7a9-b093-428f-93a7-9980376eb610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09148624-3dd7-47eb-9aa3-a4b26b30d2b8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b721d6-c3d7-4b78-89c4-8644262843bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50da3b1-9a38-4d21-b31a-e5cb70657eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e83403-9807-4d5a-9c5b-fa24a5fbfc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c45e3eb-78b1-45bd-86f4-61759057553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ee32d8-1c36-4576-970c-86bed0257c3c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92e3b1-8463-498f-9fda-1522f3fb2990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f17c178-5efd-4a8d-8167-9ce9c1b1b167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56169e5-25f3-43e2-84bc-a86fa7215279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfce48d-dda5-44b8-bacc-e6c3886c321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f745ad-b41e-4772-bfab-5d2afb67a440",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f9a7f5-e1f7-4e54-8f13-9a00b7f1296e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d84cf1-34ab-4b80-bcdd-4f130a705053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7258627-695f-4e65-aac4-7759e965b2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e86ef70-7bce-447b-94c7-25caabdd9100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5c213e-e466-42f1-9a18-fe9b452f9cc4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4280a72b-017d-488c-91aa-efe2a6455c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefded01-c5d4-400e-a2e7-64970f30c0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa41e7c-f2ba-47f3-9fb7-8275f1b27ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60481857-bf41-4acf-9966-cf617d25b968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39a0f10-920b-4bca-9d9f-76fc37fbd385",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e6fac-9c10-4cfa-8260-f950d0d1f2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26072011-3194-432c-9ac8-d071d0d113de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcb775f-91bd-4cc6-89ee-345e613ed9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f8bf2f-ce9d-405d-a232-d59a490250bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bbcd82-f4b3-40f5-8dda-fa0a8610412b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8c8ef7-7aca-47b7-a05a-62d8e1521762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41419a8f-237c-4f18-a88e-d52098521ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39943652-d9ff-4245-a2ec-118e4fda55ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe96b195-bd7c-4e11-9a5c-e009f220afcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33e8ae3-6906-4ebd-8bf6-0304ccf8180a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87eb4dbd-4d88-42e0-9b80-491d5b7fa1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64a4b90-0ffa-4942-886a-12d659325bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eeae91b-958f-42e4-9386-47336ba5686e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a600329d-101d-404a-9280-d30980e35001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ada3ca1-f71c-43c9-b5b3-fdee864a24e7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca40ecf3-2aba-4361-a7ab-4ff218f3ebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f86248-0359-42f9-92d0-d2fd988f2e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b232a1-99f2-468c-bca9-5498b8d75d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975cd688-3e23-49c9-af8d-9e24493e0f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0741f43b-05c9-4ea1-aa1a-f7e145ce7f4e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2680a809-5a2e-4587-ba89-f3e6e0a8cc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bbbfb6-6d55-4c6a-bd88-98e76a3d5806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f21ac0-8610-4106-976b-1467b8de9f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a6d3e3-c10c-468a-8f8b-e7124506ad06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b991da95-41fe-46d0-9dd8-d3105458e000",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae817e-e107-4a44-9bb5-b4aa01aeffc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffc34f4-e82a-4759-9be6-024dd949f54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3884a9b1-8de6-44bc-a2b9-870237c202de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830dcbdd-590e-4ceb-a6dd-b2ed6d5b9a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2488f4dc-4a83-421a-9d81-c065a4723b96",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe56ddf2-30df-44f0-b00f-84ae1266f831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356ec265-3997-4fd6-8991-e8667695e77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68ea759-89e4-47f3-8c72-716b59d29bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b7c575-ba18-41c0-a933-b20ca5bfdc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13f6647-b9ee-4fd8-8daa-35730ef1625c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a85e80a-f8eb-4ed9-8fc9-fdd352cd1f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849655ae-f2ca-48ec-86bf-faf4eee77afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707fdc28-f822-4210-a6ac-a46e07bbfa42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2702ba85-80f1-4d9e-8a43-656efd106263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b784e3e5-040f-4d7b-aa91-770446f94f7d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ffad6a-4d9a-4d53-942f-0e739c2224aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f28b52-8bc1-441b-b3a9-037ef1c1ddb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a4dabc-baf0-441d-b686-7c720a08285a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9883c577-efc6-4cab-9426-9c970b9a9c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4b19ee-1746-4a86-8051-6fdbfef373e8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64a9cbe-6dd4-43ef-9c48-eb4d8e7ea96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d18ae9-e1ad-4bc7-9cbc-2c817bfd9dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569dc250-fef4-4f41-8937-bff7dde23a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b8a2d1-855f-4d97-b150-3c019d3fd89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02b9925-dc1f-49a6-bcac-3a2c324ea1b7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6d78a9-802f-4339-b480-ce7b756ce188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9029d57c-922a-4c0f-85e2-24e729426326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baa014b-134f-4ff2-9921-5950f0f874c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb947dbf-c158-4dc7-8d67-882038e894f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20f57f0-8d7d-45b4-8e49-bfce65c07a23",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265859f0-25d3-48e5-8ba9-894b0996b3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd897f9-c74b-43b9-8402-0da671380ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a7d440-0d06-4eb5-91ff-d15c3c7ca15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2546987-c4c3-446d-95a3-c806310914da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6be360-d511-4b96-8d76-95b71e5625f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4ecf9d-121c-4d09-b056-6fd6a0ba843e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9abe8d5-d080-4a0c-af3f-1f1a8eafa298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17675a9d-81d1-4d18-a2d0-183af8c7ffc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fffccff-e1ee-4fec-bbaa-e5375f0cc21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e4b135-5c05-47a4-8b42-399f0a0e4a32",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d897a50d-12be-4d6d-a64a-54c90479b17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf6244c-0efb-4965-b51b-5c9515dcf4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1cb429-c562-47e3-8deb-e91b95e1f35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc6437d-4163-4055-80e1-e2f3fe2a7070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff11a5d-c2f6-4017-8c55-6871c0f4c560",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77c6342-04fd-4c5d-b752-77cc180c121c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb226826-d7a2-4934-bdab-39be364ed030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ac785-57b9-401f-8261-c034df757d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a676e0-fe5e-4aa3-a181-cd0aa2bacab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99852b17-dbb2-4752-9b73-2d2dd5fa2463",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa12205-316e-4441-8ecc-8ec94080bf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25062849-5afc-46fb-9673-a3bf513fbb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359d3de0-0f29-4cae-bc99-302007e89692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d30bf2-f76c-4e3f-a067-a93dff8d5c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f965b27-ec2c-4569-b907-e49f2a0a4170",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efb0717-d96d-4d6d-a374-6c260b89ffbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a79337-c2e6-484e-b0b9-6a66425c6b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264b6a29-2bdb-4026-ba0f-c732bef2831b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d82fc6-0422-479a-8817-7a8d66bd3dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abaa11c-bfe6-4b09-8f61-44365757e22a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ec9eed-c6fc-48c9-84b7-209a7d8bded7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241a9930-fec1-4606-a6b6-c6add34bd26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c564bed-79e5-4c52-8364-1b6767e2c9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8cdad1-8779-4283-8448-0206327f3bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718502e3-e10c-469c-abd7-88de9ebfaceb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2814205d-20c0-4fa4-878d-44a348414801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77aaaef8-4ea8-4a62-9ea4-29a7eff782c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c392ad7c-cd5f-41c5-98dd-35b2756fbd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8eb947b-1005-492d-85cd-dac6e1a14402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f3d21b-c28e-41b7-a996-a333575f41d0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612ba520-4461-4198-9896-81bb8eef3801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b851dd-a8eb-45f5-8d36-665e57228e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06619180-de02-4c3a-8166-3376f5e20d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33425e51-00bf-4674-8627-e72aa9b9d9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5543ec2c-30f3-498c-a32a-f7b72d447520",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e32973-2bd7-4e55-9a01-f7ed76859508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a079ade-12c8-4bb1-b840-e4d72a7a0cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4184b731-c71b-4a60-97cd-289fab678804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26020cb-517c-41e6-a2d5-2921d406f6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b2b2a5-1921-474a-8e56-a875c38d560d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83efbe9a-98a6-4d64-b276-12bfea105efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed95084e-db6c-4930-b16f-e4d12d8d7285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b3f306-a9dc-4b5b-8fe2-8b29e1654416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ab8b2c-2b37-4479-9120-9b42b0cd83e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba0c9fb-7668-44da-b557-cbeb31439c9b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18272fb-463d-48a0-b3e8-31c511c94815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd3b634-c274-4d3c-ac0c-dbe48bdef015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bb3600-4349-482d-ab27-8fbeb5fec270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88d935c-1d29-4704-a6b5-03c5b137fd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ac0d12-796f-4641-a8ec-c956a9670642",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9ec70c-eaaf-4c18-acaa-2a31bb55e796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f531eb0e-f5fb-49ea-bb01-520adf5c8f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7c2a86-df78-4332-927a-6d1c89d85433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09af8e9d-082c-46a8-afce-f9fe6e482187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a073b6b-4bf7-422f-b736-040643aa741d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ae0b3a-1d59-4f12-865f-853743168767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd57dd4b-a8fb-43f6-bd11-9155231d7e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8733f703-2cb8-454d-ad10-52870e115f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b06cd0-6ccc-4e6e-9f57-f42dd8730e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb9f82f-33c4-4526-bf6e-6abe1e45c82b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ea313-efb4-42b0-9368-2368f3afb69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f66491d-62de-4643-a5b6-c16224545b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60ca1f7-b848-4c46-a2a3-385a5b6fe6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82506af7-df1a-4249-8c56-4d484d46d1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd43f5b1-bb35-4883-aa46-76f347fcc5f4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f1ed4a-6c15-4bf2-ad52-334af478b0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22e1fa8-b081-421f-80be-8e8e5f9e93e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d353bafa-03c5-473c-8808-7fce00b35ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed60c54-265e-4149-b600-5e6ad334000e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7dbbac-ca75-4742-be78-b15a79583422",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b40f64-9856-420f-939b-143db848090e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c07919-2be1-44f3-afbc-b37dc4153835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49890e56-2b7a-403c-b0c7-bf0c830cd593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bd3fff-96af-47a4-bccb-82056b03edcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa455db-6f4d-41aa-a50b-2adf8df832d0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706e7f30-4634-4c3e-9be5-ea8c6e9ad89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbaaaffa-6efc-4a78-9360-069f1d2431a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13502bbc-3c73-4d25-ac11-ba2511a406ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de53dbed-34c6-4d6d-8db8-c03d7bc4fb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3c99da-917e-4780-af9b-5b9be047f6c4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8b2c36-83fd-431b-bf40-63863b285a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56551b53-527a-4c13-8b2d-bd4915642c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af84472b-e173-4208-bbaf-c35494183ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfabcd2-d383-4729-8619-2fa0eb29bb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e412ef3-ae23-42cb-aafc-e1799bb1bb88",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc82182-c884-4e61-b99a-54a00da0c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff96dab5-65ad-456f-8566-e7c529f738b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3938142c-5857-48c3-b87f-5784d3f85705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1579fd49-140f-45ec-b70b-679bdff19c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8160795e-9ae6-4623-8463-a06d6cb6b00f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222e9e71-f481-4daa-ab68-f2969f4a1f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a9d41c-e0bf-4ba2-a7a0-5ed20684d822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e70a5e2-e118-4df2-9f70-d6529f8e2564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccab1844-045b-4994-b4e9-90ad411c13a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe7f9dd-936d-47ba-833f-7c6e1695b3da",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5519e039-a403-4bd0-b4ea-54c03622e9c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff19691-5953-4421-a55d-14c68a6f5889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d409e-b085-44cd-8d37-8673fe8a5fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e18662-2a17-4c1b-a88c-ce626e779f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dbda0b-33ec-4437-b8ae-597aa5f2d630",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3779b570-d29b-4e9e-9854-534516df9269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a900a1-5fb2-4fc3-a7fa-19dc498ef962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af11455-7578-44f6-8183-ca1ec58f72ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66be5ac-51b5-4823-9ace-edba3ce464e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fd97ae-f4ab-44f5-8425-ce3300c2c29d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d317911-b6a5-4495-b2fb-c94f3d6367b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf000f2-6120-4e9d-9f75-2812b5857612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbaf421-ec17-4a07-8616-3e838f980008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b45a708-89d5-4428-8722-f2fa8400d7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e621c9ac-fff9-47ad-8b0c-78634df8ffa4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d69307-7933-42b4-acc7-d7da278944dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4a63ac-a18e-4196-89d6-46581504f529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91ae7e8-6a9f-42a1-8785-dafcf0758dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355bc022-7fcf-4bf1-8e65-69401ee72248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda70acb-4304-4ea6-9841-129c1a802cc6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d784d646-a831-41de-a153-b086024e11f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae038dc1-852b-4d14-b2e3-1ae76d9c3d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c16b0b-2c9c-4b4c-87e0-967df01c471e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa05f4d-389a-4efe-b922-ceffcfb076cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d7d057-4bda-4473-a730-62f6d2c73fc0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9039baf2-0037-4a7b-b3e9-55f09cd3c0fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58083295-8e63-43bd-ade2-7e684fd0486c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a090c7-3edc-4f5c-aac6-0e5386ef2e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91316f5-9f1e-40ae-bc2e-f17d01191d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1357306d-820d-4f89-b306-e4e78f201657",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74c7e3d-d0ce-4031-882a-1d782240195f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f829128-87eb-473c-ad24-0e5248cb9c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee11fd66-d3d6-42cb-8545-68d93b60c838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2635253-d1be-4545-94b4-e2b0bd8e7aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5773dd25-e690-494a-93da-f0d1aac600cd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f20f6b-3071-4db2-a9bd-53c719df2b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb591da-8638-432b-8ecd-4af26d6a25cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93e94e6-695e-4d98-ba29-57214fa4e450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b48707e-d822-4916-8cbd-a815b90d5fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf09b9f8-e5fe-4ac5-a3ab-0922d3081219",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390f9282-0dfe-42d2-9c3b-9f1b884b77b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f5a6cb-fda0-4ec0-b968-65a0c00d174a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0ae82e-1004-488d-acf3-8d06a2881166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dad96b3-525d-4831-8cd5-cb8e112dae6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c805b82-132b-462a-a3f7-5f00813a6cd1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52e3970-cd3d-4879-8349-9a7eb4ca5555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279de70a-35c4-4b4f-9e83-7a146d954964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a39bb77-71f0-4d62-a6cc-74fdffe27e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61dcb21-3881-4416-a12e-daec9596fd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f99cff9-f12d-4806-a419-1ec14e5671d3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d78745-7a59-4b25-be56-1e4c2f1dc837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f9cdc8-fb15-4df9-a4a1-9ac2d43374e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253c8e27-67f2-4f49-af2e-010dfa0fd94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af618571-19c1-483a-9d13-7b476c23ecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35564a2a-4c6e-4df8-a46b-ccfb409003a4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f5643-ccee-47a2-a74c-d6e6d8954871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e04972-a166-4376-b731-349a2bb88178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a327e3-f8d2-4344-a009-c867023db01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d69c515-fc2a-4122-bd2e-9fc6fd19fecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7c9011-f112-4a8b-9f1a-e47a76590dfe",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0095a188-a649-4a22-8661-94715aa8b170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fc7faf6-baf5-4aaf-9fc3-a199071dac5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ab3401-af13-4c3d-8a42-2ae02ab7efe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594a606f-5e79-4126-987f-9c5d6d644870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6989a9ac-f64d-4e81-b60b-7d78a33fa8d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154d38f8-67cd-4806-a7de-894a169b6708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df24116-7d31-49db-babb-0c60eee46465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e21f35a-226b-4fac-b79a-746a05620b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c3b128-f9f0-4ada-a5dd-00ff719acbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730e49a5-f7ef-40d2-a8f8-dac16dc77d32",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debbbe02-129e-4e08-8f2c-773b72df5329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5c15f8-1a97-4fff-ba9a-f66c92480a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dee6618-1dfd-41b6-9e13-599c84edb263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332adc10-1184-4c98-bc64-5e1a1ca59d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7589becd-0b6b-4ae4-8bb3-6845fc686275",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d728928-389d-4421-88fc-bc4c15c6ff4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05fe18b4-2d26-4910-b91a-8e66051bbf30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d71f192-312c-4abf-a491-fcb5e739e374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824a0247-4c1b-4872-917c-6fa19de18d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4033804a-57c8-40a1-bb9a-1784c187cb40",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70e1eb2-6af9-433c-9397-5e9c0f90716a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c38050d-f34e-4023-8a85-2e55c2bee85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dab6ad9-8771-407d-9c6c-6ae22ec81edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892fb424-0cdb-42f2-b9a0-0b91e9b03948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d0700-588f-4946-a2ef-908e695b7c92",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207aeca7-ef76-4b79-8e89-c6e065aac424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4430757a-2de5-4257-9390-daa90c65a492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e112f2f5-9845-4d6b-8035-b3eeb71bb8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f911ca-4cb5-496b-b668-65d1398e9444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40646a79-1020-4588-bad6-a5e4fd00c5cb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e48133f-daba-4363-a940-d78d8a768816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00215073-8c75-493c-8845-e6cc8f8d1fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a47759-819d-46ac-9f3d-e216b8e40c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be4d2f4-6355-4ebe-a525-d771deda3540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ef765a-b4a8-4794-801d-71392450162b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e7ffaf-b973-4112-a141-9fa5dc59e14a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f202171-d64f-432b-bf45-d10b52b9b429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93f130d-dd6d-49c2-bd98-c5e1f5b57ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb960096-e15d-4e98-93c7-986656aea99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553034e8-3bd9-45e1-93e4-5765d87cee3a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc7571a-b088-452e-9ef7-e7497a85bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf4bd7f-8538-45a4-b649-691fefad333e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83cef71-6d9b-4756-934b-d2d1a08eddbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c78a98-9258-4ad0-88b3-2c3c99c2487a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a991eb6d-7b29-436a-8ceb-c377f61eac37",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea919c6-b6cc-4016-bda4-75ad753be669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01a6bd9d-e200-4a33-af5b-97570f2f0878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7c0dbc-3d88-44e5-8125-dd76be4d4b2e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ebb201-b1da-434d-b1f8-57f88cee7a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a977d39-6700-4f4b-a4a5-c705437b2b54",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25021f0-e4f8-4cfe-ae84-6e70670edfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d7de84-3fed-4f13-b2b1-5bbc01bfbe07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f63bc-d628-423a-bd62-81fcdbe11882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf972bd6-79b2-4442-9fdd-d021a57ee72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c0b0ed-fd7d-45e7-b69d-68c7d6bbbbbe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ac62d4-39c7-401a-a02c-eabe69cc84f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc06cc3f-d68c-4443-8750-e7e2d4fbfacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7549cfa-88fe-4f0b-9c50-1481e9b9d64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb189e8-81e5-48c0-b2bd-d5d7b89f633c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ebbd2-3ce6-4d71-ba44-5a094d698c6a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4070d143-0e41-4b87-aa8f-9e99fbd5a1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54696989-f255-4c4f-b3f5-f72f2286a96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3269e6f-38ed-4c40-b592-8c4614739e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b7378b-af8f-4ab7-ad38-85a6a25cbe7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c257360-b397-4dbb-90c7-a87f3f1d5871",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4321ac-0881-475f-9c05-de073d988b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af06428-e09a-44d4-9606-4db958d8b89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba2c892-b2b9-45e0-9e9c-631395f1a9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146df8f7-4e6a-497c-a79b-49579c77e390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcb1367-e13d-4be5-b3ee-85ed6bc424d9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f01007-a3e4-42e1-967f-30955a18b2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c91d1f-55ad-4bd8-a5ac-f77c7afc13e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39773117-70e5-489f-bd83-49c0c2d1e2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db99206c-bf31-4a88-8764-4a2718622d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d54e8ad-7cc3-410a-97d1-86d0670e6aa0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88ca14c-2ba3-422b-ae25-a9d73d825dcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f563ff9-f06c-46dc-b6a3-7d68cbe519cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c2e11d-67dc-49e9-94cd-adae6b4e3246",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0245c1-5a66-4872-8e1f-38cd62717bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fb601f-264f-40f0-beda-0ee8859253c1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba80ca2-0e4c-4286-a83b-3c5da1ca72e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0124737b-25c7-4b9b-9760-bd30ced49834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2277a84-3e28-4980-9520-849101ea0bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae67a2e4-0b97-4e27-baad-6f150ace7b4e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79b69e11-8dbf-43fe-87b8-1a240394f1e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a1034ec-6b80-4be9-a155-0a71ae3cb63c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd556d5f-1762-4b91-8fe2-4af7ea897bfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94b65b8f-899c-46a0-b84e-8087d9d5510b"
                    }
                  }
                ]
              },
              {
                "id": "5aab22aa-2d12-4daf-b471-e5dcf7087648",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a210c40-2abc-412f-822c-3ce27b7ebacb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63676a6-81fa-44c3-8a30-11de0ebe98eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2cb3c0c1-e435-4990-8944-e8bd6a85f12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36e0a90-fb65-496a-81ec-4d1bebec36f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d122915-7d9a-4470-9fcb-13f0dfa9eb73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f82472c-ae84-4af6-8ac6-73135afee3ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd166947-3508-42be-8a3c-b94e0c270516"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "477f3207-b82b-4c22-9ca2-4dc39711eb5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7e1c490-bda3-4af3-9274-c170da13997b"
                    }
                  }
                ]
              },
              {
                "id": "3f4591d4-57a8-477c-b0a2-90468b1d1e9a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ce27a15e-ab04-432d-97d8-07a3dca72a14",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d30e41c-2de5-428e-8031-088a30d04211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "49106cf7-1c6c-47ef-b1fb-2bce6c8145d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34a291a-10ef-447c-9bbe-6cb75268c566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ef5651-b7b8-4019-900d-61b3ddd01937"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0a9f7898-6a84-4702-90cb-37ac3ccc5a52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62018fff-02de-47b8-b1cd-769f0ec51d69",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1930aec-8562-42d4-831e-679a428cf8d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa6b4c6a-7b91-4437-84a6-e0d33bc1d41b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c363b0d-e5d6-4ebd-8f2a-03706be1f3ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fb2b11d-fe8d-4615-bd22-bfb925e5f727"
                    }
                  }
                ]
              },
              {
                "id": "64aee227-f931-41da-9784-7782634abbc2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8a5fe9f-4183-49c0-9fa7-a2fee10d07e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62f1369a-4cd8-4fc1-bdca-946fe0713c6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9cccf81-497b-4a14-bfda-effe0cccc020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d6ae8c4-bb9b-4d8a-84fa-0a2853779534"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9e34932-1488-4e87-b5f9-f0ee74d0354c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6822770e-b1ad-40ff-af3c-a98c867c5653"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef347e50-cbb7-4308-9964-e57646f938da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dfcdfc6-2a95-440d-876f-6f40e316a559"
            }
          }
        ]
      },
      {
        "id": "b186ebb5-bdc8-4bca-9759-c6507786e0bb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6a454d88-75df-4605-8cf0-f1e63763f46c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "327d1de6-64be-4046-bd09-68b3d58d39ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af79b371-3405-46de-a55d-24b16f0e9268",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10f3bc4-efdc-4557-a379-a49d014bdcdc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1de1c132-1375-470d-aac5-205d597b559c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2c2acb-9e58-4ca7-8f25-600232f9070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "637483ff-0a46-4bb3-8d66-76423b0a5c92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d2a5c67-e260-4baf-99eb-7a9a7a84c43d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10c096fc-e9d7-4d7f-be57-d0ef6153398c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26c88237-64de-4dcf-a9af-35abf23f340b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef1ac9d2-d4b6-4eb5-ab37-6ee8f54b098f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34cee1b4-73cd-45b1-8cca-7741242936fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "91ce907a-8a31-4d0a-8af3-0c8ac96c4fa6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c17c505b-aa29-43bd-a8b9-97ef8e8bce03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a0cfbb6-d326-4052-bedc-d362d1840739"
            }
          }
        ]
      },
      {
        "id": "8a69cbfc-6e0d-45f3-8f12-93a43f3499ac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b31e2aa-ab1a-4607-88c2-0a7312211ead",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25b1b576-a9b9-4470-ab36-ecff79f5efa5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6860b019-67d2-482c-9b9a-75dbc95e4033",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb283edb-f7cb-48ad-8a50-5bfb20c797b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6132ada4-7823-4289-bc11-0e8aa428ccf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d07d001-bc60-4c34-bd76-f1c4adac8494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3253a05-4f81-4610-9cb3-0b8bb080700a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebfa84ef-acd0-4b0c-9b9a-dcb309030bc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ffe0425-30d5-41f2-ab7e-6735778a6ba9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df5d4788-483e-442a-8726-6d314e51c615",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cebebbef-045c-48ad-b6c6-5816635593d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "454a8f8a-a291-4df9-8abc-9424ed1d6a4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e01f7d08-f4d1-4041-aba3-1bf57a121677"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8d4aef5-14e8-4c63-9231-7c09f86a32a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6adbd0d3-ee0e-4166-8455-76341244899a"
            }
          }
        ]
      },
      {
        "id": "d55ed2c1-39ca-44cd-be7c-93d62777c7be",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9bef27ce-e50e-4d6a-ab3b-9bc7f2a6ef08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff798a1d-8fd2-4075-96b4-9fb346c0d891",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4098309-8818-4153-aabe-78ae3a86bb61",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb9b4b0-65fa-4c6d-95cb-a76d2026fc53",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc6a861-4087-447c-ad0c-7a588b2bebf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b934e9a7-afb8-45c5-acce-d0c4c993e96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9ba9761-8d69-4b56-8774-b0ed2324b185"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a027e2b-b0fb-42a9-92cb-7374afdbedc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48f6f597-ce29-445e-a34b-7052ce0266ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90057a94-5960-4f9a-950b-10cac009c23a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0b9f9e8-693c-4f86-b8d8-07a0935fcebd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad67af0a-9767-47a7-b173-f5ef5948f9b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b17ecc3-5593-4233-9418-ee77a88f268d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efc39c08-5171-414b-bca3-e41c32d8c2be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "158c02b1-45a5-4be1-8f1b-12cc275bee41"
            }
          }
        ]
      },
      {
        "id": "19bdcb6e-f4d9-4cd0-8397-ae10121d9d88",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a52c5a39-8dc0-4a46-81b5-2c77a0868871",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bfbd7a9-4b97-441b-8033-19fd775368ff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0e4cb1f3-3419-42b3-9b64-39f3a9719a3e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59e79082-88be-4075-9af5-d8c4c6a4121c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82451877-fcdd-490f-bcda-d460bebb5e70",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 119.51929824561404,
      "responseMin": 7,
      "responseMax": 3226,
      "responseSd": 363.85625243301126,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703723667027,
      "completed": 1703723710372
    },
    "executions": [
      {
        "id": "6b441d11-fa5e-45bf-a843-d5f67e7ad596",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "febc469c-261a-4f1b-bb49-0efcaba71eda",
          "httpRequestId": "64ec3603-034f-4411-9c22-ef2ff78f8710"
        },
        "item": {
          "id": "6b441d11-fa5e-45bf-a843-d5f67e7ad596",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3e96c7aa-af8a-42f9-827b-12e93d7cc56c",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "acbeeb6f-e1f4-4427-addc-22f8c4217c48",
        "cursor": {
          "ref": "07796ff4-e599-416b-ab8c-af4c37368e6e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "18a1a3b7-40b5-4f01-b73a-712927759056"
        },
        "item": {
          "id": "acbeeb6f-e1f4-4427-addc-22f8c4217c48",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f55e9080-ab66-4609-9da2-0c9840e06f08",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "bfe0ae03-e7d8-42c4-b25b-f22b2219a391",
        "cursor": {
          "ref": "61e8dd21-a144-4133-a0c0-4341d57ba1c2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8460a021-5c3f-4d19-97d8-15a6ef3c784c"
        },
        "item": {
          "id": "bfe0ae03-e7d8-42c4-b25b-f22b2219a391",
          "name": "did_json"
        },
        "response": {
          "id": "2b00fc78-8171-4f31-b8fb-3ee04094f1ac",
          "status": "OK",
          "code": 200,
          "responseTime": 722,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddfb4c6-d2a1-4405-b890-b8ae584732e9",
        "cursor": {
          "ref": "3cba7c7f-f225-40c5-94a2-a5c053fc34b3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "604f7a05-3064-424e-95ff-874e1c7cf3ef"
        },
        "item": {
          "id": "9ddfb4c6-d2a1-4405-b890-b8ae584732e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "d4213e63-0c3f-4d86-bf63-9acce3b6a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddfb4c6-d2a1-4405-b890-b8ae584732e9",
        "cursor": {
          "ref": "3cba7c7f-f225-40c5-94a2-a5c053fc34b3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "604f7a05-3064-424e-95ff-874e1c7cf3ef"
        },
        "item": {
          "id": "9ddfb4c6-d2a1-4405-b890-b8ae584732e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "d4213e63-0c3f-4d86-bf63-9acce3b6a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffa322f-b30f-4973-b3dd-e9065ee46405",
        "cursor": {
          "ref": "4b3b8df1-afbd-4053-b6bc-ba109924ae61",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3e37ad81-a2aa-495f-9ff7-0353b36552b9"
        },
        "item": {
          "id": "cffa322f-b30f-4973-b3dd-e9065ee46405",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9878ce22-558b-48a6-b9f5-3f869a52acea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 209,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b918687-033a-4162-b401-615e305d7f6f",
        "cursor": {
          "ref": "00b3c3df-9060-47ea-9a84-c8750c4a79c0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "473519c2-cb46-4e57-b2ac-e7f0f7bb7cc5"
        },
        "item": {
          "id": "0b918687-033a-4162-b401-615e305d7f6f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ce892a8a-4f69-4cd2-99cd-cc9f3678317a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3342c40f-01cf-4b8f-a6a5-525de4e3bbc7",
        "cursor": {
          "ref": "3b134891-0f63-4460-aecc-f9e8439a6429",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5024f65f-a293-4314-906b-e2026175226f"
        },
        "item": {
          "id": "3342c40f-01cf-4b8f-a6a5-525de4e3bbc7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1c6638aa-981b-4e71-b6c4-778c1cea4ac9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5840444-8c83-46cd-b218-85f6f6842976",
        "cursor": {
          "ref": "61203dd8-611a-4d51-8c15-7d510d080b85",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3db91dc8-48a7-4f25-bcc6-b49ea97c8d04"
        },
        "item": {
          "id": "e5840444-8c83-46cd-b218-85f6f6842976",
          "name": "identifiers"
        },
        "response": {
          "id": "bdc7ad68-89b9-4869-9374-88a6ea46beab",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311740df-535b-42ec-97b9-5ada9dd777ca",
        "cursor": {
          "ref": "4d964fb3-4fed-4b5c-a058-e0f65881a4ab",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "38d4802d-7514-4bbf-8655-892a514eda08"
        },
        "item": {
          "id": "311740df-535b-42ec-97b9-5ada9dd777ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f34f1319-d4b2-48ea-919c-09ba2a57d1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6754f5-ab52-4b83-ac2d-11cdd354c1f0",
        "cursor": {
          "ref": "4989f008-3075-4cfc-84b3-4ffd32b09879",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cef1d5d2-f78b-4524-820b-5becf62b9081"
        },
        "item": {
          "id": "9d6754f5-ab52-4b83-ac2d-11cdd354c1f0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "252c3ccb-9708-48b8-ab6d-ed5c48d887b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b238fc1d-309c-485c-896d-5615528c6b5a",
        "cursor": {
          "ref": "dfc0b5c5-addc-465c-a9d8-d852c91e2ba8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a4966680-f3b5-49e4-a6ae-3d5667c196d2"
        },
        "item": {
          "id": "b238fc1d-309c-485c-896d-5615528c6b5a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d1cc9f1c-65c4-44ee-8d5d-164432eb9f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b2e528-3f68-4b00-8111-325da4338b6b",
        "cursor": {
          "ref": "d7db8783-06df-43b7-8c0d-4ce5405d364e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5909e162-4071-4047-8f3d-89835ef7021d"
        },
        "item": {
          "id": "d2b2e528-3f68-4b00-8111-325da4338b6b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a7678d2e-3b29-4f78-bbee-fd6d11a20060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f8c8ff-92df-4331-9732-01d23b7e2032",
        "cursor": {
          "ref": "7bfca454-7475-4621-97de-7e8f50b55801",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "505cf4a3-e47a-4923-987a-7a2bfc493571"
        },
        "item": {
          "id": "77f8c8ff-92df-4331-9732-01d23b7e2032",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "78fb6082-7c9d-4b42-8504-e68a727ce25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55cb13d-195a-4133-aec9-185c5bfbade7",
        "cursor": {
          "ref": "4ffd18e1-c00d-408a-abbb-056106e1fe26",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3dd1538b-32dc-4c84-ab97-cf8ae2f25131"
        },
        "item": {
          "id": "b55cb13d-195a-4133-aec9-185c5bfbade7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7dfd4f89-fd31-4f89-ae81-da1c1fc3d03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03de14ec-e610-49d9-b246-80e470643947",
        "cursor": {
          "ref": "55c9501e-941b-4155-bfda-5b8805a184f0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2fed2df5-a072-4035-b4d6-1a7f6dceca86"
        },
        "item": {
          "id": "03de14ec-e610-49d9-b246-80e470643947",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d3557b4e-8728-4f53-967b-fbd1ba927f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a339c4f-5db3-4f4b-bded-7da6f53b5002",
        "cursor": {
          "ref": "9ca8a378-d5d3-4537-8ff6-98673b42bf7b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "be9ce9fe-8279-4902-863f-b1c77a7b372d"
        },
        "item": {
          "id": "5a339c4f-5db3-4f4b-bded-7da6f53b5002",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "440adbc9-53aa-4f8e-89e2-bb7fba9dcea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd83108a-088c-4bd4-a69e-2ba7a9a1d874",
        "cursor": {
          "ref": "75a315ed-e68c-4433-b8d6-cabd535926ba",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a795e9f1-1b08-43c4-8521-a561b79a9553"
        },
        "item": {
          "id": "bd83108a-088c-4bd4-a69e-2ba7a9a1d874",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b01a6cac-972a-4862-8772-4746985fa1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4aad6a-2ea1-4338-adf8-bee5791216fa",
        "cursor": {
          "ref": "4457cec9-bd2c-42ae-a1dc-2c861f5f58c7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e0d8b40c-a96d-448a-b028-1be69db65476"
        },
        "item": {
          "id": "db4aad6a-2ea1-4338-adf8-bee5791216fa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ac14db4c-8db6-4bae-87ce-ae366a9db86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500477b1-d3bd-409b-8be8-9042a0cca170",
        "cursor": {
          "ref": "3f110383-4adb-4093-9b06-f7312f4b1952",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "48c7e9cb-89a3-4a2a-908e-98fc0d7caaf6"
        },
        "item": {
          "id": "500477b1-d3bd-409b-8be8-9042a0cca170",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "28e2ae73-e9db-4c8b-90c8-07eacf148457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a0d8e5-7650-4311-a520-b70868cc35e7",
        "cursor": {
          "ref": "5a82b4b1-f244-4189-a634-9a4ed5afe962",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1c10ab22-23a5-40ee-8ef2-c1942e1862fa"
        },
        "item": {
          "id": "81a0d8e5-7650-4311-a520-b70868cc35e7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5bde3aa3-7066-4b9c-896a-9bf50305614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb523d0-bd64-4696-8449-03d1ea35cd76",
        "cursor": {
          "ref": "fb1aa4da-8627-43b8-89e3-90d63ec55f5c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b410e8cd-2e60-4d92-8540-cc11528e980d"
        },
        "item": {
          "id": "5fb523d0-bd64-4696-8449-03d1ea35cd76",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "49d1f42f-371d-453a-8e06-30ba85a0e096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6a819b-89a9-446d-b9ed-ec61c3982b0b",
        "cursor": {
          "ref": "98822328-dda4-4cbb-8cd6-6ffb44131e5f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4912408d-ce38-48ca-9968-ab05aea8af59"
        },
        "item": {
          "id": "9b6a819b-89a9-446d-b9ed-ec61c3982b0b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c7ba6bc7-a36e-44b9-9a32-b285ff90da6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcde293c-ff13-48b0-a1a4-59d85470c808",
        "cursor": {
          "ref": "4f64074a-a47e-4463-9ca4-3982b665939f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "08ead490-b96d-4c4f-b847-3ff02ab7b703"
        },
        "item": {
          "id": "dcde293c-ff13-48b0-a1a4-59d85470c808",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ffc8adef-1147-419e-9451-f6dbcaf71190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1a5b1f-d8f6-415e-b630-70796563631f",
        "cursor": {
          "ref": "15dabbd5-6e30-4dea-800a-ec67a5d9e280",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "293bbce9-e46b-4b01-a3bd-f07ad5c61f95"
        },
        "item": {
          "id": "9f1a5b1f-d8f6-415e-b630-70796563631f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b39fc47e-e8d5-4ccd-907e-4e95dc61b617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae08eab5-0425-496b-aa3e-bae45dba9124",
        "cursor": {
          "ref": "bf971f3c-c7cf-49e9-9382-02d2a253c705",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "84400e77-4dfd-43de-b2a6-07ac336b6e68"
        },
        "item": {
          "id": "ae08eab5-0425-496b-aa3e-bae45dba9124",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a1a67845-c641-49a5-942c-1a283206d81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaee509-6119-4968-9696-7d79a6a1c997",
        "cursor": {
          "ref": "9ffcc7e3-8a30-492a-8d65-9b3253c3fe34",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5d23b799-a7b2-415b-bb93-3ef9f09ec31e"
        },
        "item": {
          "id": "faaee509-6119-4968-9696-7d79a6a1c997",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f5c71ca1-3c57-4f1c-96e8-795733183dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c726d9a-fbc2-4d3a-b290-2fbe2593f5c1",
        "cursor": {
          "ref": "0fcfc960-3968-40a6-928b-3352a48831ff",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "be1b4b79-5886-4a81-a844-bc762386ae29"
        },
        "item": {
          "id": "6c726d9a-fbc2-4d3a-b290-2fbe2593f5c1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d3e62858-a68d-4884-8dc9-b525509ace71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c8dd2e-1307-4c76-b590-9c80fc302be3",
        "cursor": {
          "ref": "b55f599b-8843-4d7e-8262-5d134d16275d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "259a52b4-5a2b-459a-951e-a477f3c05d92"
        },
        "item": {
          "id": "a8c8dd2e-1307-4c76-b590-9c80fc302be3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "18c4cb9e-3c4d-4bca-9549-85d631bbefd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386a98b0-2633-4af8-a9f2-4e6cb16f53f9",
        "cursor": {
          "ref": "56cc8363-823b-4d8b-8c32-34dbaaf07ef0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8747756b-4960-4aef-8d01-c1978e86f05c"
        },
        "item": {
          "id": "386a98b0-2633-4af8-a9f2-4e6cb16f53f9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6a69e37e-2316-4ce6-bc74-dbec3a641036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ce996a-a1b0-4b4b-811f-ca06a178310d",
        "cursor": {
          "ref": "d417039c-e277-4c7a-9190-86c23494d885",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7d1ae6cd-346a-4680-a00b-422cdf3246b0"
        },
        "item": {
          "id": "f1ce996a-a1b0-4b4b-811f-ca06a178310d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2f8a3a64-1584-4ee9-bfbc-771cd202b824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a582055-0621-490a-ac66-a6cf7c5bd5ee",
        "cursor": {
          "ref": "41423e6b-00b8-4975-9bd8-b16c9c5285f8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8e36584c-6333-42b4-8d5d-6ca65c54b7b4"
        },
        "item": {
          "id": "9a582055-0621-490a-ac66-a6cf7c5bd5ee",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "12df0a0c-ad45-4bf3-b0b0-afa9ec73651f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f563b0a-c280-46fd-90cd-e50e7ba41559",
        "cursor": {
          "ref": "1929a0c4-7abb-427b-b2d0-d74d101ce511",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c3fa75c4-e3c6-4a99-99a9-a3a08b39475d"
        },
        "item": {
          "id": "6f563b0a-c280-46fd-90cd-e50e7ba41559",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3d862b7f-1f58-444d-a226-093aed37d200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8f5f76-16ae-42a4-8844-daf8ad41d718",
        "cursor": {
          "ref": "6cf58923-93ee-4d16-9d18-f7862be2837a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "50743d57-204c-4485-aa77-25e1bdf5936c"
        },
        "item": {
          "id": "2b8f5f76-16ae-42a4-8844-daf8ad41d718",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "19a8ab4e-7631-483e-9955-ce82fc7b2804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b95ef86-926b-42b3-8849-6534b81ad9b3",
        "cursor": {
          "ref": "d1e6527a-f41e-4a45-9608-5fc321381b7d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2a8c53b4-9899-4ddc-84ab-d31d0913ac1d"
        },
        "item": {
          "id": "7b95ef86-926b-42b3-8849-6534b81ad9b3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8fdd4848-527e-44a4-8619-9a2fe7e4da20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b809c6f-f78d-411b-898d-00f4001cbf14",
        "cursor": {
          "ref": "75f31871-25b4-4915-9acb-0df4dcae8fc1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4cb07ac4-5926-449e-a3e4-505114ed1b97"
        },
        "item": {
          "id": "7b809c6f-f78d-411b-898d-00f4001cbf14",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8d2f2b1f-461d-45f6-a637-b7127168103e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5054b9bb-d448-4881-a360-09887aa32085",
        "cursor": {
          "ref": "fece102a-66fa-4077-8676-ad409f543a7f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "60ac80e0-9bf3-4318-888d-609583cfc42e"
        },
        "item": {
          "id": "5054b9bb-d448-4881-a360-09887aa32085",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2f97271f-f517-4050-9c8f-b9649a3cbc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89b3372-72b9-41a2-869a-d87d11c7338f",
        "cursor": {
          "ref": "751ff8c3-84da-4a53-b1b1-4c4edfb6c30d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "44bc5e03-5758-469f-8495-fb0c831bfbf5"
        },
        "item": {
          "id": "a89b3372-72b9-41a2-869a-d87d11c7338f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "797c3648-27e3-4305-b5c6-cc650eae70c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d47aaf-0bf1-434d-a7d1-885a504a067e",
        "cursor": {
          "ref": "6744bdd1-549f-4f88-b97e-825d62044e6c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e061b0e8-ffea-4b39-a853-f13e1d18bb30"
        },
        "item": {
          "id": "e8d47aaf-0bf1-434d-a7d1-885a504a067e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e0de8349-adea-4132-9f6e-7edae6990610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4662cd6-1ee6-4fde-87c7-afa57a154d52",
        "cursor": {
          "ref": "394fda9b-741b-4570-961a-f68f5bc65c3a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5a473905-f8ed-436e-8f7b-ab86081346d6"
        },
        "item": {
          "id": "d4662cd6-1ee6-4fde-87c7-afa57a154d52",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58b9d87d-e49e-4b55-98f3-8b5e40a05575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dac4db-cc39-43d3-a842-921f14de089b",
        "cursor": {
          "ref": "083d9afd-94c0-4f6f-9325-4c2fe2fdf030",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a24eb187-f2c5-409c-906a-aef2f5b285c6"
        },
        "item": {
          "id": "75dac4db-cc39-43d3-a842-921f14de089b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "409c93ca-5e1e-4317-b5d4-e3160ef7bb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e37367-f0e7-47a1-854e-c7ac59f696eb",
        "cursor": {
          "ref": "8fe0da1e-8642-40fb-b8ac-5dd89eb26b9d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9219f7c2-76a1-4715-9a3a-44c6ba3d090c"
        },
        "item": {
          "id": "b0e37367-f0e7-47a1-854e-c7ac59f696eb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "291081fa-6846-4390-8c39-bcf163d2ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffb772c-33a7-4b09-96b0-ea1bae79d2fa",
        "cursor": {
          "ref": "985018c4-61e4-46e3-bed9-26e0c49be1b4",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "069bd5ca-5c85-4eef-ac5a-385195c04f97"
        },
        "item": {
          "id": "8ffb772c-33a7-4b09-96b0-ea1bae79d2fa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bd464a45-f742-4d4f-a213-8c8cf6034cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb99aed-f2f2-46f1-af34-96e1852fea72",
        "cursor": {
          "ref": "ca9571ec-1539-49d4-82b6-c7c966b44db0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "20307222-6172-4a21-820d-161983d36e33"
        },
        "item": {
          "id": "5cb99aed-f2f2-46f1-af34-96e1852fea72",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "386463fa-b627-4eef-bafc-50e828caa1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e3b0c5-12e1-4136-8546-cbbd5890daa4",
        "cursor": {
          "ref": "e477190f-e147-44b6-85e1-84bb2e08af22",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "26e4dabf-7a2d-494f-8211-253639648e30"
        },
        "item": {
          "id": "e1e3b0c5-12e1-4136-8546-cbbd5890daa4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e73d4783-5a33-4d1a-8732-7ba722c51b35",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 327,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f4ccb5-7143-4df4-83a7-af2b540f3b5e",
        "cursor": {
          "ref": "0684c8e9-878a-47ae-8734-17feda9ac714",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cdb680b5-ca87-4c9e-8c5b-f95a3838a7d6"
        },
        "item": {
          "id": "09f4ccb5-7143-4df4-83a7-af2b540f3b5e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "04abdb08-49f8-428e-bf63-b4b0261888a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6181a1d7-a569-4d93-952d-62b3c2aeb226",
        "cursor": {
          "ref": "7db10d90-03f5-410e-99b3-07426284ed47",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5b58c0f9-de5c-405f-b2ad-0d00f705e555"
        },
        "item": {
          "id": "6181a1d7-a569-4d93-952d-62b3c2aeb226",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c7dea0fd-7ea7-4b67-86f9-5b5a88ff78dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746f6f5d-1aee-4598-9891-9d579a358de5",
        "cursor": {
          "ref": "9846893d-bba5-4c4c-b98b-dba5b6f84186",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ffd6ef96-81bb-4e34-b196-e0a798566e36"
        },
        "item": {
          "id": "746f6f5d-1aee-4598-9891-9d579a358de5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "61fb3653-13c5-4de9-9ce9-bc0cb3b8a434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bf5a9a-ce33-430e-b4b1-4aaa3cc31c58",
        "cursor": {
          "ref": "40addfa3-a631-49f8-98b8-c1c16792261d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f5fc3d6d-d5d3-431e-8c10-8626eb8e93d7"
        },
        "item": {
          "id": "31bf5a9a-ce33-430e-b4b1-4aaa3cc31c58",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cfe4a5c7-9680-470b-b8e4-07465146b995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733d1962-502d-4d05-9e36-05971cf27b5a",
        "cursor": {
          "ref": "7ab70201-8ff7-478b-b7cc-5342ab1a7704",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "51ec08be-7b22-4cd2-9cbc-fc863bb62ba4"
        },
        "item": {
          "id": "733d1962-502d-4d05-9e36-05971cf27b5a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "622c08cc-9c98-4ee5-b977-1da45421304f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5380d834-c5ea-4d48-9bac-41849fdb7310",
        "cursor": {
          "ref": "b22e85cc-e643-4484-a199-c3907b3554e4",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fafc9cd5-6263-490c-a64f-938583649d2c"
        },
        "item": {
          "id": "5380d834-c5ea-4d48-9bac-41849fdb7310",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a8d28733-c074-46f7-a473-5de039448ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599e4d95-3813-47f2-b907-ab91778b176a",
        "cursor": {
          "ref": "bfd5b944-f114-4fc5-a313-667629827f5a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "88316b45-7b1c-45e0-828b-a5fcfdf3ed85"
        },
        "item": {
          "id": "599e4d95-3813-47f2-b907-ab91778b176a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5cf30db9-516e-44cc-9273-272a2df787ab",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 347,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87effcd2-360b-4c6e-9bca-3cdc7bf851a9",
        "cursor": {
          "ref": "303b7c84-7a17-434c-8377-9eb90091e845",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "510f3d42-8a5f-4596-b069-39f409ee9621"
        },
        "item": {
          "id": "87effcd2-360b-4c6e-9bca-3cdc7bf851a9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "26cdfbd4-6b4f-4215-a550-41e4087bc2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1b1c2d-d9e1-49fb-89f1-330c304462e7",
        "cursor": {
          "ref": "2f8f3a68-eb2e-47d0-bb3a-c8dda151a528",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c9b6a593-1404-4de7-97c8-12471a75be06"
        },
        "item": {
          "id": "6e1b1c2d-d9e1-49fb-89f1-330c304462e7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea7db9df-2ec7-499c-8c61-eb6f5d1c17bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aa8429-68a8-4ed8-96e2-d09a69c936d5",
        "cursor": {
          "ref": "66d2a355-7efe-4e17-8bf9-9e88e4af8ed5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "18f1807b-9f63-4575-86ea-972f38979420"
        },
        "item": {
          "id": "75aa8429-68a8-4ed8-96e2-d09a69c936d5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "945670bb-5fec-48ea-bb40-3bede925d1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b7f497-cb32-4c1d-9916-e0a8bddd1b56",
        "cursor": {
          "ref": "a664a156-123e-45b3-a8e2-5387c66e765d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2997377d-d3f7-4376-8592-2854ee0df20e"
        },
        "item": {
          "id": "f7b7f497-cb32-4c1d-9916-e0a8bddd1b56",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d690475a-7bf8-4dcb-a480-a05728a6728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f452b250-61c4-4622-b348-02457efb3b8f",
        "cursor": {
          "ref": "c6341470-0f43-4cf2-92ba-dd0b9a088a61",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1c4d905-0f3c-4002-882c-83859aced63b"
        },
        "item": {
          "id": "f452b250-61c4-4622-b348-02457efb3b8f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05695a9e-1c1e-47ab-8cea-b58c306496d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e49daa-e47f-4730-ab60-b63ccf8fd590",
        "cursor": {
          "ref": "c35378d8-0778-4f94-96cc-c03e1156d836",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b3dc0559-33ba-42c5-bfb8-3b934b1067bb"
        },
        "item": {
          "id": "e6e49daa-e47f-4730-ab60-b63ccf8fd590",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9043969e-4967-4d0f-aa33-9f374d830de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb755eb-02ca-455f-b5e2-d58aa0c4bbb9",
        "cursor": {
          "ref": "559a6ea0-74d0-4004-bf24-09aca476a94c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "370d36b8-bf99-40ca-81b3-e4f0dfab53aa"
        },
        "item": {
          "id": "dfb755eb-02ca-455f-b5e2-d58aa0c4bbb9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dd50f93a-5e38-4976-a460-9f66ade86c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45f141e-8584-4b67-9d3b-1793f708fbb0",
        "cursor": {
          "ref": "15ed4300-eeef-47d3-9ef1-7c0925ed78e6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8e2e6a95-6db1-4711-a4dd-2472246c1ad2"
        },
        "item": {
          "id": "f45f141e-8584-4b67-9d3b-1793f708fbb0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "69a60422-2897-4856-954b-c62a52f51184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff672fa-7d2e-4971-83dd-f59089966f6b",
        "cursor": {
          "ref": "28d80118-30ff-4d3f-9c59-b5da073c4e24",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "52ff28e3-ac0e-4d78-a2fe-8cd05d52feb5"
        },
        "item": {
          "id": "cff672fa-7d2e-4971-83dd-f59089966f6b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "870b3c65-fbff-497b-9cdb-dd811230df94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82498d50-e9ce-4b3e-b2e2-24574e5ffb56",
        "cursor": {
          "ref": "0e7c9cdd-1461-451b-9b4c-8e69aae121cf",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8215a81a-e58e-4e9e-8103-37ddfb8643f8"
        },
        "item": {
          "id": "82498d50-e9ce-4b3e-b2e2-24574e5ffb56",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3f143fbf-600f-4e27-843e-eb2a02ed4e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94d05d9-831a-455a-9361-bf219dd9c70f",
        "cursor": {
          "ref": "f5f9be24-8fef-46b0-ba8f-64d8dbf94f2c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "02b61e25-a88d-4c0e-9f7d-c7ac20e43fc5"
        },
        "item": {
          "id": "f94d05d9-831a-455a-9361-bf219dd9c70f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a7776866-d5b6-4b17-bc30-05f1392ec645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86e142c-3584-4bb8-bbb1-9554274209ea",
        "cursor": {
          "ref": "025350df-69c9-4a38-b2bb-e43bea7b082c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c145054b-4b3c-4642-b21e-757410dc05f5"
        },
        "item": {
          "id": "d86e142c-3584-4bb8-bbb1-9554274209ea",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d8cf1f80-5afb-4bac-917f-524b3e7cba69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0525b6-b4ff-4cac-9b60-42ba0dfe2d14",
        "cursor": {
          "ref": "a20a8adf-58b3-4bab-bb2e-ffc0817022cd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "289203c0-1d55-4a98-b4aa-2725db0152b4"
        },
        "item": {
          "id": "fe0525b6-b4ff-4cac-9b60-42ba0dfe2d14",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "30393958-a659-4ad7-9d6c-7fa6bfa3210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d962b5-c569-44b9-b222-a41995d14f9f",
        "cursor": {
          "ref": "82d115ff-69cd-40bd-bbe9-0769b43bafbe",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "333a872f-ba8f-4282-be34-be5b8831a1da"
        },
        "item": {
          "id": "47d962b5-c569-44b9-b222-a41995d14f9f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "37951fa5-804c-44fc-9833-a963e1e11e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea00edf8-f45b-4206-9669-8a46377de01e",
        "cursor": {
          "ref": "e550cf7b-b24a-4aab-a4eb-f03bfc5e0245",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "da4a0cd1-d900-440b-957c-23509dbcc69c"
        },
        "item": {
          "id": "ea00edf8-f45b-4206-9669-8a46377de01e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d6cea461-7653-4a96-a8a0-bbeea629d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cfd0be-b778-45a4-bb6c-bdf6022d4c4a",
        "cursor": {
          "ref": "b77b72f3-744b-4ac4-ab40-0cd1fb203229",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "29bbf2dd-7eec-4e99-b028-bb73fded39d0"
        },
        "item": {
          "id": "c9cfd0be-b778-45a4-bb6c-bdf6022d4c4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "39493c6c-96a8-415f-b354-3be25f447d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e216d138-d2bb-4d61-ac3d-b2980dc54627",
        "cursor": {
          "ref": "2d5c57f7-80e5-4c20-8e9a-3cde0f154225",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e0f6401b-82ad-4d38-b31b-ea3e434529ea"
        },
        "item": {
          "id": "e216d138-d2bb-4d61-ac3d-b2980dc54627",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bab0f848-9f66-480d-a425-c77f3d8f7f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188487fb-d428-439a-bbbc-52a434832e32",
        "cursor": {
          "ref": "22141159-3680-4456-88df-2ba47f153c2a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a7d42e90-734b-4f88-9e74-96b6ff6b6303"
        },
        "item": {
          "id": "188487fb-d428-439a-bbbc-52a434832e32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e80cfd1b-56f9-44cd-849f-32fe5809f6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b85e3f9-beb2-474f-b6c4-a162f9d91b34",
        "cursor": {
          "ref": "97420263-29d5-4d31-a70a-f33a657cbca4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dde16217-f103-4a2c-8910-284169358b7d"
        },
        "item": {
          "id": "7b85e3f9-beb2-474f-b6c4-a162f9d91b34",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f428935d-b52e-4b99-8bf4-ee03be463a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21dabf5-f95f-4a1b-909c-b3a29cd874c0",
        "cursor": {
          "ref": "a9025f0f-9fa2-4204-a37a-2b473d4d1a7d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1fff4bdd-5c9f-4db5-aa99-ec7b9b60a79f"
        },
        "item": {
          "id": "d21dabf5-f95f-4a1b-909c-b3a29cd874c0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ac585bc8-6014-4a57-94ab-126d01a62203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3ecf5d-2589-4dca-9ecf-8a181b0435c6",
        "cursor": {
          "ref": "15ab958d-4dd5-4720-bde7-daf8c34d78c0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "81ddd738-d045-41be-b43e-fe5020071823"
        },
        "item": {
          "id": "7b3ecf5d-2589-4dca-9ecf-8a181b0435c6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a5e1a74-5fa8-40c3-be7b-842bf40fdac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b74f297-18d5-4dae-8b1e-3446bc5a96cd",
        "cursor": {
          "ref": "2e6680e2-a6c9-4ac3-a2e8-bd1977b2015c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2ea54589-318e-4ef6-a63a-20fa01b319e3"
        },
        "item": {
          "id": "6b74f297-18d5-4dae-8b1e-3446bc5a96cd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1ae1f1af-28b0-4705-998e-71798b867882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197cd07f-30e7-40cd-800a-6ffe4b412f17",
        "cursor": {
          "ref": "938bbee8-6cce-4d40-93c4-b27202ae644a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dc194aca-d029-4a18-b3c8-7482746e47e6"
        },
        "item": {
          "id": "197cd07f-30e7-40cd-800a-6ffe4b412f17",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fcbe21dd-1824-4b96-a3b3-055c879af289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3136450-23e8-4d7e-9ad2-13b8e413e154",
        "cursor": {
          "ref": "ca218da2-ef2b-49c3-857c-a155f1e4bf6e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "16927948-4db5-4a54-ae3e-1d52ab085af8"
        },
        "item": {
          "id": "d3136450-23e8-4d7e-9ad2-13b8e413e154",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2b0243c9-ccd3-440c-a0a9-ca6999a67703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556aed14-291c-4aee-a5b0-22508fc84373",
        "cursor": {
          "ref": "c6bd40e3-959c-4b3f-89c5-b4c2078ab821",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "78aa588c-071f-4c5d-a3a6-e9743433b5bb"
        },
        "item": {
          "id": "556aed14-291c-4aee-a5b0-22508fc84373",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32aa59aa-5ca6-4353-a752-5356616921c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bac9fc6-923a-45eb-83b1-96ccd258b7ef",
        "cursor": {
          "ref": "865596c6-4546-4f34-9aef-7170015b6693",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "05cda108-2e4d-41cc-8abf-b2a9ae4fedf5"
        },
        "item": {
          "id": "6bac9fc6-923a-45eb-83b1-96ccd258b7ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d88dbd37-156d-4534-bb71-d6115e45a551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62ca7f6-8d3b-446b-9243-09211f5e9dd8",
        "cursor": {
          "ref": "a05e7b78-1125-4a23-a90c-2c7b094118ec",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a581242f-170d-4095-aab6-e3ab3980b9c0"
        },
        "item": {
          "id": "a62ca7f6-8d3b-446b-9243-09211f5e9dd8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "09f053ae-fc94-4c64-9802-80b99bebe4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01acebfc-cd56-4ded-b43d-aa4be80e89ee",
        "cursor": {
          "ref": "78969181-61aa-4a9d-b269-afa206059970",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2233d4ad-e33c-4846-9dec-aa5254b7c04c"
        },
        "item": {
          "id": "01acebfc-cd56-4ded-b43d-aa4be80e89ee",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6c19da40-491d-4509-8942-e841715d5832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb1a506-7ecd-4d95-906f-735b328640ea",
        "cursor": {
          "ref": "bab81cf7-ba44-4655-b420-fc2fc2818801",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "daefafd3-63c3-4378-aab2-5f15eb0f8641"
        },
        "item": {
          "id": "dbb1a506-7ecd-4d95-906f-735b328640ea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2c831ae9-2cbc-41e7-890d-8a74cbe51f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba104be-bc9a-4b1e-875d-d964d54bddc7",
        "cursor": {
          "ref": "6e4adf09-cd2a-47bf-af5d-f0e52757d36e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f2d83f2d-feda-4086-a5c0-d47629ec49c0"
        },
        "item": {
          "id": "6ba104be-bc9a-4b1e-875d-d964d54bddc7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "51bb48ff-c269-4926-9081-57e3fb3702a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beeab9b-c782-461c-9ea5-911a92ac4cdf",
        "cursor": {
          "ref": "9395b6a7-0d89-4c59-9785-95fc1d0ea06a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8f0bf5d3-3f3e-4627-bc4f-80fce348d898"
        },
        "item": {
          "id": "1beeab9b-c782-461c-9ea5-911a92ac4cdf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ba1b2b38-24dd-4124-870c-d9af8aefc536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e05acf9-58d3-4197-8b8e-1d14edd19605",
        "cursor": {
          "ref": "8b51727c-bad6-42a0-8f97-217dd9ce1d88",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1325cb2e-cb51-45bf-8df2-c663e202efc0"
        },
        "item": {
          "id": "0e05acf9-58d3-4197-8b8e-1d14edd19605",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eadc6d96-aff2-484e-a0f4-04918775b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a929dd2a-9751-4765-ae6e-43c5926fcc73",
        "cursor": {
          "ref": "712a82a4-b6a8-4c27-93b7-c6d46074f419",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "45ab8e75-779c-4e9e-9519-4b43bdb54322"
        },
        "item": {
          "id": "a929dd2a-9751-4765-ae6e-43c5926fcc73",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0d905ea1-c5e5-464c-9f81-a4821fe192c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a22df1d-9f83-48c3-bf64-592dd25950c8",
        "cursor": {
          "ref": "4df4b5f8-c8fe-480b-8985-de07ddcadc4a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ca514070-0315-4480-adbe-4d8a72b42fb9"
        },
        "item": {
          "id": "0a22df1d-9f83-48c3-bf64-592dd25950c8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b4ad8e39-9565-45ac-8dc5-0b676780139f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f103510-1984-4c64-b6a4-a905c83aa9ac",
        "cursor": {
          "ref": "396eb5b9-1dac-4f34-afc4-20eb2d405b11",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cd38cbe0-4caf-4fd1-aa65-032fd240cdca"
        },
        "item": {
          "id": "8f103510-1984-4c64-b6a4-a905c83aa9ac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e81ed678-4f7b-4cd1-a09b-4475b86ee6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83413d1-8986-4e52-b0d3-157ff66c0c50",
        "cursor": {
          "ref": "e9c0d496-2e8a-4d50-ae16-8648d63fdd69",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "15f8a896-e8db-4e14-8e33-90bae4248703"
        },
        "item": {
          "id": "f83413d1-8986-4e52-b0d3-157ff66c0c50",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "423a1710-db95-4061-9e63-52cc2a59d968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19035191-e4bb-42ca-8925-32aef336ded5",
        "cursor": {
          "ref": "e9ab870d-9bec-49f0-a7cf-d6a19c1813c8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "63ae0286-1544-41ee-ac96-9c5b7de275b9"
        },
        "item": {
          "id": "19035191-e4bb-42ca-8925-32aef336ded5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "891ef879-ee04-4a97-9e54-21262078aa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64ea442-4cab-4d0e-8fe1-a51c17bd8732",
        "cursor": {
          "ref": "aa7374af-59d9-4c47-b774-610782506d9a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "772ad8a7-2955-462c-b125-73538f69c0c4"
        },
        "item": {
          "id": "e64ea442-4cab-4d0e-8fe1-a51c17bd8732",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a6402de8-51f4-4f26-986f-82323b50c710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd700972-3f35-43ab-9aa0-ba1bdacb0302",
        "cursor": {
          "ref": "eec316b2-6d63-496d-8fc9-9b2ee6fe6420",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "957d3559-94cc-4969-be2b-b11d0307a3b7"
        },
        "item": {
          "id": "fd700972-3f35-43ab-9aa0-ba1bdacb0302",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fd9e1db3-4807-428d-8c68-695a50c7cc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be1b159-6dd2-4549-b685-b99d28dcd737",
        "cursor": {
          "ref": "b9bd3f51-b31b-4845-a7b6-8ff33156ba6b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ca771aae-adb6-4f43-8fff-c164c3636cb5"
        },
        "item": {
          "id": "8be1b159-6dd2-4549-b685-b99d28dcd737",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fbacac27-2bb7-46c9-81bb-bfd0150cf65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a9e040-b13d-4848-addf-1929926d4a4b",
        "cursor": {
          "ref": "5890eae5-be07-4c03-b151-3d820e55ec02",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cd1a4a14-0fef-4309-9adc-471eb7dbbbd7"
        },
        "item": {
          "id": "08a9e040-b13d-4848-addf-1929926d4a4b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9447b7d5-59ed-4615-805d-792634ac78c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd91d469-46ab-4678-a774-7692d462325f",
        "cursor": {
          "ref": "0701ded4-a578-452e-b604-fafcfd84061b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ebd2bcfd-2e93-42c3-af6d-04cfb7779445"
        },
        "item": {
          "id": "dd91d469-46ab-4678-a774-7692d462325f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "50419496-3827-407b-a3c5-8d8561e0a74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109dfddd-5aa0-4153-8d0f-df44b9625bae",
        "cursor": {
          "ref": "5773a686-b1f2-48f4-914c-18e9a20a34f1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b9ac98a6-cab5-44b2-831a-587cf35626ef"
        },
        "item": {
          "id": "109dfddd-5aa0-4153-8d0f-df44b9625bae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "75985e00-a69e-488f-80fa-7348662a4267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd94d943-9fa3-4331-9e3b-fa365388976a",
        "cursor": {
          "ref": "5744094b-2f73-42e2-b7b0-cb26fe2ef6b1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "df15a1b1-2fd9-4a05-89f1-6c7d573c5213"
        },
        "item": {
          "id": "dd94d943-9fa3-4331-9e3b-fa365388976a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7b95b993-0109-404b-856a-05095ef1d204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3aa159-0996-4d7f-80fa-cc423c75c896",
        "cursor": {
          "ref": "c5c4a14f-e88e-4d48-ae47-4cfd8972a529",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f1366b9e-e5d3-4f2c-b7f9-937ec416f47a"
        },
        "item": {
          "id": "4f3aa159-0996-4d7f-80fa-cc423c75c896",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ea0a4f70-1427-4ca9-9cef-4e69a91f01bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e57287-1d6d-48e1-99e1-0d92e45636de",
        "cursor": {
          "ref": "e4bd8c83-59ef-4d7a-8487-be652a83dc25",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f07aba32-84e9-4304-bb35-45642847f7f5"
        },
        "item": {
          "id": "c1e57287-1d6d-48e1-99e1-0d92e45636de",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2a3e1ba1-4186-43f9-9ad4-bb231a00412a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc86f132-c56e-47de-a101-591a74d6d76c",
        "cursor": {
          "ref": "6bb8cc64-acc8-4f41-9e46-d04a272a07ce",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8d1d9e40-5eb9-4d65-90bf-8e6af06e8882"
        },
        "item": {
          "id": "dc86f132-c56e-47de-a101-591a74d6d76c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "30b1295b-b7df-4653-93be-e57fff75681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a93c44-f47b-466d-b0ca-840676494c7a",
        "cursor": {
          "ref": "6f12b2c7-dd13-427b-8566-ccf8655d4e1b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8a63bd6a-49f8-4f59-b822-50fe5746e5a7"
        },
        "item": {
          "id": "a7a93c44-f47b-466d-b0ca-840676494c7a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8362d678-c077-4b21-a5e8-cddbebec78a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ae6846-175c-4b4d-bb04-607b6ae0c152",
        "cursor": {
          "ref": "f01ffd4b-e5ba-4046-ac0c-10c65c49c6e4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e1873205-9eff-41eb-92b3-ae55054fb467"
        },
        "item": {
          "id": "d9ae6846-175c-4b4d-bb04-607b6ae0c152",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8f826da6-aa68-46ac-b0c9-c541f6b3065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615e5010-2a75-43bb-87d9-14c236b26503",
        "cursor": {
          "ref": "56ee24df-7785-4cc0-8ecb-a0b91f01e256",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e7641a38-8344-4a8c-9f36-0d8c870ec000"
        },
        "item": {
          "id": "615e5010-2a75-43bb-87d9-14c236b26503",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "23c4d114-3385-4e5a-957f-ca16d9cbc2d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f80ff80-6ae6-41fd-9aa0-4374725e5bd9",
        "cursor": {
          "ref": "23e2b067-eb22-4e61-bc2c-2607420fd926",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2cce402-1e0c-4c37-a9c6-5ef459b75f86"
        },
        "item": {
          "id": "2f80ff80-6ae6-41fd-9aa0-4374725e5bd9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "36a52d4c-33f4-4ba9-b46c-2ea8f9c2da88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2eb8a471-9f44-41d9-b352-9e8c0b1bb12d",
        "cursor": {
          "ref": "fea73f57-634a-4546-b3c9-20c5d6cf401b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "11d6f147-c92a-4647-9de6-91eb1db78ee3"
        },
        "item": {
          "id": "2eb8a471-9f44-41d9-b352-9e8c0b1bb12d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a6d867b8-a4d0-474a-9a70-b4d9226d843d",
          "status": "Created",
          "code": 201,
          "responseTime": 3226,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ee59eb-1c68-43e3-9f7a-488cfaf16a27",
        "cursor": {
          "ref": "9f3de33a-70db-45ee-a91b-763df1595f87",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5307c906-6d77-45cf-b0cf-c7530fcf465d"
        },
        "item": {
          "id": "f2ee59eb-1c68-43e3-9f7a-488cfaf16a27",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "52be0004-c905-4072-8c26-bb008f22c2b8",
          "status": "Created",
          "code": 201,
          "responseTime": 2213,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "20533fc6-41b2-401e-ac47-62bf69df5429",
        "cursor": {
          "ref": "9c59663a-6479-4822-a7ac-30a936f2cf46",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "53e7baa4-2b33-4c36-badf-240aad510e8f"
        },
        "item": {
          "id": "20533fc6-41b2-401e-ac47-62bf69df5429",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ec3e7b08-6453-481c-8d98-ded0440636e7",
          "status": "Created",
          "code": 201,
          "responseTime": 2999,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "186395dc-2f8a-4e21-9eb7-66043253ec98",
        "cursor": {
          "ref": "cf39e709-00db-4b17-8450-5acf5578afbf",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1163ec43-4031-442e-8bb2-6560c6cc7f90"
        },
        "item": {
          "id": "186395dc-2f8a-4e21-9eb7-66043253ec98",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7f25e0f7-29c1-4adb-89bd-7f8da197142b",
          "status": "Created",
          "code": 201,
          "responseTime": 2264,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba9169d-21bb-4044-9eff-f11216b75556",
        "cursor": {
          "ref": "2ae03c7d-b184-4565-8ac5-0eaa1b9b5d1a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "32b8c3f4-e8dd-4d9a-b1c2-2b4b862cd698"
        },
        "item": {
          "id": "5ba9169d-21bb-4044-9eff-f11216b75556",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "22768bcc-97dd-4650-bc20-8773c724252b",
          "status": "Created",
          "code": 201,
          "responseTime": 2172,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c7163-6eef-4af7-a2c3-8940bba93718",
        "cursor": {
          "ref": "8567082a-6ba4-4fd3-8716-76eb0235ca0b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "92e764fc-2f4b-42df-8fd2-f95a4e48950e"
        },
        "item": {
          "id": "3d8c7163-6eef-4af7-a2c3-8940bba93718",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "193fb31b-1285-4c5c-b511-6eae09aacf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f0a0dec1-cefd-48e5-9703-a7ee104d458b",
        "cursor": {
          "ref": "2d868a41-7ffa-4f5d-a67e-811d38e554b1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a090383b-48d3-4bd0-8f87-59a8ddbc1ffc"
        },
        "item": {
          "id": "f0a0dec1-cefd-48e5-9703-a7ee104d458b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ee2cfee1-5e98-467a-9493-51258dd5f493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a747de7-8545-4626-af6a-eb85279d336d",
        "cursor": {
          "ref": "46e25e34-e054-4cfb-9c9f-b003adca5ad9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3d43d9d7-69cd-441f-a96b-242b90ba59fa"
        },
        "item": {
          "id": "3a747de7-8545-4626-af6a-eb85279d336d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5ef78d74-7373-47a2-b72a-fbc342ef249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04269b7e-021a-468d-87c1-a281c416e689",
        "cursor": {
          "ref": "136456fd-a37e-4e4c-adeb-aafbd429f36c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e429094f-f609-4859-90c3-859694869eb7"
        },
        "item": {
          "id": "04269b7e-021a-468d-87c1-a281c416e689",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "69ae3dd5-8e4f-4910-94d7-d7f2b3e60344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2104c0e-4aee-4e04-b4f4-1e4e59f322f5",
        "cursor": {
          "ref": "26e68745-d28c-4b19-8797-cc7ac6c34a7c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9ac69fc2-6397-4ce9-8a09-2c705db93d62"
        },
        "item": {
          "id": "f2104c0e-4aee-4e04-b4f4-1e4e59f322f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b00b45a-c404-4eab-b870-9b5ec473d225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b47d745-7d89-4f35-b1d5-630a9fd26be2",
        "cursor": {
          "ref": "eeecfaa8-cda8-4152-8eef-8b10ee97f810",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6b49f4f4-2b62-4a5a-8f5b-6b5f93e8997f"
        },
        "item": {
          "id": "3b47d745-7d89-4f35-b1d5-630a9fd26be2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c28bd75f-0d9a-46d9-b42a-e1b52bc0356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2c518d-b4e1-4f9f-9fbc-b14bf4a2e439",
        "cursor": {
          "ref": "94731740-a2a1-40e7-b1ac-ca657666e860",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "abee6d82-e1a1-4bb9-a379-3c17b5ba1eae"
        },
        "item": {
          "id": "aa2c518d-b4e1-4f9f-9fbc-b14bf4a2e439",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c887b171-1152-42b4-9177-9647cab549e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147a265e-df15-4ac2-b975-819c896046bc",
        "cursor": {
          "ref": "ae575a3e-f121-4105-846f-ad0052c6fa46",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4c0abb75-a597-4726-8aee-af4ee146f245"
        },
        "item": {
          "id": "147a265e-df15-4ac2-b975-819c896046bc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8059dfbe-3a72-4466-a32e-32ac4f3073e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde55877-0739-4a78-b6a4-bcac06ebcbc9",
        "cursor": {
          "ref": "150562ee-35df-4eb4-892d-8f0a683ae1ea",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6efc1c24-cae2-4ae9-853d-cde66fe03f92"
        },
        "item": {
          "id": "fde55877-0739-4a78-b6a4-bcac06ebcbc9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "78932222-984f-4f59-88af-53f4cb28979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922406a0-31c9-4586-81e7-06a9e81e738b",
        "cursor": {
          "ref": "26a2360a-a40e-4038-8e12-a7ec28c5a7fd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c44b6491-cddf-4134-8fe5-00c04acb8cfc"
        },
        "item": {
          "id": "922406a0-31c9-4586-81e7-06a9e81e738b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "475753d2-e48d-4c22-bcc6-3f03ab08af96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813a89b3-d881-49b1-afe7-5467bceb5d05",
        "cursor": {
          "ref": "d8664298-89a0-4080-84db-6fa3b96a1667",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "110af0ba-9a1e-46e3-a0e9-fbff03ecfb61"
        },
        "item": {
          "id": "813a89b3-d881-49b1-afe7-5467bceb5d05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "98bacbac-7151-42b6-b27a-13b8f7d7ef0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0157c0-346c-43b7-8995-bbf728a0bfd1",
        "cursor": {
          "ref": "0bb8f53b-21ec-47ac-90e4-9dcf77f899f0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5d0324c1-95a8-40cc-8c62-be85b806a46f"
        },
        "item": {
          "id": "0c0157c0-346c-43b7-8995-bbf728a0bfd1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8be9651e-9ce8-4360-9824-4e8a5021d82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2d8804-ad25-473e-bb2e-23a554ccc27d",
        "cursor": {
          "ref": "7c1d45c5-b7f1-4201-b918-20b1e7109412",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ef8cfc46-db40-4909-bd1e-99ef7511a5e1"
        },
        "item": {
          "id": "8c2d8804-ad25-473e-bb2e-23a554ccc27d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5460315f-4b1e-4956-b23b-54c671966baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45551c62-faac-4a9c-bc37-af9431e52d82",
        "cursor": {
          "ref": "3f77ea5a-9b26-4c7f-ade5-affa2c6b5f45",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a8f7dfde-2c66-4b83-8e91-46d57b6ba759"
        },
        "item": {
          "id": "45551c62-faac-4a9c-bc37-af9431e52d82",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0d518f2a-743c-4a74-8d2c-b0ef470b007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92311f5c-aee7-4be8-ac2f-e4e66d6525c1",
        "cursor": {
          "ref": "1baa70ea-05c5-40bb-98e2-fd43e90dda07",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "637fe810-5e49-49b5-a1d1-a39d74ffc5e1"
        },
        "item": {
          "id": "92311f5c-aee7-4be8-ac2f-e4e66d6525c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7af51577-22a9-42b6-812c-13461e4a2c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc96e83e-f976-468f-983e-0859e39c323f",
        "cursor": {
          "ref": "7321acf5-f8ac-44d9-9268-58d30969a7e7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "580c4b80-ba90-4365-b0d3-8ed7b472400c"
        },
        "item": {
          "id": "bc96e83e-f976-468f-983e-0859e39c323f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b6192fb3-00fb-4cdb-be06-d249ff9f51ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d43e09-ced7-40d4-a271-3ef179124604",
        "cursor": {
          "ref": "a4926d6a-c07b-4443-a92b-0a13308e2d3a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fcd53f7b-d34d-4232-82c4-625a50bb86ad"
        },
        "item": {
          "id": "37d43e09-ced7-40d4-a271-3ef179124604",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "937bd8bc-7713-46bd-8e77-6ecf3b1b4089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28efc3ba-15db-418b-bbfb-169d69959589",
        "cursor": {
          "ref": "27bd5fe6-2c71-49cb-a540-049b51ef551c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e860730d-c7e9-402c-97e4-5681a6ceea8b"
        },
        "item": {
          "id": "28efc3ba-15db-418b-bbfb-169d69959589",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b7b3e3a-0d73-4902-80f0-a6a5e18d0cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fc22fc-a082-4c5c-b1e3-0dfd28f045a3",
        "cursor": {
          "ref": "57bbad6f-b3fe-4285-acf3-d26d9a4fa018",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "74b92141-bfb6-4e51-bcc0-2d4ff80e9c58"
        },
        "item": {
          "id": "11fc22fc-a082-4c5c-b1e3-0dfd28f045a3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "47ab0cba-1ad7-4d0f-8397-34aec9eadb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d168964d-993c-4199-a030-86d2c40950a0",
        "cursor": {
          "ref": "f7cfc656-72d3-4873-9b74-36be900d91ae",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ad576396-df57-445a-ac3c-14a35be6258e"
        },
        "item": {
          "id": "d168964d-993c-4199-a030-86d2c40950a0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "868c2584-4506-45cb-9b6e-32385f70eaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa45ce56-6d98-40a3-8543-2a3f527af0af",
        "cursor": {
          "ref": "477321ed-7760-4fac-b2a2-b40b296da24d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "af9a8d9a-5d6e-4b8f-84b1-4078849552b6"
        },
        "item": {
          "id": "fa45ce56-6d98-40a3-8543-2a3f527af0af",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "24d385f6-7469-4ff2-9612-9c02c7493513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60d5f07-4854-4adb-b253-b49c4eca7ea4",
        "cursor": {
          "ref": "d1ce5bcb-1f9c-4f06-aeda-2b2b7024c7de",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fd1b4431-677f-477e-9f51-d2d40561589f"
        },
        "item": {
          "id": "c60d5f07-4854-4adb-b253-b49c4eca7ea4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0cb2e8e7-cb02-4d04-88d0-d5db981e237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfd1067-7626-4902-8ede-e7c216b01a22",
        "cursor": {
          "ref": "bd1b7407-ee32-4d43-9243-dafa1a4ffadb",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4e828d8c-2454-4a81-a979-b6db077ab83c"
        },
        "item": {
          "id": "acfd1067-7626-4902-8ede-e7c216b01a22",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e60d2c3e-148f-4155-902f-569ae660a8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49448eb6-a0a7-49e5-8763-b3c0d218cc82",
        "cursor": {
          "ref": "ee1f6fca-5b83-4cce-92b7-754b10dfcc0b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8e502342-a43b-44ae-ba61-705e8f1c91e8"
        },
        "item": {
          "id": "49448eb6-a0a7-49e5-8763-b3c0d218cc82",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e3d26eda-b7a7-47ca-84b1-d12d2420910e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d579fe65-6c9b-4b60-afa3-a6de1416a23d",
        "cursor": {
          "ref": "ddc5bf9b-ad99-478b-9a6a-c9011c9a66ed",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9c44e26b-34ba-4028-b3e9-0799c56b4c31"
        },
        "item": {
          "id": "d579fe65-6c9b-4b60-afa3-a6de1416a23d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f07fbc0c-f1b4-4068-a0eb-646d0e5f7828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf3b461-14d1-4ab7-acb3-f3a41c9db366",
        "cursor": {
          "ref": "02813f93-3cef-4750-83d6-012130f54ea8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e8f68412-81dd-4fbf-96da-798447aaa9c1"
        },
        "item": {
          "id": "bdf3b461-14d1-4ab7-acb3-f3a41c9db366",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dc792f18-095b-4857-b308-00419073a597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d023bedb-1ca5-464b-9054-e3f68d6ff8f8",
        "cursor": {
          "ref": "7092e7c6-59b9-4449-aa50-5cea66dccea8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dbd46269-34fb-488d-b251-1e68a1ef9708"
        },
        "item": {
          "id": "d023bedb-1ca5-464b-9054-e3f68d6ff8f8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "66e97805-89a1-46ee-9620-9aeb3a9bebe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3517d10a-97af-453f-905d-fa25a8ccbf42",
        "cursor": {
          "ref": "9ffd10be-78f2-4a0c-b7ff-befec99d0975",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fd0941af-0324-4d14-94d4-efe9f2f55c25"
        },
        "item": {
          "id": "3517d10a-97af-453f-905d-fa25a8ccbf42",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a30a3413-f7b6-4571-abe5-58aa51b423f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a79984-1763-41e3-ba3b-4ad3e502b948",
        "cursor": {
          "ref": "5754283c-be92-40eb-84b6-40925c4b40ce",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bcc7e75c-5285-4781-99db-975a8bad5aee"
        },
        "item": {
          "id": "65a79984-1763-41e3-ba3b-4ad3e502b948",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8c45655a-49f3-4921-9d63-939a5719b924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f455533-a25a-4366-a3d9-ce7c49cb553d",
        "cursor": {
          "ref": "6e5ceb72-0d72-4abb-b7d4-fda1dc38a8d8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "564e8185-ef12-46bb-ac6c-f6f68fa5c8b4"
        },
        "item": {
          "id": "2f455533-a25a-4366-a3d9-ce7c49cb553d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a6bedb0e-3775-493a-a73d-ba84209b87b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ab5a09-6cf7-4d31-af04-62f60f150276",
        "cursor": {
          "ref": "84da9c81-f190-44c8-b794-f0f8a7c1727e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "56d1bef7-be18-439c-a796-267b669e3eb7"
        },
        "item": {
          "id": "47ab5a09-6cf7-4d31-af04-62f60f150276",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7df841d2-f583-413a-8b5c-6b2471e47fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05596071-253b-4d4a-9c4e-bc2649eb69d2",
        "cursor": {
          "ref": "d587095c-6320-4a5f-a776-d8fd17b92954",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4277418d-73c3-471d-8bee-9796927150f2"
        },
        "item": {
          "id": "05596071-253b-4d4a-9c4e-bc2649eb69d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68062b7d-5786-4312-a0ae-4a315f569d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2264d7-906e-4fa9-b1ad-a8e55c21ac1a",
        "cursor": {
          "ref": "4684569d-df66-4874-b750-5ceb6ece296c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ee2371be-3725-48ae-b626-568cfa178776"
        },
        "item": {
          "id": "0d2264d7-906e-4fa9-b1ad-a8e55c21ac1a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c0dcbb80-c0f4-467c-aa96-247eb611b755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8652cf15-8801-42d5-bf1b-3338ad048667",
        "cursor": {
          "ref": "6a2b1480-5ace-4dcf-bd22-abdfa63fe4c8",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9beea01e-c6ad-47ad-9350-e639095f0067"
        },
        "item": {
          "id": "8652cf15-8801-42d5-bf1b-3338ad048667",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8fdc3cd-ce77-4643-92b3-b8915ae9ba9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7312cff-926c-4d22-ba34-6a0182071073",
        "cursor": {
          "ref": "8f75542f-67c9-44c0-a31e-c8dfbdbaf11d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9d0144b3-792a-4534-9748-0b116d44ef24"
        },
        "item": {
          "id": "e7312cff-926c-4d22-ba34-6a0182071073",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "62a38009-0551-4d37-98a3-0e51b98e3c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7537a6fd-70f8-4b6a-94ef-cb704829b540",
        "cursor": {
          "ref": "8946485f-3e7a-4b3f-a618-c8328abbb779",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4836416d-c996-40bb-98fb-26a364f77097"
        },
        "item": {
          "id": "7537a6fd-70f8-4b6a-94ef-cb704829b540",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7e2f97cb-c35e-401e-85f6-35f9791b7c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b816d61e-14ef-4329-a50e-c88135fa5c7b",
        "cursor": {
          "ref": "87728bda-05e5-420d-bcc2-2de3475e0555",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3028df8d-8f77-4e7d-acbb-f9262b4607b3"
        },
        "item": {
          "id": "b816d61e-14ef-4329-a50e-c88135fa5c7b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "db130e28-22d3-4a17-b491-ff87ac640d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc468fe6-a983-414d-a456-e71eabe364ed",
        "cursor": {
          "ref": "f84f7595-b6ed-4662-b34f-8e348fd49efa",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "436f7f93-26c2-4e26-80ad-d0e9c6771639"
        },
        "item": {
          "id": "dc468fe6-a983-414d-a456-e71eabe364ed",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9a8ebe1a-cde6-4399-8014-3ddb61705e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59145001-9640-4107-abe4-ef5e0521b25d",
        "cursor": {
          "ref": "f6f6c6d4-0381-4c69-ad6f-37feaa301901",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e097e9f0-3be0-4106-a805-6d2764fa6ccd"
        },
        "item": {
          "id": "59145001-9640-4107-abe4-ef5e0521b25d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "42eb913c-b183-4b26-a9c4-ed6b1bd7c83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716c8e51-3bcd-431b-a972-3e172e7b9aed",
        "cursor": {
          "ref": "76a47729-03dc-4b91-ab54-01dc8df07ae4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1223d368-1c45-47a5-8ce5-31803fcb0dd2"
        },
        "item": {
          "id": "716c8e51-3bcd-431b-a972-3e172e7b9aed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3025e97a-e780-453f-a1a6-0b3b58752103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1918ec-c000-45f2-a00f-767f8b8c6c12",
        "cursor": {
          "ref": "56ea762b-e99c-4987-94c4-40599dc51fef",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5681f501-ee60-47ec-8593-b0ecc90b61aa"
        },
        "item": {
          "id": "be1918ec-c000-45f2-a00f-767f8b8c6c12",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e13e298c-2bad-4cb5-8bcd-c156d13c35d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beceebd-b47c-4772-8572-53582560f8c9",
        "cursor": {
          "ref": "70d25345-a99c-471c-9459-5c694079937d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3471f32a-b7ab-49ff-a304-05b815b13a94"
        },
        "item": {
          "id": "2beceebd-b47c-4772-8572-53582560f8c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "09f9f2c8-e63d-4b31-9a18-22e648327333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dce2f0-3eb3-4888-bc94-e5ed2fb8c712",
        "cursor": {
          "ref": "c122cfeb-6018-4921-93ab-9313cd4f2575",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "31a11abe-cea2-42e4-9d61-1ef1543a4159"
        },
        "item": {
          "id": "c6dce2f0-3eb3-4888-bc94-e5ed2fb8c712",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f021dee-aed4-4b4f-b2b5-db6bf98ed49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf086674-a7c2-48f0-85ca-fdaf3e9e1f4d",
        "cursor": {
          "ref": "6d6b389e-5a23-4602-b699-6c3d0eac89d9",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "df70aa27-a24a-4409-937f-48ad1e641239"
        },
        "item": {
          "id": "cf086674-a7c2-48f0-85ca-fdaf3e9e1f4d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "658e4834-71bc-4556-ba71-9663867b9674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e53a30b-f328-49a9-b447-96c1b9cdc991",
        "cursor": {
          "ref": "c8a9d350-7aa7-467d-a497-f83796e16e5e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cd3f426f-c468-43a5-8bf8-9031d2775017"
        },
        "item": {
          "id": "4e53a30b-f328-49a9-b447-96c1b9cdc991",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b880f0f9-0fb2-432c-93d3-c1f5f08e8464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8bcb13-400a-4701-9bed-a06a8414b2fa",
        "cursor": {
          "ref": "25bc90a5-307d-4717-8694-3dc079f17b7a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "87bd2e0a-9915-4175-855d-da45c125b6db"
        },
        "item": {
          "id": "ea8bcb13-400a-4701-9bed-a06a8414b2fa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e98f7dce-21d5-4a2e-9aa1-27a0fc0667e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51cbec9-57e9-4afe-a778-1047e15d9a24",
        "cursor": {
          "ref": "323d65e4-53f2-4989-963c-0a332db0c1e8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "94f12867-c15b-4a10-ac54-c0a408237fd8"
        },
        "item": {
          "id": "d51cbec9-57e9-4afe-a778-1047e15d9a24",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "89de3cdf-e9b4-4e2f-9e04-bbd716425061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fead8597-d3ae-4b23-99d4-470e6a7f067a",
        "cursor": {
          "ref": "1f106ac9-f83a-4794-aa4e-5dedb6b8d591",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b85e8941-be3f-4f02-881c-7dbba2b5aa53"
        },
        "item": {
          "id": "fead8597-d3ae-4b23-99d4-470e6a7f067a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dadb6035-2e3b-45d4-9237-e622fcd90a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913d133c-4a2b-452d-8e80-04a1b8a93920",
        "cursor": {
          "ref": "aec659e5-eb3e-4490-9e47-6075478b0b02",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2e178318-84c6-4223-aeb8-e7fc334b6533"
        },
        "item": {
          "id": "913d133c-4a2b-452d-8e80-04a1b8a93920",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cfd79b6d-2490-46fd-bc27-415a5547cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f840a16-dcef-4b5b-b48b-ed4ef56eac49",
        "cursor": {
          "ref": "611e4053-0441-4dac-aa4c-d2e2146c849f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c561ca94-6b8d-40f7-807c-0c7d31de0a17"
        },
        "item": {
          "id": "4f840a16-dcef-4b5b-b48b-ed4ef56eac49",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "68c6a7e4-c298-4c46-a393-13afc488f45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d0780-4350-43e2-9aa7-ead2d7ee1bf2",
        "cursor": {
          "ref": "cd9c0f05-0e61-46b3-b11e-90e498704649",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e8cd8a7c-bf78-481e-8b63-0d83f9a27cc3"
        },
        "item": {
          "id": "952d0780-4350-43e2-9aa7-ead2d7ee1bf2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2b1f7274-ccc7-4940-9227-ed63ce0892d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ced70-395c-420b-ae09-0233cb1fa707",
        "cursor": {
          "ref": "7e909172-6b20-40fe-b1f5-a3f1f3ed5d68",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "008d1e1a-8a5a-4483-9530-f63bec4852bb"
        },
        "item": {
          "id": "263ced70-395c-420b-ae09-0233cb1fa707",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe6965ba-867d-4303-9f1c-46560c3700b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2f0ebd-42f2-41ad-a2d9-517d4397a6bb",
        "cursor": {
          "ref": "dff3aec4-580f-4b1f-b271-506918c40a12",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f7be2017-f03f-47e4-b862-81edfb395506"
        },
        "item": {
          "id": "bf2f0ebd-42f2-41ad-a2d9-517d4397a6bb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0315e336-7829-47df-b839-708c5c553585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e0cc75-986e-441d-b7a8-998e1f2681e2",
        "cursor": {
          "ref": "eff7cf9d-1c5c-46a2-a739-4ce648edcfd0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "deda7f3f-3e26-4bdf-8f33-c1dbd605c24f"
        },
        "item": {
          "id": "e7e0cc75-986e-441d-b7a8-998e1f2681e2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b08473f7-3b7c-4275-bcdc-10e9933045b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc59548-3774-4d94-bd8f-ce03ea173599",
        "cursor": {
          "ref": "4ffc61d1-fbcf-4fee-af17-27537fdbe376",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba96fb1d-78f2-4fea-bff0-6b80c0aeeec9"
        },
        "item": {
          "id": "9dc59548-3774-4d94-bd8f-ce03ea173599",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "edebcd33-b8d6-437b-936c-caee790b2f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f036c3b9-af46-40a6-8adf-b4242bd895e0",
        "cursor": {
          "ref": "92b88f89-8d71-44ba-bc1a-c5ff5514e47c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5fe1ec75-1b48-49ee-892d-a24f0cff5604"
        },
        "item": {
          "id": "f036c3b9-af46-40a6-8adf-b4242bd895e0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "111ee209-357f-4323-98c4-8b8a30f9488a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ce8e32-f644-40ab-8da5-ff5406b1340d",
        "cursor": {
          "ref": "d83c9514-42aa-457b-96a6-aa613a03df06",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d214420e-9ca8-49cb-8f6b-004b6d934c54"
        },
        "item": {
          "id": "c0ce8e32-f644-40ab-8da5-ff5406b1340d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c89fe967-3ce2-479c-8a9a-c31bf4ebca75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997f8b60-756b-47b9-8d73-ab3d6886aa78",
        "cursor": {
          "ref": "0bc7e497-36bd-46fd-9100-b478ed672f6e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "675da31b-5cc8-4663-8398-7eeff410d882"
        },
        "item": {
          "id": "997f8b60-756b-47b9-8d73-ab3d6886aa78",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f991bc6c-1ce1-4f06-be29-34f04ba7091e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d789434c-7afc-41ef-b697-3bd18c06282e",
        "cursor": {
          "ref": "f7888957-781e-4449-925c-de43347a39e2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1d923c4f-81ba-48f4-8dd5-fe04819764ce"
        },
        "item": {
          "id": "d789434c-7afc-41ef-b697-3bd18c06282e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b539f88d-9be9-4e64-a4e4-f29320c3a6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6c900b-36d0-4b8e-a622-5d49b65364d3",
        "cursor": {
          "ref": "203db766-3b61-4411-884c-ff8c202a1b90",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4a6cc03a-b510-4602-89b7-a631d6f22925"
        },
        "item": {
          "id": "3a6c900b-36d0-4b8e-a622-5d49b65364d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4688415d-9c9a-4388-8278-567762a3bf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2cf789-7a36-432b-964a-8439c80eeacd",
        "cursor": {
          "ref": "28177797-867b-410e-8c1b-43e1bb5b6f8e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aa4a3582-bb17-41a4-9f1b-416adbcefaee"
        },
        "item": {
          "id": "ee2cf789-7a36-432b-964a-8439c80eeacd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f64d12ee-9050-4432-bb1e-9b4b806b3b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7196005-da3a-441a-a1da-03c7374e759f",
        "cursor": {
          "ref": "132982f4-7967-4a4f-8afc-876723138985",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a0657c56-bb42-42b3-bc0b-d9f91172f085"
        },
        "item": {
          "id": "f7196005-da3a-441a-a1da-03c7374e759f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37b44b7a-85e8-4420-bdae-840a8a79a124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8406d21d-0aa2-47d8-a841-9c12a32fe007",
        "cursor": {
          "ref": "91373155-0802-4840-93c4-0140aaba31a8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "62c30559-e3b9-444d-a5d4-80735d9c372d"
        },
        "item": {
          "id": "8406d21d-0aa2-47d8-a841-9c12a32fe007",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0954aa8-083b-4413-b5ea-000b96631065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b1351c-5709-4baa-9a72-882c61248f26",
        "cursor": {
          "ref": "4e64c98a-0513-464b-aefe-2beefc69ac83",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7991e9a6-4098-4571-bf1c-bdfb19f9cb5c"
        },
        "item": {
          "id": "45b1351c-5709-4baa-9a72-882c61248f26",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4deded26-bdc1-4250-9b1c-50166ac0c0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dcd834-dba2-4779-8709-fbece50947fb",
        "cursor": {
          "ref": "55497541-e703-411a-b0e3-95d6512b4565",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62ba6684-4ad5-4259-8311-62fd2cea838c"
        },
        "item": {
          "id": "21dcd834-dba2-4779-8709-fbece50947fb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78f448e9-4a09-4231-b2f8-5a27813a18e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9075fd-b79b-405b-ba6a-21db38633488",
        "cursor": {
          "ref": "cadda1ba-4c4f-4772-a875-35cf2b2c7f5d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5a8a61c3-2c22-48e8-82b1-0adcc83b0b2e"
        },
        "item": {
          "id": "fe9075fd-b79b-405b-ba6a-21db38633488",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1632abc6-4606-418b-8e52-004bfcf408ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a46004-55ff-4491-b752-56860ba28279",
        "cursor": {
          "ref": "a1df8d38-bce7-4e11-8e25-400bbeac8789",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6364c660-0d3d-4591-babe-5ceea20628d0"
        },
        "item": {
          "id": "94a46004-55ff-4491-b752-56860ba28279",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "59509c94-2a12-4f1c-8bd7-237657651379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee58c66-0468-4937-bc4d-2d62ed789ea5",
        "cursor": {
          "ref": "4e944815-1e61-4504-960d-8c365e95412c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1b36b911-6497-46be-85e2-8b4a1e929b72"
        },
        "item": {
          "id": "bee58c66-0468-4937-bc4d-2d62ed789ea5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1cf04326-7e21-42dc-90cb-a28a8f38bed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7a4d0d-6d52-46f7-b066-ccd000e44307",
        "cursor": {
          "ref": "38a7b864-e091-4798-a4c6-57fa6b2ecd55",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ba65c86d-19d7-4916-9091-5041ec495b52"
        },
        "item": {
          "id": "bf7a4d0d-6d52-46f7-b066-ccd000e44307",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2ac2be9a-13f0-4e87-b457-d95aaeb91b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f77d34-e6f9-406b-b407-fa51c49a1492",
        "cursor": {
          "ref": "c444b25e-ff62-4a27-afb1-59d59bea8803",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4fb47949-f9f5-4532-8ab6-b0f6f8be280e"
        },
        "item": {
          "id": "84f77d34-e6f9-406b-b407-fa51c49a1492",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c6a9d34d-29f6-4aa3-8d49-47cd652312f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ec71f4-2980-496c-99c6-6a7db013c25d",
        "cursor": {
          "ref": "7728d076-5a8c-419e-b320-584681ac01c1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef6f4e88-8491-4ab7-8a0a-844140d2ba4d"
        },
        "item": {
          "id": "04ec71f4-2980-496c-99c6-6a7db013c25d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "38fbd46e-416e-413e-8598-2c914b5e5699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f467b78d-585b-4515-bc74-b9c01328b40e",
        "cursor": {
          "ref": "91548480-c704-459a-a5f8-d50ef6c19c0b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a5691870-1507-44b7-a6fa-bddf188497f1"
        },
        "item": {
          "id": "f467b78d-585b-4515-bc74-b9c01328b40e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ac2480f8-8345-467a-a150-21864e20c2f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec62024f-6ad3-45aa-b606-44350d2f322f",
        "cursor": {
          "ref": "b369e1bf-9375-4dcb-8596-a218b1913f63",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "01f6d4a9-4445-4535-b686-a174dc25a26b"
        },
        "item": {
          "id": "ec62024f-6ad3-45aa-b606-44350d2f322f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3bd382c5-0140-48cf-9d8b-acc4e3d823c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0472a0ec-5dbb-4473-b151-dc8988a14e6e",
        "cursor": {
          "ref": "ef9e6631-7027-41fd-ad47-7d0e65b0154c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "44bd93fb-4d99-4860-b874-a2cfe1086a84"
        },
        "item": {
          "id": "0472a0ec-5dbb-4473-b151-dc8988a14e6e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4260a9e0-c463-40a1-ac3d-38e9164e624f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7896f7cb-ea23-40ac-9c28-0266e84faf3a",
        "cursor": {
          "ref": "53f11a5f-e63d-4e53-8060-87d2e957784e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56ae855c-0bb4-4581-a707-afb43f537f95"
        },
        "item": {
          "id": "7896f7cb-ea23-40ac-9c28-0266e84faf3a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1ef0e066-83dd-4d56-885c-9b22d2ae438f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29430eda-34e9-46b3-ae36-a8fdd4c42e0d",
        "cursor": {
          "ref": "f2ecb32a-d72b-4f13-b0c2-7d419b1d2e4d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0d279fcc-26b3-4fa4-93e9-21c1a8e38329"
        },
        "item": {
          "id": "29430eda-34e9-46b3-ae36-a8fdd4c42e0d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ec5deec1-1a8d-408b-89d4-08d9360e5877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3bd187-b4c6-4b07-9667-9f66ace4b84c",
        "cursor": {
          "ref": "a8d18db4-0579-4f63-bf27-13379a74669a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "47748eff-1f6b-4e4f-a278-0d8330b4ebdf"
        },
        "item": {
          "id": "cc3bd187-b4c6-4b07-9667-9f66ace4b84c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bdacc981-4bc5-450d-a732-c635a9208b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d60369b-1a46-49a9-978b-96c160626f3f",
        "cursor": {
          "ref": "8e0d3a50-a524-4fe3-923d-3ad234b4aa6a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2031656e-a96c-422e-bb7a-0712b0431354"
        },
        "item": {
          "id": "0d60369b-1a46-49a9-978b-96c160626f3f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "66f613f0-2434-4dce-aab2-4b94cf457247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9a4af9-e422-4d7d-adbb-7bd68d551d8e",
        "cursor": {
          "ref": "5ecc429a-b60b-4f55-95c7-17eec9c8089b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "728a4456-197c-4e83-82b0-fdc284464957"
        },
        "item": {
          "id": "ce9a4af9-e422-4d7d-adbb-7bd68d551d8e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "129112cd-9258-48f1-8429-bd3cd363b882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0062c028-18f6-4776-aebb-201acb799ea4",
        "cursor": {
          "ref": "38a2337b-a127-4883-a711-3041afd0cc39",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "732f475d-ea71-4ca7-a7e3-9b3c133317cb"
        },
        "item": {
          "id": "0062c028-18f6-4776-aebb-201acb799ea4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d4a60632-2265-4ccb-8364-54e8d58b0e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f47959a-f6a6-4a8a-8610-cbc0178cff35",
        "cursor": {
          "ref": "cae80aa6-fb6d-425b-9e64-accd4ff7a24a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d8944438-4429-4876-aac1-c6c0d4cad77f"
        },
        "item": {
          "id": "5f47959a-f6a6-4a8a-8610-cbc0178cff35",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "569d7e35-bee7-4d80-8f16-6c2ac7e6cb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cb71c7-188a-4cfd-b050-2754d77e75de",
        "cursor": {
          "ref": "cef0fe3c-0308-4016-a3a6-bb802e3b5a63",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "afa98ed6-fd67-4b56-9550-bac56fcbee81"
        },
        "item": {
          "id": "c9cb71c7-188a-4cfd-b050-2754d77e75de",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d9fd9550-31aa-422c-b2ec-cecb10277560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6b3bcd-9ccb-43b6-be9d-642725651a99",
        "cursor": {
          "ref": "fcb03eee-ce66-482d-92fe-2ba90da03e28",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e3949db8-7ff4-4f28-bc11-8c5ad746775c"
        },
        "item": {
          "id": "7d6b3bcd-9ccb-43b6-be9d-642725651a99",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "60a55ade-acc3-4132-9963-0c294be05357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df72a5f-29a0-46d5-bb23-5d90122dd466",
        "cursor": {
          "ref": "04e78754-52db-4b54-8564-cf7d01d79402",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9a35b984-c49c-47f7-b9fe-26f8c5ecd311"
        },
        "item": {
          "id": "5df72a5f-29a0-46d5-bb23-5d90122dd466",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cc65aeb0-f4f4-4f8b-aa72-27f875297290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecb9aab-fc73-4f40-82c1-f0e021f7984c",
        "cursor": {
          "ref": "2c1239f4-83c9-4856-8907-31a2c87e6268",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bba1d9dd-95bd-4e7c-b696-45c78aada2a5"
        },
        "item": {
          "id": "fecb9aab-fc73-4f40-82c1-f0e021f7984c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7aa2caf6-6f93-4fe6-9b71-ede3f78e9962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a419004-e8b8-4743-87f0-74e59de907e5",
        "cursor": {
          "ref": "12904cec-03b2-4e5b-99b3-b6a088d4cf29",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bb2201dc-e236-481b-8a95-97aa2cf59ee6"
        },
        "item": {
          "id": "1a419004-e8b8-4743-87f0-74e59de907e5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3a18cd1c-9c23-4816-9b36-c83de8e53f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a5d6a9-74d1-4fe7-a224-1f24b24ff1a4",
        "cursor": {
          "ref": "aedba8c1-50a5-499f-89e1-37710df7fe59",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "33e8bc53-a21e-40ed-8e93-e6c6083daccd"
        },
        "item": {
          "id": "98a5d6a9-74d1-4fe7-a224-1f24b24ff1a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b4dd5c7e-1fa4-4df2-b2c6-a082b66c3d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621401d0-2f97-4bb1-bb00-eff63ced9587",
        "cursor": {
          "ref": "5964036b-cdce-46c9-8460-a9604825ba6e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c1edcbc5-e5a8-459e-93ed-fca193c02b05"
        },
        "item": {
          "id": "621401d0-2f97-4bb1-bb00-eff63ced9587",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "70479a59-740f-4855-93b0-36962aa572fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7469981-7c7a-40f3-83b6-c143bbcf58a9",
        "cursor": {
          "ref": "8c8cb515-95b6-44d0-9df2-a25290f5bb96",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f4ac8ae8-6227-435a-90b5-add05a6c66d2"
        },
        "item": {
          "id": "f7469981-7c7a-40f3-83b6-c143bbcf58a9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "47099aa2-d35a-4753-b01a-d59f8c6aaf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753ef5eb-f88c-442a-80b9-cee692b7012f",
        "cursor": {
          "ref": "0c0a8fdf-4184-4018-bcf4-cbea154f205c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a2bdb681-46d5-4496-bcc3-25c8acda9bd9"
        },
        "item": {
          "id": "753ef5eb-f88c-442a-80b9-cee692b7012f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b4829a91-d6c5-45fa-859c-702475288371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc8af17-e84a-4efa-9e81-01a9d4f23a7a",
        "cursor": {
          "ref": "dbb885f1-b448-42f9-b6f2-01fe2fd5db66",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da0634b2-dbe0-43f8-a635-930ff070515b"
        },
        "item": {
          "id": "6cc8af17-e84a-4efa-9e81-01a9d4f23a7a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "98483455-c143-47c7-8e9e-f0bf208f2f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f43b48-de7d-4495-b967-0788475e6019",
        "cursor": {
          "ref": "661722fa-8afe-4c0a-afb8-44c4311c8391",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2f0912fd-513e-49e5-b24f-9c2caa6bff86"
        },
        "item": {
          "id": "50f43b48-de7d-4495-b967-0788475e6019",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a11bf4e7-bae8-4963-b5c0-7ebf94b862d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2443c131-ea63-447c-9a7d-5ed518f7ae2a",
        "cursor": {
          "ref": "40f46174-323c-4da2-b604-42d8dd755546",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ac734082-3563-4bdd-876a-7c74ef514de9"
        },
        "item": {
          "id": "2443c131-ea63-447c-9a7d-5ed518f7ae2a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cec65dc2-192f-4d86-b646-83d01b5fde87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c0607e-94d4-4788-8926-98d45581c960",
        "cursor": {
          "ref": "e99c987f-9f49-490e-af85-5188b1501715",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6f1ff39c-d8fd-4b49-823f-af6e1fb37c2a"
        },
        "item": {
          "id": "38c0607e-94d4-4788-8926-98d45581c960",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bdbf3e23-1c6d-461d-8290-6945f4319558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4dd37b-b483-48cf-bc2e-cb3978718e60",
        "cursor": {
          "ref": "ec0eecc0-2a9b-4dc2-bec4-3b8a3fe86dca",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d77ffd01-d435-4522-9275-b4ee82312b2b"
        },
        "item": {
          "id": "0b4dd37b-b483-48cf-bc2e-cb3978718e60",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a8e23a2d-a9c0-4691-be63-db0669edcbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0a9933-7435-40e0-a253-85ae4bc55dd2",
        "cursor": {
          "ref": "cb805a61-16ce-46cb-a5db-d88df1ce6398",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fdc4b418-e832-42ba-8fb8-c4665820d700"
        },
        "item": {
          "id": "ce0a9933-7435-40e0-a253-85ae4bc55dd2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "98a55690-8f24-4887-97fc-6a1f65dcbd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a95789e-6eef-4d8a-8ff6-109a56a31801",
        "cursor": {
          "ref": "44b4d0c2-c86a-42b9-a7f5-5498108d3faa",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a6da003-4879-4f48-9939-782921dc1a28"
        },
        "item": {
          "id": "1a95789e-6eef-4d8a-8ff6-109a56a31801",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "42b593e7-7b7c-4fca-968d-30335f328039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff53d101-0c2e-4526-83ba-ba6cf5ff0266",
        "cursor": {
          "ref": "88fff46a-e59b-4844-bbe7-4321b99fa843",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c0357af7-185b-41d2-a3eb-4d3c1ccbd497"
        },
        "item": {
          "id": "ff53d101-0c2e-4526-83ba-ba6cf5ff0266",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f2de678e-a583-4a8d-8726-09210b0651c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12281de-3b9c-48a9-acf5-ff10d45d6be8",
        "cursor": {
          "ref": "420d8ba4-255e-4e3f-9304-1558d5481452",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b1d676e2-eeb5-4f95-9c4a-0f4afcaa1e27"
        },
        "item": {
          "id": "d12281de-3b9c-48a9-acf5-ff10d45d6be8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "075fb12c-c07c-41b1-93ed-4e9f5c469302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f002f9a-e720-4b98-b2ea-c12d7e684ff0",
        "cursor": {
          "ref": "9485c8f6-ea29-45f9-a1a9-c4f459ee8573",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "908ab291-0084-4626-a221-166c58c7895f"
        },
        "item": {
          "id": "6f002f9a-e720-4b98-b2ea-c12d7e684ff0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "684738a2-05a8-404d-9551-a8bbc00e3e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33a5139-f510-4fc0-a032-ae8a7e8edf9f",
        "cursor": {
          "ref": "05828132-c144-4914-9409-2cae95131557",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "81c9f332-50c0-411b-8f00-f7a398551b97"
        },
        "item": {
          "id": "d33a5139-f510-4fc0-a032-ae8a7e8edf9f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "06cac207-0b13-4e05-a4ff-d4d89429f181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205bd1b8-2f06-4cf4-a0b4-7414068e372a",
        "cursor": {
          "ref": "f74f29ff-9358-4575-985a-f29f5d6c1969",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e4f7f5f9-daaf-45b0-b153-53654e25ab59"
        },
        "item": {
          "id": "205bd1b8-2f06-4cf4-a0b4-7414068e372a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "74258726-c76c-4a0d-9789-225683dcce22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04bab9f-626a-4a85-834a-15e96345ca8d",
        "cursor": {
          "ref": "8365e1bf-aeac-45dc-85a3-c7256f8c51d8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "04ca90c8-2e24-4c34-b4fd-c629e946ef68"
        },
        "item": {
          "id": "b04bab9f-626a-4a85-834a-15e96345ca8d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ebb003f3-d414-4058-9440-8b856a8e3fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156391e2-7d00-4b60-935d-9bfe5376dbb9",
        "cursor": {
          "ref": "e5925052-f321-40d5-b08a-abc806be4bfe",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5f7ef99a-61d9-4842-9807-4102e34bc132"
        },
        "item": {
          "id": "156391e2-7d00-4b60-935d-9bfe5376dbb9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f76bacb6-5cde-4ce7-a335-ecaf4a4e6ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09148624-3dd7-47eb-9aa3-a4b26b30d2b8",
        "cursor": {
          "ref": "a0f15d23-2cee-497c-8800-631edd7032b5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f6e49091-b84f-4879-ba41-5387a39a7920"
        },
        "item": {
          "id": "09148624-3dd7-47eb-9aa3-a4b26b30d2b8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "59dfbce4-f36a-47bb-9d8a-a5d410f5d8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ee32d8-1c36-4576-970c-86bed0257c3c",
        "cursor": {
          "ref": "76b2c69f-9026-4eb1-8a9b-5390bfe6ca42",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "05b3f8a4-9e7b-4a4e-ba23-11b6134146a4"
        },
        "item": {
          "id": "28ee32d8-1c36-4576-970c-86bed0257c3c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6444e022-967a-4cdc-be36-c3a73c57de27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f745ad-b41e-4772-bfab-5d2afb67a440",
        "cursor": {
          "ref": "c534e0e1-ef9b-45c5-8f67-d6511032493f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c0b2d76d-7438-4dc0-8e25-5b6791105b80"
        },
        "item": {
          "id": "94f745ad-b41e-4772-bfab-5d2afb67a440",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a21a1bcd-1d4f-40a7-9599-cd5f58b6313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5c213e-e466-42f1-9a18-fe9b452f9cc4",
        "cursor": {
          "ref": "8f98032e-a565-4cc0-9fe3-988403ef9581",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "96318f8f-2e30-4951-b62e-9f8890676ac0"
        },
        "item": {
          "id": "fa5c213e-e466-42f1-9a18-fe9b452f9cc4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3e3b0cc6-a9e3-452a-9725-60bc93ff3cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39a0f10-920b-4bca-9d9f-76fc37fbd385",
        "cursor": {
          "ref": "a16c41bb-6a25-4cc5-aeb3-14a54e93f9df",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "01247dea-b2cf-48f9-9308-398f80983226"
        },
        "item": {
          "id": "c39a0f10-920b-4bca-9d9f-76fc37fbd385",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "10c81f29-9f11-4dbe-a503-a343a7235856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bbcd82-f4b3-40f5-8dda-fa0a8610412b",
        "cursor": {
          "ref": "247c9ede-76e3-474d-af70-0d52fa03cbdb",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "be8de40d-68e2-4ea9-a307-9d22a811326b"
        },
        "item": {
          "id": "48bbcd82-f4b3-40f5-8dda-fa0a8610412b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "70d85b7f-edf1-4a0b-9317-ae4d5a0a8b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33e8ae3-6906-4ebd-8bf6-0304ccf8180a",
        "cursor": {
          "ref": "87d58a3e-0359-4331-925e-4f8f0fa2e2e9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ad949ce2-46cd-4778-aeb4-f8e6b8a639b0"
        },
        "item": {
          "id": "f33e8ae3-6906-4ebd-8bf6-0304ccf8180a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "11c608fc-7a4b-4283-932f-6537cf331be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ada3ca1-f71c-43c9-b5b3-fdee864a24e7",
        "cursor": {
          "ref": "4c41f8fa-f862-4046-a2ef-5ed803d7766c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "56a04951-fd52-45a5-8da9-0368d13ce9e4"
        },
        "item": {
          "id": "2ada3ca1-f71c-43c9-b5b3-fdee864a24e7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "92c1fde1-6961-4d42-b197-b7e930dc1ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0741f43b-05c9-4ea1-aa1a-f7e145ce7f4e",
        "cursor": {
          "ref": "c4df0f4a-66d7-477e-b395-10324bc14309",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "765c94c6-e65d-404a-bf49-dd3d7994af48"
        },
        "item": {
          "id": "0741f43b-05c9-4ea1-aa1a-f7e145ce7f4e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5065010d-a8b7-4992-9337-b2b44b9be5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b991da95-41fe-46d0-9dd8-d3105458e000",
        "cursor": {
          "ref": "f558dcf5-9c73-4ce8-9e7b-41aaa6b671b2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "deda8571-be5c-449b-be38-b15904f50147"
        },
        "item": {
          "id": "b991da95-41fe-46d0-9dd8-d3105458e000",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e33e889f-259c-4559-aea3-94319ef8d2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2488f4dc-4a83-421a-9d81-c065a4723b96",
        "cursor": {
          "ref": "18e66b25-33ae-4c9a-97ca-d9735f77f913",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "164509b4-3e94-42ee-b4bc-4de1c634e565"
        },
        "item": {
          "id": "2488f4dc-4a83-421a-9d81-c065a4723b96",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a47d3a13-6d2a-4d63-a8d3-1183d819fe76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13f6647-b9ee-4fd8-8daa-35730ef1625c",
        "cursor": {
          "ref": "b65bf5e1-272e-4baa-bdc5-2556c5bb56e5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b9eaf18-2f4c-476d-b118-911aab738758"
        },
        "item": {
          "id": "f13f6647-b9ee-4fd8-8daa-35730ef1625c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6a21e23b-d601-4f18-8b9d-8e21e4f91b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b784e3e5-040f-4d7b-aa91-770446f94f7d",
        "cursor": {
          "ref": "b1d5941f-201b-4604-b111-2665524c8c51",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0f895d53-7936-48b1-9d76-314c927fbc14"
        },
        "item": {
          "id": "b784e3e5-040f-4d7b-aa91-770446f94f7d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3ccc1248-0272-424f-8c51-889b88c4feb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4b19ee-1746-4a86-8051-6fdbfef373e8",
        "cursor": {
          "ref": "3946f7bd-afe2-4872-b27b-5d12a586ddb8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "02814f0c-cb62-425a-9a56-4976aee523bf"
        },
        "item": {
          "id": "ba4b19ee-1746-4a86-8051-6fdbfef373e8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5227a43e-54e3-4103-971a-e82cb1da0710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02b9925-dc1f-49a6-bcac-3a2c324ea1b7",
        "cursor": {
          "ref": "e7562aa8-6fe1-44e6-a91c-32e3b46a298e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a7a676c4-53e1-4f91-90ea-a49f2716483f"
        },
        "item": {
          "id": "c02b9925-dc1f-49a6-bcac-3a2c324ea1b7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "679dac60-e119-4774-a38f-c82cc2327c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20f57f0-8d7d-45b4-8e49-bfce65c07a23",
        "cursor": {
          "ref": "649953a6-04b6-4794-91f2-0cc33598a867",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "83bf7816-63f3-4ed0-82ae-3310cc52eece"
        },
        "item": {
          "id": "e20f57f0-8d7d-45b4-8e49-bfce65c07a23",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3f844aa0-1570-44f3-bebb-8264dbd18bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6be360-d511-4b96-8d76-95b71e5625f1",
        "cursor": {
          "ref": "2f2a9a5d-677a-4278-b32d-703c0b5a6e02",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4f6716ee-973a-4b8f-80da-5327dbb478fd"
        },
        "item": {
          "id": "1f6be360-d511-4b96-8d76-95b71e5625f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7b5ffa62-790a-4f5d-8e86-857b560d59ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e4b135-5c05-47a4-8b42-399f0a0e4a32",
        "cursor": {
          "ref": "e1c905c4-871f-42bf-8188-54d5f1e92cf6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fd946e9c-2512-4029-9b09-a423ace70f8e"
        },
        "item": {
          "id": "b4e4b135-5c05-47a4-8b42-399f0a0e4a32",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1753a44c-d445-45ea-ab0c-ab52f69cf284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff11a5d-c2f6-4017-8c55-6871c0f4c560",
        "cursor": {
          "ref": "724d9050-0e47-4eef-9921-3e3a26addef6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f6444fcc-20bb-426a-b351-d11edf467d65"
        },
        "item": {
          "id": "cff11a5d-c2f6-4017-8c55-6871c0f4c560",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b9207093-02f7-4e33-8651-38a461851ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99852b17-dbb2-4752-9b73-2d2dd5fa2463",
        "cursor": {
          "ref": "441bec43-d70b-45e2-9b25-df36b3d70f4f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "070dbccc-4620-41b7-9c83-c01b2716208b"
        },
        "item": {
          "id": "99852b17-dbb2-4752-9b73-2d2dd5fa2463",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "77fcb1c8-8fae-42a7-a340-b6a30a0de55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f965b27-ec2c-4569-b907-e49f2a0a4170",
        "cursor": {
          "ref": "39bbc308-980b-4413-bb0f-0b408e700c76",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d4f43f2c-2e32-4e70-a070-0018ee6db889"
        },
        "item": {
          "id": "3f965b27-ec2c-4569-b907-e49f2a0a4170",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "256a7cae-c58c-4db5-b232-5ccf5a5ad33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abaa11c-bfe6-4b09-8f61-44365757e22a",
        "cursor": {
          "ref": "166610bf-691d-4568-ad9d-bb408c78e3a0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7622fc35-a039-45c5-b577-36020deb88b6"
        },
        "item": {
          "id": "4abaa11c-bfe6-4b09-8f61-44365757e22a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "50f2ed70-dda4-42ec-9e33-45e46172c585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718502e3-e10c-469c-abd7-88de9ebfaceb",
        "cursor": {
          "ref": "0ecc5d22-135b-480f-b83a-4f12ccda906d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "81cc4fd9-5f6f-4ab9-b87c-428277baa0e0"
        },
        "item": {
          "id": "718502e3-e10c-469c-abd7-88de9ebfaceb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8407536a-77d3-4d90-92e9-d1f48bbd662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f3d21b-c28e-41b7-a996-a333575f41d0",
        "cursor": {
          "ref": "edef01d2-5994-457e-9aaf-54fd76458fd8",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13a1f478-8532-4fde-8d15-82b7be725968"
        },
        "item": {
          "id": "c9f3d21b-c28e-41b7-a996-a333575f41d0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "66f2b4ae-94ab-4a1a-be98-19d969b44234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5543ec2c-30f3-498c-a32a-f7b72d447520",
        "cursor": {
          "ref": "c4566b95-774b-4f85-b852-c6c5622daa5f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "405f72b3-d3ce-41b6-bdee-35d35248528d"
        },
        "item": {
          "id": "5543ec2c-30f3-498c-a32a-f7b72d447520",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f8afc943-2c41-4283-b05c-bb7a482e28db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b2b2a5-1921-474a-8e56-a875c38d560d",
        "cursor": {
          "ref": "d776b2c9-1c05-402b-bdc9-cfc78d1d2e5f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "def0ed87-05db-4e8d-9400-5534e92b6c06"
        },
        "item": {
          "id": "a8b2b2a5-1921-474a-8e56-a875c38d560d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "473606ac-18de-4afb-ade4-2cab26fd25fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba0c9fb-7668-44da-b557-cbeb31439c9b",
        "cursor": {
          "ref": "d9741d6d-abfe-4a92-a01f-133cd4a61cb8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "667c14b8-2a61-42ff-9b20-eb9a8e38a3ee"
        },
        "item": {
          "id": "1ba0c9fb-7668-44da-b557-cbeb31439c9b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c0f07938-76c4-4980-b8d6-f6789a94081c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac0d12-796f-4641-a8ec-c956a9670642",
        "cursor": {
          "ref": "ffa99564-7f08-4f6d-a18d-350a89b56b2f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "96b1ce51-0077-49de-83f7-fbdd24cf315b"
        },
        "item": {
          "id": "a8ac0d12-796f-4641-a8ec-c956a9670642",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9578f400-8e81-424d-b6db-04a4d4db7bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a073b6b-4bf7-422f-b736-040643aa741d",
        "cursor": {
          "ref": "dfd98d41-6baa-4b8e-8c4d-d5ba7eb5bc81",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cfcdd142-672d-4c20-825e-e7c596a7fadd"
        },
        "item": {
          "id": "4a073b6b-4bf7-422f-b736-040643aa741d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e7afb282-4b7e-4e6e-898a-4bc5532ba0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb9f82f-33c4-4526-bf6e-6abe1e45c82b",
        "cursor": {
          "ref": "1d42e10b-ae00-4d8d-b6f3-84fb5c422ec3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "41406b8d-d74d-4b63-befa-8c680ebf882b"
        },
        "item": {
          "id": "ccb9f82f-33c4-4526-bf6e-6abe1e45c82b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bd86e9ac-0fdf-4282-9431-0af49a55a817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd43f5b1-bb35-4883-aa46-76f347fcc5f4",
        "cursor": {
          "ref": "5722f46e-5a04-4104-a086-c0e3f634aae9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20d3439e-392f-427c-8ba4-75b5658fabc9"
        },
        "item": {
          "id": "cd43f5b1-bb35-4883-aa46-76f347fcc5f4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "02163532-5222-418f-9e22-0f8adc71e847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7dbbac-ca75-4742-be78-b15a79583422",
        "cursor": {
          "ref": "0b3886a4-7ad1-4620-b6a0-68f007f8ee6c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2a58d985-2957-4ee3-a4d4-12bfdd3190cf"
        },
        "item": {
          "id": "9f7dbbac-ca75-4742-be78-b15a79583422",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3e10ff9c-407e-4ee8-a24a-18bd741c978e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa455db-6f4d-41aa-a50b-2adf8df832d0",
        "cursor": {
          "ref": "683e2e35-7fed-41b6-b884-345a53f8f5e7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c13a3c93-d5bd-4a18-8a49-e91553c9d113"
        },
        "item": {
          "id": "8aa455db-6f4d-41aa-a50b-2adf8df832d0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "925abb86-da6f-4ebf-b1e6-9f2bfa0ab5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3c99da-917e-4780-af9b-5b9be047f6c4",
        "cursor": {
          "ref": "cd1d3850-f2a1-42d9-8878-53535729a4ea",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6db3d042-b635-46fd-9751-61d627ce6171"
        },
        "item": {
          "id": "3e3c99da-917e-4780-af9b-5b9be047f6c4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8dc624bc-8fcd-48a2-a0ce-cfdc575aa15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e412ef3-ae23-42cb-aafc-e1799bb1bb88",
        "cursor": {
          "ref": "2e2eaa4c-4093-4db5-9f39-dc62f65aeb23",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a7bc46dd-fb23-4da7-8a8f-d6aaf3e8f242"
        },
        "item": {
          "id": "6e412ef3-ae23-42cb-aafc-e1799bb1bb88",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d22c61bc-d33e-41cc-b162-5fa414fa3a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8160795e-9ae6-4623-8463-a06d6cb6b00f",
        "cursor": {
          "ref": "0f87be69-a483-4398-9e65-b53bbfc6e673",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "304789bf-8489-4220-a52f-e858fa6d8bc5"
        },
        "item": {
          "id": "8160795e-9ae6-4623-8463-a06d6cb6b00f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "42c6c264-5248-42c8-a7f0-4f6d4a3c1a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe7f9dd-936d-47ba-833f-7c6e1695b3da",
        "cursor": {
          "ref": "75f3f634-c08e-451b-885a-39cec3c00dbe",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7b109a89-029e-4a70-a9ac-399c7a32e1ea"
        },
        "item": {
          "id": "3fe7f9dd-936d-47ba-833f-7c6e1695b3da",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d8bc8fc9-5a59-417b-93fb-e295c3feb56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dbda0b-33ec-4437-b8ae-597aa5f2d630",
        "cursor": {
          "ref": "ca9ba357-1087-4695-9d05-01bf8c4ed597",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c97e4778-e23a-438d-93c8-babe1a18acfb"
        },
        "item": {
          "id": "85dbda0b-33ec-4437-b8ae-597aa5f2d630",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e1582fd8-01e6-4712-af6a-7ff29b3558ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fd97ae-f4ab-44f5-8425-ce3300c2c29d",
        "cursor": {
          "ref": "5acec5e7-a3b3-4d15-8e7f-74ddf20df0c4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "69530285-f772-4584-a030-6dcc85aa33ba"
        },
        "item": {
          "id": "87fd97ae-f4ab-44f5-8425-ce3300c2c29d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b8ab8a52-29f0-4310-b000-7eaf109a998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e621c9ac-fff9-47ad-8b0c-78634df8ffa4",
        "cursor": {
          "ref": "cafcd343-71d6-4590-af84-725e046ca716",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9316426a-3944-4030-8bd6-d1f5ddb94ee1"
        },
        "item": {
          "id": "e621c9ac-fff9-47ad-8b0c-78634df8ffa4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "23b38cd5-26d5-4945-bc7f-066b022a6185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda70acb-4304-4ea6-9841-129c1a802cc6",
        "cursor": {
          "ref": "708bd2f2-6ca4-4a26-a99e-cbbdf157c035",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e0191c9d-5d94-4f29-a79b-7c01442bb7c9"
        },
        "item": {
          "id": "fda70acb-4304-4ea6-9841-129c1a802cc6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a6e7e8b8-10b4-4b92-9b2b-e812b50812be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d7d057-4bda-4473-a730-62f6d2c73fc0",
        "cursor": {
          "ref": "7cf1676e-cb01-42a9-9340-b74923df51e4",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "679e5a4f-10c7-48ce-bdc4-b1492150a948"
        },
        "item": {
          "id": "93d7d057-4bda-4473-a730-62f6d2c73fc0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "014eb684-bbdf-429d-857a-2ee315bf8ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1357306d-820d-4f89-b306-e4e78f201657",
        "cursor": {
          "ref": "91c805bf-1a1d-4c63-909d-35abe8dd7fb8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "073e57d3-1f41-4bf6-a741-dbe68f0d4025"
        },
        "item": {
          "id": "1357306d-820d-4f89-b306-e4e78f201657",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6f156f52-839d-4e87-a690-383660580a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5773dd25-e690-494a-93da-f0d1aac600cd",
        "cursor": {
          "ref": "44acd58b-90da-44d2-a87c-64a8e2de3002",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "457f8b01-f15f-466d-b6c6-afeaec9a45e0"
        },
        "item": {
          "id": "5773dd25-e690-494a-93da-f0d1aac600cd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "db085527-ec7f-4af3-a41e-74a79d0122d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf09b9f8-e5fe-4ac5-a3ab-0922d3081219",
        "cursor": {
          "ref": "b53bc8b8-d21a-47ee-9c9b-ae2abd46fb75",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "17fa6c68-0a51-46d2-abdb-d42b1913586a"
        },
        "item": {
          "id": "cf09b9f8-e5fe-4ac5-a3ab-0922d3081219",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a8a33cd4-d2cf-4b94-b2d7-e63fe9dccd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c805b82-132b-462a-a3f7-5f00813a6cd1",
        "cursor": {
          "ref": "bd9d63ca-3232-4af0-99cd-ae72247aec01",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "048416da-0378-405f-9ec7-70a4c61ee491"
        },
        "item": {
          "id": "1c805b82-132b-462a-a3f7-5f00813a6cd1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eb2f993b-3104-422f-ac44-84e0a78c0f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f99cff9-f12d-4806-a419-1ec14e5671d3",
        "cursor": {
          "ref": "44854e81-a01b-4ab8-8697-641ba2abfac7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "043681cc-5ac4-4036-9b7b-8a15ea7de90e"
        },
        "item": {
          "id": "6f99cff9-f12d-4806-a419-1ec14e5671d3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0195ca69-6864-4df8-ac8f-13f2ac71689a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35564a2a-4c6e-4df8-a46b-ccfb409003a4",
        "cursor": {
          "ref": "6752fb4f-a944-4247-9061-2a3b2cd159ab",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bb7b166f-bb67-4ac6-a21a-445d53101941"
        },
        "item": {
          "id": "35564a2a-4c6e-4df8-a46b-ccfb409003a4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "432b59e6-0ab8-4496-8270-55aabb8e06da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7c9011-f112-4a8b-9f1a-e47a76590dfe",
        "cursor": {
          "ref": "48a57609-c1c5-42db-a445-c3043e3344c5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7814df56-ecf5-43a4-8753-5dbe174822cd"
        },
        "item": {
          "id": "0a7c9011-f112-4a8b-9f1a-e47a76590dfe",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3c33cacb-714b-4578-a62c-0b2cf5704ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6989a9ac-f64d-4e81-b60b-7d78a33fa8d4",
        "cursor": {
          "ref": "071725d3-a7bb-425f-852c-621aa11472dd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "800e488f-86f0-44a6-af90-7148b5240265"
        },
        "item": {
          "id": "6989a9ac-f64d-4e81-b60b-7d78a33fa8d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0ffe5bf3-8013-4008-b82c-0bcada16ddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730e49a5-f7ef-40d2-a8f8-dac16dc77d32",
        "cursor": {
          "ref": "361d199f-d7dc-4182-9aee-e2ac84570e8c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fe6f87dd-83e7-44cd-bca6-940dfbadf81f"
        },
        "item": {
          "id": "730e49a5-f7ef-40d2-a8f8-dac16dc77d32",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "07c8a9ea-af15-4916-ab83-08cf06755b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7589becd-0b6b-4ae4-8bb3-6845fc686275",
        "cursor": {
          "ref": "e6b76042-0027-452d-8405-a13c215edb51",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "de39643f-1695-48ee-b8dd-2b3fdf934f05"
        },
        "item": {
          "id": "7589becd-0b6b-4ae4-8bb3-6845fc686275",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c23540e-c82f-4c41-b51b-836d31fe1ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4033804a-57c8-40a1-bb9a-1784c187cb40",
        "cursor": {
          "ref": "9292cfeb-6e17-435d-89c8-aef1f8316358",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c5c6dcad-d3a7-4f0a-9952-9cefbddde4c8"
        },
        "item": {
          "id": "4033804a-57c8-40a1-bb9a-1784c187cb40",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ea4b649f-1505-403e-85c5-719a836aa4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d0700-588f-4946-a2ef-908e695b7c92",
        "cursor": {
          "ref": "ff008cd0-a691-4ab7-a392-b29f51fe60f3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3bae2d34-c698-4637-87b6-8281db6af778"
        },
        "item": {
          "id": "903d0700-588f-4946-a2ef-908e695b7c92",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "710eb4da-c1a7-4deb-871f-65efef0c2587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40646a79-1020-4588-bad6-a5e4fd00c5cb",
        "cursor": {
          "ref": "5a1ce46e-ea31-4b57-a1ff-8d2f11f5387e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "506dd952-84bc-4f77-ab32-77e5b606b811"
        },
        "item": {
          "id": "40646a79-1020-4588-bad6-a5e4fd00c5cb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ce3d3ea2-b375-4910-94bd-f367badad562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ef765a-b4a8-4794-801d-71392450162b",
        "cursor": {
          "ref": "86cd1d8f-3c82-4cfb-8b9d-660c6158d195",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fd3946cd-2d2a-4d2d-901c-ff93ab969b79"
        },
        "item": {
          "id": "b6ef765a-b4a8-4794-801d-71392450162b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "556481bf-b1f6-49dd-9611-14620f110e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553034e8-3bd9-45e1-93e4-5765d87cee3a",
        "cursor": {
          "ref": "1b0334bd-6ef2-400d-ab72-788e3de7128a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dd4d19a0-5643-4fc4-ba86-fbb8e1abd12f"
        },
        "item": {
          "id": "553034e8-3bd9-45e1-93e4-5765d87cee3a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e190cece-7daa-4f9e-af7d-a5db90a8a9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a991eb6d-7b29-436a-8ceb-c377f61eac37",
        "cursor": {
          "ref": "93d09749-6603-46b1-9989-f1c509c5a09a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "45b39c6b-b419-45db-9f02-147436207b69"
        },
        "item": {
          "id": "a991eb6d-7b29-436a-8ceb-c377f61eac37",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "145a46a1-197f-4396-a4dd-78a0c879560b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a977d39-6700-4f4b-a4a5-c705437b2b54",
        "cursor": {
          "ref": "0227f5a8-fea1-4971-baa3-e26c4acd3495",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5a168708-ea1c-4731-baae-4805167d744d"
        },
        "item": {
          "id": "0a977d39-6700-4f4b-a4a5-c705437b2b54",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "88a98947-467e-46a6-8db3-baae892c48bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c0b0ed-fd7d-45e7-b69d-68c7d6bbbbbe",
        "cursor": {
          "ref": "0b78d57a-5e77-46a2-952f-126b6b190ca0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2719422d-0d7d-4a5e-8fea-fb2f2ee1ea06"
        },
        "item": {
          "id": "29c0b0ed-fd7d-45e7-b69d-68c7d6bbbbbe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3b86ff87-7bfd-410a-b4fa-1b89d6eb73f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ebbd2-3ce6-4d71-ba44-5a094d698c6a",
        "cursor": {
          "ref": "d0b03a17-8a1b-4f0a-b438-4b3d970d968b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e1e84741-246f-486e-a19c-69a10627bcd1"
        },
        "item": {
          "id": "a45ebbd2-3ce6-4d71-ba44-5a094d698c6a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "875c90f5-1e2d-444f-bfb2-09fef457663c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c257360-b397-4dbb-90c7-a87f3f1d5871",
        "cursor": {
          "ref": "0f355499-63ee-41a6-9249-d7999ea64a5d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7e8ace9f-a60e-4d4f-bb42-e8d4e2b04686"
        },
        "item": {
          "id": "7c257360-b397-4dbb-90c7-a87f3f1d5871",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "67eabae6-9d59-47e6-8fc8-d9455a8bfb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcb1367-e13d-4be5-b3ee-85ed6bc424d9",
        "cursor": {
          "ref": "8638b55c-347a-47d3-a8d3-f85bd377f8d8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "94e223bd-3263-48a1-a466-d6befa1cc8f2"
        },
        "item": {
          "id": "7fcb1367-e13d-4be5-b3ee-85ed6bc424d9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d51b8106-01f9-4e88-8ebe-3daf8cc6cc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d54e8ad-7cc3-410a-97d1-86d0670e6aa0",
        "cursor": {
          "ref": "18e92c8a-0d8f-4a0d-b356-3363e07eae92",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5a506196-f5d5-4e38-96b3-c895b246c912"
        },
        "item": {
          "id": "4d54e8ad-7cc3-410a-97d1-86d0670e6aa0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3b9f48b6-8b67-4a97-9923-3056591efc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fb601f-264f-40f0-beda-0ee8859253c1",
        "cursor": {
          "ref": "0f0eb6bd-d3fe-4da4-9611-e66fa88f2351",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1295b653-e016-45cd-a9fe-73b4277751bb"
        },
        "item": {
          "id": "22fb601f-264f-40f0-beda-0ee8859253c1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4cf79d95-40e0-475e-ad8d-b97dcd593dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a210c40-2abc-412f-822c-3ce27b7ebacb",
        "cursor": {
          "ref": "7e3bc9e7-0944-4bd2-818d-1def35f33731",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "057a4dab-0a6a-4340-9738-9ef836e3479f"
        },
        "item": {
          "id": "6a210c40-2abc-412f-822c-3ce27b7ebacb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e1257b8a-20f9-4cb5-a5c9-e24faa7cd550",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce27a15e-ab04-432d-97d8-07a3dca72a14",
        "cursor": {
          "ref": "57908001-0a93-4a8a-84b0-a95702d64081",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0b281135-927a-4fbf-ad12-75c963da6729"
        },
        "item": {
          "id": "ce27a15e-ab04-432d-97d8-07a3dca72a14",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c8fcc646-b371-413f-8816-0af612cfd337",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "62018fff-02de-47b8-b1cd-769f0ec51d69",
        "cursor": {
          "ref": "5f50c163-7dac-49f0-8958-a81e802d9cd8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "87058f36-a057-4bc6-b798-38fa9c0d7497"
        },
        "item": {
          "id": "62018fff-02de-47b8-b1cd-769f0ec51d69",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eae40663-261c-452f-92eb-4f81c9f12a42",
          "status": "OK",
          "code": 200,
          "responseTime": 1728,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aee227-f931-41da-9784-7782634abbc2",
        "cursor": {
          "ref": "8ce677e4-326d-446d-b052-d700adb4c937",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "60c628b4-6d0a-4fac-bf1f-a87cf1ebb761"
        },
        "item": {
          "id": "64aee227-f931-41da-9784-7782634abbc2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6be26e4e-25c9-4b9b-8025-c274a4ba3f8e",
          "status": "OK",
          "code": 200,
          "responseTime": 1614,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "af79b371-3405-46de-a55d-24b16f0e9268",
        "cursor": {
          "ref": "f687ef0a-97be-4a8d-8793-803c5357cfcf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e9e3f3c3-b9cf-4ca4-a831-cb34e20f01b3"
        },
        "item": {
          "id": "af79b371-3405-46de-a55d-24b16f0e9268",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4383aa2c-8652-4fd2-be8c-65c7c3f870e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af79b371-3405-46de-a55d-24b16f0e9268",
        "cursor": {
          "ref": "f687ef0a-97be-4a8d-8793-803c5357cfcf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e9e3f3c3-b9cf-4ca4-a831-cb34e20f01b3"
        },
        "item": {
          "id": "af79b371-3405-46de-a55d-24b16f0e9268",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4383aa2c-8652-4fd2-be8c-65c7c3f870e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6860b019-67d2-482c-9b9a-75dbc95e4033",
        "cursor": {
          "ref": "52d469c4-56f4-4bb4-9002-b31ec6ac20bc",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cc930c29-84ab-4103-b613-142fa0c3a361"
        },
        "item": {
          "id": "6860b019-67d2-482c-9b9a-75dbc95e4033",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "622f2722-d8f7-4bd5-9377-3362535da99b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4098309-8818-4153-aabe-78ae3a86bb61",
        "cursor": {
          "ref": "4a7669e9-2ec0-4f1f-ba48-c9a2996292df",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1c8984f6-a8c8-4855-b625-83f36c9c0925"
        },
        "item": {
          "id": "e4098309-8818-4153-aabe-78ae3a86bb61",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6189db17-f89d-46a4-98c4-f2a98ac4e158",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}