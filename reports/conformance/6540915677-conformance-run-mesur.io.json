{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e17621d0-5618-479c-b1cc-44959a13dc64",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f20c5982-56a9-4c2f-be32-bff9cef55cde",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53eb2789-8b1f-4083-9d59-7d0da2b734b4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5796427e-6483-4f4e-b0ad-972c76976842"
                }
              }
            ]
          },
          {
            "id": "97ba6327-d3e0-4d5c-bc9f-8ca6873a5a3d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57b757b8-01ff-498d-97cf-69864118a21f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8bf422b4-2ed2-4655-9ba4-b483c28f2b1c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cff81060-0b14-4b93-8aeb-fc33abe64051",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d827c9f7-1dd0-4dcc-82d7-456069c118f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d420cad3-b728-44c8-8ff8-d18c6ec1df33",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e4146ed-e62c-4cdd-a348-7004d3ebc2f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd1fba73-0e40-40ce-909b-9e5bf69c5718"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c996dbf8-28dd-4fa3-968d-15b701e1659e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f513977a-7722-4761-8b58-57fe02b07a5e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c12ab26-6f5d-4c8f-9468-94d5021879c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34c0cec9-b160-40ce-a42a-bbf81ab76aa6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1ab4108-9501-4cad-b9d7-ade4c654e134",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b13f4c70-8f04-40c8-b2f0-71e2f0976937"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25e38d15-0cf6-4ef4-879a-63219ff7a3bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3216798e-8255-4640-8f65-d5c3d9035663"
            }
          }
        ]
      },
      {
        "id": "8e75d231-c65e-49aa-9d35-c090e8691c6e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6d2866ca-834b-466e-b5cb-31d230351b63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9b91068-7b67-4aaa-b440-88b0cf1d4643",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4bf864e6-c5aa-4b35-9097-b53d708eea15",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b07a47-1539-4eaf-88e5-b7e6ab05e26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad102168-b728-4b1e-8aa8-81ca00695f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d5a2d3-bf30-46da-a05f-1e145194c056",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3553f0-029d-4bf3-b19f-a71eb83a7033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b93da757-a3fd-496f-b893-9ef9a05718f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e26c59-8662-4834-8f7d-dd64b13a2230",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4bd709-77f6-4fc2-8d44-39ffb74b6ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a81c52e-a729-405c-9420-d210c5c167b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b43631b2-a1b0-45c3-a9f5-8bba2e96ba7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aa95400-e2a0-4b01-9efd-829fc273e8db",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5244a59-38c9-4ef2-b81b-31214333da4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08b70d28-2e04-4639-ae5f-0c2a210ee5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0978cd2-67d5-4170-b681-8c30a3bc2d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5782a199-ad38-4453-ab00-8de0c641b783"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa1fdc14-3ae0-483f-b821-d640cc5181cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20b04c65-0199-4dda-bba9-63e5e1c9ff13",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a78796a8-0152-4540-80a1-1629065f1469",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7817ab3e-ebcd-4740-a7dd-6bbdbf5d99ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e98dc612-0261-4a23-9bf2-aca7d4608e87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dcdb79dc-ea0f-40bc-9ff9-60bfb17b67a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a25b0ec6-2809-4387-9f5a-78f67e5f9a70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06575da3-a0e9-4cef-89b3-25e0ba56ef00"
            }
          }
        ]
      },
      {
        "id": "40daf2a1-9df6-4bdb-a219-7ae2f8166792",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "672c8399-6004-4428-a6c7-7124f92ac0de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11c52097-d78d-40ef-8c54-e11863ecf5b8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bdb13e2a-af5f-4695-8b40-647c03a7bb32",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d304df09-d63f-4615-92f5-955c21c78b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5eff72-f3c4-4536-ab35-e6214bd781ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eededbd7-2d60-4897-a1bb-d611c6c66a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b582af9f-23ec-4ad4-a9ba-71ee91d13ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0203531-da8c-4fb4-ac1d-24e863caacf1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402c20ed-8e6c-4703-8422-7cf524f55672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186bb2d3-45b3-4275-ad50-a329db1ccee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1935e78a-a90c-439b-b2b6-2d2decc27fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59b95d43-c0ee-41be-a5ee-e603846cf0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8818f16-ef40-4edc-8531-b7b1bd1900ec",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ba10d0-2393-435f-84ad-c43b6ac6a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1716d14-8205-4bec-84d2-02348c26296c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad77bbb-2de0-476f-8117-34a9dd89f87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edaa46d9-601d-47cc-8f03-32f96cbca517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e19f7e1-49ad-42ab-8a32-c24fa808e24f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6847a1-5a80-4818-a4be-85272488c561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29bf986-c3bb-40ae-9421-98a1818a1340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df50742-af8c-4b65-9d1d-91f630f38907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ad275c-d5e4-4218-8c75-395e5ac6a5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2183d28-707a-44f4-a556-bf736074f3bb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef1a0cc-f388-42d0-92df-787e87dcee4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a897c724-f215-4e22-a627-c77a4bcf0a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9487f6-fc32-4ec9-954a-5f136ec05e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf3c66da-a051-4727-96e0-962f481aa0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95c821-24e4-405f-9a2e-9fc1c4613cac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad85f188-b19a-4aba-b6cf-b29e670c1b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10f4f82-caec-4f2b-b812-a972f8dd7326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f70bb03-0dfe-40a3-8076-f53184d2eafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "786f066c-2a9a-4662-8a30-75ce0ac3c772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb820da-2ecb-4192-90ad-49b08c18d25e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e15831-6f84-45d3-8b5e-ad6e7bf18d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e2b7e4-3f7d-4cac-849d-0e582f0c6e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398c60e9-74a4-4d46-9bdb-f5c9a8eceab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7978f951-c4d4-4e72-b0ba-077985ad265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ebed14-8e6f-4ec9-a049-744979290448",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16e3ed8-1ffd-42a5-a24d-676f1e088d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32872817-fa5d-4101-ae55-960bed0222d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8959cb52-7d00-48f8-8be7-607022b40193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db884494-e909-41fb-93d9-20464da1fed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8529f5d7-b05f-4d5c-acd7-a8ed8beb49e8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c43386a-b1e9-47e6-9e63-2bd46c99c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6ca8a4-19b7-4a60-abd9-a1fc6fa8baac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c1dc87-13e4-4973-b1ed-45383ace7066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c02aa1d-f2b9-46e1-9e16-cd6463c63fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4cbc56-83b5-47c3-aa3e-8925901ff982",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15069985-f2da-4f43-bebe-b8dde6b7cb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae04ec4-f557-4f05-9d4b-25860fa87043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07be10b7-c44c-4165-accc-98c021fc6a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ee2ef07-edae-46ca-bddf-1207c26eb7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9311356-3ad6-468c-9d19-6475c29d9522",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6ca876-8a12-48ac-b5ee-8bd16ce4ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ed4fc9-c5a2-4297-ac7d-72bf126858a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ff5a13-96a3-4ed3-b736-b28b602ca6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d3c00ed-220b-44a9-ad9d-fa1503348b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2be2d2-f649-4df1-b563-1a6b0b6a4c02",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e08eeab-e17d-4e1b-97d0-22451852fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6578afa9-9db2-400f-9bc4-2420c4f3fd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029187d2-e7b5-4edb-890e-72036c77856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "145a53f6-4700-4083-b521-9c5f70e993c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e217a9df-f966-4b05-a196-da78c9048715",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fef4d23-ceaf-481f-a609-5eccdf40ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a7c9e9-ac20-4951-a280-0f90ff1f2f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbf0a43-2a31-446d-a7ae-078694d5c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "336a4258-89ee-4299-b101-8a1768d0e8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c705a10-b2f0-463d-b60a-c9babc652e58",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444f42a0-87e9-46e4-9390-2a6178466c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6a8561-85d0-4d37-8fe9-ed0539b1d453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ee8023-3514-4b85-a99b-18b4ef2cc02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c258f6-31c7-4da4-bfd8-fe966d89c9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23dfa36-37d6-4ec4-bc8b-efbf20c9a06b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1a8419-a074-4e6a-a9d0-5759d944173f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec55368d-f8d6-4592-9cf6-3e672773faaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa12a185-3b3d-4bdf-8035-6423add92ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fccdeb32-3ae3-47e4-94dd-3bef12c1b5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f0f1b6-4107-4760-8f65-1ccc16d4f130",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d140eda-3cdb-4e6a-8eba-7535603bb69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c809baf2-4792-4ff2-b1d0-0eb69310a46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393fb643-5aed-41cc-ad73-544e47ec1b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa87f25-ac5c-4a8c-a3c2-d8312dd35b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4751ef02-28ef-4154-960d-b8d00cf68d8d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d083a44-05d5-46e8-86ee-09578ea44717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3a3452-8bf0-4fb4-bf6c-d17fee0d0a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0391ee2f-563d-45cd-b485-916fadc06f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a2f6daf-1eda-4ebe-afeb-a837249a4205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7784da47-227c-4b5d-b42a-cc8dae0b4804",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9222a81-7aa2-4f72-ad26-0733529bc87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a34913-c53a-4154-9adc-3d753523c0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36ba605-e159-4145-b1c4-8a7de4fe0827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b13684-27db-408a-9ee6-4fdd19afac0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc81b71-32ca-4192-b980-6e31e672d6cc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfeb470-7f58-4879-84c7-cc5855abcab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796042f9-9703-44d6-ada5-b708ab45e7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dac169c-265f-4a99-8703-ba1c1a9d5d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "205e6b3c-de4f-4aec-bd4f-8378f87df8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c601a-9f53-4540-a5db-a236f3264f23",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f113b976-0b66-464d-9846-350e37143e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710cf6d9-e470-4ea1-adef-65c0ad8b485e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bbefde-e7ea-4bec-8231-0a76cb68b5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76d587f-cfdc-4aad-901f-69f998377639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1877a1-10be-4ffd-9125-630ae4fcd1d0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9c0c51-cd9a-4ce6-9fc1-28a163aacbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fd3ac0-1156-436b-bcd2-846d21a5087a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc15e92-2889-4f78-aea9-14588da0cced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "961e3d21-c7a8-430e-a06f-cb8ec7952873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b634ba73-47a0-4498-b03f-65dac54e8cd8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3f11c8-dfb9-4db2-817a-14595a737e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dda7a55-7f17-428a-af35-5d779f302351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d38473-7bb9-4f77-8a80-7f3d9b0f917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9989367f-b526-4179-a6ec-e8a727b92eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c0c5ba-698e-42ce-880c-2712baea6db3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66a319-8fe5-4eaa-8736-732d40695b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a45998c-6906-4ec0-879d-993fb1192ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47b3dfd-398c-467b-bb80-df011d443342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5cd5a9-9204-42cf-98ff-119f7c538f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ac81bf-06b4-4f5d-8f2c-eb3221f0dd14",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4073a8-cf5f-48d9-b8a7-53ef1864fc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc0d2c6-f93e-4884-bf2d-e4280c7e9357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8fe7e0-2a37-49ea-900c-ff4ff8676e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "706deb7f-5900-487d-99cc-471fae97fe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504fc727-4131-4a1a-8b52-17ff045004dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0672aa9a-96e9-4f19-9359-7f26b7927b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb09e9ed-9f8f-4faf-bdc4-d7ccc89d70ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b075ff19-3d94-4e2d-82e5-fa4bfffc7ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbfdb19-8f73-4ad9-b33d-7a90d6420b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0ed0ab-5047-4668-8afe-9dfdd4cf088f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658d2dd4-71a6-49ab-9deb-5f8d54ba7b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331a3393-e8ae-4fb7-b83a-4437ec4c817d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c357ad-a86f-4898-bb93-c63c1adfaa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6235c6b7-4a53-4e08-9529-664382387f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee95ba6-ad00-4659-b02e-92ba8b133c54",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b0c387-4823-474b-a888-b4eb548b1722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2273ca-a69e-4917-ba56-56110ccf6f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cb8625-96a3-4652-adcd-9772acc5979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd12f78-12d5-4598-9d35-29659821ac36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d107d7c-ad93-4ae4-a21b-3d4be500a8fd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c30c6a-eb8f-4599-bfce-ce64a27e22eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59e0ed1-a650-449e-89d4-33476c98d4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e286756d-777d-44e3-bc84-33a6180ea4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a009ffd6-db10-4cb9-8f37-fce8c9242c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe56d3e7-7171-42ee-bbd0-11998c003e94",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f945b253-800c-4ec1-ac84-9997a2681fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5372e51-b230-43b7-99f1-d3057743d46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a41bd53-3644-48c6-a750-695cf44e842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65efcfca-3162-49d0-8cec-f8ada1167c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200f511e-dbfb-41f1-a78b-19849b0f7d49",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5f3533-2465-45b8-8d4c-0786aa00e007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc00d20-b532-406b-904c-614b02cbceb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b96516-85b4-48a6-a1ad-e7cfa863a973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4070f5a9-6cda-4bdb-8297-0faa83406aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7384606-e147-4648-b91e-97532d9165c4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc70c1b-77bc-487c-b0f5-c9b506583ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d233357-d640-4d85-ad45-c175dbe8b651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfa8ab4-197d-4627-b4a4-6f588c6a0620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfab71c-b58c-4399-b42b-762f953559a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba989cc-55e1-4f13-b1d3-f32bf3bf3106",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e744c99e-cc52-417f-be70-5eaffbbbe188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c666123-98f4-441d-ae1e-67230e101d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf58776-7439-4fc4-a18f-b82b97d99663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c8802d-88c6-42a9-bad7-cae5865eb4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d99e3da-f415-4bbe-820e-56a21461b3cd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825a7d73-a280-41ec-bf41-8201d0eed4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268a145b-2b62-4542-8854-45434b6b12cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3766c2c9-b7e6-46e9-ac40-b76e4ee30f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da882e68-90be-4c90-9d4a-136553b6ae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1e3a04-7ec1-4640-b421-86cf88027cd0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfcd7f0-93dc-44d2-9bf6-cd057fe33f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e37e864-12ac-4334-b5f7-41209ba49913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51592734-eacc-4545-b7cb-768fd7041190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaac1548-6d21-486f-91eb-cb6f3be23e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd770a50-107e-484d-861f-d4252c890aae",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8b1ff8-d9d1-4534-941c-153c2bec6c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c786aa-97a2-47a6-a198-097040b9548e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c320b883-66d4-4e3f-8ec0-2db1fb3e863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "26bad635-8bd0-46f2-a131-2b23f140f012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e0a047-1c01-4fc8-b404-8eb34543314b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48495378-b4c3-4532-bc92-b18f57939fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23ec80b5-7af0-48e4-ae3b-f6ca103a5094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78969361-08f7-4416-8e38-dee1ac89c6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4667195-1e8f-4912-9733-e756718411c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac01bdb-c26e-46f6-852e-5f1f60503443",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4148b4a0-b7e1-43f1-abe7-ec4c9b5175bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd17ee2-2e0d-4d20-b9d8-56d9469fe9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1171bd1e-465d-4910-9725-73dfd324ebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c74d8d9-9231-4d37-b019-a2fd7787b8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072119a5-1435-4c08-845a-9f902ea0349d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6699ff88-8703-4894-80b2-2a31a6ed2f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9444b5-b971-4c22-91a3-fbbdc24a0693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e304d-f0e6-4800-bb84-30f24f5137b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b23549c7-93a4-41b9-b34e-8660ddd0f2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52cca8e-b4eb-4241-9971-6f259008a6c0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3938756-11b7-4c97-b6a9-a51fc7b03669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edab309-1177-49e0-81bc-7058db49abf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb08c05c-a5b1-4b52-8d62-8b89cde11bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "acd2291c-708c-4bf7-9d7a-3ddf4626d858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4686da7a-f916-4996-9df6-3af4f099d762",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504e40ce-6cb4-4fab-ad30-37de5259363f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d952fd-39fc-4fa0-80ae-b2f6ddb2ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a456ed-a83f-47c8-a9b1-9836cb45433e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d154ad-53d4-4883-b0c6-fc9570124903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d93159-3a54-4d74-8b76-5fd8136f86d7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0333619d-895a-4dd0-ba27-7eb015f94be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd19a0b6-1a57-43aa-ae6b-110516d656b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831596ff-dcd9-4f9f-9608-6cee897f9025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85c3e0a9-01ed-4cf9-8212-ef306a747292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73df144c-42ec-4717-a5ed-6197b416baca",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f83859f-8292-4d25-9974-574d1a18a90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03daa92c-27f8-4b8b-ad50-f3c83188fc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9bc6b3-ac84-4676-9af9-650ae3d50465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac259d5-8c02-4c50-9add-8cf596ccc7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af69f005-2f34-46c2-9d15-96f93d7c0991",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cce2525-d27e-4a60-bc21-37b921623d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de37e5b-7b44-4b58-9088-61deaa17b46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357a6b73-f642-4738-8691-b60738a77256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6721d220-ad37-454b-ab93-c0244488164e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578f3fdd-1d27-496f-8c63-1c5b92f25747",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe55f88-52f7-41d6-8906-75038370b6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158bc4e1-933c-4dc5-8c9c-6f18bd168827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daa952d-add4-48b3-8afa-69604577baf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ba1978-13e5-437d-9cd3-198c0a243a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68f6ed3-97ec-466f-810b-1cd9c0d81fa5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e4e39c-37a3-4463-85de-1ac597e927c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ba23d3-5606-49c7-b592-8df7b77ccaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f7f90e-38f4-4393-8776-47337830e4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c4a9ef-d59d-4be8-bf6e-30bc95cc8b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e572d935-4376-42b9-ba38-c33a33235391",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468e7a20-9767-49b1-bb7b-d29d486605b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7147620-48d6-4f62-acea-e9b7cdfe41fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eff318-b793-4b97-89d9-1684e4e07575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9da3906-53e2-4b71-a436-2c67edf779a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b93b9e0-287d-4f4e-a905-aae1507dde5f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e6b835-8f07-40b4-9b55-d9f71a815de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8306c55b-781a-47dc-a7aa-6845efde8110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67bfee-4144-413f-a55d-15630968d05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf5103f-75a2-4edd-b496-ce3ef0003ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c2df58-c8b7-4c63-8168-ca37fcb86469",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122b2894-9736-48f4-a6c0-0471f42d19bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8926b224-3523-42d1-b777-8fba93514f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18300914-d745-4262-b97c-76ed32eafa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1acb8f-de82-4c3b-ac22-f1f338081495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64db8253-0a1a-48d1-bd9f-bce836f6ca30",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2486b7a9-3312-4824-a4b2-c2723a8d8bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ae5e0d-e07b-492c-98a8-bbdc150d0db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61438f13-7317-4246-aaf1-2a9479015c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3254552-7055-4679-a16b-ee11ccc016cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b5733b-d75b-42cf-bcc4-4d413a3f518d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c7962b-4f08-4dc6-92e0-6ca0636aff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281ab9b7-fe94-442d-8dfc-a3701e7452a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d9682e-45e3-4e33-bf9b-f1ae2be849d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a8ce7d-f403-4e4b-bab6-3aa43a6d47ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6043280b-144a-42d7-8caf-e09f56bfcb7b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76a0d7f-faa2-472d-b8ae-577f592f2b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3345b701-8434-42ec-b78a-e51b7bc172f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f777acc-5ff1-4155-9bd3-21f072559beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1645451b-8588-4c7d-a306-e486386ba279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0302d404-af50-4f27-a5f7-ecfc7bde592c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ddd657-41c0-450b-8f1f-5a9b083c9c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5eea1d-c768-4d56-a792-bcc6a51c2de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebe080e-5e43-44a7-a238-a5d96f02606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89830606-40a9-4eca-84c0-7cbac71b17de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b243a1b-d695-48bc-be0b-5979d868fd86",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277e2ae0-46eb-49d8-9e34-6ee3e3b2afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b186ba3f-39a7-4343-808e-32c359f70d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c8ffd1-3ca2-4df5-8a42-c0b75606c188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c870e0-a6eb-4829-b148-4ce425307543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706b0354-4da5-4b4f-afc0-68d546536f1a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b36db3b-ef15-40bb-a453-91dcd2f47a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fc484d-f43e-4518-9453-a0438302b25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b50fbc7-f762-4f76-be57-a1cf42e3d62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6799acc4-1657-4172-805b-1f230933fc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d81b294-12d4-4616-a6ef-d4cce5bb65fb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5f63f3-ba51-4d01-a960-85a97e8e6044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc0933d-cf2b-4cb5-a375-4722b02a8982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e21ef71-a83a-447d-bd36-1ad94d2fa5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ada258-8fb6-45bb-a5bd-0835676e9b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1bb960-fc43-484b-982a-cb2d77fb069a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64668e9-d438-4e9a-a110-c0a3a06a8489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a445d83-2fc3-435c-9c86-814e17787140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97858af2-4a28-4b71-bc50-bec77f1da15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c1c622-4148-4216-8cd9-b06b2f9028a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111552a8-8280-4abf-aaa8-60c852f97fcd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2480907-25c0-44f7-9047-9d7d71d54507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc5fd9d-5a8b-46ab-80b5-c36ee4ba5138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364247c2-a6f9-47e4-9eca-87afbe88790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "875d9c49-c74c-4177-bdb0-ab05bec20fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871c1ba8-4c3b-4520-97d2-adb9b034b19a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bdb2a1-6f4e-4970-a901-a5edeb4c84a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae363422-19b3-4272-8eb3-219d36b98948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddcab90-14d9-4619-961f-a83fe7c2c5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "995e92bc-5f74-42a2-8424-803d14440e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e79482e-76c8-43f2-a992-820165c9e59d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d8bdf8-c33a-4ae3-b651-18edbfc6fe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9100fc8-252a-40fe-9fdc-ee8f9dc181dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cd7980-19bb-4dc0-a3f6-4d6cf056adec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b617fe6-908b-403d-8008-8cc7cdf8c772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ceb03-1ed8-4b54-af36-51a154c1f1f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c03714-67d3-4fec-bfb2-5718a622b406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0c0cb6-47b1-4d9c-b14a-14852e5714de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03518ea-b3cd-4d65-b333-2a4abe7a5f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c12fefc3-d251-4b81-92fd-31a6fa831198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34b160b-f6b0-430b-b99b-8be68e48e51f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b86ba8-dc5f-4ec8-8359-9c79e87144ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6699236a-f64d-4de0-a8a0-e4782a450493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c52be4-f888-42aa-b9c0-26f19b2f3f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2bf5ef-5981-461a-acdd-e247c8f97ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c0e0d4-f2a2-4b8a-8239-8390e17b879b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abea8d5-d42b-4067-82fb-9aa123c40a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9bf2ce-760e-4b3a-a1ef-dd85a328b08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11892276-f9ca-41d2-9c9b-40cb0a9ea8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c643c83-b9cc-4ae2-80d4-c43fd4176406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2bf697-0e13-4df1-9850-ee9d010cd15e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57662f3-42d4-4e4d-abe3-2fa215ab0f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48df671-bc39-4a70-9631-eae9113faa1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc26e7f-8107-4e66-8b41-08833c183c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01bf294-c3d5-4917-9d95-b3b8427e0023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9e5ee9-8878-4037-b8c0-7359ce442dd5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd1bd94-08d5-4efc-8146-4d6445bc2b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a29389-c7a6-4df9-8965-f7f18981a19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e5b106-fc11-4025-801f-192b895b1f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8bdb1d-cd1c-4d90-abb0-a2a5856323b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ecf7ef-d153-4335-a23b-f3842ecf8ace",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d6cecb-19d9-40a7-b5a4-28453da3de3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071e5550-55a9-4594-b1be-45d11751a294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1201c2-3e55-4562-92ce-cebdd62d6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "105d71cf-482c-40cc-bc0f-4cdcf5daa94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec10768-1b90-449d-a46c-a4688b316f00",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d5b78f-dff6-4a61-bb37-e8e3a37dae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7e5498-9656-4c76-8666-9cdf5a0b3fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2535d-3dbc-4039-abb7-09ee7fc07812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94eeed8-c481-4845-b176-4a3034e6c43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ee84e5-ef35-486a-957b-f8796f3ad111",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b132288b-2aa6-47e0-ab95-55789efb9e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5bd4a8-2bfe-4920-a550-baddd9255276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037ff87-2e7e-4800-b2bd-3158ed8cf0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "365a19f9-5011-411e-ab43-33632050c8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5fd7c4-0f4c-495d-b8e4-37fd5116d869",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1751841e-c87e-4ae5-ae9e-f8b40d3f14f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194c1f2c-5206-497f-a18c-623da5ce09a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e52aff-4d60-47b3-928f-1382d7f7181f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "722624fa-99f1-476a-839d-23247ffa0187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8092072-67ec-44a7-aeb0-3a5ffe35f1fd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea702e6-991b-4e78-878b-059d09b08166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d747d51a-2b22-4a0f-b15a-78e8837e87a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd14866-621d-4764-bae4-fb7206d7d83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a126f56c-5032-4390-be7f-a9b5d8acc404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7abfe3-c565-4be0-af0a-1bff1639b52d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9dd82-d2fc-4f85-96cb-83994f6f08be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b798a4-2d8a-491d-820f-03431b884e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ced1e18-8a93-4355-81fb-b13a241dfd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0f7857-ffe7-402b-a7ef-f0f73947f258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650bf936-e41e-46ca-a8fd-9e78e8fa053c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8536c373-2c15-40af-a567-f10f97ba0142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe3977c-c7d8-4d04-861c-fd9f6e08c356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797e8805-9670-45c4-a953-35f1a3d74984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "296ea8fd-7175-45e5-935f-54a35aa73f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbb14af-b839-449a-9421-89f7c45f99c5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccaa72f-a484-49bd-908f-8deab1315723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d5fddc-8768-46fa-8acb-9d07b6768cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecf76a5-c872-4afc-bad2-b507963368b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ac0303-dced-4041-b8a2-04cae1d91f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d647284-abd6-4666-bbcb-700615776354",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6526e4-0360-4312-b0e3-e39491ae2449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecb2b2d-fe6c-457a-b64d-6ae003e9237c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7249ff-f325-4da0-9609-31a773b3171e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df88df03-f5c6-4ce8-a0a3-b7d41e56d81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45089cf-0044-45c3-ab89-aaff18ac1531",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324b17e8-b63c-48ce-9822-0364cf67e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680dba92-d05b-4500-9eb1-5bc88c957ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f20bed1-0fb8-4494-a26f-a6b202533bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b02ba404-2ad7-4834-a0ea-6c115c5182ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c1718d-e5fd-4883-a82e-25749c76f5a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca780f5a-6833-48e5-a417-be24303982d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43de3681-46fe-4e33-9296-145b1f72fe7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620bdc0c-45d2-4f34-b68f-9de0d739fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c005018-f2f2-4260-a3c1-1b580c114922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6d2a5b-2215-486e-9b7b-1dc5d989da8c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b627c3-f34b-40f0-9477-a6554f71df04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fea9401-718b-4d8d-8923-d57e29b37d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cd22da-69aa-4b85-822f-b2d99c6808e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6283e582-f2e8-483e-9765-d18beff4875c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa946447-35cf-4068-ab82-338ecc938f0e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10bf117-dbe3-4551-b84d-81e76d7c9425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178c7a58-ead1-4085-912f-5b576ef55a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbcbad1-a2b5-4a2e-8404-da91686ed324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "080f1357-c33f-492b-bc72-35b8929e9bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfea094a-caeb-461e-820e-f7be69be9fc0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636dce27-5a2c-4eb8-a86c-bd3b282cc665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55217e9-a51c-40b6-bbee-cfbbe21a6ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e65345b-dcd5-416c-89b3-af93ab922371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a54d6e7e-6b28-48e9-8351-8fdf4e2ddc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba116969-185e-4081-9585-09384051cf28",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d4a99c-f794-41a9-b91c-803341c25680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd98be80-046d-4180-917a-2105c26d33cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb27be83-5d6f-4bdb-9ede-4ea9ec8b2beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53eb3337-ee20-4663-8639-7dd4c836d7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086ad5f5-277f-491c-aa9d-37bce0853916",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af83fde3-0b1d-48f8-8310-37376dbe2151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c676b0-48bb-4290-bdaf-06cae0247f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca057ea-049a-4817-89d9-76572b8b4648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f497c006-c613-4a3e-b9ad-6e31d0ed287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8dd73a-024e-4697-9e94-4bcd1b541a44",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc87310-d64a-4576-815c-ef7e0709df0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8041d98a-33a6-4ea1-980c-02c7518e9b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02da2b7-c003-4560-8ced-69a036105162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2022d2-b43d-4f61-9cbf-829d3235a84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2178ac15-80a0-4f15-abc0-96eb884a11ad",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f3716f-3314-4e1a-a03a-4ae3e0403d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161aad64-03de-41d1-9fdd-2f5942a3bb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8b0ad0-4f9c-4459-af45-07f6d995b419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da13c978-1d58-4250-9585-8e7d1c66dc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e5133c-f4a9-415d-9f66-7fd686913fbb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820eb072-5ec6-4964-8d6e-559aa1c10f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03293ed4-c69a-4b5c-9365-d4e789934cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2867b581-bdc1-4ccd-bbbb-3b9ccfa2063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3f8e08-64a1-428f-be1c-9fe6164634f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb833d16-7490-44c0-96ba-1290ac8cb44c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d647e27-9b7e-4996-bd94-353f30ae09d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c08af8-4218-4a45-83b2-0dd861f57449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfadc0d-9f72-4fe4-a77d-7e5d764bfcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a42527b2-a3a1-47d2-92e9-73af29bf2c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577ecdb2-86ed-47ac-bc63-aaa318269279",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4453c1f4-c128-48ab-9bd4-a40e82478051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714431d2-2eab-49d1-ba11-86187fe386cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1349cca0-e685-4382-85dd-ec5a73712770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0356831f-4030-4d44-9876-0f630aa991f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefb060e-33ee-4cba-a160-e6a21e68f45b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe54379d-7b33-471f-a139-46c9d7fc1f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564bc895-3a1b-4e37-94ce-1a9d24c8769a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ac6796-1908-4261-bf36-48747bc922af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbbc0fc-1acc-42a8-af48-003b441a741a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9d3113-aeb9-42e8-9fe3-ba5005bdf68a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35ec6ea-a0be-42be-a668-55bf1d2b6c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b243d7-b3bd-465a-aad0-f7cbd4f86a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f20292-a82e-4796-8cf2-416146660fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fceb127f-fc46-4cde-9961-20506905e7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624369c8-a089-4793-bb4f-35a6cc04cb2a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cca196-63d4-4dcb-a7c7-30e9a12a198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a08c9d-b5ba-45ea-bd49-00cfdd4d5164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bc5f38-97c8-40e0-8aea-f5661e37beeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0e4594-20a7-4a67-a551-e15d9675d1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a51a19b-6136-404e-8a72-7df9caeaff72",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e9b6b7-34f3-4258-9742-2f967d7a4902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a0f4ba-6421-4985-b65f-db5fd9f20fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a5e55-12c8-4136-b03b-1433efbc1aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a2ab24-a058-436c-8e7d-d215426f3716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a34c51-9951-4a8f-a17d-22e761a298e5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203f7be6-18e9-490e-8801-124d715c2990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a102af04-7c71-43ad-ad5d-2638364801a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31384011-870e-46b9-b375-e43b5fa99840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae2153a-9bda-42df-9848-eca7034a5783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cae1d9-da43-4a3e-b5d3-b72bec2431f1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44a946-be9b-428b-a874-7ac9fec49088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dc9abb-5f87-4d8d-a2d8-797abb0192b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57c17b8-59ad-487d-9b1f-e515363113f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "66702490-8028-490e-8ef3-0822ed26c001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17209f32-0a81-4ae1-8fac-33fb7464990e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1da16d3-0e0f-41bf-9cda-f04e8eb83931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "088c547b-cad5-49c7-bcb0-d6c95d4f77eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327430f2-c152-4981-8766-660cbc0f5432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "033ec334-687c-4ec6-af56-ec2216e6f78e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5de4a2b-160e-482b-8d27-802286133c2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97397397-8d10-4c48-a45f-f7ec78b24227",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9112235-8576-4b44-b876-1eb120368d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27c747db-2912-46e2-a563-df5bed7e51e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321291e5-d2a3-4a99-ac36-ef9410aaa357",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08142e2d-86ce-4e17-a73c-4f8353033eca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a490812-a234-4cdb-a06e-f00d9c87b702",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39742b5f-9077-4e4d-9916-5f00adfe2eba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31d4382e-4433-47a6-b7a9-786a8317b7f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bbe59ed-0fa7-4c75-8207-9591766f6460"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4980ff8-afc6-4c83-b945-4376ce6fbaa6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ed71152-6e7c-4021-96fd-9c4975ade5f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf1ba8db-fc4c-48b7-a82c-8700132db34a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e3b4e54-0ac4-4ffb-bc70-920dbee4af9a"
                }
              }
            ]
          },
          {
            "id": "6054407f-89c5-49d0-aa4d-aa1f70c8caec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15a24ff0-9c5d-4633-9b2f-b1a43eef1350",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a069b80-2c3b-4bbc-8229-05fd63b67aad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbd60957-8995-4890-b04c-7f61aa8f717b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff79f8d1-fa0d-411b-a0cb-119c868fe526",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88723157-814a-48e2-8909-c9f8c6764763"
                    }
                  }
                ]
              },
              {
                "id": "1f08bac0-a2cc-432f-bde9-b4f96905103e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc72406f-0628-4a91-80b4-9e262182bf69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba122637-baac-4aaa-ba58-7131742ba025"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849767bc-64ad-4c72-bcfc-993a86a435dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a8e0072-7373-4e28-ac56-1b22e4292681"
                    }
                  }
                ]
              },
              {
                "id": "cc0f5664-2982-4447-9241-7744a3e89b68",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7972c9a7-bd3c-4a18-acb8-cdae0c44ead3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a88cdffb-83b3-466d-91e8-209bdd4431b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f26e87cd-466c-4bbe-8288-2f317a6395b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "698f7792-6309-4506-a228-d441dda3cc08"
                    }
                  }
                ]
              },
              {
                "id": "b70ce53a-8c3b-47d4-a41b-22460574ff98",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb8660e1-f4ed-41b2-9873-2b02bf7b8af9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86ae9ff1-7d14-42c3-b823-fe9591bbab07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cde62dd-6930-47ca-9167-d315d7ae8119",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "280f5597-32b0-4501-9060-4d6bf787edb5"
                    }
                  }
                ]
              },
              {
                "id": "2b07b9c9-bc3a-4d23-bc18-6177c27ee2e1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ce21802-f856-496f-9f5a-3181ada9f611",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cebdb502-03ca-42c0-9676-6be3b8d058c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff217143-a51d-402a-baf0-a192444992e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8b1c5d85-e895-4a65-ba21-fb4166229579"
                    }
                  }
                ]
              },
              {
                "id": "e9b3079b-7d8c-46d0-b44c-7ae095f48a47",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "515cc9ae-2236-49a4-99ab-3fdcc813537d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f896cd77-7376-4dff-87ae-0943dc590bbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40ce0965-e0e9-482e-8950-8cedcb360044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e189dfc4-ab28-495d-986d-5c385cd82272"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18d71ba2-4c9b-438e-a9c3-159fe33c8e67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b27b7ba3-3e90-4e06-806f-9067c8e0ed02"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79bcaafb-0e17-4086-a5c7-c593ac208cae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "669bf1ef-7cde-498e-9ec8-b4001132b65f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b98a1bf-7857-4f42-83a1-bc0ffa253f97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9c250eb9-0407-429f-a289-f8b2d0590bfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "017ed89b-140c-4485-840a-59c46287756d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "019fd631-b502-4dc6-9a51-8baeb22c45b1"
            }
          }
        ]
      },
      {
        "id": "0ff0e992-73e0-49a9-a9f4-f7378c3d85d0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "295ee9b6-6a26-48ed-a38d-9cf4994a4329",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de6a52b4-6c9e-4d28-bc07-9961dc811cc6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2ef0492-ed4e-4596-9ba3-3a175bad6bf4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e85a299-a9dd-4111-bcf4-94bc092e9ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add97a42-ac04-4093-9737-c14d263f233b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a0e20c-fa25-4a0c-b5df-0f9bec6115b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3034263a-bf89-4067-8c46-98b639baca31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ecf46b-93f4-4067-bcab-cf8f120d9ee6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a88d3b9-d138-4069-b5ce-1275da371134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37ad3e9-3c6c-4680-8260-5c9709603a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d46786-b768-4f73-975b-47b428a4b7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a5c9f6-ebca-4be3-94d1-ac86c292cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4b5be8-dce3-48c2-8cba-2741d9b7f441",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f28a02-3115-434b-b539-9cab850c57c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f422ca1-39c2-4d81-9694-4e49620e8bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec9519d-e430-46d2-9691-cd08c1b197a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8a5a54-629f-437c-bb3d-e5ea8a49c9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fa37f3-3188-4f56-9968-8312c9595c5f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08784bd-16d8-4103-97d9-be09382a70fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8906d9fb-41ef-4b48-94e9-078d9f9be0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f7a638-ac0c-40f9-ba9d-4559d8b2c719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "567cab57-6a44-435f-96e4-1b1aa9a2c8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47aca0c-62a3-4367-b6c9-4bd061c194dd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f666d7b0-b3d4-465e-9c71-6e2bcecc811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9da4e8d-bddd-46d3-b05e-d48723e6d634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a0f9d2-42be-43be-9f5c-c6b285f26dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09f116b-e76e-40f8-8209-b3778b475892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc493b87-c1ba-45f2-a911-28a27a882f1b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2401df-b573-4fb4-8d89-022451669881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bb633d-1b5e-40b4-a2ea-4e82a79f2666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67eb9a0-2d5a-40e2-8cbe-2c6b4f771436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee55733e-7f3c-4365-8e24-960a79348447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae75e4af-c134-41bc-bc85-9052fa6dfcf1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b88b17c-bd94-4c5e-a8ef-459e66c47fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a2cacb-4202-4f9b-8deb-9a86ef399b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f01eea-fbb4-4800-bfb2-3c58e2a3f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d07b372-0da8-429d-8c9b-301e6e43c13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50765a93-da64-4fc4-8de8-f01db1c2fa0e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2753b5-10d1-44c0-91d1-fd44eaea4209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75a85ac-7a9f-465a-b909-344c65f4cda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f275dad9-76a3-473f-a0bb-88b36d4eabe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d1c4d4-9ab1-402c-abe5-5ed52f8e4abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fca2b0-4a74-4b21-8dbc-8962b58fa9e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72358bf-7f3d-47e0-ae11-4e933987513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b67075-d373-4b78-9ce9-98aec9faac5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c050326-641f-4183-8024-d9b46b8884ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05deb80d-5b85-4d8d-82f5-2681492af1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f682c7-7d15-4ac3-b6ab-9c6d59fb58fa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bca73c7-8a85-4b45-8cf1-c9ccb5836035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed2eb06-a12e-4059-8f52-cdae1a2f4c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c951d54-ea25-4e77-a391-d658b278fd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9037d46-be42-4992-b322-941e864fb933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ec69f5-f85d-4934-b7d9-84a4dfccbf30",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252b1af8-b455-44d8-bb50-98e9f05ad15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8439f79e-b880-4f34-a4c8-9c0e59d6ee01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bd509a-2c3c-4b7a-8856-a44d2a453488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5d5abf-964e-453b-b8e1-6580d8e35060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970b9e6d-b030-4098-8012-13139c9c18f9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798a4249-e3b5-4cf4-98ab-7831d3eebd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e50fec-3ebf-463c-9d9a-11ae819ddfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c03f7f0-8464-47a7-b1b1-2c0ead515237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b694949-7c3a-4b65-8b09-9c2ba62c0d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c3c7d4-842b-409b-ac8c-c5257e9fa4f8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0b6ba-a054-4a2a-8bb8-5f04634c1ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dab7afb-007d-43bf-a67d-2b256504eed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf4353-a4f3-4964-810e-b6946ce7dc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dd7eba-5a8e-49c8-b59f-6c6840dd8f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5e3d8c-2c7e-4dcc-8869-a2d40c12eab9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385edec3-102a-4b19-bab5-543b460430d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bff754d-8ad5-4c68-9057-a932e3e8670b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19142624-f7cf-42cb-850a-e8814a8bf093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f0da4a-2947-4c45-9c31-96fb8761de7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23faba4-f22d-4c1f-b7eb-b27139752799",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72b7cd4-164b-40e7-bc26-c19d327d194b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372e04ee-e548-4b52-869d-e5ff71902f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b24506b-db96-456e-850a-bd3d91eb68b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ba3a09-c3c6-4f3f-b1a6-e704bfbf591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2934f768-bc27-4dd7-953c-c7da0315ffd5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d362c5e-d505-424f-9238-9e17eb233fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e29605-6511-43f9-9ace-9da5d4e184de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdb8492-0582-49c4-9330-3d7de4e9df40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0e82c2-b92d-4193-8c62-30cba76b549e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10fffb6-4e26-4b57-a756-15da795873a0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda2a394-1aa4-4e16-a1ca-1782a1cff3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81805a5-1670-4ba9-b6ca-a7524013bbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2a087d-2f9a-4698-97cd-d696c06ce795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e98d3c-0573-4c9c-a42e-55f86b2c90c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51bcd4d-2f31-412e-ad01-562c14eee4e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23af4ae9-b784-4b05-8450-051d9e096673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4f4b7f-4a7c-42d6-8881-46c6ce2cfe00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d09ac37-3b15-41d6-b847-b81302177a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f29843a-7f3d-4615-ab0a-cc28c8f2934c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc211b3-737d-4cb0-9b67-57765690384a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e5e180-405c-446e-89fe-38dccc64c77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dfbfab-5fc2-4e7e-ba70-5e3ede047f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396cad46-0112-4671-b500-bc8832a6f6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4d4068-8037-4eed-957a-a0c04608f0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fecbeb-e9ed-4609-a636-e7d60596724e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28073485-6888-4209-b33b-7ced3e7b8d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5518f9e8-4131-44b1-94a3-363808babf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab27b03-efb8-49b8-8750-fad9dbb4df2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db46e2e0-8891-41be-b06c-511e27e7d126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c954b66-2cc7-411f-b78e-a497269b3899",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd973bd-c45c-4772-aea5-a3559ddd9b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879adcc4-7bb2-4134-8dc6-d180ea457648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4561608f-f3db-4b6f-9e6d-1f41fbe86587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbed02f1-86dc-4c99-aacc-e8b8cd8cd4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9c67bd-a26e-42d3-adb6-13cf99518179",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1512f6e7-1141-463a-a9a0-456b4cdba921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10ff16c-6116-4623-939b-889122bb7d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eacbc14-e78e-473b-92e5-f15107ec424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2991c11a-32e1-4141-a6a5-e2fa3681c7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9834329e-2c6a-43a2-b10c-a444eb84e33d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951a5835-458d-4e15-964e-831158be9f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e35b6c-d3c4-4c61-a3fa-34cd0d117f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968754bf-2457-402e-bf88-b664f3d08590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d67b00b4-5b9f-43c9-b2f1-e2834999a8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a899dc4-f928-400a-9bf2-86709734ac94",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512b8e77-415d-4777-887a-f78759f42857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9bbe19-2b29-4d31-ae3f-0deb2d7c6e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed379d26-3968-4707-84f4-d7fcb2a6beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e82701c-cd34-4450-888b-dab5bb677e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8e3409-7119-4925-9f51-55ea73e405c1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd83e239-646d-4a72-957e-487c76d0ad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc550d46-4411-4351-bd8d-df17c59371e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f118e74-1fd9-4273-bc4f-db62e8bc4391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0cb74c-8982-4ed4-94f3-0d5b1ea509ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219b177c-eaa4-4bd5-a95b-bcf2614a42d8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c978d381-fd0d-4948-9b03-8bfc3fd10d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748fe93b-bd86-422a-bf60-597c6e8c008b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21415968-a54b-4e7d-bb57-693454b8287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d68992-b40d-4b37-a447-cf8f233482b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1403fa62-25da-4cbe-9e37-9642c8ed6f6a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d912f2ee-2807-4da9-b34d-e0b3bbddef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0836507b-f564-4b10-aa67-5d1c20e05e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cba4e7-6237-43e8-81fa-e8920caf62a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6480b39-fb34-4ba6-82b8-76bbe6fdd5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2f81d3-d58b-4823-941f-d26a1032bee4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ff3e83-629b-4058-bab7-d9b9bf7a6f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f24099-f7fd-4b53-aa63-daf018e9a61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e840e68-a991-4132-962f-ab21a3b62471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95f3ff78-4071-4f97-acc8-13b1d9a5240a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43ecc51-df0e-4d43-99e6-18d000320639",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed34b901-2fb5-48b9-9b45-2d810be1b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38903e55-8f35-44ce-99c0-c3b2d472a3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c69da4-d8c8-403e-a048-48342545c8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "677a1529-3bc0-4080-bfb2-de0c9b2628d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1dcb1-2e1d-4ae3-a323-5dd285276918",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94761b2-7f5f-4910-a1bc-346bdeec1396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd37157-062c-4239-8b16-a5e4009f5055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7e1d01-c768-472b-9ddc-266a78a8b2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe62e59-2ea3-492b-b8dd-b1ae4ccd7242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43478db8-7fa7-416e-9144-87c98b3c402d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2649bbb0-ae82-482b-ac3b-b785e1eb536e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2de057b-e3cf-44a1-9adc-70aaf7df6bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80760c9-89c2-434f-b8d2-f1462fc7c850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e382dc-eea3-4a7d-8531-214ae00bd015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dd8da6-4b85-4b4a-8fee-5693b68c7b54",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c4969-1777-49e6-aa79-3148c1d8f3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5f9628-8277-4d90-895a-89555fda7e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b63da4-6cce-473c-bb3a-d065c2dd11ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37dcb4d5-4fdf-4afc-8c26-9661455d7791"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4175a15c-e239-416c-928e-55bcb292359c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f66bbee-4b2a-480f-af50-6296c85c58dd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99aa071-158f-47f9-9f25-e80e591fda2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "316344df-1b6a-471e-abd8-c2f7fde75b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3343d938-3c64-4224-b868-23412697784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fda08728-931b-45ab-a2e7-9671d06c9889"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6ebf84e-a70c-46f2-adb9-241b21acb93a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ab67c24-cddc-4434-9957-857da512ddeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "264791a9-fa69-477e-9bcf-ca809fb0686a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d41b27c0-c988-41a8-a814-88be9e793a3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18549c0c-a210-4e94-b376-35a296968cde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9afe1aae-7635-4f4b-94f9-97a9a04ec356"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cd555cc-d7aa-406b-b7be-fb3fb38308fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "716add46-8e90-44a5-941f-994772e38364"
            }
          }
        ]
      },
      {
        "id": "bc0fe2b8-ae47-4ea3-ba37-b8751c3ea805",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "24415eed-e6d9-43af-a89d-df2d24a96424",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54329eaf-a50b-4141-ac14-1f963cb4ebec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f814f8dd-9c41-41c5-b6c1-7075be36c8bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195a976f-7fb6-4eb5-81ca-e9ad564ee304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cc1366-3f89-478c-9683-290a5510524c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45360f41-c4a0-4d2d-8d63-c52fa3b1dca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c73f3d-ea31-4846-9e74-aff520b10a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aeedc89-05e6-4acb-bb65-77a44687e6eb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039c3633-dc4b-48cf-ad67-d7cd9d19d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de38f0d8-7224-4f67-b161-0c9ccdb8cec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479593a8-8195-43be-9541-acadaad8e96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d83898aa-b8c8-4e54-b877-56e10e57a60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa8ff9-850d-430c-bc89-458badbccc0d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720e491d-add2-4bd1-acc5-5bc3fbea1b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cf9467-9320-4ce3-a67e-3e9b3d437aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c1ae5a-e6b1-454f-b061-8ffd19a8500b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec517e3a-dc9b-4532-9de9-8666b4fdaa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3117dd-b7d6-4470-8199-97ee8f17cc71",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9cff7b-d46a-4f6b-8718-21b4a33f2ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c5e041-a1ff-45df-8b4c-f915605c50b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab6472c-9647-44b8-917e-a390b4cb962b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e7c223-9560-4d96-b561-72cb8235a4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cb62f0-0054-44a1-b80c-fea4cdd4bb66",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b432f00b-ed78-4605-8fb8-4aacccaf4366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7085a111-4640-4990-96d3-e2e1dff151dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdf4cce-7109-47f8-ba95-b397aef856de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed4a72d-28d7-43cc-a871-ec836536e8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248d73ee-2f3f-4b01-8c5f-c222433fc222",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268224ff-ca98-4900-91f7-b7bbf7800e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1985178d-4ae7-4a5c-9f02-94ded9f4ee46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dbc54e-335a-42cd-a24a-6e71bf5d426b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e776814-875c-403a-befe-68b66a614e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce57f7d2-e2ce-498a-8ef5-c8f0b5369af0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c827fb5e-6551-46aa-ad3b-4fe429275d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe30848-3281-4f13-b677-796004afc183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e24ee27-9b4b-497b-a078-12f487d2821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c07e492-d114-4c2a-b357-bb63cdfa2970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc81a14b-02e4-41ab-a201-7833d7166a41",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056d1712-22a7-4b12-8c98-342d9998dd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9182c39-e11c-4422-8c44-243ef837416a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d825b397-033d-4878-aa64-c659046720dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0a2f2f-29c4-4f95-9871-05f8b2d43a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b522cb-a835-43b6-99b6-38c55f37664e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20bc8ab-8999-4eb6-a106-e178741049e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfbc64d-d83c-4c0f-82a6-b73144fedbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7373965c-89de-4c2f-95b2-a1219a48d6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab94023-2011-4a33-adf3-d1063342cf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b838b6-c180-490c-9df5-bc632743f94f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757dcf49-f21e-4b63-8753-484839a10cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61dc29a-a257-4365-9f3b-550987b0fbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd7a318-0d88-4652-be0c-5de0bfd2d998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad6d264-0a28-4378-a36f-6cdea964cdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2774aa-f538-4e95-b110-d90df2e6a36d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bed482f-b2ab-4e7a-a17e-44a6d12904f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba7a780-0c9b-484d-b6b8-7876a2762fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255df708-af31-480d-a2ac-be9d32ac93cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "15349dd6-f5e2-451a-a0cf-3e9381b2bf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8e3012-bfac-4ab6-a06d-9d0a21153ea2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb87bdf8-c10d-4251-961a-139a5877ed67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5adffe-2d09-4095-83b2-19abd315461e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d89a29-1386-4482-9d6d-a4d3b95cd27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bca0a13-2d8c-4b2d-bb29-abf6618189cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0475ccca-28d1-4b11-9615-8b7cfeb0dcac",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728c9e56-8d96-4e63-8abb-0021520333d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9a3494-c2a4-43de-94f4-df931c80683a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc055805-3eed-468f-9336-65b50d86e147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37d2c86-635f-46ae-99c7-d158e7a30fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32bfbec-23e4-4e92-aca6-7c01fe972de5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec29960-7c6c-4b92-ace4-9eb3f12c1b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabc84b7-bb19-4a0b-a46c-1e44939b2b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c117e933-5f55-4638-a2f1-84c516bb9278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a854dbad-aa66-450c-8561-c9294af436ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24775c3-60d4-4cdc-8896-5b0268442872",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7966817-f1f1-45ff-8854-3a4d19ead7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bd931f-201a-467c-a0f0-259e1abf7bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97029a2f-ee5d-4649-8be1-7b065c35a246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "935e1e35-c6ca-467f-97f4-d5af4dc3b10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8115e3-2bcb-4de0-b556-5d6218474536",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5d4e27-dc82-496a-8646-f5ccf8ce1708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab896365-db99-4820-bc1f-6968c1565ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f488a62-d49a-4185-ba6f-6b0e703ae0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebe98fb-b3a5-47a8-b90b-fcb136d0abec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20661a4b-4cff-4bc2-b848-03ae646a80af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0233d910-e728-470a-b269-bf222036adbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b04f4db-50bc-4027-8f79-705a247a9c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fabff21-639b-4029-a116-d90573db786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8f0038-ec43-46cd-bbf6-bfca5a5ab00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7950b0-695c-4068-98f3-b9070cb44ae7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84af7147-fc0b-4598-94b2-8d9a0d6ea0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7775ae15-2218-4646-9dd7-419bd2ae429d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f74cc4c-f81f-4bea-8ada-b68e8bf7b3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f426c1-9210-498d-8ef6-46aeff93ded0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ee2fd8-4c8f-47bd-b636-6f0d292ee353",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b38639-1dbc-4082-a14c-7bb252d489ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d03921e-cd70-4d6c-a68e-ea0cb2bec561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e59f01a-4bb7-4516-ac56-9154bc2a5187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b095b5a-3fc5-494a-b31b-9d2ebf9ecc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551cd265-6054-4bed-8cfa-a15222835bdb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea14437-72f7-4bd9-8b41-b4dcf7d21bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fedd18-af4a-4766-885c-c6d17e712b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981ab2f2-f848-4017-a934-59835ba89060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7c2e33-6a8c-400e-bd16-6c3cb4193b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ac9110-803a-4975-9d44-1c4dcd56a450",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed137dd-71e1-4aea-8cc5-61a979db9cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591fb2bf-fc8f-4bfc-b540-1e99fcb94e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673f87ce-eae4-42c1-8311-5b2cc022763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6027f8-b467-46c3-8d0e-57107130eb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e194bc1e-44ce-452c-aa5b-09df98f87b82",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f22991-2e70-44ae-acc1-04ec7771e818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2df2e8-716d-41f4-af28-ce8104983214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d73a27-75f0-4779-9d11-15e4f5a77098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6199f9cd-6e86-4262-b00d-33180e3418ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3d8f20-b05f-4c4c-8239-c102360de15a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dd94a5-f8c9-441f-a859-1df617c8ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906edb94-112d-4e9d-823c-99fcbf5503ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4048a786-15e6-41c2-942a-045d2fac5e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6cf04f-4fcc-420a-b03f-d08d04ebe3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55fd7b0-d8fd-4072-920e-e067fface636",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f675aeb0-a2e3-4eb4-88a9-3fc96b2f9c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc2e62f-aeb5-492e-ac68-28f07489ca79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48ddab3-d2ae-4e65-82e0-0858e3f0a484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8e1c9c-1858-4f74-b1f1-bd4542998267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cbfe4c-75ba-4689-9964-91cdb7b29c4b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92b1475-f888-48d4-9881-103b5f45edd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ab6b8f-a04d-4280-8a28-30960ea6cc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7c285e-474a-4028-84d7-61da9d5321f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1dba51-ecf0-4c40-8e6a-3386bcae2324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8788f01-5a92-4182-9720-6c078fd0e8eb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ec2b46-081c-40d8-b2d2-375240c80b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097e29db-af11-4372-977b-0624864caa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1f2b1a-6212-474c-9b96-10199fe194ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d026f3e-7b9e-4d3c-be9a-dd2394624f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf036af-5d22-4842-a51f-183995cd706d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1943aaec-6f5b-4a7c-afc3-8c55eaef2815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66edb62f-4766-4129-9a7a-b60e2bc07690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85727898-7bba-4030-a370-ebea10343058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da0eecf-2b1a-41a7-9b4f-d20933d37ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3206640d-0406-453d-a942-3c6b418aecb4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6362bc4-14d4-469c-a975-3ee9dab42ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1109a83-4ae4-4632-a7e2-785bda379a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10821f3b-db41-400d-84e1-75b263979197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f509c0f-0d41-4d50-805f-6223ed24cbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576606ad-08ff-440a-a448-a59713c1c7df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a24e56-e231-416b-b39b-3d910b50f20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc52be8-a558-4f03-a504-0e1f20244f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26ebace-8e73-4757-9748-fca280d87835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44319510-7d82-480a-8b31-171ff395f5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eb6cab-d4d2-4346-b0e0-0184ec5dc0b0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e65cb4-603c-49e2-bb8b-bb57e5f40e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0bea70-4136-4117-a0fd-17a4dfe00617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b67cc6-87a3-42a8-a3f5-1519edf27e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68cb35f5-3b6f-48dd-9740-917b15e235ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb60302-2452-4027-afe4-d654828c3472",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec61cdbc-c516-4c0f-9715-4255ca8ac589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df6c80f-59b2-455f-8256-71144fc84f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8795cd9-7bf6-42ae-8ec3-faa2db8ee3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab89ced-16c5-4bbf-ac7b-836c4db3bdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5c9462-f7b1-49c3-b1dd-43cd207fbb4f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d6b68f-c05d-46cc-8919-b8f77a3a2755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ead096-a891-4b1c-930d-0c947c754028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4259dbd-845d-4287-8a3c-d1d54eb8ff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08621aa-572f-4b9c-b0db-8755b3fe307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea80d01-ad08-44f2-87bc-e3677ab616d7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b24fa00-0bf0-4051-a4e5-4710dbcb7472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96574f7e-156b-49a4-a393-c8c09e1d1264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58689168-5d49-4b4b-b88b-5ac4510b4a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd744100-9f7a-46e6-be15-fc58d3f9862d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f41b69-335a-45de-ae2a-75346d7a9eb3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0588f184-aa16-4d29-ba2e-f3ad2252016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf3f519-6148-4545-bfe8-6ddc4cb8269a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92745f02-ef97-4147-806d-375ec943cfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45ed7e7-50ed-4a92-9e43-3239ab3c21cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5e8c0c-29b8-4903-bb8a-62bf72ac7129",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a73e325-4049-467e-bfe7-e1f8d5764437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe5f800-6da4-4c01-894b-af2b4238840f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90006521-ec2a-41c3-9aac-bd1efda5a30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa833375-4eab-4099-92b0-c4c01d85612d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58154426-dcf5-4e2b-bca0-da67328e08bc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69c61db-9e4b-4236-b966-207995a4c310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ec9bd9-a8af-4e99-96ad-1c852ab3631c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b858af-5fb7-456f-a4ad-9324c44a86b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7e9208-1440-4f0d-982c-d58135dd7b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527c31a4-fe6a-4a3b-90ec-d4c885042cff",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f44cda-965c-4ff8-bd40-c28405573043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b498299a-70eb-48b9-afc8-dcec64ca0bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd03607c-2794-4cc5-bf3f-ef14c7e35f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6fd58a-d1e8-421f-8562-f57232ede8f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed5a22fa-c1d5-4e5e-a2b5-a18995ea03d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "570e0ffb-6ea9-49ba-8e41-000559c52303",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0079f0f-435c-4a18-832c-4f10a713ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "876e0074-63db-4ec7-a81f-ed7c518498c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e96f334-bc8c-4675-b6ae-1e7d60c68f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec3ffca7-2a1b-41bc-9be2-9a2dc8178309"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "343819b2-642e-47ab-82b7-35ff5ce787a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e6cb4a-6583-4649-877a-259796499969"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06f0e7dc-6687-41d1-abe8-5f1927e7276b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d54f57c1-bdb8-40d8-8ac1-5e05a64fa0ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f59a4e4c-c94c-4279-83aa-cf5dbd29f092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d742b775-3048-49f9-a915-0b9b936f79b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1ab3442-049b-4f29-a748-90a06aabfb97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e691861-c708-4765-b46b-afc3488e6a38"
            }
          }
        ]
      },
      {
        "id": "091dddbf-f7c2-424b-9dfc-a44e54b80d7c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "41f47c7a-ab6e-4a0d-9c05-077bbf87389f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b33220e3-385c-4025-b0dc-0d65c4cd0165",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d98c350b-2b8d-4447-a742-93b8ec8a0e51",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753ec5f0-9722-4526-bff9-6281ebc70664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a94fee4-42a1-4a1b-8d64-7db2e36fcfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dd521a-51e6-4e0f-9c3a-322fe5a5cbd7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9939b141-4b2a-443d-91b5-a524b22a5275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb1669e-3195-47b6-ac2b-db7452d09828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66179a30-fe06-49ad-a493-9bbb496914b0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bb139a-c699-4fdf-aac2-f7df08ad86d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65766a76-506f-4df4-a524-86c61d23e214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f153f1-2072-455a-a643-b03092ecc266",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2586d92-3cf9-4adf-887e-de5a7870b32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6131cf65-0ba0-4fe0-a4de-8cc53ff8b880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabb6c85-b77e-475a-bfa6-00b3e65e0579",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d7daee-a411-4636-b5f0-e361d81712d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fead1a0-2895-4ce8-8890-093bd4887539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b2a7e2-f7a7-4ddb-a076-89b03559e4d7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8077458e-c8e7-4c9e-b85c-3b4ded3750c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcfb40f-110d-4b04-89f2-676dba0804c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a28ab2e-58dc-42c2-9245-f4c305daac98",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e607a99-018f-4762-9a84-119f1aa5f390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6818e9b8-c3c0-4fe2-a34d-b95636e876d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec1b34b-40c8-485f-9155-2475ada329c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7485dfa-4de8-43f1-a28c-2b7e0a16a0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010ffe65-a58a-4aad-a629-6d975ac97190",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b8fb1f-6afa-4b61-987d-bf85135a403b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a48ad8-8b82-4c9a-8565-c978a8c46be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5bc0f9-0cf6-468b-8fb9-54d79e781065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5829dd-47aa-4ebe-bb4e-151217649096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce04c5c8-8c55-419d-bb60-0a9056fc981d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e27647-371d-47e3-bc43-90a7e9919bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3af4cc-9f82-44e6-ac7e-8030015245b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce018740-7466-4dc4-ba19-8e33905c322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfaae16-ade6-4ee9-831d-fb3c178511c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6483c9c2-0064-4fb6-85f8-7a420aa302e0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc98dd4-a342-4d18-bed8-1153c87d4101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45895b00-0b04-4705-9f2e-4bbd83848286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83033f7b-f1c4-427a-bb56-9e6d1379c5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc194ec-9b62-4022-adf8-497f644e661f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a7fb78-8f5c-4d99-8421-8c0e59ccf5d9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcda11e-50c4-4423-ad0f-056c69d97311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8584176f-0f0f-45b4-8b6b-533ae1855a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d38cf9-0f4f-4762-951a-524446e34a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b075b5-ea5a-4539-87c6-65664b786c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25744d4-7e49-43a1-818c-52099f7c5ff6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3912555-bb60-434d-9bef-25d372f44199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd185f70-fd18-4237-a7df-7b1ad565d1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55d99cb-ad2a-4758-b3cd-655a318dd1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d97e4db-ab48-4a48-8c71-eac26de1e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff180a6-84c2-41fe-839d-91f502ba7735",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad4d007-341b-4a48-b98f-4369aa155d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299566aa-a26b-4cca-9a9d-46fd026712ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e676a75-f495-4519-8b25-4bbdd8fe251b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8898421a-41c0-4d5d-b64c-e5db9b9671f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0030345-1d02-4fcc-8248-9b93c4b76056",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7a0373-64a2-4b7a-9cc7-b177c7263187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e344e7e-115b-42c4-9e60-56cadbbba0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96fd58e-119d-4a46-85ab-49462fca74af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e774aa7-7df6-4ec1-bf75-61f7b3ad82a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a1b9af-6864-4622-a323-e3bb19caf370",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3743b139-72f7-4a37-9b21-ec3a9bcd18ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb89674-979d-4dee-8b7f-f63159f3a060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b6da94-8f34-4a7a-8758-f9010543ca3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9327d768-80c6-437f-9991-98289acb7cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabf3454-0197-4453-875f-b59a2b3c2bf6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de60bde4-134f-4bf1-a3f1-56a27b2bb15f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b18f9fef-1121-438b-a302-3c89c415d80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0cd4ab-6f1e-467b-a31b-869060a90f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14178ada-4df2-445e-b760-1c934cee2bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3bf7c9-3d24-42be-89af-bd028837a1d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3203c4cf-e50a-48a8-8574-e1359bf9345c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b6ba4a-98bc-42be-a80d-13cb84ff25b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3515cedb-0d0d-4154-a29d-85328f4cdd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2168ed-b2e6-4a7f-8a55-c267a8f55b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b28076-6848-46ce-97f9-810ffe8da36d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdde3aeb-1872-4d72-b800-19425a897902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c334c4-6d6e-49ac-a86e-a7a5907b9921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53980183-042d-42ef-9c56-628d628afb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4e2fdf-0a46-44c8-8e58-c225f4fec334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c661e31f-d648-457a-bcbe-31869aa43a95",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cae4db-5843-4cb6-9d19-ba67da3dafbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe40cee-7da3-4120-a344-a7c84d3b0e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c7557c-849c-4ae3-9bbe-f7f716b79f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2a7bbc-5694-49d3-9f5f-2564ac7bea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b16cc2-ef7a-467d-8247-307d3a37b8bf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4723dd3-eda0-432d-83af-ba910ede3004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf83664-00e3-4e96-9641-6eb5a7638f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed3a0c-84fb-402d-b116-83d19b1400e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579085cc-25fa-47da-aaa5-c132e483b282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e03fde3-af57-4baf-806c-daa68751a2b7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e1b05f-e899-49e1-bce8-8d34bfa68a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761a13c8-b23c-42f1-a08e-c0bf4baf1eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb597e2-555e-4dc8-9f31-fba6429b5e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c0d351-68dc-4f91-8f7e-597d8543bef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2720bd8-de22-4598-ad16-40edfa5ff352",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec730767-7d4f-4e3d-a537-0f591be82261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a960d596-8021-4e4b-940a-2ad89ff605d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0eb4d4-b719-4f42-8ba2-77668090aaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a112af-c6db-47b0-9e8b-e63051664601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5fbc32-5371-4f1e-b1ce-06bae2a5b352",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8514af1-410b-40c4-9dbf-9d7fd6b72a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d72f6f5-ce41-4bb3-8bb3-4c791bd0588f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3064980-806a-465e-82ba-a080593016bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c04090a-eacd-4f34-adc7-4cda99a3b7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f0ff50-2ea0-40ae-98b4-fdcb962cb4ab",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392e3c3-34b5-44ca-a984-f76f01c989fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514fdfb6-90cd-4f06-8487-412921f790ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb29b0c-c1bb-4436-934b-61b73dcff6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccbcaf8-b5c7-414b-9f1b-caaaffe5a88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125f6d53-24f9-411f-b4b4-f9fb9527701c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6a2434-6c63-480b-9f32-a6d9e74bc595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0b0c52-224c-457f-858f-5cf7032ecd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21ff335-f3aa-4dca-9705-7f5ada83eb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b038c663-e01e-4e6c-9aee-eeb707bf9f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab29bed-2fa9-44d4-bbe7-71b210e3fe34",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21f9c5f-57e6-41f1-9d3f-d489cc8b4d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab6d56cd-a590-4e0e-aeeb-2092b887b539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9cb286-419a-4827-9362-ad0bcaad4251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5794ba-8756-4fc5-851c-6a5e94d9f16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3d9d06-00b3-45eb-a1d5-56bdf2f1179e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f6012d-d145-4159-a1c4-af853cee4ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397888f4-5057-4a84-86bd-b49e040dc7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b26f1e2-04eb-4411-8700-83f73e3d85e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0e3ebe-39a1-4997-adde-e671941d71c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6785ae6f-c327-477f-a1d3-cc362a0d9cab",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6989775-0ac4-45c2-bd56-3bd98dc3d8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e6b04b-ab9a-417d-b772-2cb747b71033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655a64b3-f1b1-42df-8358-eb1fe8e695ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c5a193-1188-47fb-b89e-f881ccfc06f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddfe5c2-877a-46e2-9ecf-a185b5d00eac",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e57491a-baf3-4534-b8e1-c5fbf7059ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba626eea-eef8-470a-843b-e329803cf690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff536038-3606-4bfd-bf2a-5b995b04a58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25141c92-43d2-450d-a9d3-5244a2ed58fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d3a4c2-d10a-47a2-90ae-88d5de08b66d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5553493c-7e87-453d-99ff-2948e8a20acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e16d1de7-d708-4282-a6b4-c584c9b545ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d865eac-a5fa-4ca0-a14a-3a151106b0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde0cf48-44cf-43e5-92f7-b1de9cc917ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee9e88f-0554-4be4-af26-cdda8fe8f155",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba00a92-7aa5-4440-9e95-ea2cf624de9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bee760a-fc59-48b7-a562-a606c5775adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af63c2e-f1fb-4b22-8cc4-45e882e76a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cea9df-d3b3-4791-a859-8572ce268d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa89a7f-6fa8-412f-930d-65e611211870",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08450b64-9090-4cbf-b2d0-ccffb154d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e94a2c9-c334-4240-8ae7-b91fc4d8ad86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493de2e3-be43-462a-9e96-0610fd456275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd76df15-4077-4a88-942c-93a4fdf6ef6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03cb0cf-2aca-473b-b557-e1b8d01dd4eb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef3027d-fb20-4956-bd7f-226cea453865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae4a891-e44d-4364-8704-07b9a2417c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70d19a1-efde-4074-b1f5-3f5dc47c4277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2685121e-454a-401b-b1e8-dd264e5f0e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710997d0-03a8-42b2-97e9-2b961e588911",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde2d333-d24a-4c86-9709-f07516f1552f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19fe35a-fd06-4e73-808d-646db1d1b803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547a3f8a-2366-4327-a792-c9ce61851e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adb7e2d-0caa-41d3-866e-2095d24f09b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00508e8-4569-4b09-a9c9-bae3eca6abbc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e48263c-bcca-4138-a435-e7acacee25bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2861bdd-50ec-46f4-9e48-e9a8e266d048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e8fdee-9d5f-48fa-8455-a7ecd660b7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a119983-8dd9-406b-a04b-8c88ad73a4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a041607-f0d4-4334-ada7-64c178956706",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef33466-7243-49a6-932d-fccc8240cfcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f2a560-022a-4eaa-b75c-4e1ab162ce2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d19fe9-0f75-4772-a9c9-894fcb6269f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218f3a0e-dd41-4a88-a72b-40a8a248825c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292ca83a-3b09-4262-8961-5b13a39eac87",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d70859-27cc-4150-be42-ff6837652b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d73f64e-9d25-42e1-8981-0dc6c0700f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3566c0-da89-4bab-87ea-06a5845afcab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce3be2e-b08c-435e-aec6-22844f394cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677c81ef-dd20-4608-9df7-3fcdbd805dfd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5363d9c-7c7e-4e05-90d2-c2e1d0fc1d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc53e294-6d3f-43ba-b9bc-6932e08340aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176026ff-34ea-43cf-8559-49c204e6a457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b683bac7-02f2-421f-9cf6-6e0fb86a9fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cea2fb-0a47-4410-8780-e3813fb04fbf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5650ec-31e1-441e-8618-d9ca9710b05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697f7522-5b85-4127-b88f-c7970b6b23a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ca8d76-a2cc-4d72-862e-0632639d69ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff94edc4-a76e-4b3b-b161-5dd68084add8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f277b42-3110-49b4-89b7-4a689422f434",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbe2a76-2d21-482e-98f5-786a66df49eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed7cc1c-5e31-4289-84c7-93d368956378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8412e737-9ce3-4ba2-91a9-95b25285dd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7b8702-b8a1-4d66-af6f-3fae0cc687fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f53aaf9-7809-4802-87d1-7902691f8d43",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f602ddc0-c161-4b48-bcd9-1887c10f6dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d831d19c-e848-495e-9928-4d286bbd6419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8874a54f-d8e8-44a1-925f-3957bbcd9bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634b3552-a7fb-424b-9afe-f655b3e04946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73294abe-0cc8-43b4-b912-e3bb2e1f48b8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b26db2-25f4-402f-bf07-351ae575d92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363927fd-9672-4613-ae30-26a82ee0ff5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3144761f-daa8-4e59-b5bb-d595e55660fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e826ac35-0354-4e14-9b81-e2cff9c0e3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2170cbc9-d773-41f1-875a-09e531bb94ed",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4542e12-fc8d-4494-a677-51d5f9ecee16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a55fdbc-3030-4431-a798-573f463ab971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21c43c6-197f-4306-bc2a-7f3bc2238744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc0f4ee-1269-46ee-a6e2-a767a16f6969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206b5ef3-fe30-43db-b126-0f453be68f01",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409f741-0f4f-4d2c-b67b-63e11c7b5720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b79a286-346e-4782-85b3-7b36fea9315a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925bd124-60ba-4d1f-a6ff-6396f12d921a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf43a87f-3d6b-43f7-95f3-e825b0551663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cc23d5-2419-4a08-bf7b-d36968fa190c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8f5dcb-c108-4df0-b7b0-76f82313e35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57148af9-ce1e-440a-ba71-2d946a0932d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b258fe-8118-4de5-8218-182b1247fb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d0eea0-90f5-42bc-8c6d-a7d698982ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968578c1-ebad-411d-b21f-f7f5a96c3699",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d6fa91-5ea6-4631-8404-0ca515b4caf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024f4d23-7eeb-4cc6-b1b8-108f6977ec0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93112a89-7bc5-4a9b-9f80-00610b862fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4567ef0b-0db5-4eda-a4a7-5245d488e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eee915-6766-40ca-96e8-42eca2e7255f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466f1df2-2112-4cea-9148-b24cbca3194d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59508e42-82fe-4dc7-871e-8686a4202201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fdb86-8737-4503-b9ec-bab4f9e6426b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140c98cb-6478-450b-8ce6-4e3204e5a360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d52be60-2deb-46fa-817e-5cdf32eaef8c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111255ea-2ab7-4a0a-98d3-997bcb6feaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869b779c-66b4-4e3b-b563-f7b200bfe687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7593ef-597b-45cf-a794-82c895c36d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5ca13b-3cbb-4785-9d61-f03c44322324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4d4210-88d0-4d97-b07e-95bfbedb67a1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff61bb8-8d7c-4815-b463-a6d831811be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c28368-a9fc-4380-b807-b5179d99af3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809acefb-ac2c-4cfc-8d8e-6b65041ce92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f656cd-aae1-44ba-9893-3aad27855014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57282a52-5407-4c71-8772-4267d6a2d72d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d06143b-8c0f-4b10-846d-c837e3bc0ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8009be54-629d-42a8-b9b6-6abc27647dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6b9893-666c-4dc1-9754-f6dac4cf3e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77802f27-63ba-4147-9d5c-0636e6f95be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b98cc53-e329-4d97-9892-00b7fb6750b3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e8ee9-6ecb-421a-8bef-8027e047bad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2cb405-33cf-4bf4-a4fb-f1a085ab554f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6750616b-c15a-4ab9-bac4-8fdc040edfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6fc391-5f08-47d5-815a-4155dbb81089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2e89fc-5cc7-410a-9ed4-a016f070a446",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14aa51b-892c-427f-9ef1-edfe0f0ec00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291042aa-e140-4c9b-aa03-898f7fa77149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02800f97-0b3c-410c-811a-394ae6f48f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3644601-9499-464d-9121-64847b41b831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254c6132-7fa5-4887-be1f-d0093a5bd9ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e492f2-7248-4ef5-97a2-fbeef8342806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fedf4d-78da-41a5-b1d4-d882cfc472b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b545a546-e871-4cec-9f96-e4e2081a91d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af187c8b-4e6c-488b-b0de-2ab392e24b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410f3437-aca1-4489-8790-49dd4df65a37",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaacfda4-9e31-41bd-b131-94822b2edece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4026e6a7-7be4-4500-bfbb-f66df63b7075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee07f533-97ba-4f4e-9ceb-d5a728b0b752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b727cdef-970b-466e-93a7-0afb80e109f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dc4c1c-715e-4a82-8bee-c4eec2a48649",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffe67db-c45a-4e3d-9a00-c45d7b9ae3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6909353c-f4a5-42cd-bf78-30a22c92d00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ba5614-907e-46a9-b24d-ee2c4ffca777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6775c088-1fd0-40f3-966a-21b8be4a928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d7c8c2-3a64-476a-ab31-46f0049b4df3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff2e49f-0c91-4bc8-a30c-5f4fddb2840a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80e3604-b189-4656-b40c-0ef0b1eb9412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c13d9aa-242c-4e79-8f26-2e68ca293961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87a7f91-1f72-4a61-843f-65dc45139279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488eae57-fb15-4f17-9c02-678c74efdb9f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8840545-2a0a-400c-a5be-366a3e1ad0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7497e766-89e9-44b4-8cf3-11ebc589dd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6ecd7f-3efa-4c40-91ff-6f06a81389a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026c96fd-67eb-4f70-9e4c-2abe38246a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca29429-3b7b-4b53-a667-8fd2054b3a14",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7644f362-5bbe-4c8d-8f84-af4624e0ac88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a53e554-3592-42fb-aa3d-0c5cbad0fb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e0cf72-fa91-48e1-89c5-c598b1eb4710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa01cdc-4822-4d2b-99c0-8b32568afee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6b1727-4540-46f0-b493-e78933fe31d1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f15866-3239-41c5-adab-306b955e4d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5606e4c-be74-4bcf-a985-2a8a4c127ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f3fda0-a993-480c-971f-324f685ad68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfed212-16b6-45f9-97e4-2c3f02b5927f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ce57f3-db6f-44c3-88b2-0a59934818ea",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d341dfe7-f527-4d7f-b163-fa6443103684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a49af60-3cff-424e-8ae9-79670e58b42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aacfc7-96cc-47e7-bc9b-8617edf88651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18c2c74-6128-4d70-ba8b-57da43473ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187062b7-c4c8-407e-98c7-6b4ca9d41961",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5910c3-d59b-42f8-a474-30572e6d7241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171c6ef5-a73e-4004-8f34-9d8c9b1243c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ed6c7d-5fde-4a30-97c0-72391410c205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbffbc2-fd35-4ffe-abdf-17729a2a6ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1866d5f0-3521-4cdb-ad74-37da19557371",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634c34f7-501f-4b6f-bd37-efcbccabb76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19985f2c-f167-4c65-99e1-4fcda7e2eed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223acca5-4c45-4f92-ae85-fd3e1d5bccec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fc0b31-684e-43f5-bead-1f4863a55fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a129e1c-9ae7-4733-8703-c12c097bc6e4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30dbe15-61f2-4dbf-b595-1d14e217a420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06446d1e-2e44-4dd3-ae75-c63f11cf0985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610b4040-d716-4ae2-aa03-61a6dc3ddfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f1deb5-5e27-40f9-b1ab-d00fe6cbba79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5737889-8d83-476e-957f-3075940aae9a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab972af-111f-480a-91db-0b48aea8a3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a5aff4-211f-48fa-b96f-0e54d5060a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f34297-cbd2-40da-9a07-76be15a7f8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0c2744-4a6c-47c9-951a-7c6f43f2ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b818a828-9760-4490-a659-6f08f6842028",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0173462e-1200-4cd2-948b-5e8a0b544959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a95618-9fb9-45cb-8164-cc1c50af82f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39768628-9554-4613-a2d5-3e08c445ef63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748a294b-6a96-40eb-937f-e53337ff1b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492d117b-5d34-4152-a5f9-a00a0f23e457",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac45ff0-e9c0-41a8-a365-6f32c00a125c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ce85ad-0cf0-4584-baa9-a00564ae4193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892f12a8-a1a8-4ff0-94a9-6f39b0935a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0755a0b3-288a-43ac-a7c3-cb1c67784fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8b247f-d175-42e8-a8ed-c5369c7e8e20",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b728a33f-a875-4ce5-82dc-67a15f53ef24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecff238-6fb5-459b-958d-ffa127491a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700f8d54-716d-4577-b1ca-3f9e55842e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7484b0e2-20ee-4b7b-ac44-935be1db6f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c920a4e-68a3-419d-a82c-ab23079b7698",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32cb3b4-5f34-4eb8-9a37-df458a009211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d4f990-8ddc-4316-8abe-81fba43a4407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480a50af-f594-47ab-a19f-7127b5192eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d45f8f-b02a-4fe3-be87-4ccb2e30e7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ce75be-b8c2-4162-8656-945fdf8fc7a7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e5c85d-35c5-4fa1-b7d4-7f7c8586fde7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4219e604-7d40-437e-919a-0e4350e3cbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de0d5cb-6cf9-407e-ab72-32b4249ecf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab0529c-5f7f-4394-8922-a1cf6cf95190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd34b81e-1ac6-402b-be4f-e52852ade9ec",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4492dc0b-085f-42a5-a4b9-2d884e046ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8d0a28-c326-498f-83d9-a23ae40cdb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc15908-1e7d-479f-8a28-f700b385d31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e3b0ab-4846-4654-829f-61d518382932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15b09b1-7ef6-4da5-bd17-1563bc201217",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002a593c-434c-440f-b1a2-1898f949f134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e86da5-6785-4062-8886-deb9d0e900a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2614a18-3ce3-40e6-8161-767dd10705b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e20253-6c4b-4783-9079-7d258cd38e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7ae6b6-e983-4d0d-a51f-a3fb76e8e88b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dad9358-dbeb-41e2-8913-ce127adb207f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c7a698c-9748-4612-a9a9-f0f0c7feb528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631cfd71-ddde-48d2-b952-2e7b35e52507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9036fc6-abfd-4dd3-aac2-01f8dcb89f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9d7a6b-defa-40d2-9b0b-89faf1ee1f49",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b707bd-ab38-4619-8cde-ec9ff2db0620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d503f7-3e84-404a-91c3-99748e6d3cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f91e2e-fbb0-4c99-abcf-cdeaabf0235e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7325cf-2175-4948-a79e-7a84f8d74428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a2d335-4161-4174-9848-e5631650d9c5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eb2973-f6fe-4f71-addb-6e563204c223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0fdc73a-41e2-4af7-81eb-5092fcae6c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8b1eca-68ef-42db-a839-34753db4ede9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ab837a-f6bf-47e0-a405-e3198f440ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41275871-1def-442c-9e6f-d3a2bfbf05bc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1193df59-b906-4aa7-ae92-933580a6023e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf23ac63-ea86-4a3a-9c69-a41949e8fb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35279634-52b9-4253-80d6-d43564e593cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb559fc4-61c9-442f-af34-7dd6fb1bd3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c7f255-0daa-42fa-a256-ab2d3ec6729e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd511f85-d6e8-457c-9e60-4a0e9b004c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8f2945-94a4-48bf-8a20-da28443a5621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0321c06-2364-42eb-ad6f-90bd150ed69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90466e00-8c66-413c-817a-c9126fdc84c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e0a3a-4e85-4e74-bf2c-9e7f4363c317",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b2697d-c827-4442-aa70-3dcb7c3b5462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5106b6af-6e8d-4e5b-a277-48f509595127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc715cc-6bf4-4323-b8ba-2b4889fa1e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38cd0da-e7aa-49cf-922f-58ab037e2641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e343fd-fe78-447b-9750-4dca97781435",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d4a8e2-b8ba-49e0-958f-8f2aa9e737aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22857a72-021c-47d5-8ac1-6bcea112cbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b9f8f7-bf7b-4d87-88e6-8153fbe4f2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296ffbf4-ed0d-4038-a235-ce0383773e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2302760a-a276-4661-894f-6615c5cdeb73",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e573c8-ea38-46d4-a949-66a2068fb85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af615ef-02f7-4737-a033-4319751f9ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad7f4d1-d76a-492b-bbdc-e6be50715f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb58659-3490-491f-ab90-fcb9b6910dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad58dde-b0a9-4833-856f-32e17620b4ea",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af5bbeb-b29d-4ac7-944b-2f5c803a0fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f634fd4b-8970-4365-bf0c-7b05aab3df0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a6a965-778b-4281-a001-6b28e6823905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87f9601-fc0d-41c7-85a6-8c7206456e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a308864c-a28b-45e3-bfa4-5f3d27cd0808",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a41782-93e9-4f41-afaa-fc9e72807d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1644a2-b2eb-4b20-98bc-705864a76c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3af690-fbe9-4f61-a06b-357932118fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bba8b5-87a2-458a-84b8-d967934bea1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315580e7-a80e-42bd-93d0-f32607fdcb65",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208c5010-2301-4459-97d4-ffc1c8302506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016a9171-7cf6-4c81-a9cd-bba4a0d64b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf616a3-b5f6-4f00-b0e6-f36f949fed4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b035be-e9bc-40a9-a863-f1b11e5a7b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aacbdc-4b82-4455-aa2a-0d00e1237081",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14080d45-e05d-4a7e-8eef-5d1bdf5c7742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5902921-172a-44b0-bd87-c0391e403064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157faa4c-38af-4508-a3e8-2a7fa747d0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070ed898-0fe1-4430-b9b8-54c54ceda939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bce071-4102-433d-8b6d-78d6532230d3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c594a279-d140-40ab-90be-b245234657fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe870dce-a54e-49ed-8cf3-1f5461767acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d915fe19-7a51-4a65-ba4e-e922376fb87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e6d881-fa3e-4ead-8151-f19d7cab40b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e73bfb-6e42-4712-a13c-81f1d68e0e91",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e88332e-fe84-4acf-8ad0-0447b698fb07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823318d8-7a75-4e2a-84f9-689145f3782b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753d23ed-ad7a-4a54-a254-485e97b67205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7511cd7e-0aa7-4f18-ab7b-db67c1cf1d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b20d6c-e1f7-4d98-9a53-44e0eacd33be",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c2316d-9c16-44cd-8ffb-47bd2d9e6cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b12118-5dcb-4e3a-834c-0e10247b3f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66dd7a0-e4f2-4e21-a8d5-11759a299832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d05577-f52f-489c-84b9-7bfd7a5dab94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6b4952-d9c5-4405-bef8-c77cc895f97e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c3c2bf-1999-4925-b38b-36da66519fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0779f0c-dec3-4113-85ee-47901ae4eb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43265fbf-80b4-45a9-a848-366d038f1aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa2a737-a697-43f9-9c94-0f1cbae52437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822d4190-1504-4d40-a25e-a6b27999176f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3248ad9-1e15-4fd4-9c57-464bbc6da3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6014190b-1b0e-4d23-85c4-064cf1c609eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fb473e-af7a-4322-afda-f6f647181f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ba2572-b18b-484d-b2ed-8e15861f1e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e837199-007d-4e6d-b766-0b6b95dfdb98",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6cd792-9ea7-4309-a411-a74efb853f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a9d7718-7d19-462a-aff3-ad1a4d8de1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c198b6ce-2c26-47ad-9ea5-5affed344e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bda93cf-5eaf-440f-a309-74b914c73561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdfa126-47a6-4a75-9120-cb6135f4a6af",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e28c657-6f7c-40aa-84bf-913f3723e8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de5122a-23f7-4661-b132-80bd3abd4d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca2ee4b-a880-4a53-8f1c-4b46d79d0489",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6521ef93-9dae-41a4-8c1a-2cc7cfd5b57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f4a31b-8b16-4363-ba2d-ddcd3cecbb79",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9689d2-90b5-4194-bc9f-3e476fe88cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "834667c7-a2c3-4f53-a748-7125097b93cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1110ec-2e05-467c-92a7-2ef49e71052f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ca87d1-0aba-4f00-8e72-aaa95c2dde1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fced86-0abc-4052-b6e6-1c2cd634ca20",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218a0b51-d2b2-46de-917c-0fc01a17d941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b97976-10bb-456b-b4d8-03be5ea3f4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5833beb-ea1c-4f61-9455-cbd803bb7790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e979c19a-b651-4e4b-bd90-dd52cf3ea3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c024f31a-46c8-4461-a772-6a0160befd4e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f2b208-9d3d-47d8-9236-ff4fe78cb1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5c2bdd-62b3-4038-8c04-47119cdd56d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caefc6b-d73e-4f7c-9f44-f6a117afc1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c98b5a-2942-4055-a3ce-97e56864a22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9c6505-3504-4a15-b8b0-7d35d7f021c2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be85e38b-d1ad-4e46-b1c6-1b7f68f50526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133f3c35-568c-4268-856c-f7ffb6759693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56e26a6-6984-446a-97c1-c9a55bb2e6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789c7121-427d-4387-b534-508342d74e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde1ca9e-fe60-40f8-94fe-b181cc219f56",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b928ca8d-288e-4219-b50d-d65af7ba9ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97350aa5-9bad-4a54-be25-081f542de9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b07f455-5047-452d-a14d-fc408336788d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc0bfd9-07b4-4dab-93c9-14651e2b9e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9794f1e-973b-45b2-ba53-2e9a58c171e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a31589e-a1a0-4a85-893b-5c8e14f44886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f575a436-c321-45b5-ad8d-e432415d56db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361af610-59e0-4048-8e5c-f1a7ec38613c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d70ba0-7573-4ca2-b728-4a52c77d859b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1102ec56-2737-4bac-a181-8e98b1dc1bee",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482ed484-3896-455e-aebb-78f6d29ffe41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e442b5-bb57-4074-908c-d51bf378a314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae81dbf-ec66-46ea-b374-e713cfc691d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06fda9b-361a-4805-9455-a700273685e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc3b9c74-9efa-4c7c-b20b-bfab84a3ed2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a996c5d-748f-45d9-a03f-cc14d2ef8f0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "347b806d-4ebf-4354-93a5-fd3f3eed814b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2784fe6-8cf2-45ff-b033-b0c039ca9e7a"
                    }
                  }
                ]
              },
              {
                "id": "75478375-b3df-43f0-b2eb-71ade7aa24f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c27a58a-949a-4959-93e2-aac8d21d9a19",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebd3992-5371-48c6-943c-e1351c96690c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1fd3fc9c-720b-4b02-87da-ae885e7a7e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbcfe4c-3253-4792-ac51-1be3b40c5168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a69ad854-67b1-4ec4-b763-d08a428ad5cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1a146e9-ceb1-443f-b82d-f9546a8881a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27a40ee1-abb6-46d2-9517-ee0a00c1c6db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bf1d01e-16fd-4e40-b3e7-bb30d1db3bf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9543cf84-9a72-4ad3-b8f8-4fad09284622"
                    }
                  }
                ]
              },
              {
                "id": "5dafbcfc-1e34-4c2f-a519-2c74e092065a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "88574272-b91c-4542-a654-13c0b9c78f9d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab4b19a-5844-42ec-8fae-310a2deddf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c3344441-e846-4a01-af0e-64e1508b3e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d34659b-1474-4f9c-b8df-5c5d6cf0697e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b170182-1719-43f2-8c62-9379f25b48b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24c5eb5f-d4da-408c-87df-c3c26554bb1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "618b5a8f-3dfd-496a-98af-5f8646730264",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49540ba4-72a8-4ca9-adc3-78eef9153357",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a57d14d-2ec3-459c-b768-81eda5e690f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb749b1e-bd6f-483e-86fe-9d4d035ff290",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77544da1-ea84-4b44-89da-496575f863b4"
                    }
                  }
                ]
              },
              {
                "id": "424efcb8-05cc-4098-97a6-65504d1997bc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2af344e9-cbf3-49a8-8f06-55da8870a1b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "43c3520b-61e0-4f22-ac68-b47b61137f4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f34bdd2-1f32-4cc3-9fa4-4a8b828b059e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e4e49f8-36e1-4329-bbcf-d96b57328383"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65d6367f-15c9-4bdc-aefd-e573541edd9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "afd06333-651f-441a-900b-1c27fd5ae2bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69ec6f78-4b8b-4d0d-9241-e704fb2fb716",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f2056a1-d529-48aa-a29c-9804d5bb3b37"
            }
          }
        ]
      },
      {
        "id": "0138e696-e5ff-4f28-812d-7e1de6c0763c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "de11a57b-3025-4117-aa99-df24f221ac7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4f8a0a2-449f-4c98-90c2-0162192ff0a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4787bc4-8e1f-4c23-83da-6d06432f3b9d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db32ba7d-b830-42ec-9a71-47efb00f826d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "925d1bb4-7bdf-4774-ad83-2f8be8be21fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f182f4b-a9f8-4029-bf9a-d084a6674fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50bfb90f-ffeb-4f5d-aaa4-3e8bfa322d6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e66a4cf4-5dd8-4439-905e-62239daa21bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45b422ec-2f46-4c0b-a88f-d9d8ee11ef38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2663891a-53dc-4c71-8bea-f7ccb5dc29bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80882f9f-9c77-44ee-906b-2ca5aacffe41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c6d9cd8-ebfc-436d-94de-dcac9c719cd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "93e0109e-df1e-4bed-9405-04314de6b7df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c62fb6f2-c75d-4d35-aa3b-acabd0835a25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c54a27b-aef1-4c32-9350-8595bd65a4bf"
            }
          }
        ]
      },
      {
        "id": "98cb49d3-13cd-4b32-aced-b7d0be964aa1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "48346928-6dd8-4c6a-b1bc-7390477dc4a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c12c5e8-cc63-47f1-85c2-914661b3bd0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fa2d3bf-adf0-4a8e-a13c-2d1c715bc390",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00627f2-5fa8-4bee-8168-ee96504091e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8088b3e-538b-4254-af14-c586f9955d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8578aa3-3fb3-4221-b33a-36a73a32f559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04f82a10-9f00-44b3-aa5d-205afd22026a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d35a756-0fe1-41d8-ac0a-f6b1c3b6f3d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a888a9b-660d-4c29-b798-75c612a1c101"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abb66412-d76e-4be8-97a1-649d4a9458c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8786eda-af88-4524-b47a-333ca6350d10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "258841ec-94b8-4852-b8ca-906efcbdd322",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b7bf81b-d2f8-4545-af1a-d4d74256e97f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcdcda7d-d7be-41c3-81ba-53c0edfbfe22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a67620e3-d432-4a98-b4a6-152538b5a5c5"
            }
          }
        ]
      },
      {
        "id": "0b246f0b-c219-42b5-b719-6ca4445d8431",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "48ba99a5-2421-4dff-a3fa-e4cc7ac65483",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0e4f890-1566-4c84-b970-b4b61cdd73a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbbe5100-117b-41bc-a662-90ed4b134920",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0648f375-fc52-44e0-aa38-cceb188e5502",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f881a6f1-fa6a-4564-aa06-f0bab11a5cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3bb50f-4a4f-4f5b-9c23-55d551ccb403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4a8eb5e-e918-4e6f-92d1-65ff4bcb3515"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5baa7084-8c28-4f7d-af8d-c06dad05dd26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1897a97a-cbd1-4329-9099-1941f81dff9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e010835-1a3f-49fe-8c6f-27f8c6db2c26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b749a855-5a59-4379-8c18-037eaf93f57f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce979a4b-df34-4293-9863-953d3f86edbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c271e587-12a0-4a9d-b3e0-f31c0c20869f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d18f96f9-31cb-48bd-9d68-eef9290771ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afcfb5ca-effd-43d3-bd04-cd03aacac21e"
            }
          }
        ]
      },
      {
        "id": "733644ad-31f6-4285-8e8b-703d9bcf933f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81f21aa4-f03e-41da-96c8-2cc8c9d90a2b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb27b3a1-f3de-49ae-9043-e4f4e4d98192",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2d5fe591-95b1-4f68-9f6a-4805042eb01a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b080249d-15c2-41ad-948e-3d7e2ac6309c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "525bc357-05b7-4d21-b013-ebe18e7a5cdf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.954225352112676,
      "responseMin": 3,
      "responseMax": 307,
      "responseSd": 21.74697687664101,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697502850988,
      "completed": 1697502869001
    },
    "executions": [
      {
        "id": "f20c5982-56a9-4c2f-be32-bff9cef55cde",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "755d65a6-c772-44dd-9c96-64b9b3aad957",
          "httpRequestId": "234769e4-f8f9-4c4d-a361-fef7a92f6c91"
        },
        "item": {
          "id": "f20c5982-56a9-4c2f-be32-bff9cef55cde",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2a569f89-1593-43d6-87d0-a99c3c9bdfe3",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "97ba6327-d3e0-4d5c-bc9f-8ca6873a5a3d",
        "cursor": {
          "ref": "03b87051-444c-4e1e-8091-07bc387eb9a2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d9ea9f42-9488-42d8-894e-a0e09563ffa0"
        },
        "item": {
          "id": "97ba6327-d3e0-4d5c-bc9f-8ca6873a5a3d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "85cda740-ebd5-4ce5-9d33-986205a79488",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "d420cad3-b728-44c8-8ff8-d18c6ec1df33",
        "cursor": {
          "ref": "145c4840-b711-4c97-bbb9-1260d644692e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "20815ce6-9145-4ecc-bd2c-0fe85938d623"
        },
        "item": {
          "id": "d420cad3-b728-44c8-8ff8-d18c6ec1df33",
          "name": "did_json"
        },
        "response": {
          "id": "5be3025a-45b8-4afc-a34e-74387a19f192",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf864e6-c5aa-4b35-9097-b53d708eea15",
        "cursor": {
          "ref": "154de575-57d5-4029-acf3-e018e7315318",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1da82f7-5f22-4549-b2d3-4550cbecd73a"
        },
        "item": {
          "id": "4bf864e6-c5aa-4b35-9097-b53d708eea15",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ab2a6bd-1061-45f7-8d9d-807662ce1748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf864e6-c5aa-4b35-9097-b53d708eea15",
        "cursor": {
          "ref": "154de575-57d5-4029-acf3-e018e7315318",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1da82f7-5f22-4549-b2d3-4550cbecd73a"
        },
        "item": {
          "id": "4bf864e6-c5aa-4b35-9097-b53d708eea15",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ab2a6bd-1061-45f7-8d9d-807662ce1748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d5a2d3-bf30-46da-a05f-1e145194c056",
        "cursor": {
          "ref": "5e4403dd-1f22-433f-a848-5850b2f5f549",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "121f6061-57db-4f79-b758-e6e9838f6dec"
        },
        "item": {
          "id": "48d5a2d3-bf30-46da-a05f-1e145194c056",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "467aee25-e18c-484d-bab3-9c6585e3a800",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e26c59-8662-4834-8f7d-dd64b13a2230",
        "cursor": {
          "ref": "4ab6b55f-5576-44c2-9d8f-c5c764208fbb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "85436f46-9b0b-4da6-ac60-a4d41d116fd5"
        },
        "item": {
          "id": "79e26c59-8662-4834-8f7d-dd64b13a2230",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "16e01155-4a31-438b-862d-7af21546e40f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa95400-e2a0-4b01-9efd-829fc273e8db",
        "cursor": {
          "ref": "00840b50-ebc9-464d-8afc-aec19ce424db",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2527b833-ae2e-4eb3-82dd-29deb00560c5"
        },
        "item": {
          "id": "0aa95400-e2a0-4b01-9efd-829fc273e8db",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6b7178b6-03b6-4a64-a399-370424adb41b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b04c65-0199-4dda-bba9-63e5e1c9ff13",
        "cursor": {
          "ref": "b7e3978b-0c76-4b88-849a-b99a019bc658",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "154c31fd-080f-43fa-879d-7e7e06bd8cb8"
        },
        "item": {
          "id": "20b04c65-0199-4dda-bba9-63e5e1c9ff13",
          "name": "identifiers"
        },
        "response": {
          "id": "cfd02f79-49de-4db3-a00d-241f5e3701e1",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb13e2a-af5f-4695-8b40-647c03a7bb32",
        "cursor": {
          "ref": "1f11235a-7829-4ed5-b2aa-6dfb14ac3877",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "640e3068-544a-413b-8823-1d100257afc0"
        },
        "item": {
          "id": "bdb13e2a-af5f-4695-8b40-647c03a7bb32",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d298c64f-dbb4-4f8e-9b31-982e9597f8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0203531-da8c-4fb4-ac1d-24e863caacf1",
        "cursor": {
          "ref": "0d0f6afa-127d-49d0-8cda-f8318720efa0",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5f6d03de-48d5-44ba-b94f-58779fb7d758"
        },
        "item": {
          "id": "b0203531-da8c-4fb4-ac1d-24e863caacf1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "daa5617d-9532-43f3-b1f2-a5fcd5ec56c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8818f16-ef40-4edc-8531-b7b1bd1900ec",
        "cursor": {
          "ref": "f9a3ead7-148d-4fdf-b026-e64ecc43bfe7",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3b394824-a91e-4d01-9559-1b3d79c26aa0"
        },
        "item": {
          "id": "d8818f16-ef40-4edc-8531-b7b1bd1900ec",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "febf4421-e8e6-4b6a-95f5-77e05b2948c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e19f7e1-49ad-42ab-8a32-c24fa808e24f",
        "cursor": {
          "ref": "fbc7888e-46f0-4ca0-95d2-30071c69f5b5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "76556c9d-b4e1-4492-a393-e5e69324c80d"
        },
        "item": {
          "id": "6e19f7e1-49ad-42ab-8a32-c24fa808e24f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0a93a482-cbae-4499-8fb6-7ab16f99e3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2183d28-707a-44f4-a556-bf736074f3bb",
        "cursor": {
          "ref": "9868cc3a-e52c-49a3-984b-20be17413d0c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a026a30e-e1ec-4560-b0a8-22cf8db03162"
        },
        "item": {
          "id": "c2183d28-707a-44f4-a556-bf736074f3bb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cf3b1164-42b1-4a79-a880-e5912ca7870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95c821-24e4-405f-9a2e-9fc1c4613cac",
        "cursor": {
          "ref": "8f174e88-d220-41b0-a7b0-30079835ca18",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f33dcaba-6108-4eb5-94b4-d566b6e92a80"
        },
        "item": {
          "id": "db95c821-24e4-405f-9a2e-9fc1c4613cac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9acce103-7040-4afa-b144-4925f3d3f1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb820da-2ecb-4192-90ad-49b08c18d25e",
        "cursor": {
          "ref": "0fe9f6f5-9261-4706-a7d1-9d0e073d0c20",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6deb5263-0376-45b4-85ef-eb7de5bdb48f"
        },
        "item": {
          "id": "2cb820da-2ecb-4192-90ad-49b08c18d25e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cf388db2-faf1-4881-8bf6-da43c259df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ebed14-8e6f-4ec9-a049-744979290448",
        "cursor": {
          "ref": "27dceb01-6381-4117-9dd7-65c347ade2bf",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c60abcb1-b4b1-41a2-83a8-56e4d536747d"
        },
        "item": {
          "id": "10ebed14-8e6f-4ec9-a049-744979290448",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e5ee9d89-69fc-4855-88eb-cb22fab2c547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8529f5d7-b05f-4d5c-acd7-a8ed8beb49e8",
        "cursor": {
          "ref": "808ed5f4-9394-41a9-ade7-f58f6f1c5baa",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9f9e77a0-031a-4dc1-a25f-2a01eac7e637"
        },
        "item": {
          "id": "8529f5d7-b05f-4d5c-acd7-a8ed8beb49e8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d62d376-b2ce-48bc-a241-2f642851db26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4cbc56-83b5-47c3-aa3e-8925901ff982",
        "cursor": {
          "ref": "361f9cce-149d-4cda-885d-4d433626983e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f7d417bc-0d4d-46fa-813c-adcd2bd41691"
        },
        "item": {
          "id": "ba4cbc56-83b5-47c3-aa3e-8925901ff982",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a9f591e6-8bb0-4232-a06f-6f0a093602aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9311356-3ad6-468c-9d19-6475c29d9522",
        "cursor": {
          "ref": "8f520389-cfdf-4c92-aad7-ffeba9f87ccc",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2afe2ba5-ee5a-40ab-b137-522036e2c268"
        },
        "item": {
          "id": "f9311356-3ad6-468c-9d19-6475c29d9522",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c2709bd2-47d8-4c13-8333-4afc7015e31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2be2d2-f649-4df1-b563-1a6b0b6a4c02",
        "cursor": {
          "ref": "f4fbad52-ade4-4cc0-bb1c-6a7890b6ab35",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c2a571d1-1f8c-4afc-936d-e0d1ad6b9f6a"
        },
        "item": {
          "id": "dd2be2d2-f649-4df1-b563-1a6b0b6a4c02",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b236913f-095d-41be-99f8-58121da55ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e217a9df-f966-4b05-a196-da78c9048715",
        "cursor": {
          "ref": "60ca2e21-c038-4966-9c79-a3d218e6e0b7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aff9ebe4-3501-48a5-8e41-705ec9ae572a"
        },
        "item": {
          "id": "e217a9df-f966-4b05-a196-da78c9048715",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ba662c53-c3d4-4188-b02d-05562ccdc8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c705a10-b2f0-463d-b60a-c9babc652e58",
        "cursor": {
          "ref": "fea808ab-375d-4216-ac4e-96b10a11ebda",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4daac1c3-4271-469a-bc6f-32e314d781ca"
        },
        "item": {
          "id": "0c705a10-b2f0-463d-b60a-c9babc652e58",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cd77e11e-482f-4c98-96e9-59f1a0a4a350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23dfa36-37d6-4ec4-bc8b-efbf20c9a06b",
        "cursor": {
          "ref": "6398a0ee-2267-494b-ae97-7a2b12277e71",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3f7a92d5-82c6-45db-a087-e7817a296c2c"
        },
        "item": {
          "id": "d23dfa36-37d6-4ec4-bc8b-efbf20c9a06b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4399b759-d781-4abd-be5e-17ef66126092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f0f1b6-4107-4760-8f65-1ccc16d4f130",
        "cursor": {
          "ref": "e0cf48eb-ba65-41a2-af74-5bead59a2424",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8f777aba-974b-4b59-b85f-a4c04b2c7381"
        },
        "item": {
          "id": "42f0f1b6-4107-4760-8f65-1ccc16d4f130",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "017c3258-0bd0-4a58-90b0-62114bd3372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4751ef02-28ef-4154-960d-b8d00cf68d8d",
        "cursor": {
          "ref": "a91def55-8d93-4e10-8e2b-2548ccbdb250",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6f2a87a5-0507-4328-b410-84b09479593c"
        },
        "item": {
          "id": "4751ef02-28ef-4154-960d-b8d00cf68d8d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "171be119-dcb8-4460-a569-8803cd510da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7784da47-227c-4b5d-b42a-cc8dae0b4804",
        "cursor": {
          "ref": "674f8f87-68c3-42a6-a04f-4d50b27aad9e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "52d9653e-33c3-4681-97e1-51e6b50dc402"
        },
        "item": {
          "id": "7784da47-227c-4b5d-b42a-cc8dae0b4804",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "319eb32e-9124-4eaf-85aa-908ab6dcc57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc81b71-32ca-4192-b980-6e31e672d6cc",
        "cursor": {
          "ref": "686e6388-dc7b-4e89-8cac-5f1f4b8c7338",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d66f831c-3aa7-44c3-9154-d105c4e12f51"
        },
        "item": {
          "id": "adc81b71-32ca-4192-b980-6e31e672d6cc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c8c5f76f-3692-43eb-9be2-d11157f56d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c601a-9f53-4540-a5db-a236f3264f23",
        "cursor": {
          "ref": "4724849c-bd40-4ec2-b1a2-d56f72b6f51e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c8e8d63d-4da0-406c-b551-92bfd10bafd9"
        },
        "item": {
          "id": "822c601a-9f53-4540-a5db-a236f3264f23",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "034daa22-16a0-4ebf-9580-3f80da2048b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1877a1-10be-4ffd-9125-630ae4fcd1d0",
        "cursor": {
          "ref": "651dc86d-94e1-4460-9cad-a73d8925070e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "96ca853b-1faa-487f-a5cb-aa60ead8970a"
        },
        "item": {
          "id": "af1877a1-10be-4ffd-9125-630ae4fcd1d0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b2b04da2-48c6-4215-92b8-60452fd2d136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b634ba73-47a0-4498-b03f-65dac54e8cd8",
        "cursor": {
          "ref": "62d43cae-ef41-4f03-85a1-fed66d310752",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3a34d2b4-bfd1-40fa-a974-4d15a44ef21e"
        },
        "item": {
          "id": "b634ba73-47a0-4498-b03f-65dac54e8cd8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1807972c-2c61-40eb-a910-44a71ed45b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c0c5ba-698e-42ce-880c-2712baea6db3",
        "cursor": {
          "ref": "9e4eaf29-23e7-46dd-be2a-a116feeace7b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b43f7b4c-214a-4dc4-a453-a8a484037586"
        },
        "item": {
          "id": "89c0c5ba-698e-42ce-880c-2712baea6db3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aa90ea62-bbd6-4f17-a274-c7c9928d9830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ac81bf-06b4-4f5d-8f2c-eb3221f0dd14",
        "cursor": {
          "ref": "68b117be-4c4c-48ad-babb-a6de4f77f2f0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0577d9ab-a30b-44b4-9f0a-ebb0a20975eb"
        },
        "item": {
          "id": "96ac81bf-06b4-4f5d-8f2c-eb3221f0dd14",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "51470803-af39-4a6c-bac2-4c401938dac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504fc727-4131-4a1a-8b52-17ff045004dd",
        "cursor": {
          "ref": "29fe89ee-a473-4f44-b732-e6777a971a4f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1417efe3-0185-46d9-bf5b-3c5aa8d0a0df"
        },
        "item": {
          "id": "504fc727-4131-4a1a-8b52-17ff045004dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f383480e-83cd-4200-8181-27876f420336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0ed0ab-5047-4668-8afe-9dfdd4cf088f",
        "cursor": {
          "ref": "5d31bc1a-59c5-4868-bb3c-71303c03dc93",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "89eeed23-6160-4624-8f18-e65100afe60d"
        },
        "item": {
          "id": "cb0ed0ab-5047-4668-8afe-9dfdd4cf088f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6903e99c-4ed3-4315-b5dc-899c25fa8dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee95ba6-ad00-4659-b02e-92ba8b133c54",
        "cursor": {
          "ref": "c3210630-dcfb-44ea-ba00-851d79f758d0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2e945bc9-b38a-4fbb-b66b-ad536b12b6d5"
        },
        "item": {
          "id": "fee95ba6-ad00-4659-b02e-92ba8b133c54",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "17775dac-c8e1-4ee8-a150-45d9a65a7dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d107d7c-ad93-4ae4-a21b-3d4be500a8fd",
        "cursor": {
          "ref": "6439cb2c-b125-4727-afdf-082f7c9c1600",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ffbd161f-c777-4601-9945-2d12a7ec17c5"
        },
        "item": {
          "id": "7d107d7c-ad93-4ae4-a21b-3d4be500a8fd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "345828fa-adbe-47e1-87ba-dc3fa39c8d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe56d3e7-7171-42ee-bbd0-11998c003e94",
        "cursor": {
          "ref": "c5049509-cf42-4620-a4d8-c83376d4cd42",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "40353b70-5b0b-4c3f-9980-5b0d555558fa"
        },
        "item": {
          "id": "fe56d3e7-7171-42ee-bbd0-11998c003e94",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "712abdd0-a5b1-4c41-b1b3-5ccc83c88f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200f511e-dbfb-41f1-a78b-19849b0f7d49",
        "cursor": {
          "ref": "0a7b12bd-d54a-407b-ace7-6a4418a8d487",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ff726927-80e7-4ec9-877b-b7cd83127c0d"
        },
        "item": {
          "id": "200f511e-dbfb-41f1-a78b-19849b0f7d49",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7df16521-8520-4c61-8c33-8a0a1867d621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7384606-e147-4648-b91e-97532d9165c4",
        "cursor": {
          "ref": "9415dc36-92b7-4926-8969-442dae94775c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "20265213-bad9-4ac8-9542-c55a32068672"
        },
        "item": {
          "id": "d7384606-e147-4648-b91e-97532d9165c4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d75927b7-b2b9-4c62-abb4-f57716966c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba989cc-55e1-4f13-b1d3-f32bf3bf3106",
        "cursor": {
          "ref": "1b994db6-eb15-4d09-8840-281f4abb0f76",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "af4be2b3-2e2d-4f92-91b4-1ce097c7ff1e"
        },
        "item": {
          "id": "dba989cc-55e1-4f13-b1d3-f32bf3bf3106",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "187859b8-4619-48c1-97f8-592c28ba7d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d99e3da-f415-4bbe-820e-56a21461b3cd",
        "cursor": {
          "ref": "ba41e51d-9d7a-4cca-9c33-1fc709d60171",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "36ea0b9a-c6f2-49af-a4ce-d68b507b3b95"
        },
        "item": {
          "id": "8d99e3da-f415-4bbe-820e-56a21461b3cd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7ce6d4c8-d02d-4032-a32a-818a3dcdff1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1e3a04-7ec1-4640-b421-86cf88027cd0",
        "cursor": {
          "ref": "f3734b3f-dc3c-4e06-9f83-8c8bf152b6ce",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "238a509a-fa8d-411c-bb71-aaf3a4bf1bf6"
        },
        "item": {
          "id": "7c1e3a04-7ec1-4640-b421-86cf88027cd0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6eace720-b791-4ba9-852f-d9c379f6a747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd770a50-107e-484d-861f-d4252c890aae",
        "cursor": {
          "ref": "04557c91-6fb4-4bdd-8ca7-bde770a54480",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "55a1d64b-f189-4104-8d5d-765a47482119"
        },
        "item": {
          "id": "dd770a50-107e-484d-861f-d4252c890aae",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8b9d650f-580d-4e58-a4bc-812707a55e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e0a047-1c01-4fc8-b404-8eb34543314b",
        "cursor": {
          "ref": "f152fb18-1a86-4cf7-9dac-ede2af348533",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8478d6e5-f995-4612-a2ad-b7ba2ff6ae88"
        },
        "item": {
          "id": "19e0a047-1c01-4fc8-b404-8eb34543314b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c6a1442-112a-462f-9953-d4ea60b44001",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac01bdb-c26e-46f6-852e-5f1f60503443",
        "cursor": {
          "ref": "378ce590-8883-4163-acc9-456948b804de",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e3dd90e7-8f2b-4330-810b-d7ee9ae2c9b3"
        },
        "item": {
          "id": "1ac01bdb-c26e-46f6-852e-5f1f60503443",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ba9f6f0a-8ff3-4970-a16a-6914046db509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072119a5-1435-4c08-845a-9f902ea0349d",
        "cursor": {
          "ref": "3e1a313f-2e0b-4fea-ab4b-c288ec7335b3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "af695854-b6b4-441e-8ad7-a8c49365c3d7"
        },
        "item": {
          "id": "072119a5-1435-4c08-845a-9f902ea0349d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f7361ec5-1ee8-43be-b503-bf5de71d38ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52cca8e-b4eb-4241-9971-6f259008a6c0",
        "cursor": {
          "ref": "3c100840-b40b-45c8-acaa-0beb7aa332e8",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "17d97d72-e662-4c20-a76a-a6124f459050"
        },
        "item": {
          "id": "e52cca8e-b4eb-4241-9971-6f259008a6c0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "919e9ce9-177c-4502-a6bc-3f06dbf65990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4686da7a-f916-4996-9df6-3af4f099d762",
        "cursor": {
          "ref": "dd03950b-772c-42dd-88f0-223418f00c82",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be320e9f-4cb0-41b2-908b-479bb91e9ad0"
        },
        "item": {
          "id": "4686da7a-f916-4996-9df6-3af4f099d762",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3bfc416a-0e8c-4d20-987e-e4261f4a64d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d93159-3a54-4d74-8b76-5fd8136f86d7",
        "cursor": {
          "ref": "3f0df0f9-5fa6-4552-b74b-4875b1ab6251",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cb817d04-b999-4e0a-bbff-552c28483da5"
        },
        "item": {
          "id": "24d93159-3a54-4d74-8b76-5fd8136f86d7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2dca0b80-5015-403e-a073-5ef1b6f7343f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73df144c-42ec-4717-a5ed-6197b416baca",
        "cursor": {
          "ref": "1fe16b6d-e306-4741-b8a0-59c872b199ab",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7df9ae30-7d36-4cc4-8eae-facb16c4c225"
        },
        "item": {
          "id": "73df144c-42ec-4717-a5ed-6197b416baca",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ada23951-7bd3-4e9c-b9b2-6973b215f7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af69f005-2f34-46c2-9d15-96f93d7c0991",
        "cursor": {
          "ref": "59cc26cc-c098-4593-9761-e8baef4a497a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "67140a52-8a89-42f7-8845-8883edf2bc8e"
        },
        "item": {
          "id": "af69f005-2f34-46c2-9d15-96f93d7c0991",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6895841b-0ece-4a06-a0ce-911d5d2205cc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578f3fdd-1d27-496f-8c63-1c5b92f25747",
        "cursor": {
          "ref": "ff438c2e-cc6e-4f66-930d-b4201387cfa6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "757fb409-1c1e-4c98-85ea-fbaa27f8c962"
        },
        "item": {
          "id": "578f3fdd-1d27-496f-8c63-1c5b92f25747",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4891544d-bdec-4c77-9d70-f72a818d9e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68f6ed3-97ec-466f-810b-1cd9c0d81fa5",
        "cursor": {
          "ref": "a2d83c6f-0fce-4c9b-a1a8-fc571abbd908",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6ea48a0d-286d-437d-8db2-457231b96844"
        },
        "item": {
          "id": "e68f6ed3-97ec-466f-810b-1cd9c0d81fa5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "330feaae-5cc0-4d55-8b8c-6f3107629593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e572d935-4376-42b9-ba38-c33a33235391",
        "cursor": {
          "ref": "b0c03a5e-2021-4c24-a0dd-b28cd6d62c14",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "97186868-b743-43c4-8605-37240173e20b"
        },
        "item": {
          "id": "e572d935-4376-42b9-ba38-c33a33235391",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "37bc57c7-384e-4c35-b847-f9b5d42a3265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b93b9e0-287d-4f4e-a905-aae1507dde5f",
        "cursor": {
          "ref": "6ff8df08-4cbe-4836-8e37-eb77976a289d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6ded9bea-1557-43ad-a0f2-7e483338b8bf"
        },
        "item": {
          "id": "6b93b9e0-287d-4f4e-a905-aae1507dde5f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5dc7ed4f-1d31-4e2b-af7c-02ac181e29af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c2df58-c8b7-4c63-8168-ca37fcb86469",
        "cursor": {
          "ref": "1e7d34d9-463a-4e6f-8141-a6432a2272e1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "921279ee-109b-4dfb-80d9-eb4a401fb51b"
        },
        "item": {
          "id": "81c2df58-c8b7-4c63-8168-ca37fcb86469",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f20d3405-6ecd-4c0b-8842-556b999f30f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64db8253-0a1a-48d1-bd9f-bce836f6ca30",
        "cursor": {
          "ref": "5f6286df-1348-4978-b9d5-591f6c11764d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bb1b374e-0b33-4b9b-b0df-e359146d7f00"
        },
        "item": {
          "id": "64db8253-0a1a-48d1-bd9f-bce836f6ca30",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "447de88d-ccbb-4a24-9bfd-fea885533c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b5733b-d75b-42cf-bcc4-4d413a3f518d",
        "cursor": {
          "ref": "1cf171e7-29b2-4e31-bcfe-1072f585ffcb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a271225b-4899-4774-b6f8-ea7a90db78fb"
        },
        "item": {
          "id": "42b5733b-d75b-42cf-bcc4-4d413a3f518d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6be381d1-da64-4340-a09f-7d282930f99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6043280b-144a-42d7-8caf-e09f56bfcb7b",
        "cursor": {
          "ref": "9fd02334-7f6f-422f-ac82-a0663c8703ce",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b004d765-a9be-4a26-9b89-2b98ab86fd13"
        },
        "item": {
          "id": "6043280b-144a-42d7-8caf-e09f56bfcb7b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f123aed3-cb91-4bc3-966c-c4f5ce11a6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0302d404-af50-4f27-a5f7-ecfc7bde592c",
        "cursor": {
          "ref": "60d4f63d-c4b8-4bee-814a-8abd48743832",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "319e3bad-daba-44ea-8644-490c3dcd701e"
        },
        "item": {
          "id": "0302d404-af50-4f27-a5f7-ecfc7bde592c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "af0778c8-6d75-4dbb-b0de-ede409084418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b243a1b-d695-48bc-be0b-5979d868fd86",
        "cursor": {
          "ref": "8c2b578c-6102-4d2b-97d6-32f42aa5cf2f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8ba7bc5c-f745-4503-80b4-b388d74a6caa"
        },
        "item": {
          "id": "7b243a1b-d695-48bc-be0b-5979d868fd86",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "51e24d74-f70d-440a-8b35-4b2c18824764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706b0354-4da5-4b4f-afc0-68d546536f1a",
        "cursor": {
          "ref": "3c5d368c-b84a-48d4-af42-408e56280dc8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "45e0aae9-17f0-404d-83ab-2ab454cb92f8"
        },
        "item": {
          "id": "706b0354-4da5-4b4f-afc0-68d546536f1a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "47cecb8a-307a-4702-aa4e-4460ca1bd2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d81b294-12d4-4616-a6ef-d4cce5bb65fb",
        "cursor": {
          "ref": "0078ca0e-6230-4c6f-a3e5-77ff794b6639",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6b1d695e-ac26-4101-b9d9-820e5cd8b838"
        },
        "item": {
          "id": "5d81b294-12d4-4616-a6ef-d4cce5bb65fb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "201f6d7b-9b72-46e2-85f1-afe45254292e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1bb960-fc43-484b-982a-cb2d77fb069a",
        "cursor": {
          "ref": "443d3f46-bc81-4968-b90c-33d08d815790",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "77759897-33a2-47fb-9510-04e89bd15157"
        },
        "item": {
          "id": "9f1bb960-fc43-484b-982a-cb2d77fb069a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "33032e34-b8ed-4f58-a6d8-1833432c9ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111552a8-8280-4abf-aaa8-60c852f97fcd",
        "cursor": {
          "ref": "8a3537b3-62dc-465b-8054-1d0903b6f370",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "75136cba-f3f6-4d43-af3d-66da1d417796"
        },
        "item": {
          "id": "111552a8-8280-4abf-aaa8-60c852f97fcd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1132df92-a941-43be-8903-545d368b005c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871c1ba8-4c3b-4520-97d2-adb9b034b19a",
        "cursor": {
          "ref": "1e0d2693-f38b-4d37-8ed8-34e41d5c06bc",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4c5117fa-a78c-4ab9-bedc-aa8e1421c5b7"
        },
        "item": {
          "id": "871c1ba8-4c3b-4520-97d2-adb9b034b19a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "220c5272-a917-4e87-b9bd-6d5e138ed9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e79482e-76c8-43f2-a992-820165c9e59d",
        "cursor": {
          "ref": "b28d3624-3636-456e-89ae-fa89e8863d95",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "50a13f00-60ee-40de-a224-edcf691573c8"
        },
        "item": {
          "id": "5e79482e-76c8-43f2-a992-820165c9e59d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2f73f7a9-c38e-40f0-be05-3ba0e1a19e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ceb03-1ed8-4b54-af36-51a154c1f1f2",
        "cursor": {
          "ref": "e6590f3a-ac84-4795-9fe7-101afea6bf80",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "20b42b09-ca14-4df7-af27-8b8c7c047630"
        },
        "item": {
          "id": "198ceb03-1ed8-4b54-af36-51a154c1f1f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e483e5e4-f0f7-4687-8e50-af665e2a8048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34b160b-f6b0-430b-b99b-8be68e48e51f",
        "cursor": {
          "ref": "091f893b-1107-4a8f-a1cd-b023ad219178",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "57d6deb9-f3b4-40f9-ac78-bb265b7a9227"
        },
        "item": {
          "id": "d34b160b-f6b0-430b-b99b-8be68e48e51f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1c59a142-fcf4-421d-b936-06e5b1801850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c0e0d4-f2a2-4b8a-8239-8390e17b879b",
        "cursor": {
          "ref": "cf381509-9e57-4565-8476-f85c88719912",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5732fe28-3ee8-48cb-b852-0683da45279d"
        },
        "item": {
          "id": "34c0e0d4-f2a2-4b8a-8239-8390e17b879b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7f26b2c7-7c9b-42fb-89d7-0f5ebe67a602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2bf697-0e13-4df1-9850-ee9d010cd15e",
        "cursor": {
          "ref": "ddd99895-1dd6-4e57-84ae-87562e1bff94",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dc718ffc-2696-4ed9-8309-482b79e0c053"
        },
        "item": {
          "id": "8b2bf697-0e13-4df1-9850-ee9d010cd15e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "58ce7737-7d50-4381-8342-073e41767053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9e5ee9-8878-4037-b8c0-7359ce442dd5",
        "cursor": {
          "ref": "b2dbda35-81bc-4962-92aa-ad379c8e875e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e039d29f-d462-4997-82ba-7b659081f5b9"
        },
        "item": {
          "id": "9c9e5ee9-8878-4037-b8c0-7359ce442dd5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6a93d584-3a0c-47bc-9d6a-bfcd06ea62ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ecf7ef-d153-4335-a23b-f3842ecf8ace",
        "cursor": {
          "ref": "dd8fb7e5-b610-455e-98c3-750095048c07",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "818881af-1715-4d82-b26c-da7353b9dc8a"
        },
        "item": {
          "id": "19ecf7ef-d153-4335-a23b-f3842ecf8ace",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "39ad1772-329c-4346-8adb-4c4d5e689f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec10768-1b90-449d-a46c-a4688b316f00",
        "cursor": {
          "ref": "06f860b0-c887-435e-ad10-15e1be272694",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bdf54b35-8bef-45f2-9647-26bac3617b1c"
        },
        "item": {
          "id": "4ec10768-1b90-449d-a46c-a4688b316f00",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab911fce-aa8f-4c6f-84cf-d90d4f82817e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ee84e5-ef35-486a-957b-f8796f3ad111",
        "cursor": {
          "ref": "4ec05ff8-234a-4ee5-8810-085839f20650",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bf8131f3-376a-49ed-8fc7-9c76603d2f14"
        },
        "item": {
          "id": "b2ee84e5-ef35-486a-957b-f8796f3ad111",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fdb17d7e-4666-4cde-8fc2-54aa8e4a59b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5fd7c4-0f4c-495d-b8e4-37fd5116d869",
        "cursor": {
          "ref": "d2f306d8-807b-4031-8314-6a1a504e2dbc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f8b3671e-942b-41b2-9917-6a7cccb44bf7"
        },
        "item": {
          "id": "8c5fd7c4-0f4c-495d-b8e4-37fd5116d869",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c5c4f96b-d7b8-4c45-8f5f-8b0e9058a337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8092072-67ec-44a7-aeb0-3a5ffe35f1fd",
        "cursor": {
          "ref": "e61170a7-d924-480d-8f34-39e3e88aa1c8",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "47169540-cc8d-482e-93e5-9453a4616e9b"
        },
        "item": {
          "id": "b8092072-67ec-44a7-aeb0-3a5ffe35f1fd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bb35bd91-1f17-4558-ad3b-159b24846ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7abfe3-c565-4be0-af0a-1bff1639b52d",
        "cursor": {
          "ref": "ae54e507-5ff7-4455-aa2a-5ca0707521e2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ff92bd01-0242-449d-aded-e843336941c5"
        },
        "item": {
          "id": "2f7abfe3-c565-4be0-af0a-1bff1639b52d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "25bde9b8-981e-4039-a11b-d0609fc1cbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650bf936-e41e-46ca-a8fd-9e78e8fa053c",
        "cursor": {
          "ref": "957b2b9b-d42b-408d-b654-1ebad2509df1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "60b673b1-2a65-44ae-9115-38c122dd7d64"
        },
        "item": {
          "id": "650bf936-e41e-46ca-a8fd-9e78e8fa053c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a627dfcc-2ec4-4c3b-acd6-d4ffe2ea4894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbb14af-b839-449a-9421-89f7c45f99c5",
        "cursor": {
          "ref": "14ff5372-2ee2-4cca-8231-772235c7fcee",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "216bc8c1-6f58-452d-ac76-9d914a5c24aa"
        },
        "item": {
          "id": "1cbb14af-b839-449a-9421-89f7c45f99c5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "31289ad6-ee50-47ed-b6b5-421ccccb61ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d647284-abd6-4666-bbcb-700615776354",
        "cursor": {
          "ref": "f430e2fa-f09b-44d4-a684-34428ae7892d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c8312f7c-62b2-4a48-a027-b40f5d396395"
        },
        "item": {
          "id": "6d647284-abd6-4666-bbcb-700615776354",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2c0af4fb-7391-4200-b76d-49b971ee861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45089cf-0044-45c3-ab89-aaff18ac1531",
        "cursor": {
          "ref": "86a9d2ba-2c04-4b83-9827-708163dbc6ae",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d2748222-8d3b-4271-b8b8-cfcb57a0ba7a"
        },
        "item": {
          "id": "b45089cf-0044-45c3-ab89-aaff18ac1531",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9d049e15-6094-418a-b930-953306487889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c1718d-e5fd-4883-a82e-25749c76f5a1",
        "cursor": {
          "ref": "1f37395a-96e7-4790-81ab-f43dac041583",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0b455c56-f4a2-4cf4-a394-c61ca15b5aac"
        },
        "item": {
          "id": "60c1718d-e5fd-4883-a82e-25749c76f5a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3231f0b7-d848-4374-bc78-b1b513d4605c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6d2a5b-2215-486e-9b7b-1dc5d989da8c",
        "cursor": {
          "ref": "71a3c4c1-c113-4ab9-9f34-03f7540462f6",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a14216b3-d824-4f85-a725-e0e697fecac3"
        },
        "item": {
          "id": "de6d2a5b-2215-486e-9b7b-1dc5d989da8c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5feb1c1c-1323-4608-9b22-ffc8524055f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa946447-35cf-4068-ab82-338ecc938f0e",
        "cursor": {
          "ref": "a85095e4-eca2-4229-8d34-d6bb7179aade",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f77dc8c1-afde-4292-89fe-3baf54ca011f"
        },
        "item": {
          "id": "aa946447-35cf-4068-ab82-338ecc938f0e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "29732b20-f2cc-4000-9f68-2eb82e11fa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfea094a-caeb-461e-820e-f7be69be9fc0",
        "cursor": {
          "ref": "d6fa31f8-7564-4178-936b-2d928c2099b4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ec5f7afa-4c22-4ff3-bc6c-8c9efff0a7b6"
        },
        "item": {
          "id": "dfea094a-caeb-461e-820e-f7be69be9fc0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2f7a1ea5-462b-4903-88f4-28f4dfd0121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba116969-185e-4081-9585-09384051cf28",
        "cursor": {
          "ref": "685eb1a7-e32a-4b49-941a-76476c92a306",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5391cc18-44b1-45c5-a454-50d062101fae"
        },
        "item": {
          "id": "ba116969-185e-4081-9585-09384051cf28",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "536636be-69f0-48db-ad36-fcc02e8148cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086ad5f5-277f-491c-aa9d-37bce0853916",
        "cursor": {
          "ref": "d62c7b41-fb38-4adc-a85b-da169cb14a2f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "89d207dc-7d15-4426-ab35-39ce43417ccf"
        },
        "item": {
          "id": "086ad5f5-277f-491c-aa9d-37bce0853916",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a8ef31db-becb-49df-9d52-92f3c7443f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8dd73a-024e-4697-9e94-4bcd1b541a44",
        "cursor": {
          "ref": "69760769-4d9f-4f8c-b8cd-ae0ef59a649f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "49b3f3a0-8999-4344-99f2-9051bdbf7a6a"
        },
        "item": {
          "id": "9c8dd73a-024e-4697-9e94-4bcd1b541a44",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dfc6676a-b5b6-4f6e-b2bf-52ca54d0fc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2178ac15-80a0-4f15-abc0-96eb884a11ad",
        "cursor": {
          "ref": "000a18d1-2cf5-424a-8f14-bab964891fd8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "36953c42-204c-4df3-bb81-d05591e978ab"
        },
        "item": {
          "id": "2178ac15-80a0-4f15-abc0-96eb884a11ad",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "33d821db-0edf-4838-a1fe-ea3896fc1c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e5133c-f4a9-415d-9f66-7fd686913fbb",
        "cursor": {
          "ref": "2f0ead2b-4c27-4ad9-8770-36aea059a1bd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2310bd62-bf29-4c08-9eaf-9c6eb796fe80"
        },
        "item": {
          "id": "20e5133c-f4a9-415d-9f66-7fd686913fbb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bbecf379-2ca5-4b49-8a0b-2e14992c8f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb833d16-7490-44c0-96ba-1290ac8cb44c",
        "cursor": {
          "ref": "350350a3-f1e7-46aa-bb8f-acf3cea933ce",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "26046d7c-76df-4486-bda0-cc04fa295d96"
        },
        "item": {
          "id": "bb833d16-7490-44c0-96ba-1290ac8cb44c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9e47e177-0a22-4b95-b67a-bb5d6c47deb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577ecdb2-86ed-47ac-bc63-aaa318269279",
        "cursor": {
          "ref": "f20e8f60-7fa1-4768-8ba8-55ea054ec476",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d533545d-8eaa-4200-bfad-0d5eddcbc358"
        },
        "item": {
          "id": "577ecdb2-86ed-47ac-bc63-aaa318269279",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fdb26fd1-4a54-4891-8674-733292e7b535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefb060e-33ee-4cba-a160-e6a21e68f45b",
        "cursor": {
          "ref": "98ee16d0-b626-4544-8876-0c17fc71c6c6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4735a2a2-5af2-4fe8-a901-a795a70b7f8a"
        },
        "item": {
          "id": "fefb060e-33ee-4cba-a160-e6a21e68f45b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "32cc017c-0717-4015-b7a6-e6d710008bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d3113-aeb9-42e8-9fe3-ba5005bdf68a",
        "cursor": {
          "ref": "ca15f710-b3bd-4589-bd3a-e92ac73f33f2",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eca207e2-cb40-47c1-8c73-fbb0839004f7"
        },
        "item": {
          "id": "ce9d3113-aeb9-42e8-9fe3-ba5005bdf68a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cfff4e06-0f90-47f6-8d33-cdd0ef312ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624369c8-a089-4793-bb4f-35a6cc04cb2a",
        "cursor": {
          "ref": "a8ee09c7-887a-4546-9880-81e5b2ee98de",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9c41ad18-ff1c-4fb8-8fc7-9106a2a3138d"
        },
        "item": {
          "id": "624369c8-a089-4793-bb4f-35a6cc04cb2a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "24cbc224-4c01-4f99-b2fc-d8e00c5c9ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a51a19b-6136-404e-8a72-7df9caeaff72",
        "cursor": {
          "ref": "f0200d5b-dd86-40e1-8a75-85252e2bd9d8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f1481097-23ba-40c4-acb4-51f58d70b563"
        },
        "item": {
          "id": "5a51a19b-6136-404e-8a72-7df9caeaff72",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "00272d72-641c-4217-ad04-5cd3c222d855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a34c51-9951-4a8f-a17d-22e761a298e5",
        "cursor": {
          "ref": "1bf3a8ef-dc90-4df3-9732-17db1c70d1cf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "13bce4c0-fce9-446e-b80f-501e692a782b"
        },
        "item": {
          "id": "e5a34c51-9951-4a8f-a17d-22e761a298e5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9bb79693-5db6-464f-98d0-7c164273be49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cae1d9-da43-4a3e-b5d3-b72bec2431f1",
        "cursor": {
          "ref": "4671a85e-fe34-496a-a388-fbb50ca539f8",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f20fbdb4-5de4-4129-bdb0-9cf5a25614d1"
        },
        "item": {
          "id": "52cae1d9-da43-4a3e-b5d3-b72bec2431f1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ad40ded2-be6b-4ec4-9769-79ca606dea99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17209f32-0a81-4ae1-8fac-33fb7464990e",
        "cursor": {
          "ref": "a6e4ac25-0d3a-4f91-b5c9-868b89301824",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "02568d7c-b3f2-4b97-9bfe-7d8535185ddd"
        },
        "item": {
          "id": "17209f32-0a81-4ae1-8fac-33fb7464990e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0fc343e8-2c11-4066-ac86-db59c78612f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97397397-8d10-4c48-a45f-f7ec78b24227",
        "cursor": {
          "ref": "e0f3027b-dac6-4a69-b201-7178f1e7e6b8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b59ae65a-386c-4fdb-a689-ea4554b60352"
        },
        "item": {
          "id": "97397397-8d10-4c48-a45f-f7ec78b24227",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5c43b84d-4b23-412a-ba6d-e5f4ff514233",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a24ff0-9c5d-4633-9b2f-b1a43eef1350",
        "cursor": {
          "ref": "39bafa20-ddb1-4af2-b8ce-6cb4875c4676",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cd5f1456-b708-4b8d-a15a-6964b701ffa7"
        },
        "item": {
          "id": "15a24ff0-9c5d-4633-9b2f-b1a43eef1350",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2d89fb0e-b92f-4d39-8f07-02d715454e74",
          "status": "Created",
          "code": 201,
          "responseTime": 107,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f08bac0-a2cc-432f-bde9-b4f96905103e",
        "cursor": {
          "ref": "0f3bff57-48cd-428f-9649-edaab2bcb701",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3336f992-afa7-41c5-bd19-66c447af0094"
        },
        "item": {
          "id": "1f08bac0-a2cc-432f-bde9-b4f96905103e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8c02bf45-793a-42f4-a59a-9827c0034b27",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0f5664-2982-4447-9241-7744a3e89b68",
        "cursor": {
          "ref": "f8559d7f-7d13-4c58-a9b2-a33308b76068",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aa5ab9ba-98f9-45ff-81eb-d1ccffdf59b8"
        },
        "item": {
          "id": "cc0f5664-2982-4447-9241-7744a3e89b68",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "78de5360-309f-4105-99cd-2baaddebac0a",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70ce53a-8c3b-47d4-a41b-22460574ff98",
        "cursor": {
          "ref": "bb435311-ca3a-40f7-a972-a0aa868f7827",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9ece6610-79a9-4755-8dc7-ba77cf4a0785"
        },
        "item": {
          "id": "b70ce53a-8c3b-47d4-a41b-22460574ff98",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0ad5aa95-e7b8-4ad8-943e-6ba2e426f068",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b07b9c9-bc3a-4d23-bc18-6177c27ee2e1",
        "cursor": {
          "ref": "42945c2c-63ff-4a6f-8354-e757b3246581",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "03a713f0-556b-40a8-baa1-bba613072007"
        },
        "item": {
          "id": "2b07b9c9-bc3a-4d23-bc18-6177c27ee2e1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9174c7f5-7543-46f8-b488-fb4c6412c60a",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b3079b-7d8c-46d0-b44c-7ae095f48a47",
        "cursor": {
          "ref": "708b041f-a307-43d1-9747-3b7f170bb898",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b7280ca8-0e6e-4140-ba20-276653604098"
        },
        "item": {
          "id": "e9b3079b-7d8c-46d0-b44c-7ae095f48a47",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b3cf7285-4ac6-4fcb-8446-69126c34b849",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ef0492-ed4e-4596-9ba3-3a175bad6bf4",
        "cursor": {
          "ref": "da33a97e-9825-47b6-8027-96629a93cc68",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "93ed8f86-99d9-4a85-84f8-8140a36c6cac"
        },
        "item": {
          "id": "b2ef0492-ed4e-4596-9ba3-3a175bad6bf4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "77c3fd9b-be51-4231-8baf-550dd056a989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ecf46b-93f4-4067-bcab-cf8f120d9ee6",
        "cursor": {
          "ref": "313f708d-00ad-4beb-9b6b-cbda2bdf64dc",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a8576c67-eef4-4b24-b920-4e8a1be8e539"
        },
        "item": {
          "id": "a5ecf46b-93f4-4067-bcab-cf8f120d9ee6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "56740711-b616-4630-8889-254e5c3d3dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4b5be8-dce3-48c2-8cba-2741d9b7f441",
        "cursor": {
          "ref": "98b6f719-5432-44b6-ac79-e2b8d1aca00c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "82f29bba-9e1e-4664-9d72-ecabe5aa1d4e"
        },
        "item": {
          "id": "fd4b5be8-dce3-48c2-8cba-2741d9b7f441",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4e6745bb-052e-451a-9f93-cc880276f497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fa37f3-3188-4f56-9968-8312c9595c5f",
        "cursor": {
          "ref": "3e6d36f5-8c43-48d8-8934-b6c0625f98ae",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dad10658-cea3-4bcf-a824-da1f657a4f5b"
        },
        "item": {
          "id": "59fa37f3-3188-4f56-9968-8312c9595c5f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6b32644b-d6a4-475b-bd43-0d1990de91d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47aca0c-62a3-4367-b6c9-4bd061c194dd",
        "cursor": {
          "ref": "5862aab4-d314-4b36-a590-6694f64c4aef",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "154b317f-1f18-4422-8e27-90488d6f1560"
        },
        "item": {
          "id": "b47aca0c-62a3-4367-b6c9-4bd061c194dd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "48ca022b-b7d9-4027-9f79-9b7c64541a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc493b87-c1ba-45f2-a911-28a27a882f1b",
        "cursor": {
          "ref": "ce1db265-639f-4a0a-82d0-376eb75c5818",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "55d75e8d-4337-4730-8caa-132d371143ce"
        },
        "item": {
          "id": "dc493b87-c1ba-45f2-a911-28a27a882f1b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2954a279-3590-4675-b898-f82a964e9b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae75e4af-c134-41bc-bc85-9052fa6dfcf1",
        "cursor": {
          "ref": "ed2b5d64-852c-4825-a377-f02a0c5126c1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "30ecd5d0-ec1b-4b4d-98bd-8087a35a530f"
        },
        "item": {
          "id": "ae75e4af-c134-41bc-bc85-9052fa6dfcf1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4781e1a0-150a-495c-882d-050c69384e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50765a93-da64-4fc4-8de8-f01db1c2fa0e",
        "cursor": {
          "ref": "fb19aea9-4068-4f57-8bc8-18633c0772e1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4680e418-ac30-419d-b6a9-e05eff1ac22b"
        },
        "item": {
          "id": "50765a93-da64-4fc4-8de8-f01db1c2fa0e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "efab4d7e-ccad-48b3-82c2-06384ec49ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fca2b0-4a74-4b21-8dbc-8962b58fa9e9",
        "cursor": {
          "ref": "a03a9f93-ae40-4ae4-b176-2cfff10fb32c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2bd31d9e-f9f3-40a6-930b-d5b3d354e975"
        },
        "item": {
          "id": "28fca2b0-4a74-4b21-8dbc-8962b58fa9e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "63b1f6ac-bd55-4ec1-b45f-7814ea0ff48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f682c7-7d15-4ac3-b6ab-9c6d59fb58fa",
        "cursor": {
          "ref": "ebeab1ba-ba2d-4a3f-b26f-0a5d6e2cad53",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "381d91bd-5b66-4918-bd19-0b17f58106b2"
        },
        "item": {
          "id": "74f682c7-7d15-4ac3-b6ab-9c6d59fb58fa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cf6103a1-6af9-45c0-816a-9347cc6f9eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ec69f5-f85d-4934-b7d9-84a4dfccbf30",
        "cursor": {
          "ref": "e80527bd-3f25-47c5-a9db-24a1c5ffcbcd",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d7de03ce-aeca-4636-9eae-0b9cb596179c"
        },
        "item": {
          "id": "d8ec69f5-f85d-4934-b7d9-84a4dfccbf30",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af42854c-1309-4fd0-bfc2-503851d98b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970b9e6d-b030-4098-8012-13139c9c18f9",
        "cursor": {
          "ref": "7b2dc35e-a2a2-4d3c-b234-e02dc0e116a7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e80bced2-b16e-483e-9e06-c0606a71d860"
        },
        "item": {
          "id": "970b9e6d-b030-4098-8012-13139c9c18f9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "43e6321b-bff4-4a97-80f9-514ea5ddf032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c3c7d4-842b-409b-ac8c-c5257e9fa4f8",
        "cursor": {
          "ref": "4c526f89-9222-40f0-b20a-e224faf0dcf0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f5354d9a-2a1c-4993-8f5a-36d0a24f3f6c"
        },
        "item": {
          "id": "d2c3c7d4-842b-409b-ac8c-c5257e9fa4f8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "90cdb2d9-922a-4a7b-87b8-95850d662ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5e3d8c-2c7e-4dcc-8869-a2d40c12eab9",
        "cursor": {
          "ref": "02d6b364-c7ee-4bad-a0cd-cd401a8ffb6a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6a0d6812-e5ec-44b7-9f87-7e9d85bc231f"
        },
        "item": {
          "id": "ac5e3d8c-2c7e-4dcc-8869-a2d40c12eab9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d239e16d-0302-419e-a8b5-c5a30836a213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23faba4-f22d-4c1f-b7eb-b27139752799",
        "cursor": {
          "ref": "773fcca4-f799-4bd4-97c2-474d3b305789",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ebf8dec7-69b0-4197-a7dd-97aaafe066e0"
        },
        "item": {
          "id": "c23faba4-f22d-4c1f-b7eb-b27139752799",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6a1b65cb-0dc3-4b59-9717-b1f7e1d23785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2934f768-bc27-4dd7-953c-c7da0315ffd5",
        "cursor": {
          "ref": "c325dedb-7e40-4003-be40-8a644c46e9b3",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0a77400e-54cb-4a48-bc7e-23c67a7059e8"
        },
        "item": {
          "id": "2934f768-bc27-4dd7-953c-c7da0315ffd5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5d6ec9bb-7ad1-4f39-8663-035ea735b3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10fffb6-4e26-4b57-a756-15da795873a0",
        "cursor": {
          "ref": "92139239-7c62-4850-97b8-918ba7485932",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b89e2302-1251-4bb8-be81-335503760f12"
        },
        "item": {
          "id": "f10fffb6-4e26-4b57-a756-15da795873a0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ad986571-7e72-4cdf-bb22-ca722c86228e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51bcd4d-2f31-412e-ad01-562c14eee4e6",
        "cursor": {
          "ref": "aaddb086-c806-4970-a614-2d6111aa67ff",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "719469c8-37c9-4205-ab1a-3bd46d06c00c"
        },
        "item": {
          "id": "f51bcd4d-2f31-412e-ad01-562c14eee4e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ef11ad85-54fc-4801-8402-f184ad8b1f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc211b3-737d-4cb0-9b67-57765690384a",
        "cursor": {
          "ref": "384600dc-065b-4fd3-b42d-1ec58f5dac06",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "111fa4f4-2def-4fcb-8f24-50061f995154"
        },
        "item": {
          "id": "0bc211b3-737d-4cb0-9b67-57765690384a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "288ee6f1-1bbc-486a-89dc-626e11148caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fecbeb-e9ed-4609-a636-e7d60596724e",
        "cursor": {
          "ref": "25dceec0-103e-463a-9a55-7440bdb35b80",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5c55e9f6-b332-433f-9c6d-62b850c7fde2"
        },
        "item": {
          "id": "d9fecbeb-e9ed-4609-a636-e7d60596724e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fb10c5d2-e527-4c8e-87ce-f3701b833531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c954b66-2cc7-411f-b78e-a497269b3899",
        "cursor": {
          "ref": "55359717-504b-45d6-af16-cc5c3ca1a820",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "56389a22-8ca1-495b-824f-335405c7f5d9"
        },
        "item": {
          "id": "0c954b66-2cc7-411f-b78e-a497269b3899",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "46b98cf8-9338-4ef8-9138-d8546eec0458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9c67bd-a26e-42d3-adb6-13cf99518179",
        "cursor": {
          "ref": "96b35512-74a5-43b1-8c7c-2f97dc253b53",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4c0faebc-0fbd-4bed-8b8e-1951d1696657"
        },
        "item": {
          "id": "7f9c67bd-a26e-42d3-adb6-13cf99518179",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e3e5026-4f31-42ff-89ce-4b2dc2a38c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9834329e-2c6a-43a2-b10c-a444eb84e33d",
        "cursor": {
          "ref": "35ec3689-6ee2-4128-8673-b77477e22a8e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "acee8dd8-0860-44b4-a1a5-8339305bab10"
        },
        "item": {
          "id": "9834329e-2c6a-43a2-b10c-a444eb84e33d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5622fc2-aeec-45fa-b441-b1b5470f2969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a899dc4-f928-400a-9bf2-86709734ac94",
        "cursor": {
          "ref": "b4d834d5-3a17-41fa-8c52-78eb0548a3be",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6b4501c4-8072-45dc-b646-dd1588e1e333"
        },
        "item": {
          "id": "6a899dc4-f928-400a-9bf2-86709734ac94",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d5c8636d-1af9-4088-8e91-3283121c1fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8e3409-7119-4925-9f51-55ea73e405c1",
        "cursor": {
          "ref": "1ec70952-6d8e-464d-9067-6e72a28709ab",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cb74ce96-4bc4-4c62-814a-7865f73f6633"
        },
        "item": {
          "id": "bf8e3409-7119-4925-9f51-55ea73e405c1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5c373d25-6388-45b1-87af-bb2f6f8055d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219b177c-eaa4-4bd5-a95b-bcf2614a42d8",
        "cursor": {
          "ref": "ac483404-246a-47e0-ba8c-311c266a3869",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ecf984b-fd6e-47fc-bf1d-53d8043b920e"
        },
        "item": {
          "id": "219b177c-eaa4-4bd5-a95b-bcf2614a42d8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4a445b27-1af6-41a9-b986-db1a5c824576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1403fa62-25da-4cbe-9e37-9642c8ed6f6a",
        "cursor": {
          "ref": "06cba8f4-72d8-469c-9213-ff67171ce631",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9a134085-eeaa-4272-83ba-f59c198b38ad"
        },
        "item": {
          "id": "1403fa62-25da-4cbe-9e37-9642c8ed6f6a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2a5fb63e-8482-42cf-8230-7356d68ac197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2f81d3-d58b-4823-941f-d26a1032bee4",
        "cursor": {
          "ref": "39895687-7583-4957-a918-df69245ef458",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fa20678c-3db8-4f91-8db6-cc2a7435fb37"
        },
        "item": {
          "id": "bf2f81d3-d58b-4823-941f-d26a1032bee4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "741177d7-a601-461e-9b1b-55b57c0b8429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43ecc51-df0e-4d43-99e6-18d000320639",
        "cursor": {
          "ref": "f78fe5a4-616d-4d4e-863a-92535600d4e8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "40d80b9e-e698-433a-8449-856940235bb1"
        },
        "item": {
          "id": "c43ecc51-df0e-4d43-99e6-18d000320639",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "292c8d8c-f32d-4ad9-86ae-bcec7c374d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1dcb1-2e1d-4ae3-a323-5dd285276918",
        "cursor": {
          "ref": "778a2201-57d9-470f-a7c0-78a3e611b79a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bbffe1ad-f548-40b1-b008-72580a462151"
        },
        "item": {
          "id": "0bc1dcb1-2e1d-4ae3-a323-5dd285276918",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d4086fe-9550-4745-b05f-89d39873cb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43478db8-7fa7-416e-9144-87c98b3c402d",
        "cursor": {
          "ref": "75091e21-2331-40cd-ac9e-01c124051191",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b4b059b2-6ab2-469d-8fec-ead5f259d499"
        },
        "item": {
          "id": "43478db8-7fa7-416e-9144-87c98b3c402d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68d45a44-aded-486b-bda1-3fc126944106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dd8da6-4b85-4b4a-8fee-5693b68c7b54",
        "cursor": {
          "ref": "d91fbed1-1b7e-40be-981a-2465b43d7c36",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ce6bbd22-94ba-4602-855f-f7cf3f5f3665"
        },
        "item": {
          "id": "a7dd8da6-4b85-4b4a-8fee-5693b68c7b54",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d4ebe4f9-e2b3-4d4b-a02d-a47e22071cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f66bbee-4b2a-480f-af50-6296c85c58dd",
        "cursor": {
          "ref": "8668c3a5-545a-474e-bde5-d15f3f96332b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc036665-e0fe-48d6-9280-cd7bfa96e3a2"
        },
        "item": {
          "id": "8f66bbee-4b2a-480f-af50-6296c85c58dd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0a5583be-2302-4c42-8657-923ae8c4e923",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814f8dd-9c41-41c5-b6c1-7075be36c8bb",
        "cursor": {
          "ref": "7ad681cc-a76b-40a5-a174-c395bd1a3950",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d2c67ae6-d237-4b19-895d-48396089353d"
        },
        "item": {
          "id": "f814f8dd-9c41-41c5-b6c1-7075be36c8bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7c5104d-dd29-4c39-bc80-96289a2efbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aeedc89-05e6-4acb-bb65-77a44687e6eb",
        "cursor": {
          "ref": "b5e03d49-f8e3-425b-9952-4da305c78ec9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "440592f4-d79b-41ca-ad37-d2c9ba05555e"
        },
        "item": {
          "id": "0aeedc89-05e6-4acb-bb65-77a44687e6eb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "214f7b51-de0f-4849-8dc2-44497587228e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa8ff9-850d-430c-bc89-458badbccc0d",
        "cursor": {
          "ref": "cc4ef251-f117-40cc-aab1-d5656fa3889b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5ed27637-406d-4b9c-9a10-2298981c5452"
        },
        "item": {
          "id": "e9aa8ff9-850d-430c-bc89-458badbccc0d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "adac90d4-ce5e-461b-8c27-26f0467acf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3117dd-b7d6-4470-8199-97ee8f17cc71",
        "cursor": {
          "ref": "2990dfb5-9753-4ee0-987e-890e43a100c7",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a73a98c2-d198-4080-ad90-4694b3fbcc02"
        },
        "item": {
          "id": "ac3117dd-b7d6-4470-8199-97ee8f17cc71",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "55ea58b2-81d7-429f-90f2-626246c84d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cb62f0-0054-44a1-b80c-fea4cdd4bb66",
        "cursor": {
          "ref": "3dab7218-e88f-42a5-bf38-e110bcbcca8a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "df920a0c-9d3d-4896-832e-74e360221e5c"
        },
        "item": {
          "id": "68cb62f0-0054-44a1-b80c-fea4cdd4bb66",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b3e5a303-fb96-48a2-bdff-801e02ed0766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248d73ee-2f3f-4b01-8c5f-c222433fc222",
        "cursor": {
          "ref": "9487623c-0cb8-44c1-94a2-2c5fe54cba79",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d3681849-2e37-4428-94da-a1e702c5f854"
        },
        "item": {
          "id": "248d73ee-2f3f-4b01-8c5f-c222433fc222",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "829e6aaa-ccab-40ab-a629-49b2dfe0fc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce57f7d2-e2ce-498a-8ef5-c8f0b5369af0",
        "cursor": {
          "ref": "44429fb9-610e-4ef2-b066-5aeb4046a895",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fb37d0d2-bb75-4756-b19d-68895c55d9cf"
        },
        "item": {
          "id": "ce57f7d2-e2ce-498a-8ef5-c8f0b5369af0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d029edde-f70c-4b50-8dfb-6baa46572738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc81a14b-02e4-41ab-a201-7833d7166a41",
        "cursor": {
          "ref": "cfd9c454-7abc-4c34-a586-045167da9dd1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fcbfa9cb-84c4-41a4-8cf8-88e90db34039"
        },
        "item": {
          "id": "bc81a14b-02e4-41ab-a201-7833d7166a41",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "13a01aa4-12d1-4822-9744-4bd43f41e6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b522cb-a835-43b6-99b6-38c55f37664e",
        "cursor": {
          "ref": "5ff427d6-828d-4bc5-9b77-3a7382aa2404",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1a92168f-2ae6-4886-aece-5ddb5fc391d3"
        },
        "item": {
          "id": "63b522cb-a835-43b6-99b6-38c55f37664e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "04853d24-3b3d-4a03-a8a9-a22558e06a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b838b6-c180-490c-9df5-bc632743f94f",
        "cursor": {
          "ref": "30edd9e1-1ca2-4a2d-8444-9eae7152428c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "02c8a971-1a93-4fa5-84ae-d9c1e75197d3"
        },
        "item": {
          "id": "31b838b6-c180-490c-9df5-bc632743f94f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cc00e979-d4ee-4d87-b7e4-6e9ba768dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2774aa-f538-4e95-b110-d90df2e6a36d",
        "cursor": {
          "ref": "6f5041e9-b9e3-49c9-b0e6-30986e187759",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "72d6e5bb-605e-4fd8-b3a1-aa64fa77a30f"
        },
        "item": {
          "id": "ae2774aa-f538-4e95-b110-d90df2e6a36d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0be479d5-b612-4888-902b-c244d1577be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8e3012-bfac-4ab6-a06d-9d0a21153ea2",
        "cursor": {
          "ref": "2b2466e1-90bd-40c1-83fa-4394084f2cf9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9b791c22-faab-4c7e-97d6-9e810deaafc8"
        },
        "item": {
          "id": "4d8e3012-bfac-4ab6-a06d-9d0a21153ea2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5625149-c113-492e-b9fd-9c52a20376eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0475ccca-28d1-4b11-9615-8b7cfeb0dcac",
        "cursor": {
          "ref": "ef50ce2c-8f22-4c99-aa87-714ffa222847",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4ed2a651-d442-4e75-9fbc-6dde2d1375e4"
        },
        "item": {
          "id": "0475ccca-28d1-4b11-9615-8b7cfeb0dcac",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7748e2fc-b53e-45a9-9b4d-6ef978f82b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32bfbec-23e4-4e92-aca6-7c01fe972de5",
        "cursor": {
          "ref": "31c51b89-8247-405f-a25f-8796629e743f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0c792d82-f676-41ff-8e20-a879089d2ec1"
        },
        "item": {
          "id": "e32bfbec-23e4-4e92-aca6-7c01fe972de5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e44958e-3e38-4040-bd92-abcfbfc5f79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24775c3-60d4-4cdc-8896-5b0268442872",
        "cursor": {
          "ref": "a3fdcd3f-4365-4f25-999d-a39ee3facb89",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "79c71892-8ac5-4edd-953d-ce92fdbfb918"
        },
        "item": {
          "id": "d24775c3-60d4-4cdc-8896-5b0268442872",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "51648c91-1888-4b65-acef-331ceefe85f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8115e3-2bcb-4de0-b556-5d6218474536",
        "cursor": {
          "ref": "2ba0c5af-4328-435c-9e5d-47530eccc730",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "70ca195c-5279-4527-92b1-574b217450d8"
        },
        "item": {
          "id": "1c8115e3-2bcb-4de0-b556-5d6218474536",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "889cbe29-ded8-4be5-95f8-eeea8b8ab190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20661a4b-4cff-4bc2-b848-03ae646a80af",
        "cursor": {
          "ref": "4f533319-d1b2-4fc3-8bc6-96fa7934bf43",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "89da2df2-fc3a-4901-85b0-9522b1fb0f05"
        },
        "item": {
          "id": "20661a4b-4cff-4bc2-b848-03ae646a80af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "785dace7-4426-4fe8-bc0c-2abada85f61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7950b0-695c-4068-98f3-b9070cb44ae7",
        "cursor": {
          "ref": "41faed6c-dc95-4f87-b371-943b37b2546d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f9dd713a-2ee1-4d3c-b9e3-ca3a5c67a413"
        },
        "item": {
          "id": "ba7950b0-695c-4068-98f3-b9070cb44ae7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "413b907f-1f64-44e1-bf3f-30b8b83c990f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ee2fd8-4c8f-47bd-b636-6f0d292ee353",
        "cursor": {
          "ref": "78ed2bb7-70a8-4f50-acdd-d17ffb0ba930",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d7c001fc-1e0e-46e3-8206-a43c4ad59d16"
        },
        "item": {
          "id": "42ee2fd8-4c8f-47bd-b636-6f0d292ee353",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0625346e-8e1c-4a78-8edb-4263c8694ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551cd265-6054-4bed-8cfa-a15222835bdb",
        "cursor": {
          "ref": "8b45e251-3b87-4561-8966-0966931e700e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1853c0f3-1f26-434e-be25-ce589a8cd865"
        },
        "item": {
          "id": "551cd265-6054-4bed-8cfa-a15222835bdb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a572af07-0201-4fbb-8144-6632d93bc683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ac9110-803a-4975-9d44-1c4dcd56a450",
        "cursor": {
          "ref": "5c10339e-409c-4a9a-a224-a3dcdce820f9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9e149d25-6438-4000-9616-5d8e1512c171"
        },
        "item": {
          "id": "69ac9110-803a-4975-9d44-1c4dcd56a450",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba6c6606-e418-4795-aaee-115e83c1c3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e194bc1e-44ce-452c-aa5b-09df98f87b82",
        "cursor": {
          "ref": "bb89392b-6841-4070-9d37-e9f44eeaeecb",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2e6f3b85-16b5-4377-b1bd-cfe04ba95768"
        },
        "item": {
          "id": "e194bc1e-44ce-452c-aa5b-09df98f87b82",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a0aece23-bc28-4d99-adf5-fb93e2099216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3d8f20-b05f-4c4c-8239-c102360de15a",
        "cursor": {
          "ref": "82aed388-654d-4a11-8fbf-d9ab19eb0311",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "723f05ac-3a4c-4796-9bc3-3e5f17a37dd4"
        },
        "item": {
          "id": "8d3d8f20-b05f-4c4c-8239-c102360de15a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "97b9dced-da2a-4b2d-a6f4-eaacda879e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55fd7b0-d8fd-4072-920e-e067fface636",
        "cursor": {
          "ref": "8035af8e-d718-4b42-b7c2-9530a0deaec5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "015d5371-7a59-43fa-82b8-de3fe422a372"
        },
        "item": {
          "id": "f55fd7b0-d8fd-4072-920e-e067fface636",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ebec0b77-8bc7-40c9-a601-ef6dd4606ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cbfe4c-75ba-4689-9964-91cdb7b29c4b",
        "cursor": {
          "ref": "fb707c53-426e-4160-9b4a-4f226445c1e6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b1f7ed48-84c1-4fe9-862b-8386b6980e41"
        },
        "item": {
          "id": "38cbfe4c-75ba-4689-9964-91cdb7b29c4b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0baf3305-6008-4022-9610-84e2d91d5392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8788f01-5a92-4182-9720-6c078fd0e8eb",
        "cursor": {
          "ref": "ac1ddb57-7300-4f95-a102-bd0f966fb1b8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "725c9b0c-0666-41e3-a6d6-b1399ae283b8"
        },
        "item": {
          "id": "c8788f01-5a92-4182-9720-6c078fd0e8eb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "63926a8c-6cda-4cf0-8da7-42d58670b4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf036af-5d22-4842-a51f-183995cd706d",
        "cursor": {
          "ref": "4f361f23-c47d-47d4-a5b9-3a3ae5fd0207",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "91061cc0-dfe6-4dd2-a78d-f77dec0da934"
        },
        "item": {
          "id": "ecf036af-5d22-4842-a51f-183995cd706d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5a7886ae-266d-4e39-91c8-f2b2a4d8263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3206640d-0406-453d-a942-3c6b418aecb4",
        "cursor": {
          "ref": "fbf6fafb-bf3e-4c18-899a-680471ab6c2f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b0f26551-aed1-41d5-a512-5cccf540ba86"
        },
        "item": {
          "id": "3206640d-0406-453d-a942-3c6b418aecb4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "083e2bb0-88eb-4d59-9f54-58a5e72a111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576606ad-08ff-440a-a448-a59713c1c7df",
        "cursor": {
          "ref": "41dbbe28-fba3-4f84-b7c0-b976c878ee2d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "91d3c02c-ba36-427c-885e-1ddaf13fc298"
        },
        "item": {
          "id": "576606ad-08ff-440a-a448-a59713c1c7df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5a2cd4bf-1fc4-4b89-b0ce-2fae6777031d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eb6cab-d4d2-4346-b0e0-0184ec5dc0b0",
        "cursor": {
          "ref": "a30a9f02-eaf9-441d-8755-a212452617fc",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8140571b-208c-4a3c-8060-b6756007e0b8"
        },
        "item": {
          "id": "58eb6cab-d4d2-4346-b0e0-0184ec5dc0b0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "662b1e8b-57e0-4737-9431-5e1ac84a7cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb60302-2452-4027-afe4-d654828c3472",
        "cursor": {
          "ref": "3430fffb-8ce4-4f61-b78c-1d16e72fd4f5",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1147fa20-7588-431b-a4b6-2fe74cb753a5"
        },
        "item": {
          "id": "9fb60302-2452-4027-afe4-d654828c3472",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "19e3b36d-1de5-4493-84e7-f2204225b983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5c9462-f7b1-49c3-b1dd-43cd207fbb4f",
        "cursor": {
          "ref": "044f7670-ddbb-4977-8b32-6825ca788252",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5d9765a4-ad26-4a60-95b6-12781e1f7d9c"
        },
        "item": {
          "id": "ab5c9462-f7b1-49c3-b1dd-43cd207fbb4f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1720671e-5fd3-4e36-9fff-b09ff43de83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea80d01-ad08-44f2-87bc-e3677ab616d7",
        "cursor": {
          "ref": "66219147-180a-4ddf-b089-ff45bd5b9a07",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f8f654c7-2f2c-43c8-8edf-71b965ad59a8"
        },
        "item": {
          "id": "aea80d01-ad08-44f2-87bc-e3677ab616d7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cefa7096-f148-4851-9d78-c80d8a4e5d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f41b69-335a-45de-ae2a-75346d7a9eb3",
        "cursor": {
          "ref": "49906a44-9a0a-4aa4-abfb-d03180226f2f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dce80f90-eca6-456d-9837-0a62ba7ee1dd"
        },
        "item": {
          "id": "95f41b69-335a-45de-ae2a-75346d7a9eb3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "697d101e-6da5-437a-b066-6e7197732655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5e8c0c-29b8-4903-bb8a-62bf72ac7129",
        "cursor": {
          "ref": "291b58ee-56ea-43ca-a0d7-94e39cb32ef4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ee7b6a7c-2b48-4b6b-b879-fb385d55b66c"
        },
        "item": {
          "id": "9c5e8c0c-29b8-4903-bb8a-62bf72ac7129",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "771fdd74-9913-4af3-97f2-f0da8dd00c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58154426-dcf5-4e2b-bca0-da67328e08bc",
        "cursor": {
          "ref": "fa12c0c4-a589-4993-b64b-982a755f6d5b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fd986ae9-b1fd-42f8-bdde-e1508357aea6"
        },
        "item": {
          "id": "58154426-dcf5-4e2b-bca0-da67328e08bc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "54bdbe4e-3ec3-44ae-a2cf-f0291a080144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527c31a4-fe6a-4a3b-90ec-d4c885042cff",
        "cursor": {
          "ref": "55568a89-c5e7-4b02-bb02-f16f0c23a053",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "03fe315e-143d-4581-8b1c-06716c79348a"
        },
        "item": {
          "id": "527c31a4-fe6a-4a3b-90ec-d4c885042cff",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "79329470-8c2b-48bf-b489-112f5a41dc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570e0ffb-6ea9-49ba-8e41-000559c52303",
        "cursor": {
          "ref": "09eea74d-9020-4e9d-85b9-7119ee1e3111",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd6bebdc-3508-4ae4-9f80-dd6fd2f840b7"
        },
        "item": {
          "id": "570e0ffb-6ea9-49ba-8e41-000559c52303",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "64602385-35e1-4fdb-8ec1-fdda41444d69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98c350b-2b8d-4447-a742-93b8ec8a0e51",
        "cursor": {
          "ref": "e90b0dc6-e3a5-46e7-9fb5-a0f014df1029",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "21f5564d-a671-4700-b9da-6b2ad4aa2d77"
        },
        "item": {
          "id": "d98c350b-2b8d-4447-a742-93b8ec8a0e51",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c112e428-240f-4b41-9004-58447f69c579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dd521a-51e6-4e0f-9c3a-322fe5a5cbd7",
        "cursor": {
          "ref": "19a64e85-54cb-4663-a890-e6bf7086669d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "364c9ab3-020d-41fc-a4b2-6d28ac7abe40"
        },
        "item": {
          "id": "81dd521a-51e6-4e0f-9c3a-322fe5a5cbd7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a5aa77fa-37fc-43b4-b240-b67df305fc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66179a30-fe06-49ad-a493-9bbb496914b0",
        "cursor": {
          "ref": "518939cc-38ef-445e-8f67-8698b25a6c3c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "abd4b7b3-c304-4560-8963-2959c76d65b6"
        },
        "item": {
          "id": "66179a30-fe06-49ad-a493-9bbb496914b0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "69d9aa28-ed54-4a21-97e9-70557430c27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f153f1-2072-455a-a643-b03092ecc266",
        "cursor": {
          "ref": "92dcedf3-5be0-463d-9d3c-70c93807cc4c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "01d933e3-eed1-4a1a-9236-68b720d4b268"
        },
        "item": {
          "id": "07f153f1-2072-455a-a643-b03092ecc266",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "997e60a0-08ca-4eb8-b3c4-3d863f352f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabb6c85-b77e-475a-bfa6-00b3e65e0579",
        "cursor": {
          "ref": "b770c91a-aa7a-468a-82ab-91e2010457a7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "264dcbf5-ff4d-46bf-bcf7-57902fc552a7"
        },
        "item": {
          "id": "cabb6c85-b77e-475a-bfa6-00b3e65e0579",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bc025d98-95ce-4226-b1b4-cad745167ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b2a7e2-f7a7-4ddb-a076-89b03559e4d7",
        "cursor": {
          "ref": "4905997b-7aee-4da2-818c-65492e360a74",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "57662c3e-a9af-462f-b7ff-5e8dbf8fecf0"
        },
        "item": {
          "id": "97b2a7e2-f7a7-4ddb-a076-89b03559e4d7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c225c0b9-3d06-4b90-9b65-3cf00092d32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a28ab2e-58dc-42c2-9245-f4c305daac98",
        "cursor": {
          "ref": "835cfbb1-0285-44f8-8dda-571d8a11c24c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "73135e4e-592b-4551-80fa-9677914776de"
        },
        "item": {
          "id": "6a28ab2e-58dc-42c2-9245-f4c305daac98",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d790264-e529-40b0-adff-beb117cdfc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010ffe65-a58a-4aad-a629-6d975ac97190",
        "cursor": {
          "ref": "1e78659d-e93d-4e31-a655-3ce611235227",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d938dc2c-73f6-4c6a-8435-b96deee95b2a"
        },
        "item": {
          "id": "010ffe65-a58a-4aad-a629-6d975ac97190",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7016b255-b59e-42b6-ac49-2d8f02591f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce04c5c8-8c55-419d-bb60-0a9056fc981d",
        "cursor": {
          "ref": "02896bf1-d98e-492f-bc0b-b56880695f05",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6e2558a8-a500-4b36-89c9-c9be8dea8095"
        },
        "item": {
          "id": "ce04c5c8-8c55-419d-bb60-0a9056fc981d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2d4e7210-9397-4c1d-ba42-a97865e32dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6483c9c2-0064-4fb6-85f8-7a420aa302e0",
        "cursor": {
          "ref": "41c40bf5-ba87-485c-ba9a-9c08581ac7ac",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2e1f9611-eb68-449e-ac8a-2fe1396e6987"
        },
        "item": {
          "id": "6483c9c2-0064-4fb6-85f8-7a420aa302e0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cb4a918e-3b24-4616-bc96-2cd54d64de8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a7fb78-8f5c-4d99-8421-8c0e59ccf5d9",
        "cursor": {
          "ref": "b83ca8cf-8bd9-41a6-bf56-5d872953982e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8bc397de-4fb4-4b5d-9391-488f91d35bd1"
        },
        "item": {
          "id": "76a7fb78-8f5c-4d99-8421-8c0e59ccf5d9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cba78484-820f-478c-bb79-f71375a20d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25744d4-7e49-43a1-818c-52099f7c5ff6",
        "cursor": {
          "ref": "e0e8d482-82f9-421c-80c1-82bed970ede5",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5abe462c-ec4a-4fd8-b26c-7e6e34f19261"
        },
        "item": {
          "id": "b25744d4-7e49-43a1-818c-52099f7c5ff6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7a51c245-0ca3-4e8a-b37e-77d8d25cc9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff180a6-84c2-41fe-839d-91f502ba7735",
        "cursor": {
          "ref": "0a00e019-3f66-4876-847d-ebc5ea1b80d8",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a7af4db7-55fa-454e-93ed-38e3692f4eec"
        },
        "item": {
          "id": "3ff180a6-84c2-41fe-839d-91f502ba7735",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0b4abac5-2442-47c7-b3da-81b01ad32e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0030345-1d02-4fcc-8248-9b93c4b76056",
        "cursor": {
          "ref": "d5ce9c4d-5598-4ecb-a9f5-cb0b0cd051d8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5b58c049-9aeb-4999-962d-738b194425f9"
        },
        "item": {
          "id": "f0030345-1d02-4fcc-8248-9b93c4b76056",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c0eaaad2-00f7-4742-870b-a357bcf5b845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a1b9af-6864-4622-a323-e3bb19caf370",
        "cursor": {
          "ref": "c590dc3d-9c28-477b-b1f0-a2e1ce2cdd8f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "614a6e13-eb86-4233-ba8f-03bcf33887cc"
        },
        "item": {
          "id": "25a1b9af-6864-4622-a323-e3bb19caf370",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bb78dc1d-3e41-4952-a601-14228d4f8d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabf3454-0197-4453-875f-b59a2b3c2bf6",
        "cursor": {
          "ref": "b7c8523f-7a9f-4868-9d4a-0aae742742a1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "92626e1b-c74d-45c1-ae69-97aecdfe2c58"
        },
        "item": {
          "id": "fabf3454-0197-4453-875f-b59a2b3c2bf6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0224dd0b-56d7-4849-9dfa-0691132dfd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3bf7c9-3d24-42be-89af-bd028837a1d9",
        "cursor": {
          "ref": "78a0ef53-6310-4557-8bce-b54ddb2f0a97",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a1fb08a1-2dc1-4720-bf26-0f3b80ae5036"
        },
        "item": {
          "id": "7e3bf7c9-3d24-42be-89af-bd028837a1d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6ea67c5d-94b7-4204-bff0-6e364e8517f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b28076-6848-46ce-97f9-810ffe8da36d",
        "cursor": {
          "ref": "8333f834-a591-43d9-8791-f9ded128b1df",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aa1cc89f-50a9-4e35-991c-94d00ce6e1e4"
        },
        "item": {
          "id": "e2b28076-6848-46ce-97f9-810ffe8da36d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "63ffa424-c148-4752-a520-b59b1f812e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c661e31f-d648-457a-bcbe-31869aa43a95",
        "cursor": {
          "ref": "f1c5f3d6-d2e3-4d55-8942-350c2feb9ae3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "49fc3e2f-4813-470a-abda-8b3ec87e2907"
        },
        "item": {
          "id": "c661e31f-d648-457a-bcbe-31869aa43a95",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "03d66e00-df2a-4073-9f68-64b0177fbc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b16cc2-ef7a-467d-8247-307d3a37b8bf",
        "cursor": {
          "ref": "69d1c301-d81f-40fb-b249-4ee026980287",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6ad90178-40f5-4d50-9e7a-1a0c55491a90"
        },
        "item": {
          "id": "39b16cc2-ef7a-467d-8247-307d3a37b8bf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "706995f3-bdc9-43bf-8b2d-678ad4afe956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e03fde3-af57-4baf-806c-daa68751a2b7",
        "cursor": {
          "ref": "e8989cbc-c4d0-429f-be19-0ef23b9e0490",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "07e2ab63-5dd3-4a43-8e50-bd074012b343"
        },
        "item": {
          "id": "8e03fde3-af57-4baf-806c-daa68751a2b7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4583f8ec-4267-467e-af27-f0ea4d5bba45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2720bd8-de22-4598-ad16-40edfa5ff352",
        "cursor": {
          "ref": "525f80a9-207a-4205-8bb7-fda5cea6dd70",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bc86f212-f896-46f6-91a1-bf4d4c6d2ac1"
        },
        "item": {
          "id": "f2720bd8-de22-4598-ad16-40edfa5ff352",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4ce2348d-e0c2-4af9-b5e7-ae383e3e6aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5fbc32-5371-4f1e-b1ce-06bae2a5b352",
        "cursor": {
          "ref": "b36382ca-1a52-4f98-a76e-d36856f30a2e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e9b55b0-3b48-42f1-8e40-179e33b2c400"
        },
        "item": {
          "id": "0b5fbc32-5371-4f1e-b1ce-06bae2a5b352",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "769dead2-3bbd-45de-a8c0-d14a68c404ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f0ff50-2ea0-40ae-98b4-fdcb962cb4ab",
        "cursor": {
          "ref": "336cd548-80b4-45d5-b216-301897ffaf0f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b27acffe-ec0a-4abc-b7d3-ed2df19de937"
        },
        "item": {
          "id": "e7f0ff50-2ea0-40ae-98b4-fdcb962cb4ab",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3d25b043-a3f7-49b6-be4f-b8c83407bd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125f6d53-24f9-411f-b4b4-f9fb9527701c",
        "cursor": {
          "ref": "09baa058-f9ba-49de-99ca-94bbb0a55640",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f5a22c20-894a-43e5-9edf-5a1a8226ff7b"
        },
        "item": {
          "id": "125f6d53-24f9-411f-b4b4-f9fb9527701c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c8811afa-0f8f-4081-91dc-df70e81f0de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab29bed-2fa9-44d4-bbe7-71b210e3fe34",
        "cursor": {
          "ref": "1792ddd4-f8c7-4d42-87c1-e69f867fa1f3",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3d98a354-0ec4-41eb-9301-636f9fe036af"
        },
        "item": {
          "id": "6ab29bed-2fa9-44d4-bbe7-71b210e3fe34",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2a39c52b-913d-47ea-8e9c-c591e5f923e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3d9d06-00b3-45eb-a1d5-56bdf2f1179e",
        "cursor": {
          "ref": "87fc526e-0c8b-4377-afcf-efa82015772e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7f574c6c-bfb2-4be1-9d60-b7a2f921dca5"
        },
        "item": {
          "id": "cb3d9d06-00b3-45eb-a1d5-56bdf2f1179e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "223bd34f-5dd0-44e4-8777-bf87ab027a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6785ae6f-c327-477f-a1d3-cc362a0d9cab",
        "cursor": {
          "ref": "2cad2e6f-5c84-4ab9-a90f-38c400aab2b0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e57fe321-528f-43cd-b263-8f1a44e24356"
        },
        "item": {
          "id": "6785ae6f-c327-477f-a1d3-cc362a0d9cab",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "46d91069-b55b-4673-bc3a-8b019756ea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddfe5c2-877a-46e2-9ecf-a185b5d00eac",
        "cursor": {
          "ref": "7450677b-5d42-4411-9d0e-d8783f29fe1a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1729c08d-93e0-4b7c-888f-5a1a84fbd4ab"
        },
        "item": {
          "id": "1ddfe5c2-877a-46e2-9ecf-a185b5d00eac",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fae7c0ad-ad5c-4e73-b351-81cab7c2b871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d3a4c2-d10a-47a2-90ae-88d5de08b66d",
        "cursor": {
          "ref": "2cb7c343-80cf-4556-88cd-0ee6921f3d3b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5484c0c9-6da3-4c1f-851f-c2e5c63f0722"
        },
        "item": {
          "id": "01d3a4c2-d10a-47a2-90ae-88d5de08b66d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0d0b21f9-c09f-4742-8508-507789be925c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee9e88f-0554-4be4-af26-cdda8fe8f155",
        "cursor": {
          "ref": "2c48d01d-f53a-4841-b505-5eddd24be67b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8805e0b4-2b32-43bb-928d-6b10024057d0"
        },
        "item": {
          "id": "dee9e88f-0554-4be4-af26-cdda8fe8f155",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bb4b1df4-dcad-4c4c-bfce-f4bff4f9b7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa89a7f-6fa8-412f-930d-65e611211870",
        "cursor": {
          "ref": "e5e3d33c-3069-4391-a889-21f401ef5838",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "effe5b1c-2333-4495-aacd-7571dbe6012b"
        },
        "item": {
          "id": "7fa89a7f-6fa8-412f-930d-65e611211870",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "745f0a86-db15-47d7-9129-775f487e11fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03cb0cf-2aca-473b-b557-e1b8d01dd4eb",
        "cursor": {
          "ref": "d804d537-4358-4fe5-aaf5-90a722365616",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bb146d83-c067-4bdc-887a-7946014e706e"
        },
        "item": {
          "id": "e03cb0cf-2aca-473b-b557-e1b8d01dd4eb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "981a353e-7b5c-42b3-9937-15bf900b1dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710997d0-03a8-42b2-97e9-2b961e588911",
        "cursor": {
          "ref": "29651c39-9117-4386-8260-e22600603d50",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "65b49cf8-3e9b-4ea7-a8f7-4d096326c41c"
        },
        "item": {
          "id": "710997d0-03a8-42b2-97e9-2b961e588911",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ec5a7a17-67a3-4d8f-86bc-b14c366eba41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00508e8-4569-4b09-a9c9-bae3eca6abbc",
        "cursor": {
          "ref": "f8af530c-48c7-405a-b2ae-aa6dca8e15dd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "62bcbaf0-1dbc-4ab3-b893-4814e160cc71"
        },
        "item": {
          "id": "e00508e8-4569-4b09-a9c9-bae3eca6abbc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7bc3becb-2cfd-4926-b283-58d586562b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a041607-f0d4-4334-ada7-64c178956706",
        "cursor": {
          "ref": "f5f246b6-e8da-4955-83b3-7b8cb447aee6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "71ea43c5-af31-46ed-86c5-1edca1dd9c0e"
        },
        "item": {
          "id": "7a041607-f0d4-4334-ada7-64c178956706",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b8dac2ac-8ff2-43db-914b-bb3ed76acbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292ca83a-3b09-4262-8961-5b13a39eac87",
        "cursor": {
          "ref": "57a06bdd-dbc4-4bf4-889b-122962590fa9",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "10e39140-0ba6-4265-b773-ca19b33c1a41"
        },
        "item": {
          "id": "292ca83a-3b09-4262-8961-5b13a39eac87",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3f48d4b3-0f8d-4ea0-817e-3ecd2bedd9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677c81ef-dd20-4608-9df7-3fcdbd805dfd",
        "cursor": {
          "ref": "f9232f65-b180-43b6-aafa-bd24f5db3c22",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5f700da3-0a9f-4d89-abc8-0e93d1932ab2"
        },
        "item": {
          "id": "677c81ef-dd20-4608-9df7-3fcdbd805dfd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6a9cfe60-d15c-4a65-8586-3ad27fbc2f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cea2fb-0a47-4410-8780-e3813fb04fbf",
        "cursor": {
          "ref": "1b92e41e-e275-40d7-9542-c4fd39786a68",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75484e91-ecf5-46db-acc0-151f23efd1f3"
        },
        "item": {
          "id": "73cea2fb-0a47-4410-8780-e3813fb04fbf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "12456649-86f1-4dd0-8b1f-0aa5a38e24df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f277b42-3110-49b4-89b7-4a689422f434",
        "cursor": {
          "ref": "50d6f16c-862c-4e0e-abc8-9e4975553c50",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e38f46ca-8696-4b90-9c33-d34e8aaca2bf"
        },
        "item": {
          "id": "1f277b42-3110-49b4-89b7-4a689422f434",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1391067e-c0e8-4d6d-a816-9947b52aad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f53aaf9-7809-4802-87d1-7902691f8d43",
        "cursor": {
          "ref": "bdfa6fd0-9bf7-4d51-9b39-7cd5b2c37091",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "28188b4d-827a-41bb-9507-a4d4caebcce2"
        },
        "item": {
          "id": "0f53aaf9-7809-4802-87d1-7902691f8d43",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5627b5ba-42d3-4832-835c-624b30f16d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73294abe-0cc8-43b4-b912-e3bb2e1f48b8",
        "cursor": {
          "ref": "42a9da34-62b7-4a64-90aa-efb49f4dc432",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f18dfb7e-6306-44dd-8d04-fe419b2347fb"
        },
        "item": {
          "id": "73294abe-0cc8-43b4-b912-e3bb2e1f48b8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a2cbbb23-5572-4cdf-a589-d95bd41cb893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2170cbc9-d773-41f1-875a-09e531bb94ed",
        "cursor": {
          "ref": "fcf30723-c4f0-48ec-bb1a-fd26230ee403",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "39c228d4-329b-4347-9eaf-a8711cc7f90f"
        },
        "item": {
          "id": "2170cbc9-d773-41f1-875a-09e531bb94ed",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8ecdbac5-4863-4542-b02e-1ecf8657fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206b5ef3-fe30-43db-b126-0f453be68f01",
        "cursor": {
          "ref": "fbae4b6c-26cb-4780-b0eb-709612d002b9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e0eeb599-df7a-43d5-818f-729d9cd84be1"
        },
        "item": {
          "id": "206b5ef3-fe30-43db-b126-0f453be68f01",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "67289c68-ad75-4c46-8c42-834f9a8a260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cc23d5-2419-4a08-bf7b-d36968fa190c",
        "cursor": {
          "ref": "799dd9b2-fc50-48b0-b9ce-f510480430ef",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a4564984-5488-4080-8f61-066b5dcf1e78"
        },
        "item": {
          "id": "b5cc23d5-2419-4a08-bf7b-d36968fa190c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c8630d33-d8c7-48d5-99ee-2131c2ac6e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968578c1-ebad-411d-b21f-f7f5a96c3699",
        "cursor": {
          "ref": "1865c833-7817-4aee-b7cf-82b3db3d40b8",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9cc5a571-c746-4574-bc9e-d108f4c1205a"
        },
        "item": {
          "id": "968578c1-ebad-411d-b21f-f7f5a96c3699",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8a14cf69-47ba-42d7-8337-7f5883ff52ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eee915-6766-40ca-96e8-42eca2e7255f",
        "cursor": {
          "ref": "d4a6ad29-6502-453c-8018-3c1891bfb49b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dd76a5ca-ff98-47f6-aae3-18176bf8a08e"
        },
        "item": {
          "id": "c1eee915-6766-40ca-96e8-42eca2e7255f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2646dde6-2d60-403e-8e6c-59fb964ac5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d52be60-2deb-46fa-817e-5cdf32eaef8c",
        "cursor": {
          "ref": "33ffcf00-177d-4f72-9730-e5ca0645df45",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bb2858cf-19c1-462f-8459-154e75ea344d"
        },
        "item": {
          "id": "9d52be60-2deb-46fa-817e-5cdf32eaef8c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5e7e57d4-ea82-4808-9d46-07af936fe996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4d4210-88d0-4d97-b07e-95bfbedb67a1",
        "cursor": {
          "ref": "9946ca6c-4152-4cd1-9bf5-fe64cb7689ce",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f84d6c68-15b8-4e1f-a76b-ead1a3175001"
        },
        "item": {
          "id": "5b4d4210-88d0-4d97-b07e-95bfbedb67a1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "060cf0f4-6042-46ea-a341-32cbff63cb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57282a52-5407-4c71-8772-4267d6a2d72d",
        "cursor": {
          "ref": "c909bd72-c7fb-4aa1-a38a-4e3410c20c62",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "477bfefc-a88e-4b5d-976f-06308a106415"
        },
        "item": {
          "id": "57282a52-5407-4c71-8772-4267d6a2d72d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0d093aea-fff6-4470-8344-2133d5a85023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b98cc53-e329-4d97-9892-00b7fb6750b3",
        "cursor": {
          "ref": "5fec80c7-3ac7-432b-ac8a-e06b6092bc0f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "19705213-d947-4014-bb8c-5d0b25475ef9"
        },
        "item": {
          "id": "5b98cc53-e329-4d97-9892-00b7fb6750b3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "51ee2d6e-6586-49f6-83f6-6f9393d12440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2e89fc-5cc7-410a-9ed4-a016f070a446",
        "cursor": {
          "ref": "d81a36b3-f2c7-4f93-a60e-26a7f713f1d6",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d39e6392-095b-425c-a677-bec28dc03fb0"
        },
        "item": {
          "id": "5f2e89fc-5cc7-410a-9ed4-a016f070a446",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "838141b9-cc2b-416d-ae82-922851181f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254c6132-7fa5-4887-be1f-d0093a5bd9ff",
        "cursor": {
          "ref": "2ee2312d-a54f-4e8f-917d-d372d89dc660",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ce447a08-3f69-491b-a9d8-26999f017079"
        },
        "item": {
          "id": "254c6132-7fa5-4887-be1f-d0093a5bd9ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "37b4a5e9-2055-4023-ae4e-2d1ed04ee972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410f3437-aca1-4489-8790-49dd4df65a37",
        "cursor": {
          "ref": "b83f9747-7ba7-4d64-b96c-6a2ec4b88cd5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc823734-0b36-4b91-b662-80abda84468f"
        },
        "item": {
          "id": "410f3437-aca1-4489-8790-49dd4df65a37",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ce501522-aab6-480c-81ac-477ac46906cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dc4c1c-715e-4a82-8bee-c4eec2a48649",
        "cursor": {
          "ref": "2fe931fe-8544-4f13-8ab5-b4832eeeef6c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "50ae4a91-1114-45c9-b17f-54623a7e7602"
        },
        "item": {
          "id": "c1dc4c1c-715e-4a82-8bee-c4eec2a48649",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3e578983-968b-4d4c-8b21-97344219fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d7c8c2-3a64-476a-ab31-46f0049b4df3",
        "cursor": {
          "ref": "cd8ec1c5-ff2f-4053-a5a4-dd5cde3d2bd6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a8e26ff3-5852-4895-bc46-64cd4c723dab"
        },
        "item": {
          "id": "25d7c8c2-3a64-476a-ab31-46f0049b4df3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a72162ff-ac93-4c66-aba4-0800c2db9c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488eae57-fb15-4f17-9c02-678c74efdb9f",
        "cursor": {
          "ref": "681d9425-baba-45a4-bf13-6bdd7d757579",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "db1272ab-808e-4946-adf0-900547803adc"
        },
        "item": {
          "id": "488eae57-fb15-4f17-9c02-678c74efdb9f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56123d1b-4546-4e4f-973f-8361cf49a055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca29429-3b7b-4b53-a667-8fd2054b3a14",
        "cursor": {
          "ref": "ece3275f-b5ab-4744-b93b-65dbd5a52a91",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "feda7748-7a3f-44dc-8dc6-54b8c7ad98ec"
        },
        "item": {
          "id": "2ca29429-3b7b-4b53-a667-8fd2054b3a14",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8aa3325b-4cc2-4f36-9c57-08f54984defd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6b1727-4540-46f0-b493-e78933fe31d1",
        "cursor": {
          "ref": "f30843be-ff22-46a5-b413-f564d79d0d63",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fef85649-9798-4845-bb3c-e929d32c8f80"
        },
        "item": {
          "id": "3e6b1727-4540-46f0-b493-e78933fe31d1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "50465e3a-283b-4dc5-874e-b12cf655a652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ce57f3-db6f-44c3-88b2-0a59934818ea",
        "cursor": {
          "ref": "34883360-26b5-49ba-8c42-e6a34bcaa4c1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dd9cedcb-b09d-4e3a-8cad-cbb966f7e3f5"
        },
        "item": {
          "id": "43ce57f3-db6f-44c3-88b2-0a59934818ea",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a213f96a-451d-44ba-8f1c-2e144f33f366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187062b7-c4c8-407e-98c7-6b4ca9d41961",
        "cursor": {
          "ref": "b9b29305-04fa-42d1-be7a-6e94b772a066",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d1943e77-8ede-4f73-9b59-f16781bf562e"
        },
        "item": {
          "id": "187062b7-c4c8-407e-98c7-6b4ca9d41961",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2040211b-4d43-484b-be0c-887b426d36ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1866d5f0-3521-4cdb-ad74-37da19557371",
        "cursor": {
          "ref": "91238364-7d51-4f86-9657-ff35256444fb",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8805827a-9b97-42c1-b5db-336bb11e6fd0"
        },
        "item": {
          "id": "1866d5f0-3521-4cdb-ad74-37da19557371",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "88789b8d-bbe7-4ff3-adc3-23fff512f2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a129e1c-9ae7-4733-8703-c12c097bc6e4",
        "cursor": {
          "ref": "53bf232d-305d-4625-b6cb-06519542dc0e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "97f6ca9f-57e2-4599-8906-b46fe7037eaa"
        },
        "item": {
          "id": "4a129e1c-9ae7-4733-8703-c12c097bc6e4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa43d893-6b66-453b-824f-a958ea7fcd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5737889-8d83-476e-957f-3075940aae9a",
        "cursor": {
          "ref": "f5dfbb7c-66d9-470b-a942-d8fcb0035b7e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b62f0bfc-a3ea-481d-8b33-6f2423076a72"
        },
        "item": {
          "id": "a5737889-8d83-476e-957f-3075940aae9a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "44d2825f-0dbf-4495-bf8b-b552abecbead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b818a828-9760-4490-a659-6f08f6842028",
        "cursor": {
          "ref": "96386760-d9e2-40c1-818d-6405637992ea",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9636f74f-4cc1-4af2-a0b0-547956b13e6c"
        },
        "item": {
          "id": "b818a828-9760-4490-a659-6f08f6842028",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b9b7b012-8c9d-4ffd-ae60-2cc8c6ebb200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492d117b-5d34-4152-a5f9-a00a0f23e457",
        "cursor": {
          "ref": "2d46b421-f603-4e75-bf91-7c8938db036a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ba835621-f37f-4564-b78d-0011b92d0943"
        },
        "item": {
          "id": "492d117b-5d34-4152-a5f9-a00a0f23e457",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ef2a4a90-d4fb-41d4-8297-53a8edbbf17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8b247f-d175-42e8-a8ed-c5369c7e8e20",
        "cursor": {
          "ref": "72ed96d3-5e16-421e-8fbd-b01166541b45",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "121a0c38-43b5-4ce0-aff4-dd0a50566b7d"
        },
        "item": {
          "id": "4b8b247f-d175-42e8-a8ed-c5369c7e8e20",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1715aaf5-5188-4c5f-803d-3b45ae6d46d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c920a4e-68a3-419d-a82c-ab23079b7698",
        "cursor": {
          "ref": "4639fa2d-6660-453b-815a-cf6eaf9695fc",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5f59afe9-fa8c-41f2-a561-5fa33847e9c0"
        },
        "item": {
          "id": "4c920a4e-68a3-419d-a82c-ab23079b7698",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fefa2595-6274-47b5-bb0d-8c1937401813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ce75be-b8c2-4162-8656-945fdf8fc7a7",
        "cursor": {
          "ref": "7d4cc5fb-e98a-41d9-8545-52633a4e5c48",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b104e5c7-0fe5-4890-911e-ff1e04f0355e"
        },
        "item": {
          "id": "e8ce75be-b8c2-4162-8656-945fdf8fc7a7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6758aad0-271d-4165-b6a3-a4b9f4e36571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd34b81e-1ac6-402b-be4f-e52852ade9ec",
        "cursor": {
          "ref": "e474e48c-33ce-4f10-a7d9-ed7c0042018d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bfa9040f-79f5-4d4b-9451-729124138cff"
        },
        "item": {
          "id": "bd34b81e-1ac6-402b-be4f-e52852ade9ec",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "20cab41b-55ac-4abf-b823-abaa42b1fe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15b09b1-7ef6-4da5-bd17-1563bc201217",
        "cursor": {
          "ref": "c5500d54-c4f0-4431-8c5c-1a9f953ca980",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "616fc139-843d-45a5-9ba0-f1018da9a0b8"
        },
        "item": {
          "id": "c15b09b1-7ef6-4da5-bd17-1563bc201217",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "631ce6a4-493e-49a4-8d71-02f37589617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7ae6b6-e983-4d0d-a51f-a3fb76e8e88b",
        "cursor": {
          "ref": "08d8b416-1508-4c5a-96b0-e982db01a6c7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bdf6ba2b-94bb-4c6c-81fb-3ba15b1858a4"
        },
        "item": {
          "id": "5e7ae6b6-e983-4d0d-a51f-a3fb76e8e88b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6d23b762-bdcd-4529-9c85-a6ff4bd87cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9d7a6b-defa-40d2-9b0b-89faf1ee1f49",
        "cursor": {
          "ref": "4280a027-0cf6-4b31-90c7-3c70adcafdd1",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a0a626d7-553a-4a4c-9543-232fd17633d4"
        },
        "item": {
          "id": "1b9d7a6b-defa-40d2-9b0b-89faf1ee1f49",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8b0988fc-6ee4-4313-b3e8-a3edda162198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a2d335-4161-4174-9848-e5631650d9c5",
        "cursor": {
          "ref": "7a3d738f-cc07-4acc-aced-258b125b3bf6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "817b3a14-509d-4a1c-94e7-05244c5310fc"
        },
        "item": {
          "id": "94a2d335-4161-4174-9848-e5631650d9c5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1bf8be04-4406-478b-9556-966a0b0283ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41275871-1def-442c-9e6f-d3a2bfbf05bc",
        "cursor": {
          "ref": "48c58508-73b9-429b-849a-0a6b172bfe5f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "43fc86d2-c65e-45bc-b4fd-d726827d29a6"
        },
        "item": {
          "id": "41275871-1def-442c-9e6f-d3a2bfbf05bc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72334de3-08b7-4fca-8d4c-dfde77dd8610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c7f255-0daa-42fa-a256-ab2d3ec6729e",
        "cursor": {
          "ref": "91a59605-438d-441f-891e-a007d23c9a75",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7811b1de-82b7-4379-bdb3-2867806f38e6"
        },
        "item": {
          "id": "60c7f255-0daa-42fa-a256-ab2d3ec6729e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "38f0b121-90a9-412f-81fd-024f07c7f230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e0a3a-4e85-4e74-bf2c-9e7f4363c317",
        "cursor": {
          "ref": "87245334-49d7-4580-9f4c-a395bd02b24f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "480d0a3f-7ec7-467d-869c-9c73b5f8ba1b"
        },
        "item": {
          "id": "f63e0a3a-4e85-4e74-bf2c-9e7f4363c317",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b8a6f308-5700-4a6c-8355-2afbd7a06bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e343fd-fe78-447b-9750-4dca97781435",
        "cursor": {
          "ref": "8d5db890-66b1-4c7e-8852-4abf52c19e9b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fb814fe2-e2b1-4493-9a24-d848d6dc1a9d"
        },
        "item": {
          "id": "f8e343fd-fe78-447b-9750-4dca97781435",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ec02cb5b-3851-42ba-9b5f-504d64b3f585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2302760a-a276-4661-894f-6615c5cdeb73",
        "cursor": {
          "ref": "43d8bd34-600e-4440-b3c5-4a72a6b8ae74",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7a16ea23-0f7b-4f77-b9c0-9d4d45d65d02"
        },
        "item": {
          "id": "2302760a-a276-4661-894f-6615c5cdeb73",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6a8a152d-b2f7-4bed-86e7-465520bb772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad58dde-b0a9-4833-856f-32e17620b4ea",
        "cursor": {
          "ref": "95cb3e72-6903-41c1-9d8c-c4aa49013bf9",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b8d30e7f-8536-436e-bddd-59f2a5152f30"
        },
        "item": {
          "id": "bad58dde-b0a9-4833-856f-32e17620b4ea",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "89b05a88-4125-4261-8856-f43bb7b2e363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308864c-a28b-45e3-bfa4-5f3d27cd0808",
        "cursor": {
          "ref": "62ea731a-82cc-4c1e-8ce4-cc5fa3f1e380",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9042fadd-7f3e-44b2-bf22-2a41363c9a9a"
        },
        "item": {
          "id": "a308864c-a28b-45e3-bfa4-5f3d27cd0808",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dd594fd0-2674-4c30-af76-bfba7f344fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315580e7-a80e-42bd-93d0-f32607fdcb65",
        "cursor": {
          "ref": "96397ed8-e164-410f-8e6b-011dbd1c2e05",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "166d8140-d3f3-46f1-8f04-4e8930f7499d"
        },
        "item": {
          "id": "315580e7-a80e-42bd-93d0-f32607fdcb65",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "31f12402-e5c6-418d-bd46-b3c38f7c438a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aacbdc-4b82-4455-aa2a-0d00e1237081",
        "cursor": {
          "ref": "fd5d673d-868f-4727-897a-5a6693b770d8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "78447698-19e1-4a61-a092-e9e9b85dbd60"
        },
        "item": {
          "id": "06aacbdc-4b82-4455-aa2a-0d00e1237081",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1989c9cf-1de1-4735-bf5d-46cdfd59f4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bce071-4102-433d-8b6d-78d6532230d3",
        "cursor": {
          "ref": "59405c8c-1a7e-415c-95f5-ca6d82654d6d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "55220b85-4d9b-4f3e-b58e-5624204955a3"
        },
        "item": {
          "id": "b8bce071-4102-433d-8b6d-78d6532230d3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "81152051-f458-4f24-a1e9-1c43f80ffcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e73bfb-6e42-4712-a13c-81f1d68e0e91",
        "cursor": {
          "ref": "45329b68-53cb-4a05-a110-f6c0a12a2389",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0af050b5-77a8-4f9c-909b-6155cabe0cbf"
        },
        "item": {
          "id": "39e73bfb-6e42-4712-a13c-81f1d68e0e91",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "056710d0-f89b-4f7d-a20d-638ed0c09131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b20d6c-e1f7-4d98-9a53-44e0eacd33be",
        "cursor": {
          "ref": "1422ad86-0a23-43c8-911b-e9450830478a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "514aea6c-677f-4a61-977c-c39733f61310"
        },
        "item": {
          "id": "79b20d6c-e1f7-4d98-9a53-44e0eacd33be",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d4419e27-f648-4042-ab30-b6fcb1cc8d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6b4952-d9c5-4405-bef8-c77cc895f97e",
        "cursor": {
          "ref": "38bbfe64-8ef0-408b-9232-af2d5f570a6d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "645aca2e-f62b-466b-befe-23b7392e7210"
        },
        "item": {
          "id": "ca6b4952-d9c5-4405-bef8-c77cc895f97e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f4af9175-293f-41d7-abcf-2431478c353a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822d4190-1504-4d40-a25e-a6b27999176f",
        "cursor": {
          "ref": "8ba2bc86-494c-4b6d-970f-23a71c70fd1d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ecda3d7e-6a08-4408-9852-b6810c48f09b"
        },
        "item": {
          "id": "822d4190-1504-4d40-a25e-a6b27999176f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5cf45617-5ffc-4887-9517-9b1b2a138de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e837199-007d-4e6d-b766-0b6b95dfdb98",
        "cursor": {
          "ref": "82e9d10a-cdf3-40f5-a331-ef122d8bb695",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "213ebbfc-e026-4f6c-91db-4149d28c513b"
        },
        "item": {
          "id": "3e837199-007d-4e6d-b766-0b6b95dfdb98",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b7753327-8eca-4938-9bc9-9dd9bd5de575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdfa126-47a6-4a75-9120-cb6135f4a6af",
        "cursor": {
          "ref": "cb81cbc1-f71d-49c7-89c7-3dfccc7a5f20",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c02a533d-f691-4869-8fd8-6fdee5dbdb1d"
        },
        "item": {
          "id": "ffdfa126-47a6-4a75-9120-cb6135f4a6af",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4105c1b7-83dd-4cad-89d3-deeb1f4a2b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f4a31b-8b16-4363-ba2d-ddcd3cecbb79",
        "cursor": {
          "ref": "a4ea5ef8-e9b1-499c-8e12-c2735d05a0d9",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bd21917f-fb1c-4929-8942-ec85541e5f51"
        },
        "item": {
          "id": "16f4a31b-8b16-4363-ba2d-ddcd3cecbb79",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d5f982a7-eabb-43b0-8aa7-e12a59880559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fced86-0abc-4052-b6e6-1c2cd634ca20",
        "cursor": {
          "ref": "f8022cc9-3eac-4a43-af92-cf5787e9523b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "41d15882-d4be-4d8c-9143-7dfcf55da132"
        },
        "item": {
          "id": "93fced86-0abc-4052-b6e6-1c2cd634ca20",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f6660e5b-1e07-462f-8298-ed75a9d0d5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c024f31a-46c8-4461-a772-6a0160befd4e",
        "cursor": {
          "ref": "bf5e284b-9476-4b7e-bcbd-3dcd90910c89",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9a49eb92-7cb5-48f0-8b17-95ede9bb08a3"
        },
        "item": {
          "id": "c024f31a-46c8-4461-a772-6a0160befd4e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8dd32d3b-9686-4fb0-b805-c28b8bd9b528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9c6505-3504-4a15-b8b0-7d35d7f021c2",
        "cursor": {
          "ref": "f35ec45b-b6c5-4841-8508-78135b040abf",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "addccfe5-c3cf-4693-8389-72261d923a91"
        },
        "item": {
          "id": "eb9c6505-3504-4a15-b8b0-7d35d7f021c2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7fedd7e3-de3e-453a-8a94-c87e98d7fc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde1ca9e-fe60-40f8-94fe-b181cc219f56",
        "cursor": {
          "ref": "764ba70b-3ea1-4329-bb7d-3e1220abd047",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6636380a-9187-40e6-a9de-0113f5335fc4"
        },
        "item": {
          "id": "fde1ca9e-fe60-40f8-94fe-b181cc219f56",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "caeed4e8-b6a9-4d91-b8f5-cf7c41347801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9794f1e-973b-45b2-ba53-2e9a58c171e6",
        "cursor": {
          "ref": "2e571cb3-a5d2-4502-b4d4-894b888f6423",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ff18ec1a-3369-48b8-821d-2d7b88cad524"
        },
        "item": {
          "id": "a9794f1e-973b-45b2-ba53-2e9a58c171e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a7214df8-dd16-4dc1-ba9f-3faeccc6447d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1102ec56-2737-4bac-a181-8e98b1dc1bee",
        "cursor": {
          "ref": "db19a614-637e-4625-b51b-26d4bc4b183b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "daeeb845-0377-4c9c-9616-7fea3e92f11e"
        },
        "item": {
          "id": "1102ec56-2737-4bac-a181-8e98b1dc1bee",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "75c76a7e-05a5-462a-a41f-23c9e9cfcb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c27a58a-949a-4959-93e2-aac8d21d9a19",
        "cursor": {
          "ref": "46f11fc4-352d-4836-b88a-256dceeee352",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "89a897f3-5ef6-4298-b665-6a0458102cc8"
        },
        "item": {
          "id": "8c27a58a-949a-4959-93e2-aac8d21d9a19",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fcf9bf59-40df-4db9-8961-a6d39fb37d86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88574272-b91c-4542-a654-13c0b9c78f9d",
        "cursor": {
          "ref": "eb83cf36-92de-4bc7-ad54-c66a9fc8f164",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e5a56941-ef8d-4e52-aca7-b271873e4fbb"
        },
        "item": {
          "id": "88574272-b91c-4542-a654-13c0b9c78f9d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dc2b2c71-3e4a-451f-82e0-d5820d0ddb33",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "618b5a8f-3dfd-496a-98af-5f8646730264",
        "cursor": {
          "ref": "49688e25-430e-447d-9b59-2097fa8f0348",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "029b92b1-e801-419d-9160-95f9acb461d3"
        },
        "item": {
          "id": "618b5a8f-3dfd-496a-98af-5f8646730264",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1ce3e3a4-d12f-4b73-8491-0e24e9470d3b",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "424efcb8-05cc-4098-97a6-65504d1997bc",
        "cursor": {
          "ref": "979f70ea-b832-4be6-b160-54187f326b23",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bd557bfe-d376-46dd-b430-d47eb500d18e"
        },
        "item": {
          "id": "424efcb8-05cc-4098-97a6-65504d1997bc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8bbd448c-0985-4de7-a9f3-53f68189faf5",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4787bc4-8e1f-4c23-83da-6d06432f3b9d",
        "cursor": {
          "ref": "1bd6ee98-4a28-497d-87c0-1e9e7b0c82ed",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99c60b32-fb6d-4063-ba91-f0b6a680ce3c"
        },
        "item": {
          "id": "b4787bc4-8e1f-4c23-83da-6d06432f3b9d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b3fd4a5-954c-48d9-a8f9-ecee22441070",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4787bc4-8e1f-4c23-83da-6d06432f3b9d",
        "cursor": {
          "ref": "1bd6ee98-4a28-497d-87c0-1e9e7b0c82ed",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99c60b32-fb6d-4063-ba91-f0b6a680ce3c"
        },
        "item": {
          "id": "b4787bc4-8e1f-4c23-83da-6d06432f3b9d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b3fd4a5-954c-48d9-a8f9-ecee22441070",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa2d3bf-adf0-4a8e-a13c-2d1c715bc390",
        "cursor": {
          "ref": "e59a1b3c-1851-4d60-b4f8-991021011546",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0b8836b3-d679-4ce9-a2f2-97dfb79ce26e"
        },
        "item": {
          "id": "5fa2d3bf-adf0-4a8e-a13c-2d1c715bc390",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1eb91828-92a2-428c-8b88-e0058b70b20b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbe5100-117b-41bc-a662-90ed4b134920",
        "cursor": {
          "ref": "49e5c732-f98c-42b5-b35f-64462e11e1d5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "742a6ae5-86dc-476b-bad4-fe039c1e419c"
        },
        "item": {
          "id": "cbbe5100-117b-41bc-a662-90ed4b134920",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea8b30aa-6fd0-4b39-9131-6214d3b1ffd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}