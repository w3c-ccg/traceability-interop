{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f5d43410-3ef0-4a3e-946b-4aec9c669bc6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0a8e07ad-07b9-4a65-aa34-47053d92a025",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2212fa9-cf7d-4067-b21c-4ad389b2edec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9beb2661-5780-4819-a88e-f685277b932a"
                }
              }
            ]
          },
          {
            "id": "0a5126ac-23e9-4030-8c1c-762c2f21604b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "986d1f43-d8c7-46f4-9b6c-50a59697849a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f34aa3cc-ded0-43a6-86a0-e3b3148bbd56"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6bc656f6-0930-4a0f-9336-52e36a4bd8d2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "050d8cf9-9617-46bf-9809-ff3d83a889b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80c97f66-e55f-4a1d-b7e3-516d1fa415ba",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f16c483c-638b-4d27-bd9a-30650b907f70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ac69547-db3c-4fca-9b4f-b8efd7983f84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a7dce1d-8ce7-431d-901e-7d21acb9c9c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a39bdfc-a1d3-4f48-ba1a-7880347e9bc6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "853a48d7-0cba-4b90-9b38-ef9ab29e7144",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4585549c-f41d-4dbb-8405-bb5be943044e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f538f4b0-1019-4757-b4aa-3aca515c43a3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b0fb35c0-f734-4571-a3bf-623888d5a3ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a885548f-d6a7-47d6-bea6-8b85f7e11b91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32e09adf-21be-47bc-8f78-6513e1a318ef"
            }
          }
        ]
      },
      {
        "id": "f00bc9c1-8e9e-4aa3-884a-c588ce3fa259",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "52838ef4-bea6-4799-8035-9019c467fb8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1baa95a3-639f-4f6e-9c3f-c0ca7e26c53b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ecdb6a2-3d5a-427f-b2f5-8cdd366b9daa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a4de8c-c7cf-4b38-a0fd-294095dcab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b4990dc-165d-4b7e-8c1e-fbb932e44971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04621477-eab1-45f2-b0e6-c7e0208515ed",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741601e8-553d-4c65-a78b-149c572d0f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03306cd8-6b5b-4104-a07c-a298e4de2fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6146f6-921a-4656-8966-0b623909ab02",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf51ae2-7a80-4275-ac08-9d7161ad61d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09a2b232-cbb2-4e6f-bc48-24cb880eb4a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6913bee4-95a8-4844-ad67-73d2f4e9876b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b84401d-a6d3-4baa-9f5a-1d57305711a5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be25d26-1909-4172-89bd-46bc322fa242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a39b1a9-e34c-4b1d-a2d3-352f2b1fe9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79435bca-df9a-4313-adc9-f770c48cea64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5b6383-4014-415f-b51d-e0616fd481be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0cdaa3d5-2a80-4d17-b980-6753119e83d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afd6fb5b-6636-40c9-ba7f-15c900663fa0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "592bcd79-b5d6-4a44-8fa4-8f3266b79536",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e7bfc466-7189-41fa-8021-afb9ad6f5239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e88dc1b6-e3a1-445f-a024-281a00793839",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2bff2ccc-339c-4879-9c7c-ed161f2d956e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7041fca6-9500-4c53-9fb1-82a03612c50d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5fd2860-9975-4ad8-8bd1-419c7b3aa692"
            }
          }
        ]
      },
      {
        "id": "ecd3364a-cf6f-4704-a4e8-0122a62b47eb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c72dd4fb-c918-4c58-9409-a7977c89f6e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fe6c867-e678-4c14-aae9-ee659b363da4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "13051608-67a6-4bfe-a274-c0cc482c5a2b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bd1164-4b43-490b-a0b0-5afe09e528e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36705c06-318f-45c7-a6ef-46c30de2568e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794cbad5-93fb-42cf-898a-d5504ad06c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08706720-ddd0-4cd1-b9d3-7c8c66479fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bdb810-a761-4b70-86c4-15519238867d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68975d33-a830-40e2-8144-644e19cafdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714ba3b8-08e0-4c36-a0a4-ce6ab80e0d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb95dcca-80e0-4c51-aee7-04c80310a7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "233cd533-9a19-403f-bdac-342a1aa3d317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a5d385-5419-4aec-b8c7-a050745546a6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47675af-6948-46fd-b9fd-0a09cc70ffc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf11ab8-8d30-46e9-a941-1119dfe0c706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfff447a-8f0f-4e86-b6eb-43e02097a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df6ef36e-7ac6-4b3f-8024-6ee8de870f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b380339-f5d2-4d59-9866-197c07eed801",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b92e843-f60d-4555-b558-b6f8b438b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340b7e22-eae8-4cab-8541-ce55f2a9abeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85fbcce-0826-49a8-80e5-934cd3de4bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0dfc682-552c-4eee-860d-0a628b5e003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da69926-eb7f-4546-815f-9143196b24b5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749480fb-edb0-49d9-8140-7fda7535e97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60396fca-daa6-48bd-b6e6-9f3a65ef4a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d021f94a-e4f1-4af5-94c3-7cff4b097c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c490fb5b-fae4-45c6-a218-9a38c02efc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6d1f42-e936-4ca4-b69c-197bee9bca44",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc70c799-0fad-460c-89ac-d63a98d4a0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8810921f-8551-4d80-bdca-c155165a1417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c61dd6-c0fc-4a6a-870d-d58b02ac55b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3205de5-70ae-40da-ad36-27d20de761da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42967ea-01d4-412a-8033-8378da2e8fdf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31477863-c9bd-4da8-b728-7cf9cbd8d9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c409f70-900c-4604-b615-dadfdbf342f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa57349-9049-48dc-be08-86276945f763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ff5a3fd-a1c0-47c5-9117-997feda36b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f257e53-6a4f-44d1-827a-12f6896cf32e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0623dd0a-2f0d-4f45-9f2a-a6c8b3c27c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77715f36-9602-4a3a-8dde-fce39f9fd963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6352b9-4309-4357-bba7-3276dd90eeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8301c122-0597-4b81-a606-6fbf8429ffc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b05922-8409-40a9-b0e5-6134a1f1d0a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c74a716-56ae-4535-8b10-9e6548af9784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7a0cc6-ade8-48ab-bf5d-b5c760fc024a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509dccad-b85b-497b-a061-8a6184658668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed49ec5b-6a24-4ef5-905c-56be731fdc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9486eb54-251e-49d5-bb89-6fab20b6dac0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d1fe9-3b70-4fe4-9a2f-1ec3e6f1f548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4993f1a5-ca1d-4932-be05-5afc558456e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464845a1-9e3f-4c56-8994-504c7a689085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a10a3579-fb66-4365-870d-db86ac91abd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97ec523-05ac-40e8-ad99-e6a335ac3646",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a07991-e82a-42ea-9cc0-2fe78df7b8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc33de20-586e-4521-ac83-3b5375a1ce98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf32c0c-bebf-4eec-bc8b-0d1be0add6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edc58733-2b36-426f-89c3-53bb43f2c00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf47c84b-34e5-445a-bd0b-0e31887635a8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070a3657-17c5-444f-abdc-54fd1f8d87a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33403a3-5034-4aa1-839b-10c930730acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85c3677-6be3-450b-9781-fb700fd25eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d2b5101-ab6e-4a46-83ae-ad51d015d3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba3ac40-3a37-448a-a5ee-78444a85451f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845ba8fd-7371-423d-9f78-43683a3f673f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60629e66-627a-447d-9601-7f6ab3a23727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037598c-c60f-4427-ba6c-fb4220a343d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbd81ce8-c89f-45be-8750-440e329fa7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377e8f24-35ab-474d-9243-721c5e64aada",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fecc68d-f74c-4975-b261-4b40a8f4291f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6ec669-5c01-4451-8260-55714f0051bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a9b27-d548-43c3-9300-4eb73c26a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2ae697d-1252-492a-8553-a76adaa98717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3d260b-71ee-4cf4-ae06-485b3deab3ec",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42505997-2ba5-4ab2-8207-35ca93da4043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b0f897-d70d-4f05-a078-021637e3d6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce77e65-b2f6-4546-93b6-432139b05ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dc2062f-7133-45a8-bdb8-908c2f453fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a85649-5c4c-4e22-a099-763ae34a521e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b61f376-22bc-490b-8ea8-42625a70b00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323f55f3-16f6-4617-b600-8bf5927aef99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4927637b-793e-4c01-bc91-ed68445da13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57c7719a-15cd-414c-afeb-382ec412656f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4c0df0-f5f3-4b4f-ba8f-0b62f6e59e4a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec90560-36f3-4968-8620-d2fed8a1bb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d670bf-ac5a-4802-a65a-aee739e28658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dfedee-eba5-4e21-b09a-c96f84e98630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3cc9572-c9d8-4dfe-8c9b-c41b7653e9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a3842b-e537-48ad-a2ad-8ea577890190",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d42bce-4da1-4603-8f5c-107699756048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cb3952-880a-4aa5-acc3-8c2c32e2b1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dea1af-25f9-4934-8cb0-67f95248a8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc7d093-a94c-4cb8-a045-19b9f781074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5342db31-8a36-4032-9587-a0eacea6b864",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdadcd11-31c2-41c9-af7d-dd36075435e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaaeaef-9550-4747-b236-ad3f0a565cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16016f8-b3e4-4598-a3ff-00fe3a02c80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9544d016-ed9f-4acd-98c8-76477e7b11f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fa5a27-408e-4edf-9ee6-c5b3fb99dafb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09e2824-ea3f-47c8-a841-a7d596ed47d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc133fd-be2a-47ab-aa51-7a4f4c91ac55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea14e53b-5c50-41b5-a889-a0432b522320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15243ad-4a14-41f2-9eae-fc8e92da8bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c635c2-5c9c-40ed-b33a-bd5cc6b1e867",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a04d2b1-6177-4580-8380-8c38d87a4edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a6fb70-b99e-44e8-a8e0-997204ea9b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b6ded-e5a2-4d60-9a0c-ce32fccd4ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba73f5fc-e39d-4d98-a7fe-87dcfc165e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaf3025-3fcb-4f46-9371-4f9d88a5ccd2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d97149-3a93-4739-b5ae-7f2a80f591ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63aa0d3-ce0e-4ae3-90ce-2d982494f985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09703c6f-78d2-4b93-8d87-67e5dfedf6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4047ef-82a4-4286-b813-b6862c02161c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60efca2a-ba8c-4f0e-872e-b6a533c27d30",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6483ce00-2ce9-4c62-ad27-4d965503a4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33ffe82-1cff-4d61-8acb-2788d20fe13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08536e91-86f3-4032-9880-090563afc0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56a1ef5a-cdca-41f6-ba57-a476e7241490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7b7cf1-aa36-4100-b748-ee52f189ae5c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0ac5b5-b0a1-436a-95c6-bb30e7fac3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87283225-fb3b-486c-a107-c12012721678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6442c27f-59ac-40ec-bfb1-97d4d57a476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebbc56c-d221-4aaa-8356-d1a062c4b486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e662a6e6-e960-474b-8349-a834326cfc99",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425927e0-abd2-4b32-9b45-e1dd8048ab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088f5dc6-6e5e-4cb5-9945-d73cbcd26711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc3bc1d-6ec6-45d8-b562-137201a07237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bd9103-cc63-4e55-905e-24b0b0f74c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1eb537-27d2-450f-bcb2-ff626ae50038",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00039e4-899e-4f47-bee0-2d4a62706e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433ad7b7-64f0-4ac7-8a19-3192521b4c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290d1d59-fba1-48b5-8dc4-a66bbda02883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e45f11-a2d7-4db8-8e65-2ed57c828169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626d9e43-820d-476e-868c-71eda7844337",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad887814-bb80-4aaa-ba7d-94ecbb382f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9195996-6fc3-4864-a357-9036a08f3240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aa6b40-f147-4f71-aa3f-4199de7a3765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcfb873-292e-4066-9b5a-2c042f771bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a8a197-5155-4585-b749-23860cb71500",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abb58c0-7a66-471a-88f9-d43669aa8ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6de884-27fc-4a1e-ae1a-73ea4e0cc125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8abb6d-d303-44a0-b138-18d8aca9d660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b20f8d-dd65-4d1f-83e7-c4711f6ac410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24820d24-befc-4597-8cd7-b98b330ca9a7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f047a24-1f0e-4101-9f27-eb03b17e578b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1c6938-aaf9-4686-9dad-685aaf7d477d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc87ed6-a870-4f41-aa1d-7d7c462963e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "205141a5-fa7d-42e2-8e4c-a92a18994f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84f5767-638b-49e5-b20a-f67a5c96d17c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd725fa-dc8e-4358-b54e-2d0337e4adf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037e5009-39ac-4ac6-b396-08897c8bf60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03798f59-87e7-47db-baec-774a148ab786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9186691f-d18f-4c85-b172-a14021574a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c5884c-a2bd-4ebf-9621-f1b41390117f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5c5eff-a1c3-496c-9905-a2fca5210d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f536fd7b-b44e-4c95-a812-92e61dad398b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90db9296-e263-4a9f-9100-605877d98ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd20c3d-b738-446e-8259-c647c62ecc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21001a64-6d3c-44fd-97ed-d82add9ee516",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bc5483-49c6-471c-be9a-66a0f687f835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1722862-faa4-473c-943e-db38b6103678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c5f5ca-834b-4417-b44b-49c0226c9cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c412ea62-14f6-4b91-80d4-654f6e13e2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a25393-35a9-4ca7-bd20-f7e83a6cd764",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287051b7-80bf-4554-b28e-84fb7519ef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45847f8-e355-49af-b0f5-e62780f2e583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b6f0a6-2fb7-492a-9ae6-d2622b0950c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b18a3b21-ca45-47d6-bdc7-4cb48eee2b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7cb954-e063-494b-a5bd-733c5e057186",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dce1059-a915-485c-8142-025b41864ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d36e4f9-a8ac-4fa6-8866-96d9d96082b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb40c4f0-ee26-4032-a9b4-c3f637040287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d07c08-0ac4-4d13-819c-93275c9942e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74019e0f-5c0f-430a-b58e-77d65c1707cc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f3698b-524e-42b8-a27f-3b3ea65aea50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8107fe-16d8-4c54-a358-05a6b5ebab72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacdfd8b-7069-42ae-8e4e-38320d1315da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac284d7-13a6-4225-be72-a666acdd7cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e59bb15-7bfe-4711-9768-dfe9bdb15858",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b118cbf-a60b-4a1a-85ae-eb6a25e56284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7edf2b44-fe30-4ada-a32b-a8fc77f4ef0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f47943-6cfe-497a-bb29-2cf18a3d10be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2ec8e1-b451-413a-a243-9bb1c9c1701a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513e055b-57fa-4a22-b11f-68bb01bdd507",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df05d884-365d-4af7-a603-a3c790309c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc9153c-34b8-4cdb-b7fe-e84314f9f410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b0cd1c-328a-4cd0-b7e4-a38742281fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "943dd8df-c091-4299-b630-2bae3d465df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da68e34-7651-4709-aa2e-4bc816f2ad51",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02b1675-b218-40bc-ab3c-5f03aa0c6050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00039a92-10e0-4f8f-808d-b12fec04bd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f74afa6-b5e6-43c1-8e8e-0990dd69df7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdd1043-2104-4635-8fc5-6c62cb989ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1309dc3a-58b3-4d1c-95a8-82cbc0b61330",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cec20b-c96b-4149-b76f-19266df6acd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac52d4ec-197a-414e-95a2-17f727e95410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a70704c-44fc-4368-bff6-6b360a3949de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f834c2ba-f43a-445c-87d0-b3a36e874885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aa1ddc-2217-45fa-af6f-39568e710af1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ed84c0-db35-4da1-80fe-7b9b8282713e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e52f93-860e-4c33-9e77-55b895412586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e4e148-fe8d-4c15-ba17-48c5752fb169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dce41d88-356d-452e-8811-d6414fb85242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ea2abf-7609-47bb-8a4d-11a77f817f48",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4571eb11-443f-4b70-aa5c-3bb18a027d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20274cd0-e471-44bc-8d39-9b95ee127e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5459f589-8e3f-4c48-a7f3-a26535a5853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7556420-83b3-4ef2-834d-7c6e44746274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b476e343-880f-4fbd-a450-ef78ac3c828f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19abf77-df32-492a-be46-aad606256219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0483b4-f0cf-474e-971f-afa23aaea3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8efd8a-bf9d-4846-accb-e91718ce130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3993c899-ee56-4a7d-96d1-570fd82bd1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ab08cf-24a8-4986-a4ce-ea76a6f2f385",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39e0cba-1a1e-4cba-b5b4-abc11508443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd80efb-e3a4-43f5-8509-d93ef8fcc014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a380cecf-0a39-4fc0-bc2b-703e84d6b25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd4b7b7-cd2a-41c9-be62-8ffc9c3314cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12a628d-f36f-48d6-844f-b5fdf6bb4a51",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6b8b85-9af3-4ca8-a8ba-8b66273f79dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43406f28-4324-4f47-8625-4ec56006ff3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac56fe7-95db-42b1-9485-ffd82bc82f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea31203e-d707-45ce-b127-659306724e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40fedcb-cef3-4962-9ba7-18b5a9b80c9c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898e82b6-7196-40ce-ab16-dd49e3b21db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65d7ed6-899c-4233-8c66-a242670ae6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82072158-37c2-4bcf-9539-360d62ae731e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7363a91-46a9-4899-ba84-fc3188901a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974c1ffc-f3df-41f8-8c21-bd561d9f64fa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f94a213-ef8c-4709-8309-78103b4f1633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610435dd-85ee-4ea2-8347-ccb2524ca635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7d24f6-1b75-4995-b928-b7d9ecae6adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14cfe5ff-4712-4df5-aed1-f38c81a7877a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed9b94f-5cc3-4e3f-81f3-5c43b0ac4a3d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395bd716-e2fe-40b1-94b0-967a00829d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d2a836-e281-40e9-8b0d-b26938c99e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31654cbc-5237-4d00-a151-82973edc1820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec63adf-26ae-40d2-a086-2663ad17f679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ef7306-1e7b-40c3-a0bd-0f16f427de3a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d8ab32-764e-4638-beed-be0abb3b5833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1d2037-0d15-4a11-9a0c-efdc532c6564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5fd075-d9e1-4e4e-b17b-94467e8fb337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b774c25-635a-4d7b-b707-d2b562dd50b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce09455-71fb-4f23-b2bf-90d789d3af1b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2788d9-f4d7-49a8-8572-301d9e0bf4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1926435b-58c7-4dbd-a09e-7c1975759618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f51c5f2-0fd1-4606-848e-21a6ae109c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ada83099-2f8b-4ba2-8cd0-5719715de00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46867642-364d-409c-a55c-a9cda1268057",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5c6524-b789-4fcf-801a-088f55876bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e3f411-3c1f-4987-afe8-5348979323c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0b5a7b-177d-4945-86d8-7bb50c3d799b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cee6ba6c-83e3-4994-87c1-63403b9539ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4690b2e-fedc-4268-9c4e-e3d64d77d37a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e93335-2142-4519-a611-57dab04c3c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e354274d-b155-4f82-9ed1-13c34edf390a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4742865a-c78b-4206-871e-7998ca9256e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "036de107-68b4-4fc8-8451-c501fdd4cd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c275de38-8314-4780-92e7-ea1771289f47",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ef5d99-dbdc-4161-a4ab-053fb17c6346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4697350-31d0-490b-8a05-4ab9b35083a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494a8c66-34a5-483a-bb70-4e3690cb0503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4d915d-ea58-4434-9b4d-44bf118202d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0decbb75-97e4-49a4-9389-6ca4a248accc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80586494-5c8d-49bf-aff4-6441d297d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207a5e04-3781-4506-8828-f6b4af7e9793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26e16cc-a94d-4758-863a-486a0688fa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a17f5d1-183e-4e04-9a99-881615f1416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e95d38-62bd-48ac-a935-2a858f74da69",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404041a6-661c-4497-99a2-a55b0d6c4804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b7dd48-d039-41ec-b677-f107f632648e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0dd145-f1c3-42fa-98a7-79f01d5a5e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa73069e-2db8-4829-a35d-7db64365566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d032346-689d-42aa-9873-4bcf621abd5d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27f70b8-ba8c-446d-a613-1713a93a6188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf5a5f8-f2e2-45e8-855c-6b2500f8ff0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6087b157-1283-4830-8901-3b97f6f537a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a97fb9c-0e90-4fd0-92c3-979a0bd02afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7f6d65-8e11-4d50-8c17-e7a25aedb82f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b726c3c-f406-4943-91ed-cb2f34fc1284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034d2ec2-407b-447d-a57d-c96e926a1b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b0d381-db0b-4daa-892c-93a1a130ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8cd9f4-d887-43f5-9006-de63787705ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded81b7-a828-4a10-b212-71c132496bf1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54392bf8-d80d-41f9-8dbe-8fa7d76d4b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599d2a7e-1aa4-41d6-ad5b-a25105b5cfb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b077e6-e0c6-47e2-8f7c-274bc98eb884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0580a7e-fd85-4748-8a89-c5169d08b9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162578d7-24f0-4556-b941-eb253a5893ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae55763-ab2d-4951-bf69-d1b20a3c0e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0c8190-ba4f-4de2-85b1-9149f493658f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8cf7e8-36f8-43e5-ad7e-91e3a6ec2a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d41e967-372d-4b82-a6cc-f71f16c2d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810d01ad-6ff9-4c20-81f2-8b84cdba834e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d5536a-e2fb-4a7d-82b4-515dffed073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd32a74a-75c9-485d-96d5-ac6050e69e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29edd10-3e47-4016-8f9a-f3d76231da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7051ab5-22cd-49e2-8845-c4da2a13761a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f3a530-8d58-413b-954c-980c9d1386e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e53361-37f2-46a6-839d-1fcb03beb618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4754d95f-f98e-4a9e-aff2-03e10f7d6c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78344321-45ca-4e6b-95f5-c1800f86f15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5246503a-88eb-4891-8500-18ac8a830f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e989b8c6-3ed7-46ed-93cd-3e751e0c0031",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1601c15-f6a3-44c8-8b41-34a519c8f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94d64ac-695b-4ba1-9e9c-162c96994075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd02b7cf-b580-426a-821c-01cc723c7e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "47244328-53ef-4aa8-b7c4-1a0a1ad0a0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c42d04-61d6-42ab-961e-39e09b84f714",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05a5744-8f2f-45be-bfa8-866af751982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2075cf5-7703-4296-b455-e14c8df6fe99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc589b3c-0dd8-40b3-8375-5759edefd4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ec6530-e104-480f-af1c-cd47f7de1ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5d5ac5-1ea5-4502-8fb7-a97470be01de",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455513a6-5224-499b-84dd-536612cb364e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ed25c5-f171-4fe1-a4f4-1f96040df2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85bff08-6db8-45c1-97a7-924ffb34618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f28d0e6-6533-45e3-acd5-65e30e7cf652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf8f107-9981-414e-8eaf-3bb893c615a1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887985df-e7e8-4db3-a189-fb3fa8510028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3e69d3-892d-45c8-8b9f-137741dba6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ff0ca2-b3c6-4ac3-a8eb-b9643daee1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0f0d85-9201-4398-823d-f06d142c46b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28abc1f3-9a9e-4352-a0ab-c1fc5196ed01",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b5be2d-1508-46c4-9435-78efa6892181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb4f262-05b0-4d55-9aae-17270d926588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fc3f40-d3ea-4661-a4df-5df14db87959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8018f66e-268a-4dcc-b0c4-0c8e90eaac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f24439-18c4-4de7-ba59-c7baade3856a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c49660a-b600-494d-baca-736c28379c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692a0245-1a3a-4ca7-acf4-1ab530366b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cfd866-0a71-409b-9ad3-cedd3f7daf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed1301d-86af-4f05-a589-c17ec6a627a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbab431-9e17-4658-982a-ef8f6ecd6012",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566bc2d8-ba23-485b-a554-8ca0c3a04d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7038a9c0-5b83-47cb-8ff3-214533f514ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378d8a2d-3eb2-4d4b-b335-be7aa4abfaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac7c4d9-323b-44e0-9791-f367fe5f95af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cede97-bf40-4f4d-894f-b256db42c71a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419cdf90-d5a2-4174-9084-c0ab4cbe7bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc49d3e-b8ac-43b1-a979-e7a4cbae0068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f84b0ba-2853-45b2-8926-880fcaa4ed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7bc793-82d6-41d6-983a-8df92a0a87e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc2d0ab-e992-4856-bfba-3b82dd75c33d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f44281-5376-44ce-a324-cfe3c7329da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81bf40b-ce13-4b96-a237-9adfc7975c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a932ac6-c868-4d18-9175-392b03e68712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edcf8d72-e42f-4337-b7c3-6feb33158a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50294cb-7645-4914-85a3-cef9a260decd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c899656b-ebdc-4a8a-95b4-f2dc43d05f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89be6e06-3606-41f8-a2e6-6767659bc904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e63728-ba25-4003-b05d-7077e06da912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c25e3a3e-c2bc-4125-aaa2-24ef0918d915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9df953c-a3c9-45d5-ad70-b3e93a069e85",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0372d512-7c24-4031-962e-885446429d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f505847-58f5-48ad-8f96-ba4998f078e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb128de3-1a85-49fc-b0e1-989fba42d79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26829f57-014f-4701-86ca-7dba74ecf62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6f1659-0b57-4335-996f-a38f4dabba25",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d870bd6-39cb-4076-b8d4-cc40b66349c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df312f4-46d9-41d1-ac73-0d11bb178824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39718754-1d9e-4c5e-8e73-63477877403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74028aa3-c4eb-4000-8e32-a136903500f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8180e7d9-0ac4-43dd-bc4a-e47ae7996873",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708c2511-1b1d-412c-ad5f-fb02500f0c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a7e239-ca45-41fd-8d17-3803dfe78f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709f8f81-9f79-4e6d-8ca5-b9f7f966ad88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73db643e-7f6b-4ad5-aeb4-55b3aca957ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85af05e6-afb1-4a61-a46c-056561191d1d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff20dd8d-cec6-4829-9b84-dd4bd09da4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7cc9d7-bea9-4999-8240-56144db642e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5ee09c-ed49-472b-ac6f-c157459ba413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "248b2241-e5c1-4f6a-8d7e-47f13808b53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a318253-a484-46e0-a661-2d2a5535ec68",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eea1af1-9e9c-40ee-948b-fc9a6131c519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8de8746-ce9e-4dc8-9a70-274decd5b44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ffa9d6-799d-46b9-9f8d-aa4da39f1c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c850897-0e96-40bd-828d-1b05a18b4813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695548e9-d537-4dd1-9b7f-415f9ceab329",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259e4e10-1ffc-4d7a-9e0b-530993f645eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc68b34e-364a-4f6e-8b7a-24bf2051e205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f659b4-c144-4c8c-a02d-9f830ae9e5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "169875ea-aa97-4e74-a85c-36f04c41fbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cea6be-aecf-4ee3-99ca-d4c47aee0305",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bed00e-3de8-461c-98c5-68334ba491b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8c12cd-6357-424e-b29a-01953f383fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f1c1b9-de4e-41dc-a5a5-9bb2b7d55729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e31b733-afc3-420f-ba41-2d2f538555d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4998a5-87aa-46e9-8424-4fbaf94fa85c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d6f09f-b7ae-4dae-b6ec-ad9d8eb7fc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4a2e14-cf1f-4348-8aa4-755e707a13a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064f3a0c-95e1-4100-b29d-7629872f684c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37aaa8c-e252-491d-ba16-1f4fe8c3dae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5339a8-ce1c-449b-8d45-9be9fae54276",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd794c7-acc3-4186-9ccd-5f2e596eac90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d05a56-d54c-4d57-84bf-abfff0135f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5489cbd8-bd5d-4c65-8871-6a83d93c13a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5b8d95-4bb0-4b13-89ca-1e6df6828c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff97459-9ead-4597-a8c8-a2cfa00f83b2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2dc796-15d8-4370-8dc6-5ff3fe5d6afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00674473-e418-4d8c-a05c-d7f807c6a15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020a618c-1e41-4410-9b7d-92ef6c227fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d508f6e-a6af-4d2a-b810-7f5223366d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eedc62-5ad2-415d-8f61-daf82451db6b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd94e4f-5fb7-45d2-9acd-c16dacf892e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ad7f3c-43ba-4dcd-83bc-4a3f61ec9ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255487a1-b987-44aa-b48d-505e867e0adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "129d42cc-ac1f-4536-9f88-06fad36347dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fafb8e-ff51-4382-b68d-0188b4ac9160",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8fc8a4-b4fe-44a4-a9f9-e530180f9c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dc39c7-7503-4ace-920f-7835652d6864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462215ff-fa43-43e4-b7dd-54d7d4084661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28793d02-1b3f-44c2-9cff-8b903c85c859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ff0567-7a8f-4de2-924b-3fbf63be63c7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c3f544-16f6-44e9-9136-2fe6725c0939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f5a5a8-8e78-4304-85fa-02d65e4cb7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82eae78-6845-4d64-8e4d-73e6fbd3cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2088c8-459a-4857-944c-c59f093225e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1a26cc-7eb7-45c1-b286-7401bdb11fab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b5d898-7cd7-482e-bc88-4da061d7e6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e89d8bf-de5c-424c-81a8-db25da02d47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b832bab-192a-4d6d-8218-3bab3a43531f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68f034d-5e08-4a25-9b68-587ca3606c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5027227f-d085-48d0-88d9-2852b8855386",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e74533a-6e67-4b62-a7ba-015de92714a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fdbd88-2d47-4dbd-a9c5-8ae599e5257d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24bc3a4-a21b-46b4-af24-b34768dbc467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96a08b63-942b-4b36-b838-9ab51a707333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce677a0-eebd-481e-b676-91be81699482",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e231f99-d74c-4cc6-b4f4-98f69e539f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52d37df-aa3d-4a16-8aa9-c73f7b4efa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f62456-7b8c-4054-8490-06155eda4080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cafaa654-bd9a-441e-a3a9-ec5be1270663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bffcc0c-5662-4671-90c3-e5814b72fb62",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d9b176-42f8-412a-b79f-b79f300e2a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b3d159-4f40-4e82-9a31-c75faad3da03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24674d66-1f16-4af2-95fa-69c034f0b3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39f7e4f9-a612-46b4-a68b-a3feec22fcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24443891-8206-4d43-a660-cd5ea6f3b1dd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba3710-9ad4-46ee-9ffe-86b50efd1168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987f297b-1295-48f1-8155-5d112cdcd304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94f4ecf-3283-408f-9a4f-984646cd4457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3ad91b-4d58-420c-a9c4-88cab0e069ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05c6101-4337-4ed7-84f4-a4637e9e2b28",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85ea35f-fc72-4ec1-b965-a03190ab96d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ffd852-649e-4ea6-a438-0f9fd3e307d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505d0239-8e10-4a01-842f-f12f9bd994d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a07e5102-30bf-4a50-a5d5-ff4a9f658e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1329f3-fc00-4a76-98ff-cffc833ba875",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b78ed23-c442-4776-9a5a-44eb14c7b97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508f4ba8-d1f6-4976-ab51-3048dc042c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f23be8-8993-4371-a472-05e1272ce81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bec2739d-a472-4334-871c-e4a4c137e82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048be0c5-efe4-47d0-94c0-4cea65061bce",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc15dca-46b8-4369-989f-3e8027367331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c969075-69bd-40c6-a44c-c56a9977254f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0648801-b9ad-4cbc-9a36-f51a866f27cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b2829e-b541-41e1-bb05-ea789af7daab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8736b3-2596-4317-aaa3-972b4d032aa1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdd8660-409d-4afe-b9a5-39a6e341bb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "821bbb8a-3038-4c55-88b6-da15e563bbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b48a1d-adf0-4bd5-84b1-5cdd49c2a23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "35474ea6-6086-444d-a1ab-839d712174f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ebdfa9b-1cc5-447c-9239-2f3c5dcbb288",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0172eeb7-b735-44ac-99bf-71f12581e6d6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b53cf75-f78a-4fdc-a882-be4ada3861e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37feedc4-319e-4361-86ac-1f1c99898eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6175bfed-ec79-4490-b09a-7d39505040f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1aef57f-6e94-44c8-90ad-1364a0d32666"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6787a99c-aaa7-496e-9a9a-5fcea057a7ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d90a0859-abf3-4c40-b177-8ef3a91aecc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7503333b-a921-4528-82ca-4a8b992b60a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7441c268-527d-4f35-9a08-6ffae6d4bb03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bebbaf5-1c6d-4340-a9f3-a8e23c02f3b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9ff99af-77f2-4663-bdae-011c316a8bdd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "743c6555-d037-4faf-b574-e1189cea2566",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b9d6ddf-8b50-4d47-a577-8d20a3ee95a4"
                }
              }
            ]
          },
          {
            "id": "3d121d1b-ff70-4627-9024-95a397b62fa9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a93d5f46-4e28-4e6a-9615-634c29607763",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "68c05dee-10ab-4507-aa40-e71e7e1274cf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48343ce-c4dd-43e4-a028-c36a98add58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7bd8f133-8c5d-4d93-8dad-8d8701b4832b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49be5c30-4b6c-4ae9-9967-2862152a38f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3fb0fa-5dee-45b9-a4b9-71dcfb3c575b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "590818ad-c4de-4148-8d75-ed89444bc4fc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6af8b2c-c80a-413e-85f1-e4662afb88a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff5223e9-0672-4379-bd88-820c1566230c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4945e8a1-eb37-4f4b-9bf7-cd63fc92cd6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91821f53-3334-4d6f-afe7-6befe945b5b1"
                    }
                  }
                ]
              },
              {
                "id": "6ac67d82-f53d-4cbf-b0a8-aa421208c987",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "320990a2-f58c-4340-be84-1dead86706c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42eed383-42f6-475e-966a-ccf587a62285"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b020d54-19ff-48d7-81da-5f35c8cc4395",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee259d5b-d68c-4d32-aa98-a51dd879edd7"
                    }
                  }
                ]
              },
              {
                "id": "810ae7e8-1656-4427-8196-8f018e3e678f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edc1d205-c80f-4007-9a07-b7d203451397",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d38708d2-4da2-4fc8-b968-fba528535000"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c8facf1-dbec-437d-8acf-6b356bba29c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aff34e79-3f94-43b3-b1b3-40ec684e4a2f"
                    }
                  }
                ]
              },
              {
                "id": "5f3576d2-e790-41ab-bd90-40f0062cfc18",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5123fc6-c6e6-4c5b-b4b3-74a00dd20829",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f49bc6b2-b92f-4a9f-a585-4492b2e3d0e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28b5bbd3-3ae4-46ca-8153-f78955399f0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "41d16a3d-fd45-4dd1-8255-4a09fae9b1f5"
                    }
                  }
                ]
              },
              {
                "id": "b9d21de2-a5fa-4ff9-8f87-1c61334303c7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9eabe0c-e4ea-47da-b82a-8a4d59ff9c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e84ccba8-1c27-4944-9e95-5b13c5e05132"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "864d7b4f-2bfd-4f45-aab9-136b3b03b9b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d4409843-e28f-4a9d-aa2e-3b437485cdab"
                    }
                  }
                ]
              },
              {
                "id": "7abbb222-0e0d-442b-ae6d-e38cd0d36967",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c262a44f-8c65-4bab-8b30-1d05bc891d73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2daea656-7cee-4622-b547-985981b11361"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4979faea-4e1b-4e62-abba-59035319daec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "478f9ba2-56d8-4d74-8427-a47c05073ec4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3e0dc75-5a6b-4cab-a7df-95e86453cde1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71db3b2d-9fc2-408a-834b-0d07fad4806c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb2195ca-dc07-4e5b-b449-2847b53b6515",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6360ced-8e7f-4016-9319-f43aeff36120"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02c23173-22e0-4f19-ac04-da6c91b70046",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "432a3fc0-37ff-46d8-89d2-8ea1cd33f1e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65dcca89-d639-44fb-9a14-c3589d6c8488",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdc0caab-c460-4fac-ba27-dd76f49a3b66"
            }
          }
        ]
      },
      {
        "id": "ea7f0e09-253d-43d1-8346-809e20fe601f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4295252a-5603-4ae4-b2b5-87f9dedfbc36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "160d2c09-5bb5-4977-9abb-a89a127978d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b3ed7e0-156a-42a1-8780-86e796731467",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d184135-363e-46ca-8712-8ccf9b659350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52c78c4-ac79-484e-bb74-a56c36afe6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc09e016-ba2f-4e16-b1a8-39a4673b170e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "107f6485-829c-4f97-a547-b8b09063ab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc17430-ae8e-499f-8421-c7c7ac12f182",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce496190-ca53-48ec-84ac-8e5864759e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d2a4ce-363f-4e60-be2a-40ebe3f66492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfed92e-8cc9-4c75-a1ff-33dc6685e4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cd9ce7-886d-48de-a15e-1e740efaeff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7b8872-c049-47ed-af47-d04fe834661b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab5aac4-a85c-44c2-bbfd-505fee9a130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb57980-bd9b-4570-98e1-572bbd57da86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6941400-1644-4b44-ab2e-12340675464b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "503e3f9e-3ab0-44a8-a288-486889c243b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac325e63-8674-4951-b48e-32ad08734731",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db75120-1e58-41f4-ac69-a52baf68b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2afba3c-d62d-4be7-aa2d-f7ee61c13682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f048ed69-9d64-4867-a71a-525a44afb1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ca9ace-ec36-4f35-91d9-0d816ec1d17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b618e10e-7b79-4328-b290-aa59fd80ddb1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e160d560-57ea-4520-a889-2fecb8a9e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e17ccb-bfcb-4743-aab7-469b05d8eb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fbc504-8eb4-43fa-bce7-bb0f652c2238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7682d40-2b1a-43b0-9c92-ef712d4fa72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336528fd-8323-4127-b8df-f51d6027aa5f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d0e4c0-636e-4cc0-85df-8b919f642aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a38cb9-0f9e-48d0-a63c-f33e6f0c3737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acce65a-75ed-4e47-84e6-812899f7c931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab266e3-f21a-40c8-ac52-4cfd3c57e7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62fdbef-3d3f-4b19-a2d0-eba98a335d32",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb203bf2-5268-4baf-aa05-ecfa3dde2587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d961d041-1406-4bc9-8116-a70eb84e0bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d8155f-5814-4e22-8b96-95b9caa56fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f16fec-59b8-4e42-8040-bb95e7a2157c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebb8578-9fe0-4957-ba43-6bcd4c3c3149",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5364d2d-da1a-4665-b58f-16a9f8e18738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ca2e5f-400b-423f-b031-e9b97def3f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301117e7-1e4b-4c2e-94b5-cf4d03114745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfa1cf8-f398-4914-a739-9a4ab2391675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f04f63f-381d-487f-b2eb-e1b52ebf1f7e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d87b4a1-6239-4a87-ab64-1174fed49241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1906933-4940-4a1d-ae37-3a716f062ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2555c960-25e4-477f-b235-100fa029d224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e482ac4e-7208-41b6-8392-6d2e9e946305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f384cf-09ae-4be9-97c5-18ade11b8336",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d65e7d9-1b6b-49ee-a690-e820a74703d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a275311c-8e9a-417a-ab8f-d9404d5edfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb9f377-a08f-49ef-9ee3-8cd752e149f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ae9c8d-b1ed-4dc8-b2e5-0bd4c704f00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23a6456-8763-4ca6-a43d-24b47754683b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e9b69f-485c-465b-8e48-281536d19253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9077549-d120-4e96-8694-d437008d2add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb961bf-03d7-42ac-90d7-9e953422e33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac584b4-f8ea-4143-8d03-2783a3730a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dec522-b7d6-43f5-a685-db249de95e39",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c070d7-3909-4e82-bfdf-65b62bfbc48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed233ac-5ff9-459a-9d51-5bf2e59c0ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b355329-0778-4d65-81c5-feb9dfaf0825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b72c3d87-f41e-422f-887e-00baea17fb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9868872-433e-46ae-9c8a-937e6a137ee1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b09e13c-37b0-49e3-a51c-e6aed72263e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdd61fb-f6e5-46e6-985b-d76d02f09a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93d9dce-7401-4ca2-aa63-a1b9157604d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2e70c5-a44d-4d38-ae63-277dd4560514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3421ab18-91a6-4fc3-9a8d-732801242da0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e72756-25ad-4fba-bc7f-028417df4787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d379b7-283a-4c5d-b6ba-cf31aef169f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60a8e15-86ee-45e5-a737-4eb9fce7c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "30dc267a-24f1-4d3a-a048-63e0da4972cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b41fa2c-fff5-408c-99b2-698d96a20462",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82d71b9-dfde-4866-b9ae-c01ffe09d616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f70885b-f75a-41dc-9c4a-391d666cd752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f0b040-b230-487c-9921-125bd834b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c7fbd5-8a4f-4ad7-9c61-f510dca8eda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075b987d-9304-4b2d-a5fb-c6109b06f666",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c22bd-d0aa-4204-b4b7-e4841512897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b72aac-67c9-4c82-9587-e8406a6113ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f188bfb4-f5e1-45fe-932b-962bbd8f163d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9848c61e-7606-4215-9c88-411ae8e18382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbc7944-827c-4390-b8bb-082962fd4635",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a0056d-c7a0-4f4a-8fd4-66714bde9346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112e8ccb-57f4-4e1b-a9dc-f17880ad02b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609b2862-32c5-4528-b88a-f8da4f202094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e27356-6cf1-4cd7-bcad-9cd3e15a2ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12c8a35-d67c-42a4-9a47-8568f6e68e53",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11a1a35-c7b3-49d5-aa28-2a89ed003ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683a073a-3dfb-4f5e-aa1d-f1d0107b9354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9770158-008e-44a3-965e-be566cb5ee24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f904304-069d-41f8-a143-ff043068155e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e05024-61b4-49c4-8c67-5c52290965ad",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b86ee6-6d22-4d6c-ad02-95390f018f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dd55dc-d460-4e67-989e-cdcb252859fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5995ac8d-6d73-485a-971f-c4cd4384783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe1b2a1-88e2-4757-9d70-75e08b7ff33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388928a4-910b-4172-bf0f-c0eae806615c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd91511-2d10-478b-95e4-880e01ef1d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed82662-7697-4999-8c1c-1b43e9f6f168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1991c9-4e2b-48ff-85bb-472577ed6857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c8aeac-a56d-42a8-afa8-8c940f231a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ecab1c-8535-4459-b20a-6feaf40e8acc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9362f2cf-af1d-48fe-94b4-95ce0f446d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee989a46-19f2-4a36-aefa-7f6845726df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b30d7a-b932-444c-a0ce-1e7704cb1217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7cfe18-4c31-4b4b-8c1b-ea18c3bc9331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350ccb4f-8702-4f93-bea8-a51187cf08ad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c70eed4-cdc2-4ac7-9202-36a15be36e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ea9d80-7363-4974-a1d7-c240f6e4f3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bad72d-7df8-4a3e-aff1-718915096adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc04e20-7e76-4948-8679-a740a4150906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f459dc8-b9a1-4d4d-9dde-dfd137084cc4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce479d0-eadf-4e58-a5bc-2cd89dd29cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cb21c6-1bbd-4370-b93c-78756f22d14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128063f6-e135-4f70-80c5-6ce7d8198de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4a0b81-34bf-434b-88ba-4d6df059f080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89769c02-254e-4e5e-bcf9-8b99d0ccf648",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9516252f-9fb0-4d1e-b3c5-efa5b5df2b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e11ced6-16ec-424e-9106-8b7952f70ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df017f4-a89a-4ec1-b9dc-a8f54c9affc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87cbad62-dd06-4142-ae41-e4e5ed48dd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7648d1-01dc-4d79-ad20-c4c91f59ac6a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f91e72-a8b1-4823-ac12-34e74a2a0787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39ec625-8cab-4809-a73e-4aad728b205b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bddb1d-0994-40e2-82d5-a0ef10efb691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "934bf791-26c8-47c1-83ba-0a0c9d274d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0165b33-72a3-4354-a23c-5a8da6fd7275",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b56f5a-93fa-4ad5-9a52-5ea9ff2b0981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0f8902-def5-4b25-9c00-e98525c9c489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1436c-a595-4711-abda-4d71c549e5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57055815-7279-4454-a31b-dadb30e397fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc5cb77-cde6-48fe-a160-0902f2be9e94",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154a8dcb-b04d-4a5d-b72e-16f8b6fd0cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726a68ad-2189-4dbd-b2de-0515ca544ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a0f63f-ba30-438c-8919-e053385385d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b3f6ca-5d62-4940-9ad5-422380e44785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b5efe2-7c17-451c-a686-55fad5b5de38",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12be5bc0-7cd7-4ee1-9a4b-e223b926f565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d08d9e-3ea6-4d85-a34e-08cda7ad56fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eb03d7-39ed-46bf-8f43-f2bc158c3977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd22624-5778-4377-bf46-24a6c8ac93c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2fc6d1-f98a-4a6e-b70b-55a06cea48d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da0b8a-a5e3-4ffb-a63c-c47f88ed3e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5a16da-678b-4009-8746-127173686d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040b783-7580-4379-ab00-3739049e522b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cce2b05-73b2-4916-9f3e-bd9795785b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec979a80-9f38-42d0-91ea-c66d61ccfc19",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f43f9e-a6f0-40de-bfb2-76d0f90ef08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80bdd10-cf05-4fbb-ba52-2a846d90ec41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e81e076-83e8-4b74-89ea-8606fb56380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb56f1b-b844-4109-829a-653d5febf3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939077ce-8fd0-4bb5-9c54-24fb519e6625",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693aecc5-8708-4f0f-9db4-7d7ab012c4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd02635-0765-47cf-82bf-035f48bc1cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70282264-5c69-44c5-b135-d5f776a2423a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52225dfd-02a8-426f-8334-706ae6a389a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d521de0-df69-4821-a323-f9f18be0bbce",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1175b39b-288f-4b1f-9ab4-d1e83be1fc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec1bbd0-1c4e-4b87-8f51-2a35c48b8e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86c4451-4a11-497f-a565-96b046e04186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5489ab1b-d00d-4d7c-ae4d-39b20c936f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba246832-38fa-494e-aaf1-0c979f9ed4a4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62cf00d-b1f3-4782-9ed1-f85d837b3afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0d8a00-79bc-4078-aa4f-a24a8df56a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122f8b3a-2b24-47d4-b3a3-cb25324ed539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2247e0d-049d-4277-a47a-3c40642cc8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058833ae-96d2-40b1-b826-e187c13afb18",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0e8219-48b3-4e97-93b6-99deb5b75a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2fc8dc-8178-4564-b98a-61b5549cc453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fe134-5160-4b78-873e-7cb714fb8a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08fef5b1-546c-4efd-be04-a2f3fec32814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a690433-e0f6-4a2c-ba2f-14f8c42b114f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6501251-d22a-4917-9bed-20abd6049d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48af1241-7654-42b4-a0bc-bfd59ae66b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f633ce67-52c5-4e41-97e8-c95c3bd0d4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ee5128-fc46-4d33-aee9-403bb5248084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b328a3da-0ff6-4511-9fc4-afef5bf6a5fb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a489e527-4ced-4630-ac98-0e348919dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f16fa8-5d3a-4b78-a086-c54e44b8554c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777bc2f2-d9cf-48e6-9b38-8efe5095a998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48605db5-3165-4ee0-8d41-da1d9e572719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9313fe6f-45d9-466f-8763-b282b949bf63",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52a8aeb-a40c-4dfb-82b6-69694dd622b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cc9c51-9871-4bcd-bc5e-d1769b9f6cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884c8db3-0a63-4124-8d7d-4736a0eda558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f97709-22ee-4eab-8394-77ab98eb3547"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76167a97-05de-4c90-aced-3e155681f6f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f561a536-27bc-4b78-87b7-2d30c74b466f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461f9bfd-6c8e-4246-b16f-7774dcf7a828",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "883c0883-6b12-47fc-92ee-6854397f442e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e669664d-3f05-4810-9e14-899265cde456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba8ccb80-8807-4e5f-a118-091b123d9fc1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a550d053-4dc3-4cab-9ba3-3c9c889d59ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f6e2514-e63c-4f4d-bc4b-5cc8c5e9c8c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "044a1895-79c1-4a8e-8ca0-1565e4854a54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce1f0d96-813e-466e-bb22-77996f2ff93a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35b9b359-1035-464c-8b24-35da20bf0d97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "283b4f69-8632-4f90-b353-d668c7506f16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10d17466-55e7-4d8e-b0f3-5c30ad6019fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33473d21-0885-41df-a9e9-8d7d9a492d53"
            }
          }
        ]
      },
      {
        "id": "d9d333e2-a0df-4060-a182-fce18e4e5f82",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ee3ba43f-dbf2-4472-8a27-f8a27dc56aa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29c7c401-86b9-4ab4-986b-83399933fd1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d0ab468-4a94-49bc-8ac1-87f2122eec11",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296d8074-440c-4bbb-bea2-a3ef603ec25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0768ee-6f3a-4a0b-bbeb-c0d4e911695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2d5950-44e2-4097-b460-11f7b6b51224",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ae4bc5-4d62-45c3-a816-51ceeb2e4b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d7c4b6-2b7f-43d7-aa18-a2e05846f697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e7a44c-2bf8-4030-9dce-6335d070f386",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0798d873-2206-49ec-bc0b-2557bc657ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd2f109-6fcc-4c60-a260-5f221498c228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7a074d-9979-4e48-9877-8cad341f88ee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f644d5d0-36c8-466b-bbdc-1146ca96cd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d775f00-6b06-4881-aa34-8b4b346feb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d814ab-2a4c-42e3-9c86-41707da9312d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c828f4-b722-4ca7-b2da-b45e5e938fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671a62dd-50ba-4f3f-8d6b-be4742dae1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5fb970-95e7-4b54-940f-58d9dc383d90",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f4b2b-e5f2-47f8-87ca-573e1ee91547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc4ebf7-064c-4927-b2eb-b337828f9d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f77c2de-5e4d-4033-82bb-eaf3495be06f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d5d3ec-a0c7-4935-8fcb-520c93fed876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a296fb-ee14-45c5-9194-c87aeba4ad7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab23467-29db-4f70-8179-a7f05803593e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235d3114-6cd2-4d97-9bb2-764ed2051f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b36dbc7-191d-4c00-9d60-d039e9057681",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ad8978-2ebd-47de-aeb5-951532f84232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0577fe28-c0ee-4ebf-af71-d9e697dbcc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc61b35-1ed0-40cf-b641-ebaf2db9975f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09427756-323f-48a8-910f-bd0adf5a5698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb512357-8143-4e0f-8102-73f647f06c29",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bafdc0b-0e04-4098-8cf8-d4e589e74b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13269df-9704-4a41-bbde-b8ed0dfa634e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ca8875-7163-4410-80b5-a6c6064f96f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5580909-e207-4b2e-9ec4-d8b67a2ff26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14725d3-d91a-4151-b814-409c55147e73",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b794d305-17e4-416b-a45b-98fad7b4064b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e35913-6b15-4da9-aac0-91a0553a6e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e17b89-0e66-4dc9-ae3f-4b4fb9c790b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2bf346-30b4-4fb8-9d4a-94c33ad3ccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb7ad5-f0da-4d37-812d-03366eecb432",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df8d6cf-e8e5-4be8-bacb-977e0a24e8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff33298-c3f0-47bd-a433-7c05614d8eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa306e7c-3a19-4600-9026-62867af084d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c583b0a1-5af5-4098-88b0-027e571940c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1994612c-2487-4fff-b0d6-982341963234",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e4dda8-2866-4f40-8830-84d27080c092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d289396d-a8c2-4c52-aa6b-064f61966f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b123f9-01f7-42cc-a233-3d6aa7968d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258d0244-c6ae-40e5-891d-2c12c42dfa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588b8dfb-5e32-49c0-95cc-2ac9bef8364c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d39b175-2059-4812-8e1e-e6c4ebf01b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210bbfbc-4fc7-4b8a-a8d6-6ab1d0353892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9c54ca-0ddc-4154-b97e-0071968c8f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a25f10c-2fcd-4f5f-920f-09cf68ed56d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c4d1df-2519-47a0-a073-87e6887e0393",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2637e7b-647b-415f-ab7f-0ffc06fb09cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21e0ed5-0856-41bc-a5c7-b566038eb760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f760793-27f7-44e5-9523-8920bd764433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871b74e3-61b0-4b2b-9e1d-b238a1958785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8e596-0ee5-4482-aebd-5ae86f2ef93d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd269b5-aa92-4872-a2f2-0173ca8feea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348ea9ac-ef81-4346-8ad3-47a0602865a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efd9aa8-b81e-4a94-a600-6321c234ff1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59a3d94-261c-4cd2-84b8-0252ed590c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6681de-0bac-4e5b-a4e1-6206b2f67f89",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0314f90b-fad4-4ecc-b131-6a491cf917e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0446e560-fba0-4f0d-bed6-043a27ed4f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1692ff5f-7e51-4473-82cf-88dc9a331bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988cb20e-c56e-4b84-9825-6ad94e47471d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190bf393-6f03-4dba-8ee0-948dce7868b3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58c82f2-5f8a-4f7c-8c35-8cd980319e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d344b11-d840-405d-befc-a0435fc13a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead80ad7-6b06-4f4c-8347-792ecc5494c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec19bd9-b3f7-4d18-a191-ecb94475a3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd6b680-8262-4d43-8002-bb02bd26d38a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e060d2c9-2c6b-4803-b7ff-daab45d8bc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5c641f-67a4-4b42-9304-9245b0242df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65392862-ba61-47d8-ab2a-fad92ba1c3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2843f3-5d63-403a-b4f9-664731fb6845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0697639d-d616-4825-824f-f23ed1b83cd5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57c232a-7aaa-4386-bb2e-b9270568e938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0ba9a5-a943-45ef-a1c1-5e991d8e81b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccf229b-7f81-4bc9-bd47-4f3354c6ff5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a552ccb6-64f5-4229-baa3-fe9788191bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce9a19f-8f26-4e4b-92df-3306971b1907",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5adf92b-1db7-4344-bbd2-96bf90062257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4fbbbc-8f87-42cc-a61c-9ea102927ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a0b2aa-ce42-4965-9fdd-c27c245303ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c3fc07-581f-42d8-ae1b-abbe97803a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e908bcd3-d8b4-492f-86ef-3c56583b1e31",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf9529b-1b35-415e-b9a0-7b97e263292f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ce9bc1-cbfc-4d20-8267-dd516081f770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccf3861-2117-4583-bf0a-1047eaffdd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443199c2-5bad-4ab2-b4a3-c2ea811f5ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b958ccac-4bac-48f3-8a8c-724319396b41",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f96543-9480-4d4f-8fe4-68231a3d75a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff47846b-0f37-462d-a272-237d953fbe31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af61cb6-d933-48cf-a45f-aef53cda6f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aca88b-9862-41ce-9e0b-70114a4fcf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655bc14-0547-4ce7-bc73-ecccff0414e1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcdd074-3096-4bdb-9a02-543c01ae05bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc8e795-6612-4f83-9795-0ca41b841755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9b447d-730a-4f8d-988d-25116bae4a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b45fd7a-5b1b-4d4d-b2a3-1172d8188011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4266a98-a9dc-44ae-8a60-bcd46dda423e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf9747b-1144-4344-a288-f9e5718b29a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96660d26-ffa9-4c72-8031-6ce0d855863c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d851fc1-7717-4fcb-a628-588a48b6ddfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660d1673-41de-4321-a275-e03375092c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cfe472-c8be-4fb3-9323-1363e7b75807",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a39a2b5-352f-48a1-822e-67fcf4f5f818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e15527-6fb1-400b-bc06-56598bb59579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f813f392-9d9f-40bd-a405-f632d171ee99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe0afdd-7ef0-40d4-be1e-f986c2f013b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061eb16d-bbdb-457d-9024-42e5ee393cb6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733bce02-2c6e-4bfc-903c-8aadc387a96c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a63e0ca-6988-4219-b2d5-867e18c07205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f041c580-270b-4117-9b49-c34c17735970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed155b0-0f95-481a-83d6-5a694c3b8506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5b74b4-a71d-4910-9e81-01f3d8b1790c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c22c06-bfc8-463d-8250-50c9f42b4698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f33ea3-52aa-49a4-8ccc-ad7f9c514490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de63bbd-3d02-4e58-8929-e9c108bbc5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e301803-bb16-4f99-8976-3b8d48239fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26f057a-b081-4338-a849-0de7c3ff5aa1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7477eaeb-0bce-43b5-bac6-2b636ce70929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0a044e-5fb8-4fb5-bb57-adb6e0694942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbd904d-5f60-4a34-a24c-776361a5e9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23d1b67-5d2a-439c-9161-b9c348ca6e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e3776f-6d18-4146-9b91-08536fc30aaf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f956ed-7ce1-49c5-89ab-f51eb69f37b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc977a7-5fb4-4dff-bbb9-806a332a59a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5494c816-5f9e-485b-81d5-66203121f283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0d4a19-f7a4-4115-8020-72ab749880e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0057b2a9-7f66-43f2-bfb6-fba13d658cae",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaeae73-1209-4229-9f96-32798e996503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b502535a-e861-4c0c-84de-8f29d09acc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff4f84c-9966-4b4f-857f-36fbdacc65d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4acb40-2012-410f-9add-9a212ee979c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7606028-17da-4979-af33-926e86e27db6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8292aa9-c2a4-4302-824d-dd5cde9eab9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479c7ca4-3df0-45ff-a220-3686da7dc57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9be2ec3-8bbc-40d5-be36-d1ef8dd0329e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124f4b02-602b-487e-b612-050b9995822f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192359cf-f132-4e56-b59b-b84dbe53cea9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a7878-4681-4818-b7e3-90c487bb3e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f32f24a-0eae-4cb9-b089-f266eb71e161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f4e50-409f-4b3d-9ff9-84d74fc4b0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164f2aed-d097-458f-9e52-e435326f58da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd88a43-7190-44a5-9566-a4b142c1a17b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6b1087-4218-4d0a-8a8e-f05e74d285ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e52cf8e-a916-430b-a225-788442537f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c299b56-3278-4b9a-a600-d45172699df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba7f85d-a490-4d18-afbd-e7b5ab1006ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d41ff8c-f515-40e9-b26f-412be3d488d5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30044bd8-705f-46e9-a35e-7a300373106d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc86d9ee-55a3-49b4-874a-3b91508336d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9260b889-2a24-4f48-a507-47741969426d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9bd7f0-62ef-41f0-bfda-54c46b0921ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431fa8a3-7d7c-4346-944e-81f3de729982",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c75ff46-0d61-4925-95b5-6e1681cf52eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb710524-2588-4250-af70-dd4847d26a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b9df60-675f-48cb-b774-b6a7cd80db1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af56a0b-0b3d-4270-8d62-905b01f263dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8054df56-4e78-4418-b725-66a4fb12244d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7aa720-2b46-4d33-b1ff-17cc1d5a6207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb8800a-1c4d-4280-836d-8fbf27dc9da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25099814-95de-4def-ab9d-9e8dfbeec11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63abb7db-5f73-45b5-9ad5-0b8d67c7b3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18947ad-4bf7-4baa-9564-bcc35c556947",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7295ea24-a63a-43c8-8499-d90692532581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4e5f9a-4f85-4df4-9fee-3d3a36ef441d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c852bf8-41a4-454d-b3d3-157009e64420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1059dee8-9e49-49c1-a474-ff085dbb68d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ad48b-d5d2-48f4-890a-79518cc138fd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c457826e-b5bd-4938-ab5a-5f8ef7042ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75f28cc-16c3-4da1-8936-b0a811bd85cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f78a6f-4a97-42f9-b0ab-8177fc330419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0224342b-28c0-4bfe-8b0b-9cf74da5dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5c6310-2e29-4236-a891-21fd39c864b0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12a92ca-a09b-4e62-890b-cdb36e79f2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e05a88c-68c4-4be5-8de8-118204d6cd25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d811a504-ad26-4da2-a10f-6b223005dff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94db73f-d1e3-4b07-bc0f-b7ad0bc783cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a15f85-7df4-488c-aee3-2500bd75ceaf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf61d01b-8c04-46f8-bd89-b63b10bf7924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24a9ca6-9253-469b-8a31-19915ca64b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3b22c3-8535-4d6d-8d4f-4e76d9101c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b21cb0-e684-44c9-914e-5a425fc2f2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf2bb57-c6f7-4519-a8f8-607d2c529ba7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a475e50-ca52-450e-9987-ca2e4b1ab6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de996ce5-f04f-4a36-b8bf-edbe4fa6f250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425aad0b-5d18-469d-a56d-0217ca0798c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbda8307-31e0-409a-9eb9-2b989da0266f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6efcc0-198c-4d58-85b8-4f97e383e8b7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2196d161-81f2-444f-bc4f-8488901b25c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fff9e7-bc20-49e4-8ea6-d54042b50a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc46360a-d941-49b1-bbbc-47b386ce1306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ba504e-56e9-481f-9771-4ace237e5b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e356d224-b741-41d5-8f5f-4829e05415cf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecf5c25-13b2-4f13-a32b-e75fd0617305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3684b052-3805-407f-a802-a9b3fe1edfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a242b8-035f-40f4-bd1a-a0bdeebc24e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34697fd1-75c1-40bd-ad91-86a3cae64593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd998f9d-c39b-4de0-a965-efe6c8f8a484",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a47391a-2155-4081-8955-b436743a4b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90c1315-efd5-4553-84eb-55a2d39296ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab279c71-6b41-444a-8296-170255718fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38150280-fe59-469a-9086-401b8da43d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e456f0c-768f-4e0e-a1eb-fa2505d6f033",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672bea82-9c93-4ffe-8754-3697706bf218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32859fa6-9232-4862-8817-a28d2b87f41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef27c3c1-a915-41c5-806b-d4a62d13f7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e15f66-82ed-4ecb-8387-77ccd9661e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae34c4d-2079-45fa-b7df-4fb92dc80a31",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae21770-a848-4c00-a2e3-2f0f4c3f8399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309f5974-bba7-4b99-86c8-374f7c38f1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f7802-accf-4382-a0b6-96c2e5af3f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e88fa6-6fb8-40ab-b100-2fad513881f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad603bf4-0dd5-4f10-81e2-99f193264a9b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcec353d-0886-408b-8b18-5af01b411d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7097c3e0-48a6-45b5-8ba0-615a3eed2329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65efe3e9-6089-411f-89e3-6d54b7fdf735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b858d6b-f1ca-4c46-a70e-6791e614534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92cc4d0-855d-4564-89a4-81cc93bcd02c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a436a33e-596c-41e9-830e-3b2dd7341773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe45ee34-1146-44ab-bdb1-73ed089fa5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569998e6-f958-4f58-a6d2-560579c2e6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391b2162-21e9-485e-8984-206a5511d7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4894ec-e4c2-45de-92cf-40ce9f02760a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c287750f-4dec-4b8d-89c2-bf57e56a44ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25129355-2521-4dfe-bded-54c53c7dbd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f3ece7-957e-41d0-9503-c1e2e371422f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2965b4b-426c-4ff7-b583-28a3cd7e6e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf23d19f-c833-4873-ad61-0abe607c298a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac09241-ceff-4305-b167-e524471b2578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce26e535-5c48-4570-99cc-f9c26061f0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da84fc0f-7b6e-47dc-a184-ffcbeb555c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484f2e53-d4b4-4457-81fe-4d5db799f107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713fef33-591a-48e7-976e-774fe530ae1f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b0c723-76fa-46fc-9a91-7c1ba64fa6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3f4915-428c-4778-8e5e-862070124e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0fab1-491c-4aaf-9a62-743c9868cf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df37aa3-6dcf-40ca-8a83-3f077056a85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431f2aa8-d1ba-4aff-b3b0-d8a9809f0348",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21de6d26-3c45-416c-a187-f87b536057c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b7706b-0163-426e-bbf9-322c0daec26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3f4efd-5362-4728-bb15-5a29aa225f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebec4a1-2ec5-4705-a316-fa38e663e28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9f74cf-d22b-49ef-9ef3-3519ac7b7d8b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c421c85-e7c3-4ad2-aa3d-ebab8aa0c715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a6236d-e809-475f-bc86-bf4d90a3375c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f4ce81-5e6d-4a22-b2dc-e8661609d6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3eeb646-839b-4126-96e1-756185192d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb971fee-694c-4767-a00f-a418a94b59cb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3723bbd-8e75-4896-ac14-2965f7dee280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b0261b-7565-4c38-aa00-b0d3b63de70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1ec3e3-0c85-427d-a939-0e3cbc855111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289cc91a-1012-4110-b296-d21a8ed1d4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8f29ba-cc42-4da3-98db-e8496cbf58cd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b11adc5-982f-4769-9011-970889083d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b577c408-d58a-473b-b289-045610864708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b36f1-dcd9-46e1-8bd7-1e4de8efc99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eff68c-12c0-4280-9dc1-2273bd217bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754b841c-e593-482f-84df-3c2d7e5b2842",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba380286-d754-4daa-847f-8992e8a3fab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654ed341-c922-4021-8d0b-55a74b5f1d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da309502-f72c-4a52-8177-fb5edaa6721c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53f776e-cefd-4156-9d8b-bcee80525090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f4dc0c-289d-4f5f-9c62-9314753e9851",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de470a8-6f9c-464c-b518-5dace171c43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d26029-2703-4eb5-8cb1-32ed6b4037be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ee8667-f93a-4feb-93c9-360a5cdbb0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91610e4-bb25-4b98-8dba-92264efd87ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a38d975-f852-4fc4-95f0-c15561421448",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7bc1c3-4085-4191-b3ca-0acfaf00e205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3cd9be-52a1-4fe8-b93b-47db2ea68380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6410f0c-828e-4e29-9ca7-c863faee5559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23190e7-3ccf-4fbe-a755-12cfa210115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0f4674-7f38-421f-a1c5-fa1301eeaa57",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486e2873-bb88-4cfb-b98b-97effdb254aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bb8746-ac22-4115-82ce-9a0f9b6def6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8246a35-3cf5-41f5-833a-69809b0b6c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8797b0b5-478f-4524-a888-ee322c370e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68582a1e-448e-4c18-8857-cf9e275fcddb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5586fad3-e701-4b0e-9ffa-0de78850e782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f2a790-3af6-44d5-9289-5dc4f955e9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f4fae8-18cc-47a8-9877-3bf123d3d0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02886203-6c73-417c-ae86-aaf79caef344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d47917-8df5-4763-b828-af86d0f35428",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf0a3e6-c818-4dca-b461-ade2cd38d711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d8006c-3191-406a-8cb5-b0daa581d10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9878c54b-6bfc-40b7-8d73-b64a51777525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e860b848-78ad-4c02-bd7d-fa20863ac891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c39c00d-664c-4204-8123-20428d3de5fe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d22cb6-e549-4871-a94d-535885c9f7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58570178-b2bc-49e1-954b-f8e6647f317d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a49b6b7-50e4-45bf-a44a-709589c76ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4ae33c-6e96-48dc-b460-d925a28c7d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789cf24f-07fa-425b-bf65-5de5f041bae3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56913b2-48f2-437a-baf6-5676f995b859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61a4103-73fb-4c4b-8bed-1fcf0e59c5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ca23d9-cb58-48dd-a6a6-be95804451f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1b92e8-2bba-4e1b-a0cc-23a7c8e5259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6f8a72-622d-48ea-9a9c-56a58cd7211c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1613c674-baf2-4bed-a943-d5dc1a3ec071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98777f34-86ba-4e70-bdb7-08ac12a3e79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c05b4af-dc6b-40d2-bc22-549cbfc6ba9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9911e000-76f5-42a5-8044-54b5cebfe070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb4cfac-16da-4738-8609-4f48c137a0f6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16e82b7-d804-448a-84e1-b289c1949221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab2aab5e-3d8a-4670-a90d-71b74449cb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846bdd92-3ea1-4d31-9a98-278d8ad22220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cab4936-cca2-431b-9a55-de03fda3fb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2523ae02-9e6e-4e7b-b2f9-4ceead36b4a0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6689ee-524d-41a4-a3b2-eec541711306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6dcbd1c-a01f-442f-aaaa-41454206de78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e9b664-de3e-443b-ab7c-a780b412b2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46e51ec-135f-449c-9870-90fcf94606b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f714dd-43b2-4288-bbab-79ab3b94759a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8f12be-7e49-4efa-88a3-24a29452c83e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142c795f-f3c2-4210-99a2-178bb71a607d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4646f4e7-d456-4866-a2bd-2dda0c564048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fc8a8e-73c9-4c10-b761-c67ae702f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d4aaa2-1c87-42ba-a912-0426ec11d5da",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0e35e0-2659-47a8-a2bd-5ba586885fff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6bec5e-fbb1-44b6-9113-9f8baa5e50a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f88797-a89a-484a-adaf-f3e80a746189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4658c8d2-7837-420e-8369-a52d4bd7d05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa594664-0458-45d4-a8db-36a122a5956a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d311833-8810-4061-932d-f591ce96c94d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "854b0311-bf3c-43ee-b8a9-790a640be88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1c984-34dd-4ce8-b6d0-e2a6e6f9d30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff3ad9e-da6e-4eaa-8048-10753857ee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137aa1d2-e255-4765-901b-376eb6e6c2e7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43e7900-7582-4095-bb4e-3f2544ede5c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4670b410-ef3c-4698-ac55-37d88a8cb275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c5ed36-61ce-4928-a94b-efa98796faa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e894214-3ab1-465a-b8c5-995ec71cc548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e0a2c6-dcca-47ff-8ef7-456084a1d9b7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531f9ba7-dd0f-437c-805e-2e46beee5435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfcf14f5-65d5-4cb2-92c1-109fa09eb559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6866608f-4baa-4cee-bc2b-734dc4b95c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccf243d-6a96-4c54-8d41-6be92b44eaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e14672-7d00-4ff6-a692-d4050df630cb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f7c1fc-df8c-4438-a266-2e4dca72e3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08b92f3-ddcb-4ede-a4e7-d02a07676de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b3142c-a655-4da3-9182-34ec51309328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b36501-5055-406d-9b23-4065ec7baf68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741de37c-5b13-4732-9daf-9716fcc9b688",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c704e49-9e89-4124-b238-e7024b2ea632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79603da3-3bec-48e6-a825-51b4c8f238bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7b5d68-e02e-4265-acb9-4baf00b2c817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20c7ba4-60b6-44e7-8455-538d3f0c5a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bce571e-8d19-405b-a806-5d9d71e94a6b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de2bcb0-2a98-40ae-923e-89fde25c2062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "939d2ae5-30bd-4836-8cb9-96d9d8f0265a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31007faf-2356-424a-b452-ae44d135676e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52bd6a7-6c37-407f-b8aa-2f997e1fc7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9915203e-43cb-4d13-aa40-456f16923260",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018f26b3-e9a8-4697-80c8-55fbbe8b4659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab99980-10cb-4b38-a7a3-4f240fb89b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd68504-22bb-42c6-b983-61971349cac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7317910e-330a-4050-ad82-8c52f07014f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83363e55-3301-4a82-a08a-a1607ff59ddf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8b7bd3-bf83-4401-91e0-f192e78e6a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b0faba2-082d-4eb8-a764-b940cd9f0342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dcd328-dc3b-42d7-bb39-dc1bae504daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facdeb62-4b7c-4ba1-a23c-68de29d1b8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3f6a6b-0bab-4e1b-a457-2d0e0402399e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4260a3c5-5c39-454d-b749-f6c903147f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "395605b6-c89f-4183-9687-7f1052cab398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82ce5e0-f337-4794-a5f7-a2e1c2b7dc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a900a43e-1b2e-4166-bae5-9b2e9c44842e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d9f80a-56bf-486c-9514-00fc205b85ee",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5e92bc-d81b-41ed-9fab-fa6184c6930c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419f5dbc-5bfb-45a7-9401-3b4211e7be98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45792d69-f557-46e6-a8bd-7502a0e49122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545c025c-d459-419a-849a-8dd3bdbb0210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d96e54a-2219-405f-94d7-9418d43934b3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50caae48-1ffd-4820-a7c0-f98110931aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be29b43-44b5-4c0d-b839-2656ee6c5ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d99cd17-939a-47ee-9776-267eb344782a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d1a998-6f89-48e0-920c-3dee31f7b1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f787bb-457e-4a37-83d6-26895eaa87b1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf5b0c9-a9ad-4fd6-8f05-e5ee3337efb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9bac284-8677-4db2-9335-89cd97727c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21724165-8479-40aa-bca8-4745f32990aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6c0656-25a9-4abd-981a-523f27b0f3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bf393c-deaf-4dfa-974d-b737ffd019af",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f264543-cd39-42e0-a96b-380f4a09132b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c66c89-66f0-48d4-be37-5dc75b848e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1932e741-1f3d-4d51-93d9-cf97d9068c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29431ade-4c5e-4b7e-9373-339ef6d3e670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e21b059-f94c-4e89-a988-608f773f4189",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd36d7f-1567-41c3-8a71-9b8a5112fa68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "980080f2-c6a9-447f-b280-b5809a1d6246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ea9ec8-5c45-4c09-8024-0594f8f890fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6677a8-502a-4fa4-9bc6-4b8fe3d15bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41268a94-2224-4a8a-9712-2282c22e43a7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2a3134-5c37-46e8-b91e-4e70293a055b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4c7e56-db86-452e-b701-4a4e75399637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafc36fa-f610-4f82-bced-f381834ad7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7407e085-da98-4cd7-a6a6-294b47ecc430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02baf5d7-2959-40a2-9f4d-1c2c88689b47",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde1318b-4a20-4134-b6b4-34559edaf920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee188b4-fbbd-4f9b-a619-ab20442929fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f4ba6-eeaa-4448-8984-48a7e7968450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a089efa-53c6-4105-a6dc-e26690f43c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b240bef5-feb6-4034-a4b6-470a297c7142",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bea5725-8960-40ea-9a25-945590b0a0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16947d4f-775a-4be0-8836-486a9ae9063c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead84f37-f4de-4492-9779-d432aa8ecd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af27b32a-70c5-43ff-8cd8-18b38f1341c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a947881-3a22-42fd-a1eb-dd121c0199ea",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c79ff44-0194-433d-97dd-8e6c5cb51400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b436c0c-488d-4864-bdfa-a0d0b8d60f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248c0adf-d186-45ff-80ee-db36a83927f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a731cb15-c8c7-4eb7-8880-2156d1e4ef9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a79374-fb92-4ed2-b8b6-d478f4a2d5b5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9700b3-4962-486c-94b4-5564f7d141c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c864d5c-930a-4569-985c-92e4ca0d175b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fae27c-164a-470e-872b-1b77bd709750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02b94c4-fc64-4ac6-8da2-07a163ab628b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a845f5b8-6e9d-41c6-9465-d5b4f1265029",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6866ba22-b12c-4794-9474-af9d78ed766d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b9964a-1608-4397-975c-d0fbab620264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5177924-6a6b-4c55-8bd4-a70121f9e696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46dc907d-ee08-4a79-bf1b-be12a11c3df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05368348-cd3b-482a-a045-3ca1f4d7b2bb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0f618e-efc8-43e0-8ab1-ccc1dfe69f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90f2f2b-777c-48f6-8367-3dc9bf98228c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cbb4f6-912e-4e04-8bcf-034cb3d38e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662a0240-526a-48e1-9156-8a3066785960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667f7b09-efdc-4ee1-be49-b295c5196492",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e60f7c-1472-46d2-917b-59ff4d31a2bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aacc75d-cdab-49c5-995a-ed7d97dbd04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839231e8-8d7a-4dc9-811e-5b11d3cc6aea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a41a8ca-0853-46ab-b09b-9bd678db2f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d172e-8636-434d-b984-59e54abec405",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b9ccd7-31d0-4f89-817a-91cca14d0752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3821148c-d07e-4893-b566-0dced1e5af29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66404c3-f123-498b-bc60-bd7ba58a579f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0be5a35-6b96-472a-a574-c75cd2e7715f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6de116-626c-4d02-8c4c-2f248f38788e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567fac88-324c-4583-95e0-f948e30ca9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ec2e42-63f2-47c5-9f04-ebb9be6e4210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc3940c-24a0-494d-b3a5-ee9401ec5b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908f9d16-c46f-49ae-ae7d-940caaa2d83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1485b897-14e0-417e-8ce8-bbf3a55c1d99",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f28cb9-b74e-4560-9e14-1da4b3bdbff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54642ec1-e32f-4f64-86d9-4a97f7605dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c9abac-cdd4-4022-9097-204e53d4c0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813b5220-7f1f-4cb7-9b20-f3258f1cb52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c107c0e-8827-4a19-8bba-83f3f7c519ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592469bd-0184-4710-8893-c6bf0fca6b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72de9fb4-fc3a-45c0-ada5-30135c543460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6257604a-ce80-4103-a1cf-a88f9419f1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af30ba5-615d-4d4a-8058-3e6ea018275f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f83416c-2821-4e04-86c5-853667c2cfb7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23abc6c9-d8bd-418b-bf5e-4da3dcb465ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6946f3ff-1cb9-4a68-ae07-b9350203e7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813c70dc-cf53-4a02-b7b0-57527689040a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524a689d-4991-42bc-900b-b2127690a658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959e1519-1a14-4a8f-a7b5-ef42ff13f050",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21a209b-2ec6-4309-b286-02a4742fd707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1973e300-64b7-4e57-8ef0-04dc6c96cb5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb2da7f-6683-491c-96ed-1c56720e1f07",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5cfad3-e643-4028-ba85-a432951feb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401abf00-400c-4791-a9f7-949440329e31",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5831cdbe-2ca6-4173-962e-1505c0ba2195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab0d841-49a6-4b5c-8cbd-8ec33da8db08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f5b900-e910-4ed8-82f1-7ee879441404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6afce5a-eb5b-4f2c-a53d-6d3587484853"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "626851f0-cdff-418a-98f2-1afcd45e709e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edccac70-6891-45b0-8ef3-0e1267545a42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed47ce02-125c-4ac9-a0f2-f3dcc61a554b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ab95cf3-a75d-45aa-80e5-4dd6cea0f123"
                    }
                  }
                ]
              },
              {
                "id": "7a75a69a-f216-4a58-941c-5c63c37ae909",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56b746d6-9445-4f4c-89ff-0c67f3288356",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f237b2-a1e9-4ed5-b863-df5323842cbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4dcb4a90-4336-42a8-ac15-0002d3616320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c448fc-fcf7-4f21-b55e-cf79d3491fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c52b1f2-152d-42cd-bda6-3f3e96dc1fa6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0de63b99-fa3c-42c1-b18d-018834d28a05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fe234dd-93e9-43d7-9bf0-5f236f26c716"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8ee6e38-1e4f-4139-82a6-0bed63a20624",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9672e60a-f162-4d49-8b83-adf112ab8eca"
                    }
                  }
                ]
              },
              {
                "id": "0a77ba6a-7005-42b4-b1b7-2ce85b4a899e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "10747a13-9e6b-419b-9641-cbdcf575804b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d57517-9961-4ffe-8e10-e3b44e585027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3223b6ca-a48a-4cf2-9b85-d22a9a10f0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a6ba7a-15b1-4f84-a793-c4026da8d2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77aa631-f355-4ff7-89b1-ac6b85f931a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "54043f56-a975-4c64-9679-599678f8f2be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3069cf3a-fd18-4e9d-af23-c27045acf1f6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bddf1ec-7492-4dfa-95c3-10dd5c5f4932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a993d279-d4fd-45d8-8cb0-1c47448fee83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b026a54-28fd-4125-8736-f1cff9b9d488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4174416-fcc1-4bc8-8c18-0df53e3342d9"
                    }
                  }
                ]
              },
              {
                "id": "f8abd0d7-2110-4405-a19f-6998368aaf46",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d885d753-234d-4662-9212-7d07f75a2b75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17923052-2c10-4c31-b769-ea51245d73ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d23169d-f155-488f-9390-7c140488dd72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "071b9c71-8953-4616-9f3f-39ef698dffe4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66155f00-a6bd-464a-b62b-4e410c0f1647",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "906a7134-7005-4d66-bca3-7734e1cd02dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e84f664c-4c92-46a2-9951-c74f0585fbfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ed75b69-5d7b-4d63-8c37-d9ffd3a0e163"
            }
          }
        ]
      },
      {
        "id": "0592daa2-3412-4455-af87-178243ba6068",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1039d3fd-8264-4238-83a8-3af16e943215",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d4715a9-baf4-4dd2-9fd6-4947fc018c9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6ab6355-e83b-449e-972c-1026f6d4f168",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57143c4c-0ec5-436f-8a83-7520c7d2969c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5ac4bb1d-cc2f-458c-8339-b4b67028f55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a96ec41-749f-44ef-97cc-04d23d3834f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b573ef2d-43b3-4cfc-858e-403c1bc92ec2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9608b9e6-7afe-49e9-9b83-200e6973cd5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a113b302-f132-4196-b3e5-73120e743904"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e65888f7-db5a-4cb9-bde1-7db0aee8f1c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10935645-90aa-44de-b429-3f385796a777"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ef5b411-1719-418a-8478-572d3e206eb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b8b06acd-3274-4f72-b7d6-01a2bc92fbac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a1f3cd5-5263-4000-85e2-ca858e44e4a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7feca85-115a-4039-b654-ca208b705e77"
            }
          }
        ]
      },
      {
        "id": "f5ee8b92-7226-4e07-9cca-49fb85fb94c2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9f6b6fd9-ebbd-48f8-9ed5-f89dea0bcab2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eada4c0a-d606-4805-adc2-e64e90ea3e37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee64b78-74eb-46c1-832d-7ca55714e3eb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0370c426-1dc4-46ca-8143-63148d08a19d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6322590-193c-4234-a3f1-c8d3d43da4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1132576d-4f53-4bdd-be45-9f044c5e42ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "748e7e54-77e4-4df0-9f59-da96e0e61992"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a121e3d5-5dd4-4712-8a0e-aa5fa34567dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4abed80f-cd40-4f5c-b9cc-6161808a1b26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0378dc4a-739f-4dff-a803-0f6cc919af10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6247a465-88c4-4e5a-99c0-da51afde6b2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0c0382a-93e4-408f-b02e-93e8d73487b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7dd70f7-16db-4f30-9bd9-83bb23cfe944"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85346d3f-f1dd-4dc5-a7a7-9df48521f07b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d25e5c5-ae94-4ab7-a7d4-74ed34b0bfad"
            }
          }
        ]
      },
      {
        "id": "807b5d7d-8165-48d5-a767-94841819bdb1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "25bd8c7f-c28f-47e7-b387-cb494fdcde6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1c89832-5aae-4bd4-83dd-76468bdfc18e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f2ebe5c-e267-4a98-891a-243cd453ba7b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9103b987-cb50-4dee-9152-6d6ec1dc64e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "271d8e3d-4f62-4679-b114-ad990aa71434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a399de-81d4-4e69-af91-ec4f864b637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33f70f39-f7b1-4e96-8b57-37ac1edddf83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc9437a0-2ff1-45e6-bbb9-dd1a86ef89e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a970541-55e9-4eff-9d68-458bba5234c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3eba8bee-5cbe-4a8f-a244-153ffdeba889",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f62bb4db-dd93-46ab-8c65-9189fcccb6d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02fda2ce-c16a-41f2-935f-c67633f7000d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b8f1a5e-9232-488e-b3dd-6b86f4c69d34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b319149-3769-4fa3-bf8d-f0d3c34314a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc8b9bfd-1fe9-4828-8931-117aed70c095"
            }
          }
        ]
      },
      {
        "id": "da66a78a-71a9-42ee-8f69-eca3c16865d7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87d24f4f-5f50-4af2-ac5f-61b1af37ee13",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80cb4349-a221-426b-b9a1-f7bd9029d13b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5fa6c60e-2562-4530-9b5d-73af800da4e9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffa0650f-d4cb-4649-84be-3b36ffdd8b7f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad3c1064-98e1-4a39-95cc-04edf26aae42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 132.6587301587302,
      "responseMin": 6,
      "responseMax": 9191,
      "responseSd": 612.2149309108146,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719794643228,
      "completed": 1719794685140
    },
    "executions": [
      {
        "id": "0a8e07ad-07b9-4a65-aa34-47053d92a025",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "228678eb-0d1e-4166-8348-15d5a0c8a22e",
          "httpRequestId": "98e5c5a1-2ac0-4cd7-bdb3-728e32f4df54"
        },
        "item": {
          "id": "0a8e07ad-07b9-4a65-aa34-47053d92a025",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a820e513-8df2-4755-b098-cdf66ebb9b2c",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "0a5126ac-23e9-4030-8c1c-762c2f21604b",
        "cursor": {
          "ref": "18d8fe8c-ad15-491d-b015-c45f4be80590",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef0c2e97-ffa8-4d66-92ce-26bcc93977e9"
        },
        "item": {
          "id": "0a5126ac-23e9-4030-8c1c-762c2f21604b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1695d644-e90c-440c-9243-f44b2d4037b0",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "80c97f66-e55f-4a1d-b7e3-516d1fa415ba",
        "cursor": {
          "ref": "a6f3b12c-ad4a-4c97-9e2a-2d945404d1e3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "76023dbc-204b-45d9-bac2-0adb7726c097"
        },
        "item": {
          "id": "80c97f66-e55f-4a1d-b7e3-516d1fa415ba",
          "name": "did_json"
        },
        "response": {
          "id": "52d389b5-15e5-4280-84ea-bf4249cd8448",
          "status": "OK",
          "code": 200,
          "responseTime": 400,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecdb6a2-3d5a-427f-b2f5-8cdd366b9daa",
        "cursor": {
          "ref": "81a4b2bb-7442-40bb-9c10-488094500144",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce80983b-4d23-404d-9864-51ba0698a18b"
        },
        "item": {
          "id": "9ecdb6a2-3d5a-427f-b2f5-8cdd366b9daa",
          "name": "did:invalid"
        },
        "response": {
          "id": "daed0df2-072b-47c3-812d-c815a254a046",
          "status": "Not Found",
          "code": 404,
          "responseTime": 306,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecdb6a2-3d5a-427f-b2f5-8cdd366b9daa",
        "cursor": {
          "ref": "81a4b2bb-7442-40bb-9c10-488094500144",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce80983b-4d23-404d-9864-51ba0698a18b"
        },
        "item": {
          "id": "9ecdb6a2-3d5a-427f-b2f5-8cdd366b9daa",
          "name": "did:invalid"
        },
        "response": {
          "id": "daed0df2-072b-47c3-812d-c815a254a046",
          "status": "Not Found",
          "code": 404,
          "responseTime": 306,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04621477-eab1-45f2-b0e6-c7e0208515ed",
        "cursor": {
          "ref": "0f144c4e-64e0-4c58-99a9-ece567e1dcc3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8da608d7-2a9b-4ba5-abfe-1c6a9c63bf15"
        },
        "item": {
          "id": "04621477-eab1-45f2-b0e6-c7e0208515ed",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "01337615-b284-4a97-bab0-d38a59eaaeec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6146f6-921a-4656-8966-0b623909ab02",
        "cursor": {
          "ref": "0f8faf57-7314-45ce-89c7-34a4197553b7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "79130919-607d-4c7e-9e75-504b75d790b5"
        },
        "item": {
          "id": "2e6146f6-921a-4656-8966-0b623909ab02",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a8e858e4-43d4-4e99-9a8f-9a8288a068f8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b84401d-a6d3-4baa-9f5a-1d57305711a5",
        "cursor": {
          "ref": "8ac004a6-6200-486a-aeb3-be24d2eed5a7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ebefb45d-734c-44e6-84aa-d7de61324c9e"
        },
        "item": {
          "id": "9b84401d-a6d3-4baa-9f5a-1d57305711a5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6c11f358-e0b7-40bc-bb8f-f87ca7041bb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd6fb5b-6636-40c9-ba7f-15c900663fa0",
        "cursor": {
          "ref": "5f6972a7-1cb7-43f2-8037-6407c8365f8a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dcecba4c-1513-47f0-9ae0-8579337cabf9"
        },
        "item": {
          "id": "afd6fb5b-6636-40c9-ba7f-15c900663fa0",
          "name": "identifiers"
        },
        "response": {
          "id": "2878e7c1-32cc-4eba-bc86-9a3af8676a10",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13051608-67a6-4bfe-a274-c0cc482c5a2b",
        "cursor": {
          "ref": "4a594e0d-1843-46fc-b64d-7efd33d35080",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd0e5d58-4644-4eaa-8395-01ae5e0a0c8c"
        },
        "item": {
          "id": "13051608-67a6-4bfe-a274-c0cc482c5a2b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6f4538d8-1641-4c55-8d4f-e8eefb661f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bdb810-a761-4b70-86c4-15519238867d",
        "cursor": {
          "ref": "e5cd0479-e069-4986-b5d4-79a2465c0ee3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7610a6f-254f-4374-ab22-64e9e25a27cf"
        },
        "item": {
          "id": "40bdb810-a761-4b70-86c4-15519238867d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5f7e9123-ab41-45d9-a305-21ba9b43d986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a5d385-5419-4aec-b8c7-a050745546a6",
        "cursor": {
          "ref": "cd863e9e-220b-41a5-866c-0cb842f6b81a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b1540f6e-0edd-44ad-b678-c33ee8074850"
        },
        "item": {
          "id": "33a5d385-5419-4aec-b8c7-a050745546a6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2f6b7725-a66a-46d9-bb09-5a197b5c7b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b380339-f5d2-4d59-9866-197c07eed801",
        "cursor": {
          "ref": "d2e0126f-06b0-4619-9fca-373b3730001e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "99ed057e-77dd-42dc-a627-7b677268253b"
        },
        "item": {
          "id": "9b380339-f5d2-4d59-9866-197c07eed801",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f21c1771-290f-424c-83d9-f4324a36f028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da69926-eb7f-4546-815f-9143196b24b5",
        "cursor": {
          "ref": "3e6190cc-29f5-4477-b408-0ae017a60f09",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cdd75985-1c6e-4c5d-a3f2-c1e6d5828293"
        },
        "item": {
          "id": "4da69926-eb7f-4546-815f-9143196b24b5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7afb9852-f17b-4824-8f01-bcaa0dbd402c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6d1f42-e936-4ca4-b69c-197bee9bca44",
        "cursor": {
          "ref": "f3fb2600-fcae-4dfa-af8d-1659fda9313d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "57503c2a-373a-4684-83f7-11aa24c0fd4f"
        },
        "item": {
          "id": "1f6d1f42-e936-4ca4-b69c-197bee9bca44",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0b47ed54-f05d-408b-9e38-c11d65c80a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42967ea-01d4-412a-8033-8378da2e8fdf",
        "cursor": {
          "ref": "769f03aa-b0df-4afc-815e-95b0037418b2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2f356508-8db9-4ba7-ab6c-8283f146ccb1"
        },
        "item": {
          "id": "a42967ea-01d4-412a-8033-8378da2e8fdf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c1e5eb0b-3307-4a14-be09-a2fac5d9018f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f257e53-6a4f-44d1-827a-12f6896cf32e",
        "cursor": {
          "ref": "30bf16d9-442c-4960-b0bb-adf8142a39d4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d39d995e-f0e5-4dc1-8e01-c4cdb0108834"
        },
        "item": {
          "id": "4f257e53-6a4f-44d1-827a-12f6896cf32e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "af74f5d9-f9fc-4042-b128-e2e043c4f1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b05922-8409-40a9-b0e5-6134a1f1d0a9",
        "cursor": {
          "ref": "16a1c08b-9f30-4be2-888d-287049ce268d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4129b688-35ef-43eb-915c-4bd154efa4cc"
        },
        "item": {
          "id": "c2b05922-8409-40a9-b0e5-6134a1f1d0a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e8e215af-69c8-42db-baf7-94d47949a5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9486eb54-251e-49d5-bb89-6fab20b6dac0",
        "cursor": {
          "ref": "2e1e4ffb-0496-4146-a95f-08be9b301db1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cbb086e7-155e-4c01-ab40-78ba80795832"
        },
        "item": {
          "id": "9486eb54-251e-49d5-bb89-6fab20b6dac0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4e971b9b-2f0d-4d79-95e9-c6ac9b28ab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97ec523-05ac-40e8-ad99-e6a335ac3646",
        "cursor": {
          "ref": "7e67f9ed-e9ec-4eb1-922d-36359968a766",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "55e4601e-5d9d-4122-833f-13fceb872741"
        },
        "item": {
          "id": "d97ec523-05ac-40e8-ad99-e6a335ac3646",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e34eb67d-9d7f-47cc-8fdf-c043b63fbbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf47c84b-34e5-445a-bd0b-0e31887635a8",
        "cursor": {
          "ref": "f9dec2fa-81fc-4505-a431-588191e0e8c7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dda2efcb-1605-4696-96f2-cc7deebd5d97"
        },
        "item": {
          "id": "bf47c84b-34e5-445a-bd0b-0e31887635a8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "860bd2a4-45ef-4a43-afab-483c0030e783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba3ac40-3a37-448a-a5ee-78444a85451f",
        "cursor": {
          "ref": "72fb7827-2d3f-41c9-8b06-fb9e7751df59",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1540de5c-a412-4f2d-99fe-188d0699de0c"
        },
        "item": {
          "id": "1ba3ac40-3a37-448a-a5ee-78444a85451f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ae9b39af-9358-4ad4-91a6-e7b22a3acaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377e8f24-35ab-474d-9243-721c5e64aada",
        "cursor": {
          "ref": "d364fbc6-819c-45cf-ad01-1b5f42d7f18f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6b2f2c3f-0220-4ca6-a9e4-16cc2083ac20"
        },
        "item": {
          "id": "377e8f24-35ab-474d-9243-721c5e64aada",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "58276bb1-f34f-4fd5-9c67-8e508fb2e623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3d260b-71ee-4cf4-ae06-485b3deab3ec",
        "cursor": {
          "ref": "b451974b-43f5-4abd-8371-3765dc71bcdd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "90dc1f19-81a1-4f73-87ad-c09ba11906e0"
        },
        "item": {
          "id": "4a3d260b-71ee-4cf4-ae06-485b3deab3ec",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9cdcfee2-ee86-45b0-9f81-af1a6c0e1953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a85649-5c4c-4e22-a099-763ae34a521e",
        "cursor": {
          "ref": "700e060e-e792-4b3b-a179-ba1ecc1b4061",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f0d3e51a-eabc-430d-9874-41829c09ca4f"
        },
        "item": {
          "id": "55a85649-5c4c-4e22-a099-763ae34a521e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e7dee932-116d-49ac-b2f6-879f5429406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4c0df0-f5f3-4b4f-ba8f-0b62f6e59e4a",
        "cursor": {
          "ref": "b5f31bce-836c-4527-9e52-8fb2bf302fd7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8aabbb85-fe76-48a8-8ae5-85d3ac0b7ab2"
        },
        "item": {
          "id": "0f4c0df0-f5f3-4b4f-ba8f-0b62f6e59e4a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0145a291-2c3a-4ec2-91d8-9fddcb757cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a3842b-e537-48ad-a2ad-8ea577890190",
        "cursor": {
          "ref": "3c2d001e-38e0-46fd-a2ba-af4bdfc1a196",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e2e1e4f1-21f5-40ff-8edc-cf2b5cfbc698"
        },
        "item": {
          "id": "67a3842b-e537-48ad-a2ad-8ea577890190",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bbeab8fd-a0d5-4bd6-a278-026f4a6b5458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5342db31-8a36-4032-9587-a0eacea6b864",
        "cursor": {
          "ref": "253ec1bc-28f2-4021-8454-7841d0f4251c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "95a83f4d-075a-45a5-a3eb-fb4858b56b10"
        },
        "item": {
          "id": "5342db31-8a36-4032-9587-a0eacea6b864",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "675ed1e4-1472-4c5c-afde-97392183fab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fa5a27-408e-4edf-9ee6-c5b3fb99dafb",
        "cursor": {
          "ref": "f3e7f603-d1f7-4ac4-b63e-7fc010868be1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "980f835b-8d7d-4592-80e9-19df7a0008c6"
        },
        "item": {
          "id": "88fa5a27-408e-4edf-9ee6-c5b3fb99dafb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2c2287f2-29c2-47ab-afe8-0833553793a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c635c2-5c9c-40ed-b33a-bd5cc6b1e867",
        "cursor": {
          "ref": "a9886cb3-be5b-49ca-b722-969c88e83706",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6153ed98-21c1-4b16-b020-497e08677c2e"
        },
        "item": {
          "id": "10c635c2-5c9c-40ed-b33a-bd5cc6b1e867",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d4a8c431-8fe4-49a3-b393-a49238c019d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaf3025-3fcb-4f46-9371-4f9d88a5ccd2",
        "cursor": {
          "ref": "d24487ad-df92-4011-97e6-6bcd91542df9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e6c4acc4-fb6e-47c2-924e-50a58a14b88a"
        },
        "item": {
          "id": "3aaf3025-3fcb-4f46-9371-4f9d88a5ccd2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "33c5e06e-865f-4932-9242-084ec314ef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60efca2a-ba8c-4f0e-872e-b6a533c27d30",
        "cursor": {
          "ref": "811da36b-0208-4cb0-b736-c8fd732cedba",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4585c1d7-abc4-48b4-840c-059b8f97f9f5"
        },
        "item": {
          "id": "60efca2a-ba8c-4f0e-872e-b6a533c27d30",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7db427d0-f224-409f-bb23-9cf43e86958c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b7cf1-aa36-4100-b748-ee52f189ae5c",
        "cursor": {
          "ref": "fecd19de-4176-4bff-b3e9-5f6eeeea7228",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "663da123-c4ee-4c97-aff2-2edebd3ab5e0"
        },
        "item": {
          "id": "4d7b7cf1-aa36-4100-b748-ee52f189ae5c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4bb4ae99-adda-4421-8575-14a8d793bb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e662a6e6-e960-474b-8349-a834326cfc99",
        "cursor": {
          "ref": "329595a0-2dac-4d84-a583-95694c7ad514",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cecbde45-04b7-4207-9bac-415176de8e92"
        },
        "item": {
          "id": "e662a6e6-e960-474b-8349-a834326cfc99",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e6f088ea-5a8d-404d-83b3-bd2358e28a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1eb537-27d2-450f-bcb2-ff626ae50038",
        "cursor": {
          "ref": "b3ce552a-707a-4d22-a30e-db339aae3881",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6fd2a55e-1106-4d61-b25d-f34439b16bf6"
        },
        "item": {
          "id": "ed1eb537-27d2-450f-bcb2-ff626ae50038",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a70bb045-a3ae-46f0-ac94-299fde5fa81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626d9e43-820d-476e-868c-71eda7844337",
        "cursor": {
          "ref": "bda2d623-8ca3-4f94-a0f8-131069683d44",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d6840059-f90b-4dd6-a14e-5bc38d70db00"
        },
        "item": {
          "id": "626d9e43-820d-476e-868c-71eda7844337",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "117339a1-0dc8-4a3a-952a-f32fb94db762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a8a197-5155-4585-b749-23860cb71500",
        "cursor": {
          "ref": "2310e6d5-e700-4dda-a151-824933cd2d8b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5818e9c6-6695-4ed1-a926-314beab02b94"
        },
        "item": {
          "id": "08a8a197-5155-4585-b749-23860cb71500",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9716cef0-463c-4075-8e5d-e5405280c3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24820d24-befc-4597-8cd7-b98b330ca9a7",
        "cursor": {
          "ref": "ba9089c0-4b61-446a-9a66-d782bdf25885",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "484b8727-d312-4f54-93e1-fc54f745416f"
        },
        "item": {
          "id": "24820d24-befc-4597-8cd7-b98b330ca9a7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "270f7255-a975-4eb1-b792-3e4fb55360e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84f5767-638b-49e5-b20a-f67a5c96d17c",
        "cursor": {
          "ref": "55443aac-dd1c-4dc7-9530-941f593e8225",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f940f4a9-f672-421b-ae23-675a2d167722"
        },
        "item": {
          "id": "f84f5767-638b-49e5-b20a-f67a5c96d17c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "edb9a286-53b9-4e5c-a47e-10c47f0998c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c5884c-a2bd-4ebf-9621-f1b41390117f",
        "cursor": {
          "ref": "23b368ab-aa6b-4c65-ba0a-2c08c9dc4c34",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f04629b6-c91c-4016-ad46-93c3d6e48533"
        },
        "item": {
          "id": "58c5884c-a2bd-4ebf-9621-f1b41390117f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2cc4832d-a759-467c-afbe-b322c1a89f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21001a64-6d3c-44fd-97ed-d82add9ee516",
        "cursor": {
          "ref": "632ecf5a-ccfa-4059-85c6-8638b0d37124",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5768b882-2a11-4f5a-8e9f-05fb2dffe4f4"
        },
        "item": {
          "id": "21001a64-6d3c-44fd-97ed-d82add9ee516",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "928a6e45-707d-4485-8d91-7a955bcc1bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a25393-35a9-4ca7-bd20-f7e83a6cd764",
        "cursor": {
          "ref": "319be185-ea67-4a2a-a0d5-df96002eccd9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "92aac6e4-9e7c-4752-b25b-1d42c8cf3d2a"
        },
        "item": {
          "id": "72a25393-35a9-4ca7-bd20-f7e83a6cd764",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e98ad6ad-2e0f-4c08-9733-a8c668d4801e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7cb954-e063-494b-a5bd-733c5e057186",
        "cursor": {
          "ref": "1935aaa5-b830-4038-9d07-7234b59dab84",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "042f812c-09e6-4c91-a3d8-0c45bb4bb94d"
        },
        "item": {
          "id": "bb7cb954-e063-494b-a5bd-733c5e057186",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f9b6a3c0-e733-460b-acef-bd08deccc753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74019e0f-5c0f-430a-b58e-77d65c1707cc",
        "cursor": {
          "ref": "9c63a9d8-454d-43be-955c-cc4cdd6d0426",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "de9eab62-4a83-43d4-b4b1-278733026113"
        },
        "item": {
          "id": "74019e0f-5c0f-430a-b58e-77d65c1707cc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4377720b-34ae-4bc9-99b3-c80f3d5c6665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e59bb15-7bfe-4711-9768-dfe9bdb15858",
        "cursor": {
          "ref": "889dc16f-e214-49f9-9c0f-bd89274410d3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c26dbac0-9c37-46cd-91ba-804890c44846"
        },
        "item": {
          "id": "0e59bb15-7bfe-4711-9768-dfe9bdb15858",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1d11e40d-11da-4b02-83ae-f3e2b624dda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513e055b-57fa-4a22-b11f-68bb01bdd507",
        "cursor": {
          "ref": "d70613c4-ad4b-48bc-ad94-7b46f7f15bd4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a2c9d88f-3700-4eea-97ad-e705b40d0d11"
        },
        "item": {
          "id": "513e055b-57fa-4a22-b11f-68bb01bdd507",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bf8133ad-0ad3-4447-af8b-778c275f2c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da68e34-7651-4709-aa2e-4bc816f2ad51",
        "cursor": {
          "ref": "9e17dc97-eb0f-4da5-a21c-f191a8c08552",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cf84bc93-d957-47a4-a18c-d1ba56170b3f"
        },
        "item": {
          "id": "7da68e34-7651-4709-aa2e-4bc816f2ad51",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1a503318-d4dc-4617-a466-da84b75040ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1309dc3a-58b3-4d1c-95a8-82cbc0b61330",
        "cursor": {
          "ref": "d6711709-b9cc-460e-a9e6-0c0cef990f81",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "31e6377c-f493-412c-ae0c-450797cbefcb"
        },
        "item": {
          "id": "1309dc3a-58b3-4d1c-95a8-82cbc0b61330",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5e75b4ad-e0d0-4624-93c8-5d675dade322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aa1ddc-2217-45fa-af6f-39568e710af1",
        "cursor": {
          "ref": "cfd3d80a-4974-42d4-aa82-8bc82b3e7f82",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9e32a102-fd2d-402c-9b53-23f540c80d8d"
        },
        "item": {
          "id": "b0aa1ddc-2217-45fa-af6f-39568e710af1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8ec6e976-053c-49cc-b409-773e0b4eaa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ea2abf-7609-47bb-8a4d-11a77f817f48",
        "cursor": {
          "ref": "92450f2e-54af-42c9-843f-73d0b3899cfc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "79df8933-b239-4920-8862-c2a30a8d8bfd"
        },
        "item": {
          "id": "74ea2abf-7609-47bb-8a4d-11a77f817f48",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a902903-859d-42b6-948e-d6e9456ca4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b476e343-880f-4fbd-a450-ef78ac3c828f",
        "cursor": {
          "ref": "65be4fa1-d39d-41cd-aad1-b65b98bf0147",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "53481e4b-5f6d-4635-892a-e0656e5809d7"
        },
        "item": {
          "id": "b476e343-880f-4fbd-a450-ef78ac3c828f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "26575684-6ec5-453d-afa1-814cb31e7394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ab08cf-24a8-4986-a4ce-ea76a6f2f385",
        "cursor": {
          "ref": "dc16e174-9b66-4775-83cc-4363c3a61f5d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "de8bcef2-40da-401c-b3ad-a975d4f258e7"
        },
        "item": {
          "id": "e3ab08cf-24a8-4986-a4ce-ea76a6f2f385",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b3d0ce1c-c7e2-46cf-99d0-521bd93dd5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12a628d-f36f-48d6-844f-b5fdf6bb4a51",
        "cursor": {
          "ref": "451c24c0-8c04-4387-964d-86440847a5eb",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "59023831-597a-46fe-9eba-919968834e58"
        },
        "item": {
          "id": "e12a628d-f36f-48d6-844f-b5fdf6bb4a51",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5f7cfceb-bb5d-43d3-a939-23cde24127ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40fedcb-cef3-4962-9ba7-18b5a9b80c9c",
        "cursor": {
          "ref": "16e3a05b-b367-44ec-8002-2cc357fc3d10",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c7060e8f-00fc-4869-b40a-eedf9f8c3c1d"
        },
        "item": {
          "id": "b40fedcb-cef3-4962-9ba7-18b5a9b80c9c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ab1998a9-97fe-4e86-8db6-096b6382a5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974c1ffc-f3df-41f8-8c21-bd561d9f64fa",
        "cursor": {
          "ref": "cbf51f18-3746-4b3d-bc32-b760632d0e80",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1f140e13-149e-4feb-bd65-b8a67956171b"
        },
        "item": {
          "id": "974c1ffc-f3df-41f8-8c21-bd561d9f64fa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "62ef6202-7592-4669-967b-d3c79eb70c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed9b94f-5cc3-4e3f-81f3-5c43b0ac4a3d",
        "cursor": {
          "ref": "cd9b4a08-4967-46a2-bf62-754d5403585f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ea79f8e9-6633-4b94-a41d-d39e341be22d"
        },
        "item": {
          "id": "fed9b94f-5cc3-4e3f-81f3-5c43b0ac4a3d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "681d8539-52f0-4581-a4fc-cf0892768522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ef7306-1e7b-40c3-a0bd-0f16f427de3a",
        "cursor": {
          "ref": "0d23c4ca-6046-40a2-b7e9-4690a85d02eb",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "27e2cabf-7992-4a97-996b-13ffbdfaec62"
        },
        "item": {
          "id": "89ef7306-1e7b-40c3-a0bd-0f16f427de3a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4a120608-bee0-44bf-a453-11c368dd89a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce09455-71fb-4f23-b2bf-90d789d3af1b",
        "cursor": {
          "ref": "8fc9f41e-72f7-4999-98cc-48aff33aa56b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ba1302eb-9c59-4575-b703-d023c418b73c"
        },
        "item": {
          "id": "3ce09455-71fb-4f23-b2bf-90d789d3af1b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "85c89420-76db-4c96-a2f1-a579a7c98d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46867642-364d-409c-a55c-a9cda1268057",
        "cursor": {
          "ref": "01780215-84f2-40d5-af2e-d8ad7828a317",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fd23966a-3728-4b8e-9e91-a0cc69f5fe6e"
        },
        "item": {
          "id": "46867642-364d-409c-a55c-a9cda1268057",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "097f3f02-3173-4195-81f4-19c451039fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4690b2e-fedc-4268-9c4e-e3d64d77d37a",
        "cursor": {
          "ref": "fd9adc7d-4fd8-4392-9a17-82858178e999",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c4159144-4d54-4e27-b75b-1217ab56849b"
        },
        "item": {
          "id": "a4690b2e-fedc-4268-9c4e-e3d64d77d37a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "549485fa-db0c-4a15-b64e-c53581a78530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c275de38-8314-4780-92e7-ea1771289f47",
        "cursor": {
          "ref": "1593d182-8ad4-4eff-9ea0-c035cb4f2187",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8f3f2ae3-05c2-4465-840e-2cdf84cab3db"
        },
        "item": {
          "id": "c275de38-8314-4780-92e7-ea1771289f47",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "915988c2-d0e9-454e-b487-2bd1edd6c87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0decbb75-97e4-49a4-9389-6ca4a248accc",
        "cursor": {
          "ref": "e7e42849-4009-48f7-9586-b53ca91253bf",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d0f35054-2a20-4faa-9a38-46cee885dc66"
        },
        "item": {
          "id": "0decbb75-97e4-49a4-9389-6ca4a248accc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4d0f8400-ba9d-4279-bfc3-32ae01dac078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e95d38-62bd-48ac-a935-2a858f74da69",
        "cursor": {
          "ref": "5ad8a2c8-cdfd-4d6e-8139-0b2c1f87fbc3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b75bec46-d5b5-4bc5-99b2-71ba7beb588c"
        },
        "item": {
          "id": "b9e95d38-62bd-48ac-a935-2a858f74da69",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9f48c90c-d727-41b9-affc-c1d4dd8d4e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d032346-689d-42aa-9873-4bcf621abd5d",
        "cursor": {
          "ref": "8844c915-1dc0-4604-b423-e71bb94dc2b8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f439e51c-aa37-413b-995b-35abd4a15db9"
        },
        "item": {
          "id": "6d032346-689d-42aa-9873-4bcf621abd5d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9391d6ee-8fae-4a3f-96ac-981d926cb169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7f6d65-8e11-4d50-8c17-e7a25aedb82f",
        "cursor": {
          "ref": "9be0be4a-264c-4775-8e67-f7451ba6ff78",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d7b56664-b682-41f3-9dc8-a7c2006d538f"
        },
        "item": {
          "id": "cd7f6d65-8e11-4d50-8c17-e7a25aedb82f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "45945c30-d14f-4259-8648-93d4d51a2869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded81b7-a828-4a10-b212-71c132496bf1",
        "cursor": {
          "ref": "0fe773f9-6fc7-4c9d-9314-31f1499a96ad",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fddc37ce-61ef-412e-a2f7-619c729991cf"
        },
        "item": {
          "id": "8ded81b7-a828-4a10-b212-71c132496bf1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ee5d1e32-851b-481a-9b60-22f80e42346c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162578d7-24f0-4556-b941-eb253a5893ba",
        "cursor": {
          "ref": "42d3c2aa-bee5-4e65-bbc9-5554e71bfe71",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "44c8fb8e-12b6-4bf1-b885-a83aa4140e03"
        },
        "item": {
          "id": "162578d7-24f0-4556-b941-eb253a5893ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fedde700-fdf2-4a1f-ab49-3bb14fdb8c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810d01ad-6ff9-4c20-81f2-8b84cdba834e",
        "cursor": {
          "ref": "42b535d9-300d-48a3-a9cc-052ffbced2a5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d13031d3-382f-4f87-8c60-a390232ecedc"
        },
        "item": {
          "id": "810d01ad-6ff9-4c20-81f2-8b84cdba834e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0511f674-a6b6-47ff-805f-cb266643775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f3a530-8d58-413b-954c-980c9d1386e8",
        "cursor": {
          "ref": "31cfa5b5-fb36-4c0a-8723-99618713fc7a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dc32cb78-5194-4148-8466-f522d479a813"
        },
        "item": {
          "id": "b6f3a530-8d58-413b-954c-980c9d1386e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "86914595-c60e-45e8-b1fa-e87f6a826b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e989b8c6-3ed7-46ed-93cd-3e751e0c0031",
        "cursor": {
          "ref": "cdf737b6-f124-4b91-b3a8-bb645fa347a8",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f068a65e-58c9-48fa-b53a-26f8a40a376c"
        },
        "item": {
          "id": "e989b8c6-3ed7-46ed-93cd-3e751e0c0031",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e539289a-18f5-47a7-9495-a5cf0ab9cbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c42d04-61d6-42ab-961e-39e09b84f714",
        "cursor": {
          "ref": "8ab1b762-e290-4635-8152-f578c6a6d270",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "85a23b7e-2830-47f8-b91f-30053061a293"
        },
        "item": {
          "id": "89c42d04-61d6-42ab-961e-39e09b84f714",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fa4f08ac-3732-48de-b39a-2817e8d1cb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5d5ac5-1ea5-4502-8fb7-a97470be01de",
        "cursor": {
          "ref": "9471b88d-a29d-4b98-bf65-56fab0e445e8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a0bf9b59-bc8d-4def-900c-0a7d65ca3130"
        },
        "item": {
          "id": "7c5d5ac5-1ea5-4502-8fb7-a97470be01de",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9280b71f-121c-4acf-86a4-bf21ea30f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf8f107-9981-414e-8eaf-3bb893c615a1",
        "cursor": {
          "ref": "f07a46a3-f106-4957-80fb-387087d9a658",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b11c17ea-25ed-4ab9-b0b1-89caa7429ad4"
        },
        "item": {
          "id": "3cf8f107-9981-414e-8eaf-3bb893c615a1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a7270209-d401-4a61-8ee9-7c52d1055eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28abc1f3-9a9e-4352-a0ab-c1fc5196ed01",
        "cursor": {
          "ref": "9b319ac3-0651-434e-87e9-42899dd2d807",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c93c5c75-2cfc-463e-8186-ad4dc12bd8ae"
        },
        "item": {
          "id": "28abc1f3-9a9e-4352-a0ab-c1fc5196ed01",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b76fbf5e-c0d4-4c76-8e93-1ef75cef92ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f24439-18c4-4de7-ba59-c7baade3856a",
        "cursor": {
          "ref": "504715b4-15dd-4676-9019-dfb66b830cb1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "58140f96-291d-44c7-815c-0089d1d4ebda"
        },
        "item": {
          "id": "98f24439-18c4-4de7-ba59-c7baade3856a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b21ce8e8-57c7-494d-a08a-4ee510c47739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbab431-9e17-4658-982a-ef8f6ecd6012",
        "cursor": {
          "ref": "af832bd0-6dda-4ce9-b62c-4a1e5479ab5c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7357c25b-4080-4f38-9797-3340222eba61"
        },
        "item": {
          "id": "efbab431-9e17-4658-982a-ef8f6ecd6012",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3a1b6308-3387-4921-83cd-3fe4df89785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cede97-bf40-4f4d-894f-b256db42c71a",
        "cursor": {
          "ref": "1c2312b9-2e58-441e-9d97-f914e8aa13ae",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "33e0d160-80cd-4a9b-b1cb-bcd29b74142c"
        },
        "item": {
          "id": "d1cede97-bf40-4f4d-894f-b256db42c71a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5301d62c-3831-4cf4-879a-6b82239d1165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc2d0ab-e992-4856-bfba-3b82dd75c33d",
        "cursor": {
          "ref": "2ecb65d0-c29e-4d81-a596-1b9d874660da",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "30e4f39a-2d29-4252-83b6-87205c545d96"
        },
        "item": {
          "id": "8fc2d0ab-e992-4856-bfba-3b82dd75c33d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d5ddde5b-7cc6-4d43-80c1-78cd7b7221c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50294cb-7645-4914-85a3-cef9a260decd",
        "cursor": {
          "ref": "a07d48e2-8e0e-4410-9cfb-bb876feace04",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "32758a78-adce-4ee3-83e7-c336fb372f6b"
        },
        "item": {
          "id": "b50294cb-7645-4914-85a3-cef9a260decd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f204a9c-a102-488b-a52b-effa886791cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9df953c-a3c9-45d5-ad70-b3e93a069e85",
        "cursor": {
          "ref": "97fd5635-67e7-431d-a637-d7d6d223e60e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "97072df2-825f-4e7b-8c04-d9981ddebab9"
        },
        "item": {
          "id": "d9df953c-a3c9-45d5-ad70-b3e93a069e85",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "16b50439-0731-4ab0-b884-22bbb2ddca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f1659-0b57-4335-996f-a38f4dabba25",
        "cursor": {
          "ref": "4ac89872-fa04-405e-844a-a69dbaf952fe",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "098968a1-3539-4618-810c-9e94f29f64d8"
        },
        "item": {
          "id": "2a6f1659-0b57-4335-996f-a38f4dabba25",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fb329c96-41aa-4f04-a083-3191fd158041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8180e7d9-0ac4-43dd-bc4a-e47ae7996873",
        "cursor": {
          "ref": "1e36bebf-3181-4992-9e6f-3bad17224d7f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5e3a424b-2d1d-42f4-bdb9-288eb287fb60"
        },
        "item": {
          "id": "8180e7d9-0ac4-43dd-bc4a-e47ae7996873",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "00ffa420-9dbf-4460-b4fd-71f78f8131f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85af05e6-afb1-4a61-a46c-056561191d1d",
        "cursor": {
          "ref": "10eee4c4-05d8-4475-968b-067bc8463ccb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "af595b7b-2803-494a-9ec6-b868a372b470"
        },
        "item": {
          "id": "85af05e6-afb1-4a61-a46c-056561191d1d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6591b0b6-e205-4a5f-ba20-f791e6a54d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a318253-a484-46e0-a661-2d2a5535ec68",
        "cursor": {
          "ref": "e89cc94d-066f-4acf-a088-f5ff295e51d1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8d32c89d-847b-4088-b0bb-b45b304d1403"
        },
        "item": {
          "id": "5a318253-a484-46e0-a661-2d2a5535ec68",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "38f76748-99a7-43fa-bb63-d176e0b71bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695548e9-d537-4dd1-9b7f-415f9ceab329",
        "cursor": {
          "ref": "bf97e5ec-199c-486c-95f8-fbf2d3eca119",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8a7e9789-e6f5-4a0d-8b4a-b2e2aaf266b5"
        },
        "item": {
          "id": "695548e9-d537-4dd1-9b7f-415f9ceab329",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e0c6331f-2b85-44b7-9487-e8ab32b5f128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cea6be-aecf-4ee3-99ca-d4c47aee0305",
        "cursor": {
          "ref": "6b142045-cb87-416d-95bd-9da11ab77aca",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0dd0b967-3d38-4d68-ad39-6043b34cd422"
        },
        "item": {
          "id": "b8cea6be-aecf-4ee3-99ca-d4c47aee0305",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9737834f-9a63-4041-88bc-f39624d4a6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4998a5-87aa-46e9-8424-4fbaf94fa85c",
        "cursor": {
          "ref": "c36d4ddf-4e3b-4750-befa-a82b5e534a6e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "25abae04-1f36-4f37-92c4-df84dc9432e8"
        },
        "item": {
          "id": "ba4998a5-87aa-46e9-8424-4fbaf94fa85c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7a5182f1-77bf-447a-81f4-459c67048fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5339a8-ce1c-449b-8d45-9be9fae54276",
        "cursor": {
          "ref": "cf7317b7-857b-4488-b4b5-f1525e6cfd59",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3e610874-e9f1-4474-855c-99ad8bd277ad"
        },
        "item": {
          "id": "aa5339a8-ce1c-449b-8d45-9be9fae54276",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "207d671c-8e45-4767-99c0-a40546a427f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff97459-9ead-4597-a8c8-a2cfa00f83b2",
        "cursor": {
          "ref": "e25eea51-c8fa-4cb0-bd26-465d4fd1bb72",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b7906cef-0369-46d1-8da4-902e8c93be86"
        },
        "item": {
          "id": "4ff97459-9ead-4597-a8c8-a2cfa00f83b2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4e90bd89-edfe-4e85-8438-efa1f7f12e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eedc62-5ad2-415d-8f61-daf82451db6b",
        "cursor": {
          "ref": "1f50d66c-d6ef-41f0-b87a-00986474fde6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "04015103-1606-4473-be40-f71feec27902"
        },
        "item": {
          "id": "b0eedc62-5ad2-415d-8f61-daf82451db6b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b5ffaa4d-4644-412c-9dc5-a1c18df1f276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fafb8e-ff51-4382-b68d-0188b4ac9160",
        "cursor": {
          "ref": "463414ca-5e43-49b2-a39e-e8f9debeddcd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5be6e1fa-1f6c-4fa7-acad-5109eb88a1cd"
        },
        "item": {
          "id": "c8fafb8e-ff51-4382-b68d-0188b4ac9160",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1c52fc7b-b238-47d5-afe7-ee706b127c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ff0567-7a8f-4de2-924b-3fbf63be63c7",
        "cursor": {
          "ref": "4e6439c7-a6f2-4bfa-8a30-2d1620d62843",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bf550d26-4e5d-439f-a487-ed51fce2c42c"
        },
        "item": {
          "id": "25ff0567-7a8f-4de2-924b-3fbf63be63c7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "453a9dbe-e8d0-4482-ba16-5d22db0de39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1a26cc-7eb7-45c1-b286-7401bdb11fab",
        "cursor": {
          "ref": "149ab08f-538c-45b3-9c8d-856db0a814ee",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b3fd4091-0546-4174-a5c4-f9c61db64cd1"
        },
        "item": {
          "id": "4f1a26cc-7eb7-45c1-b286-7401bdb11fab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1ba9106a-cc6e-4db8-8c29-8b18c4035a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5027227f-d085-48d0-88d9-2852b8855386",
        "cursor": {
          "ref": "8aa0f16e-1b74-4855-aa57-e5297dce2a43",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d191bb37-dd36-4ab4-9d9f-5984b0dfc791"
        },
        "item": {
          "id": "5027227f-d085-48d0-88d9-2852b8855386",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0371c2d4-770d-4ed2-b084-3132aba878d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce677a0-eebd-481e-b676-91be81699482",
        "cursor": {
          "ref": "2d5b8172-67d9-4521-935a-e009051c04c0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "10993780-88f3-4530-aba5-1a98f1531a51"
        },
        "item": {
          "id": "1ce677a0-eebd-481e-b676-91be81699482",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8bd87dda-0ea5-4ca8-8607-66a5e9735e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bffcc0c-5662-4671-90c3-e5814b72fb62",
        "cursor": {
          "ref": "ab3e5c44-1e5b-4468-8c8b-9cb7988ed31e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a76ea384-a3d9-4865-9c68-d2d93e74faa9"
        },
        "item": {
          "id": "3bffcc0c-5662-4671-90c3-e5814b72fb62",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "64e66f35-043a-4da4-8952-9fbfc240dadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24443891-8206-4d43-a660-cd5ea6f3b1dd",
        "cursor": {
          "ref": "a40f4b10-1825-4512-b56f-2ca293df52b9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f16c08c7-4b29-4b20-a670-deaedc23a6a3"
        },
        "item": {
          "id": "24443891-8206-4d43-a660-cd5ea6f3b1dd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cace6c4b-f3cb-4046-a207-1047b08030af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05c6101-4337-4ed7-84f4-a4637e9e2b28",
        "cursor": {
          "ref": "ce83f6f0-8e89-4db3-bc5a-588ecdcaa5d0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d4393de0-acd8-4be6-8b10-f16cf0d090e1"
        },
        "item": {
          "id": "c05c6101-4337-4ed7-84f4-a4637e9e2b28",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a8ad814e-82c8-4f09-961e-4fd46afe9db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1329f3-fc00-4a76-98ff-cffc833ba875",
        "cursor": {
          "ref": "d4fd8719-adaf-49a0-a91a-2cc0d6646b98",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "34381c63-a83e-4a59-acaf-4161eb94b43d"
        },
        "item": {
          "id": "1b1329f3-fc00-4a76-98ff-cffc833ba875",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fc34f1c6-c5aa-4ffe-8f5e-0f73907f615a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048be0c5-efe4-47d0-94c0-4cea65061bce",
        "cursor": {
          "ref": "cbe8bd69-580a-4dbd-a25c-c54fa6ed8632",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "55a39fce-4638-4b26-a5a3-5d5966e2dfc3"
        },
        "item": {
          "id": "048be0c5-efe4-47d0-94c0-4cea65061bce",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "494b4219-341d-449b-aaf7-68710b95596e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8736b3-2596-4317-aaa3-972b4d032aa1",
        "cursor": {
          "ref": "d9167767-bf66-432c-800e-15e7843eb98d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "72c3a85a-7661-4711-960b-7073c38f110b"
        },
        "item": {
          "id": "1c8736b3-2596-4317-aaa3-972b4d032aa1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d6b836dd-37b7-4399-b4b1-c55ab91ad2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0172eeb7-b735-44ac-99bf-71f12581e6d6",
        "cursor": {
          "ref": "0eab092b-5dc4-4c4c-abfb-31b69e0eeaa1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2950d449-f58d-492d-9645-6f32c3270689"
        },
        "item": {
          "id": "0172eeb7-b735-44ac-99bf-71f12581e6d6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d05f7aa-2c79-44cb-b5bc-2ab60fcb947a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c05dee-10ab-4507-aa40-e71e7e1274cf",
        "cursor": {
          "ref": "5c4e92f0-f1d4-420d-aea1-dc8396a6b617",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e88be9be-3a6e-4f7a-a540-50d488f56630"
        },
        "item": {
          "id": "68c05dee-10ab-4507-aa40-e71e7e1274cf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ce721103-8170-49ea-afa1-a41dd47ced4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "590818ad-c4de-4148-8d75-ed89444bc4fc",
        "cursor": {
          "ref": "e468f130-ae9e-4436-a9c9-30e898314462",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "227b9a1a-21e7-449a-9ca7-5dd34d8199db"
        },
        "item": {
          "id": "590818ad-c4de-4148-8d75-ed89444bc4fc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cd72f4b6-402d-4340-87ef-e9444003480c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6ac67d82-f53d-4cbf-b0a8-aa421208c987",
        "cursor": {
          "ref": "cc95dcc5-230a-41ea-8a07-155dc76393ce",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cd0db9a7-c687-4ab6-9583-a0cb02dec81f"
        },
        "item": {
          "id": "6ac67d82-f53d-4cbf-b0a8-aa421208c987",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0097a8fe-9c7e-4da2-9d19-2831929d5204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "810ae7e8-1656-4427-8196-8f018e3e678f",
        "cursor": {
          "ref": "44cb4533-202d-4743-8d5d-785e27c5719f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "115fa75e-cb4b-4c53-ae2f-ed84bdce7a25"
        },
        "item": {
          "id": "810ae7e8-1656-4427-8196-8f018e3e678f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b0595440-b3b8-4785-bc4a-e906407d17a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5f3576d2-e790-41ab-bd90-40f0062cfc18",
        "cursor": {
          "ref": "6f8fcd09-9be2-4239-a472-27f668833652",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9da8a1bb-dc36-478a-a7cd-caa69319bf3a"
        },
        "item": {
          "id": "5f3576d2-e790-41ab-bd90-40f0062cfc18",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4f1b35c3-fb6b-4c40-bf28-a892d95e71f8",
          "status": "Created",
          "code": 201,
          "responseTime": 9191,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d21de2-a5fa-4ff9-8f87-1c61334303c7",
        "cursor": {
          "ref": "624068cb-ce40-40f2-8eb0-027048f81975",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6fd59b20-4f39-47cf-9e6a-bc531856b9b4"
        },
        "item": {
          "id": "b9d21de2-a5fa-4ff9-8f87-1c61334303c7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e18484d1-fe2c-4c14-b8a8-61aacbb3bca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7abbb222-0e0d-442b-ae6d-e38cd0d36967",
        "cursor": {
          "ref": "7eab9b3b-4d0d-4943-b779-149d602ddadd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c54ec8d1-9eeb-4af0-bc75-2061924bd08b"
        },
        "item": {
          "id": "7abbb222-0e0d-442b-ae6d-e38cd0d36967",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ee5504a5-5fa2-4516-a8c9-8a2ddc494d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3b3ed7e0-156a-42a1-8780-86e796731467",
        "cursor": {
          "ref": "6154a144-e184-48c6-a243-bc4fb66f3fa7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4e073b60-89cc-4f1a-b9b1-97b17c18256c"
        },
        "item": {
          "id": "3b3ed7e0-156a-42a1-8780-86e796731467",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a8088e9-c0af-4e4b-a379-5a721887cfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc17430-ae8e-499f-8421-c7c7ac12f182",
        "cursor": {
          "ref": "c4f81a7a-a66a-4a45-a898-37eff948a81b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b285c30c-bf87-4d6a-b766-65c4ee009780"
        },
        "item": {
          "id": "5dc17430-ae8e-499f-8421-c7c7ac12f182",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4a1d316-c19e-4954-9b5d-3ce0f278302e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b8872-c049-47ed-af47-d04fe834661b",
        "cursor": {
          "ref": "c491dae2-472e-4b54-adc5-426500e78ed5",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0e9bde6f-5549-4bd4-98ab-fd50f33a1b72"
        },
        "item": {
          "id": "4d7b8872-c049-47ed-af47-d04fe834661b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "52d2aab0-cfff-4698-9ad4-e4dd84ef6533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac325e63-8674-4951-b48e-32ad08734731",
        "cursor": {
          "ref": "806b4ac9-f7e9-4cbb-9718-354804dec2a9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "327cfdcc-01b6-41c9-86bc-c3ef12c633db"
        },
        "item": {
          "id": "ac325e63-8674-4951-b48e-32ad08734731",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1c72f48e-6d57-4c8f-a249-cc05913d6f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b618e10e-7b79-4328-b290-aa59fd80ddb1",
        "cursor": {
          "ref": "5b48a5ad-1a5d-4843-b52b-c29b570e0d8a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "627e992d-81f4-497d-b927-dbb73a7e455b"
        },
        "item": {
          "id": "b618e10e-7b79-4328-b290-aa59fd80ddb1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e9e012d1-5a82-466b-8839-a7506e14be70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336528fd-8323-4127-b8df-f51d6027aa5f",
        "cursor": {
          "ref": "55f91689-0fda-4c6a-9c2d-f9a7fdf2a13f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a89f831d-5523-4f65-9e03-b854c69ffa87"
        },
        "item": {
          "id": "336528fd-8323-4127-b8df-f51d6027aa5f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0827b5b7-cd8b-45d0-8714-584811df2028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62fdbef-3d3f-4b19-a2d0-eba98a335d32",
        "cursor": {
          "ref": "dff997f8-240b-4dac-b19d-eb6a0ddf65e8",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9aba701c-066e-45e9-a2b4-07d30d72161d"
        },
        "item": {
          "id": "b62fdbef-3d3f-4b19-a2d0-eba98a335d32",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1caedff4-5482-4ad4-941e-6339068bc333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebb8578-9fe0-4957-ba43-6bcd4c3c3149",
        "cursor": {
          "ref": "baec5c54-d400-432e-be4a-c0b6fd4eea82",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ac4d5c6e-a235-4485-8ca6-1e2f7f66b1be"
        },
        "item": {
          "id": "3ebb8578-9fe0-4957-ba43-6bcd4c3c3149",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9b1d9e9e-0958-4244-a992-1c21fd643776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f04f63f-381d-487f-b2eb-e1b52ebf1f7e",
        "cursor": {
          "ref": "1b81e6e9-5cb1-4e2c-a5cf-ed35e36f4808",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "841c46e7-ce3c-4e93-9a95-2657051d755f"
        },
        "item": {
          "id": "9f04f63f-381d-487f-b2eb-e1b52ebf1f7e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "751eae7f-9ab6-47c9-90c8-40d9a17e1551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f384cf-09ae-4be9-97c5-18ade11b8336",
        "cursor": {
          "ref": "a4cad03e-a3c7-47e0-a722-32d20fa5f883",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bd9c78ae-a6fd-4313-a1b3-4d045e9dc83c"
        },
        "item": {
          "id": "68f384cf-09ae-4be9-97c5-18ade11b8336",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bdfccfcc-236a-4950-a3ad-a5b942dc5f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23a6456-8763-4ca6-a43d-24b47754683b",
        "cursor": {
          "ref": "f793743d-4633-40af-822f-15571ef21a9d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9fa0aff0-9bff-4c52-adc0-42a27ed7c7e0"
        },
        "item": {
          "id": "f23a6456-8763-4ca6-a43d-24b47754683b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "10e1d6ff-fb07-43c6-865d-137c3c4a0c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dec522-b7d6-43f5-a685-db249de95e39",
        "cursor": {
          "ref": "e9fe24c7-62dd-460d-8a9c-de9c9494024f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "29a2dc83-1d09-4a64-94ef-d2adb1a2944d"
        },
        "item": {
          "id": "d5dec522-b7d6-43f5-a685-db249de95e39",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "18b33f01-4f5f-4359-8537-97baee287131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9868872-433e-46ae-9c8a-937e6a137ee1",
        "cursor": {
          "ref": "81764846-a0d5-457b-99d1-e3c04258456a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8050e980-3d60-4847-bf99-0f6a920fe92b"
        },
        "item": {
          "id": "c9868872-433e-46ae-9c8a-937e6a137ee1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d09f4cb4-7b2c-4994-93b2-4d8276eae71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3421ab18-91a6-4fc3-9a8d-732801242da0",
        "cursor": {
          "ref": "5618219a-ac60-44f2-a0dc-2140c044590b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "164e6ea5-5301-4a46-8239-f975d6049aba"
        },
        "item": {
          "id": "3421ab18-91a6-4fc3-9a8d-732801242da0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "88105f5b-7a2b-4fd6-9c80-f1a9101b4953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b41fa2c-fff5-408c-99b2-698d96a20462",
        "cursor": {
          "ref": "aab27477-3fc8-405c-bd97-ffd45e47e225",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "123713ee-8520-4929-a0ad-941191f7e4c5"
        },
        "item": {
          "id": "3b41fa2c-fff5-408c-99b2-698d96a20462",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3d92abe0-c1ba-4aa9-bcf7-d080c83f4e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075b987d-9304-4b2d-a5fb-c6109b06f666",
        "cursor": {
          "ref": "a986401e-9bb3-47d6-813b-3d626b0566c9",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "30279cfc-ae64-42ed-8265-3cf9ed22b7da"
        },
        "item": {
          "id": "075b987d-9304-4b2d-a5fb-c6109b06f666",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43a0a2a2-72a1-41ca-a95c-33ca85b29e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbc7944-827c-4390-b8bb-082962fd4635",
        "cursor": {
          "ref": "680b210f-0977-45e5-8b1e-acaa36b9d5b5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bde72c19-c95b-4bc9-b857-e50e971ed6aa"
        },
        "item": {
          "id": "1dbc7944-827c-4390-b8bb-082962fd4635",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "07171992-a2d0-464e-bdd0-80dac0b97937",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f12c8a35-d67c-42a4-9a47-8568f6e68e53",
        "cursor": {
          "ref": "b82c0e36-3d16-4864-bf5c-434cb433387f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a94c9061-22eb-4e56-aa31-09697fbb9440"
        },
        "item": {
          "id": "f12c8a35-d67c-42a4-9a47-8568f6e68e53",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e3efb8d7-1af1-4e57-9c68-7c3fb6ec1310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e05024-61b4-49c4-8c67-5c52290965ad",
        "cursor": {
          "ref": "bfaeea55-c390-48bd-aafc-b575623aadbd",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9daa3859-9340-440a-801e-47f91f96fb5e"
        },
        "item": {
          "id": "d4e05024-61b4-49c4-8c67-5c52290965ad",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d29c8a71-a75c-4208-8cce-de6209b55513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388928a4-910b-4172-bf0f-c0eae806615c",
        "cursor": {
          "ref": "f75c6c13-a50d-42e9-8af0-3b8bd5ca470a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "427cad58-e51d-4dd4-a3fa-7543eafb4001"
        },
        "item": {
          "id": "388928a4-910b-4172-bf0f-c0eae806615c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9c56908e-d8d1-487b-abe9-9b946948a20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ecab1c-8535-4459-b20a-6feaf40e8acc",
        "cursor": {
          "ref": "37840de5-cf5b-44f8-b5d6-affbd46f7f14",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "73469ddd-a11f-4eb7-8924-73f7c000bb30"
        },
        "item": {
          "id": "18ecab1c-8535-4459-b20a-6feaf40e8acc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8add6f3d-8008-4390-80b0-d777fd834178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ccb4f-8702-4f93-bea8-a51187cf08ad",
        "cursor": {
          "ref": "0684d721-3110-4ace-945f-b2dd0daacb6d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d745fdfb-1459-407d-91e6-3c317c5400eb"
        },
        "item": {
          "id": "350ccb4f-8702-4f93-bea8-a51187cf08ad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "51209974-a9de-4bd4-8080-675fd4bcce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f459dc8-b9a1-4d4d-9dde-dfd137084cc4",
        "cursor": {
          "ref": "30b828b1-41a3-440b-b236-8c952f3c7604",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8dec8043-1b36-4ff2-a26c-a01dcccc2e9b"
        },
        "item": {
          "id": "1f459dc8-b9a1-4d4d-9dde-dfd137084cc4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "443a10ac-173f-456c-8183-3fe262de1d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89769c02-254e-4e5e-bcf9-8b99d0ccf648",
        "cursor": {
          "ref": "74f75831-6e90-4911-adb9-b2af2584f20c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8a801dad-8bde-4177-bf7b-feb0645cf200"
        },
        "item": {
          "id": "89769c02-254e-4e5e-bcf9-8b99d0ccf648",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ff6f6e4f-f73a-445e-a77a-1a518764b02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7648d1-01dc-4d79-ad20-c4c91f59ac6a",
        "cursor": {
          "ref": "ffcdda70-a45c-452b-ad26-87116573bf3c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "74ca25c0-b806-445b-88f0-b7b24cb6a4c7"
        },
        "item": {
          "id": "cf7648d1-01dc-4d79-ad20-c4c91f59ac6a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6c58d40e-a363-4b4a-a7ce-622cecf7da4c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f0165b33-72a3-4354-a23c-5a8da6fd7275",
        "cursor": {
          "ref": "a4fdf4af-f49f-4507-9a46-7c951cb314b7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "68c49a0c-15c0-4a0b-a615-f5293d9f62cb"
        },
        "item": {
          "id": "f0165b33-72a3-4354-a23c-5a8da6fd7275",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "257f719c-074c-4338-b06f-982e67d37b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc5cb77-cde6-48fe-a160-0902f2be9e94",
        "cursor": {
          "ref": "d2004743-a536-4aef-9a8f-63d22b208120",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "af31ef70-89cb-4c3e-98d5-917a6435e74d"
        },
        "item": {
          "id": "0bc5cb77-cde6-48fe-a160-0902f2be9e94",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0cf867e2-8744-491b-ba6f-b97f6552404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b5efe2-7c17-451c-a686-55fad5b5de38",
        "cursor": {
          "ref": "26826378-9088-4084-b019-12e698c3067f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "61d8d089-2621-4f61-9ff1-2e2a695aebb1"
        },
        "item": {
          "id": "d1b5efe2-7c17-451c-a686-55fad5b5de38",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "03c808ed-e087-42e1-ab1f-c40d0ecb9ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2fc6d1-f98a-4a6e-b70b-55a06cea48d2",
        "cursor": {
          "ref": "0dfa0090-d096-4a9d-97b7-facc7f7fbd4d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1de41a76-2edf-4ce0-a257-f110e9ca4ba1"
        },
        "item": {
          "id": "3b2fc6d1-f98a-4a6e-b70b-55a06cea48d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e9978c1d-f658-4ee0-886c-aea80d041ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec979a80-9f38-42d0-91ea-c66d61ccfc19",
        "cursor": {
          "ref": "25cf6db7-1a39-4832-8ff8-9ce34f0f543c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "29aa2b8c-dd00-487e-8a11-39066df73988"
        },
        "item": {
          "id": "ec979a80-9f38-42d0-91ea-c66d61ccfc19",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5273336b-23a2-4957-8ac1-44e5d574c66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939077ce-8fd0-4bb5-9c54-24fb519e6625",
        "cursor": {
          "ref": "d6974775-32d5-4db4-9413-41cd04780f89",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ae655e63-5c17-4556-811e-986f4830c487"
        },
        "item": {
          "id": "939077ce-8fd0-4bb5-9c54-24fb519e6625",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fc6630ac-e90e-426a-8dc9-674eb1f4255f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d521de0-df69-4821-a323-f9f18be0bbce",
        "cursor": {
          "ref": "ca7b38e8-dfeb-4499-8747-36e629638375",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "56809f8c-187a-4ab3-a136-fadb77dc587e"
        },
        "item": {
          "id": "8d521de0-df69-4821-a323-f9f18be0bbce",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7261f804-c8ec-4722-b80f-0cf491f2f73d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ba246832-38fa-494e-aaf1-0c979f9ed4a4",
        "cursor": {
          "ref": "24092bdd-bc81-46a5-840a-377ac8257532",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "850b8dfb-3bc2-48c2-a391-feb2aef40fbe"
        },
        "item": {
          "id": "ba246832-38fa-494e-aaf1-0c979f9ed4a4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2f231f83-1c17-4c67-8fde-04e11335b3f5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "058833ae-96d2-40b1-b826-e187c13afb18",
        "cursor": {
          "ref": "0d546b75-1b14-44d1-b678-0c186f35539c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f569c1e5-21c5-4351-b6f4-ce3337cc1d83"
        },
        "item": {
          "id": "058833ae-96d2-40b1-b826-e187c13afb18",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "05a18240-adab-407f-b19c-b9f3669aad66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "3a690433-e0f6-4a2c-ba2f-14f8c42b114f",
        "cursor": {
          "ref": "73ca0a91-1f57-4c34-82f3-c8018e533c99",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ce597572-41be-437a-b7f4-011fe94210e5"
        },
        "item": {
          "id": "3a690433-e0f6-4a2c-ba2f-14f8c42b114f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7bf4d6af-e98b-402b-8afd-74a9a97482f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b328a3da-0ff6-4511-9fc4-afef5bf6a5fb",
        "cursor": {
          "ref": "aeb2a52c-292d-4016-92cf-2ca8c5f55c23",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1cd941b1-3ea3-4d47-926a-a6f819a06c88"
        },
        "item": {
          "id": "b328a3da-0ff6-4511-9fc4-afef5bf6a5fb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a2a14240-5aae-446d-a9dd-8c954d275382",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "9313fe6f-45d9-466f-8763-b282b949bf63",
        "cursor": {
          "ref": "d055adcf-2ace-482d-adf1-ab64d642fbdf",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c8669d02-a207-42be-bd2e-230b84fa1393"
        },
        "item": {
          "id": "9313fe6f-45d9-466f-8763-b282b949bf63",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e32ac9c8-a633-4c02-8bd6-2bc2335c8742",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f561a536-27bc-4b78-87b7-2d30c74b466f",
        "cursor": {
          "ref": "7e036b85-d47f-4424-ab15-1c04195d885d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7504fba6-9572-4b83-a265-0484e7e6410a"
        },
        "item": {
          "id": "f561a536-27bc-4b78-87b7-2d30c74b466f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0d59e222-b828-42e6-bdcb-94628df4f1d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0ab468-4a94-49bc-8ac1-87f2122eec11",
        "cursor": {
          "ref": "b39d2701-88df-4605-a3f4-a02f1e5596aa",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8f0a4d45-865a-4479-ac50-fd0b2de6ca45"
        },
        "item": {
          "id": "0d0ab468-4a94-49bc-8ac1-87f2122eec11",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b3ed95b-1ea0-4b08-b534-a67c969cedfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2d5950-44e2-4097-b460-11f7b6b51224",
        "cursor": {
          "ref": "b1b987c3-4cda-4dde-8842-9a190c039f84",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5da8441f-b1ad-45e0-a0c6-0a8eacce8a2e"
        },
        "item": {
          "id": "cb2d5950-44e2-4097-b460-11f7b6b51224",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0308d916-6f4d-4f8f-807e-91ab090954e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e7a44c-2bf8-4030-9dce-6335d070f386",
        "cursor": {
          "ref": "ce469c9d-efd2-45a2-b8d6-f884fbceefb3",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "46c63dde-126d-4880-8d58-cb38cfa9b4c6"
        },
        "item": {
          "id": "97e7a44c-2bf8-4030-9dce-6335d070f386",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5eb679e1-5273-4982-b389-4020e97c2654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7a074d-9979-4e48-9877-8cad341f88ee",
        "cursor": {
          "ref": "8c37cb2d-66c9-4667-877c-89332e896251",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ae126aa3-6392-4eb0-b3df-2f79dae74d70"
        },
        "item": {
          "id": "2d7a074d-9979-4e48-9877-8cad341f88ee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b89dec5f-1090-4456-9eac-400c1a3d253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d814ab-2a4c-42e3-9c86-41707da9312d",
        "cursor": {
          "ref": "64c080d4-d87a-439f-9e18-ec994f95cbc2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "33bc566a-1247-4574-9e38-921333e7f371"
        },
        "item": {
          "id": "64d814ab-2a4c-42e3-9c86-41707da9312d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7a4b871e-652e-4030-9d49-dc262e525c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5fb970-95e7-4b54-940f-58d9dc383d90",
        "cursor": {
          "ref": "f8dc8fce-3a6a-4b01-a9e1-1e99c4244938",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2530906b-aaad-4f65-b2d1-b292cb2d13f4"
        },
        "item": {
          "id": "4c5fb970-95e7-4b54-940f-58d9dc383d90",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "09dcbf66-ecd7-4a2f-903c-8e0dc4f0628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f77c2de-5e4d-4033-82bb-eaf3495be06f",
        "cursor": {
          "ref": "476a9582-1bfc-471b-96b9-7ff0eeeed4d3",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1d208126-e31a-4c44-9233-4a69f4348bd3"
        },
        "item": {
          "id": "6f77c2de-5e4d-4033-82bb-eaf3495be06f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bf03b41e-0471-4c3c-a8cd-fcd5b4f2513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b36dbc7-191d-4c00-9d60-d039e9057681",
        "cursor": {
          "ref": "03a1c075-e470-4bb1-ada1-019627610d41",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b6bee56-26a2-4bb4-8305-fcaa479319a9"
        },
        "item": {
          "id": "9b36dbc7-191d-4c00-9d60-d039e9057681",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8416588d-0499-41ed-aea4-a7bfd517d760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb512357-8143-4e0f-8102-73f647f06c29",
        "cursor": {
          "ref": "dff70b62-b764-4f7f-a0c2-441cd416c21e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5ad81cc2-d71e-4bb4-96a0-8ea19f4da84c"
        },
        "item": {
          "id": "cb512357-8143-4e0f-8102-73f647f06c29",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ee6e4aea-c7bb-4246-af17-5bc14376a262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14725d3-d91a-4151-b814-409c55147e73",
        "cursor": {
          "ref": "fbf4fe28-5990-4a8e-b419-658cb8c8939f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "950a8e96-999a-4520-8c80-8f65ae6a39e5"
        },
        "item": {
          "id": "f14725d3-d91a-4151-b814-409c55147e73",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a0e1919c-e715-4ce4-8f19-1b3c827377fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb7ad5-f0da-4d37-812d-03366eecb432",
        "cursor": {
          "ref": "d183c54c-4bdf-4222-b952-18d5d4c701a6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1ea858b7-b67c-4ee7-ad12-b6fd3981fbd3"
        },
        "item": {
          "id": "57bb7ad5-f0da-4d37-812d-03366eecb432",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "10ddfa6f-fb03-424c-89b1-d73fb5285ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1994612c-2487-4fff-b0d6-982341963234",
        "cursor": {
          "ref": "7f87dc45-28d7-4d97-8476-9b029ee35b8d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "211fa449-8200-4652-8431-310a09a01864"
        },
        "item": {
          "id": "1994612c-2487-4fff-b0d6-982341963234",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a367f860-a8d9-481c-b50d-74676de7c762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588b8dfb-5e32-49c0-95cc-2ac9bef8364c",
        "cursor": {
          "ref": "e2b4932f-c5af-408b-88be-9a8e34c973df",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d4c495d5-19f6-4f97-8129-98f90604db63"
        },
        "item": {
          "id": "588b8dfb-5e32-49c0-95cc-2ac9bef8364c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2fd815b9-be34-48bd-ab61-8c88e85d4f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c4d1df-2519-47a0-a073-87e6887e0393",
        "cursor": {
          "ref": "92b447cd-52bf-485e-83a7-90c4278c8362",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "26a896f4-6ab9-47d9-a1ce-f47104f7881b"
        },
        "item": {
          "id": "95c4d1df-2519-47a0-a073-87e6887e0393",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1bc42c20-cf82-426f-a0e1-de383abb7977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8e596-0ee5-4482-aebd-5ae86f2ef93d",
        "cursor": {
          "ref": "6d14873d-17db-4803-860f-b5bae33fc522",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a4a3f954-95fd-4b9a-8c5f-5359115d64dd"
        },
        "item": {
          "id": "13f8e596-0ee5-4482-aebd-5ae86f2ef93d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a37e1bb5-ee34-47cb-b348-11a9087d2a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6681de-0bac-4e5b-a4e1-6206b2f67f89",
        "cursor": {
          "ref": "7a1e0423-f8fe-4fee-825f-7acca7c43739",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "76251693-e61b-4b36-9711-9de35b579d7a"
        },
        "item": {
          "id": "ad6681de-0bac-4e5b-a4e1-6206b2f67f89",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "912a3aa0-5cef-4bf1-99d2-2cff7aef8009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190bf393-6f03-4dba-8ee0-948dce7868b3",
        "cursor": {
          "ref": "a27fa034-1e61-470c-92af-885e8b9583b6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1bf4f7c3-4b62-464b-994a-815a00be68d5"
        },
        "item": {
          "id": "190bf393-6f03-4dba-8ee0-948dce7868b3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9ff9ca26-c6d3-4500-a6a3-3383a6c0f5ad",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "acd6b680-8262-4d43-8002-bb02bd26d38a",
        "cursor": {
          "ref": "69a1916a-3d25-47f8-8fbd-c91a53b2da03",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f13121e3-2604-4c66-b0e5-3a3853f93742"
        },
        "item": {
          "id": "acd6b680-8262-4d43-8002-bb02bd26d38a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "04e2506f-e4cf-4e62-9ad0-c95ff22e880e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0697639d-d616-4825-824f-f23ed1b83cd5",
        "cursor": {
          "ref": "7c01b538-4e5e-4eac-9b51-5d1d59a15c5e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dc488aa0-a780-49d4-8b3f-d8c05d0aef92"
        },
        "item": {
          "id": "0697639d-d616-4825-824f-f23ed1b83cd5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "954e73e1-f2ff-4a0a-88e3-a72cd4354536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce9a19f-8f26-4e4b-92df-3306971b1907",
        "cursor": {
          "ref": "255ab158-8f72-4a21-b12b-7f9c1a3181e8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8950c22d-4ce7-4f4d-a06e-7ad450965030"
        },
        "item": {
          "id": "4ce9a19f-8f26-4e4b-92df-3306971b1907",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "da17ec94-00b0-466c-a682-62a5d9dd3125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e908bcd3-d8b4-492f-86ef-3c56583b1e31",
        "cursor": {
          "ref": "04bf4164-5df7-4cfd-bdad-d8e83f3d2861",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d2d55c4d-8a1a-4234-be9a-fa28d0ba8cc8"
        },
        "item": {
          "id": "e908bcd3-d8b4-492f-86ef-3c56583b1e31",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3c9c34a2-7e8f-4508-8848-14f3af700d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b958ccac-4bac-48f3-8a8c-724319396b41",
        "cursor": {
          "ref": "f3492aee-ae88-4879-9fe4-3318b9b77258",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "97d50ebe-3562-4758-a77d-455b1fc87b8c"
        },
        "item": {
          "id": "b958ccac-4bac-48f3-8a8c-724319396b41",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1567286d-0081-48ef-aaa6-9bd957d97a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655bc14-0547-4ce7-bc73-ecccff0414e1",
        "cursor": {
          "ref": "27c5d595-1fe7-40ff-8e2a-72188f399d65",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a03c6594-2c3b-4f0e-b086-1751bae2baed"
        },
        "item": {
          "id": "2655bc14-0547-4ce7-bc73-ecccff0414e1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0d40cad7-4a48-4443-a1c8-e2c3371527e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4266a98-a9dc-44ae-8a60-bcd46dda423e",
        "cursor": {
          "ref": "f722833e-e708-457f-8184-b33330e80aae",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4f55d503-9a49-449c-a409-18d1a43f5972"
        },
        "item": {
          "id": "b4266a98-a9dc-44ae-8a60-bcd46dda423e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3ca14856-2428-445b-996b-38bcd5021d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cfe472-c8be-4fb3-9323-1363e7b75807",
        "cursor": {
          "ref": "a7a6be78-7c17-48f6-81d6-47c4b5155d54",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b6a5806b-26ee-42af-b4a0-a943b539052c"
        },
        "item": {
          "id": "70cfe472-c8be-4fb3-9323-1363e7b75807",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2f1e2105-c4fb-4630-ba4f-995b74925aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061eb16d-bbdb-457d-9024-42e5ee393cb6",
        "cursor": {
          "ref": "134c1d6f-a6b8-4fed-a363-356cc8d16f46",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "069f9c4c-6d31-4d31-9fe9-224f72bbd4e6"
        },
        "item": {
          "id": "061eb16d-bbdb-457d-9024-42e5ee393cb6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e793b288-3554-4249-8ca8-ff83840e6f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5b74b4-a71d-4910-9e81-01f3d8b1790c",
        "cursor": {
          "ref": "1bd30ca7-48fe-439e-a63f-8934a4c27d6b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a6725b8c-188f-43a6-8a82-12f7dc3905fc"
        },
        "item": {
          "id": "9b5b74b4-a71d-4910-9e81-01f3d8b1790c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "169a3df2-bafa-4683-85f9-515651f53e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26f057a-b081-4338-a849-0de7c3ff5aa1",
        "cursor": {
          "ref": "9563911b-8e3e-4a23-be3d-320d6f860a6a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2e35e7e5-3fe3-4b2a-92cd-f635117591d5"
        },
        "item": {
          "id": "f26f057a-b081-4338-a849-0de7c3ff5aa1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "620f8bed-d89b-4804-843a-f70f013b8206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e3776f-6d18-4146-9b91-08536fc30aaf",
        "cursor": {
          "ref": "76e931af-30c6-4325-af85-c5583e964f05",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f1caa81f-5a85-46ca-8858-b51a2002631c"
        },
        "item": {
          "id": "d7e3776f-6d18-4146-9b91-08536fc30aaf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "93038c0d-757c-4e80-9756-a29ac5d03172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0057b2a9-7f66-43f2-bfb6-fba13d658cae",
        "cursor": {
          "ref": "ebc4bdc6-735e-43b1-b8ed-2640a57b176b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a20c9bfe-74fe-4192-855b-76de870f6997"
        },
        "item": {
          "id": "0057b2a9-7f66-43f2-bfb6-fba13d658cae",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "38dfc015-dbc0-4b71-94ed-b191c4e26bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7606028-17da-4979-af33-926e86e27db6",
        "cursor": {
          "ref": "7b23aaf3-a144-40c7-ab4d-f47d9be21e10",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "565f72bf-ba68-4658-884a-e2a1748fcca9"
        },
        "item": {
          "id": "f7606028-17da-4979-af33-926e86e27db6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eecac532-90f0-4855-85cb-76b276296064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192359cf-f132-4e56-b59b-b84dbe53cea9",
        "cursor": {
          "ref": "b0750bde-326d-4d2c-9715-6753cc70c7e3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ee9000f2-d172-4718-9cf3-3851c69739f9"
        },
        "item": {
          "id": "192359cf-f132-4e56-b59b-b84dbe53cea9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5bcb5716-9605-4442-a9e8-97f9be3cdf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd88a43-7190-44a5-9566-a4b142c1a17b",
        "cursor": {
          "ref": "64b8ad22-6457-4417-9749-5e5372c05196",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e29c6904-7e1f-463a-8f06-f919a4627b93"
        },
        "item": {
          "id": "7cd88a43-7190-44a5-9566-a4b142c1a17b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ac165035-2ad1-451b-af17-51362661c5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d41ff8c-f515-40e9-b26f-412be3d488d5",
        "cursor": {
          "ref": "e2ce316f-f7c5-4582-a70d-0448eca10290",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5a31a628-a021-4b3d-b41f-fe816e8580aa"
        },
        "item": {
          "id": "2d41ff8c-f515-40e9-b26f-412be3d488d5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d99e68e0-67ab-4f96-9372-0ef67d72f7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431fa8a3-7d7c-4346-944e-81f3de729982",
        "cursor": {
          "ref": "518bf705-f823-41e9-8d54-f0c54be87967",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f07cd47d-5cbe-43ba-b18c-38d5a44c8ed4"
        },
        "item": {
          "id": "431fa8a3-7d7c-4346-944e-81f3de729982",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f6cbf2e1-3ef9-4cc4-850d-f39412eda671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8054df56-4e78-4418-b725-66a4fb12244d",
        "cursor": {
          "ref": "ccfa3617-8bb2-4513-8fc4-bc059ee862db",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c62510b0-9843-430e-9fff-44de6771a315"
        },
        "item": {
          "id": "8054df56-4e78-4418-b725-66a4fb12244d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "283ffdcb-8e5f-43d4-a867-1a85a0d9ed91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18947ad-4bf7-4baa-9564-bcc35c556947",
        "cursor": {
          "ref": "584bd111-8ceb-43fe-8f27-92cc040e538e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2c5899cb-4d28-4fc8-b2b8-e6636cb1cb2f"
        },
        "item": {
          "id": "a18947ad-4bf7-4baa-9564-bcc35c556947",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "23f05e9b-7aaa-46bf-9b2f-3408441d4d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ad48b-d5d2-48f4-890a-79518cc138fd",
        "cursor": {
          "ref": "92969fc9-7048-426e-8b2f-91bc5ff8123d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d87a7fc7-b9c9-46e4-871d-f5ee81a75778"
        },
        "item": {
          "id": "f64ad48b-d5d2-48f4-890a-79518cc138fd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "602f727c-0436-4224-925e-5606b68c5d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5c6310-2e29-4236-a891-21fd39c864b0",
        "cursor": {
          "ref": "018c8a42-24db-4e98-9306-4e9a0b41a5f9",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "95143743-94ed-4cc5-a4c9-596d6b9ea364"
        },
        "item": {
          "id": "2b5c6310-2e29-4236-a891-21fd39c864b0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3e9f0ad1-46ea-4c9b-9970-bbafcc78f422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a15f85-7df4-488c-aee3-2500bd75ceaf",
        "cursor": {
          "ref": "96c52af4-b894-4b79-9602-85deb7835b6d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1bf919b8-0e8a-450e-8b7a-6477f21f7ef8"
        },
        "item": {
          "id": "c6a15f85-7df4-488c-aee3-2500bd75ceaf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6bb09fda-c534-47b4-9daf-a4e29fdf4bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf2bb57-c6f7-4519-a8f8-607d2c529ba7",
        "cursor": {
          "ref": "c91a6e78-2209-40df-8557-ceffc70f64cc",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5224fdda-51a3-427a-8483-2e19f801ebf4"
        },
        "item": {
          "id": "cdf2bb57-c6f7-4519-a8f8-607d2c529ba7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f8d440f4-7d77-4a03-a4e4-e94051a6d6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6efcc0-198c-4d58-85b8-4f97e383e8b7",
        "cursor": {
          "ref": "6d43f7bb-fe05-450f-91ee-75eef9ae2c70",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "484282db-14a1-42f6-94d8-9f034079c65e"
        },
        "item": {
          "id": "ad6efcc0-198c-4d58-85b8-4f97e383e8b7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "66ab3ecd-77bb-4864-9674-560917c33561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e356d224-b741-41d5-8f5f-4829e05415cf",
        "cursor": {
          "ref": "f2e59d69-b38e-42ca-b674-c11339adfebd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "332fd940-241d-4910-a948-f3c04bfc2f4d"
        },
        "item": {
          "id": "e356d224-b741-41d5-8f5f-4829e05415cf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "deaa43ad-4c32-4c24-ac21-90771ad5b96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd998f9d-c39b-4de0-a965-efe6c8f8a484",
        "cursor": {
          "ref": "5044b50b-037b-4468-9596-84aab9a9510c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "89b64697-e0a4-4e53-8d09-05a2bfabda1f"
        },
        "item": {
          "id": "bd998f9d-c39b-4de0-a965-efe6c8f8a484",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fe7e879d-25ab-4845-bb84-9ff83e7778fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e456f0c-768f-4e0e-a1eb-fa2505d6f033",
        "cursor": {
          "ref": "e9ce562e-c1db-48d5-8eb0-ff48d3de3c20",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "09d3e849-457c-44d7-b2e3-66f960c839ea"
        },
        "item": {
          "id": "4e456f0c-768f-4e0e-a1eb-fa2505d6f033",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5a927086-a981-4bbf-9c8b-29c0ce6d600d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae34c4d-2079-45fa-b7df-4fb92dc80a31",
        "cursor": {
          "ref": "c16a33fa-048d-4ffd-a2f1-3fff03e8229a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8480f874-e84c-4d45-81da-e0d014b6f6c4"
        },
        "item": {
          "id": "fae34c4d-2079-45fa-b7df-4fb92dc80a31",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6c107e05-4091-4957-b777-faaed9bdb363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad603bf4-0dd5-4f10-81e2-99f193264a9b",
        "cursor": {
          "ref": "336df284-bf9b-4fa5-b08e-c30c71801939",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6465819f-d3a3-449a-aba4-3750d8b6e3b4"
        },
        "item": {
          "id": "ad603bf4-0dd5-4f10-81e2-99f193264a9b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9720c16-e0ce-40f8-a1c7-c1a46b55cbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92cc4d0-855d-4564-89a4-81cc93bcd02c",
        "cursor": {
          "ref": "02a6b516-bef8-4930-b24d-8160af072560",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9d8d3843-32aa-47e9-9538-4475185e236a"
        },
        "item": {
          "id": "a92cc4d0-855d-4564-89a4-81cc93bcd02c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "228defc7-0e9e-4bd5-81e5-d989ba3000d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4894ec-e4c2-45de-92cf-40ce9f02760a",
        "cursor": {
          "ref": "e9fc8a51-3e75-4496-9f1f-9957be7e4bd9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "af7d5c4f-6047-448a-8c5e-cfc7057ab594"
        },
        "item": {
          "id": "8a4894ec-e4c2-45de-92cf-40ce9f02760a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "231ced5f-be63-4113-b27a-2b24d93f8c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf23d19f-c833-4873-ad61-0abe607c298a",
        "cursor": {
          "ref": "775e393a-94a3-4d61-8db2-236b0cb6ee25",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "668666ad-3c89-4564-9c25-1871bfc1ce3e"
        },
        "item": {
          "id": "bf23d19f-c833-4873-ad61-0abe607c298a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a02c448d-bdc0-4412-921e-810777cc67ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713fef33-591a-48e7-976e-774fe530ae1f",
        "cursor": {
          "ref": "ec30bc22-53aa-4d27-9fae-b669d0cc3655",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ef9ea57c-b6bb-43df-bae0-40c58229cda7"
        },
        "item": {
          "id": "713fef33-591a-48e7-976e-774fe530ae1f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "65e18169-06f3-436c-bfd7-22b16dc4e872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431f2aa8-d1ba-4aff-b3b0-d8a9809f0348",
        "cursor": {
          "ref": "f47fcd1a-32dd-499f-87bd-d8c104bb609c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8417b48d-c273-46a0-b8db-a34957262b62"
        },
        "item": {
          "id": "431f2aa8-d1ba-4aff-b3b0-d8a9809f0348",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5b0e86a4-1e0b-45b1-9fee-d4f279923d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9f74cf-d22b-49ef-9ef3-3519ac7b7d8b",
        "cursor": {
          "ref": "b6733391-68f6-4446-af97-745b29fbf17c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "baf52a6d-eaae-4328-a756-8b415d5ec3a6"
        },
        "item": {
          "id": "7e9f74cf-d22b-49ef-9ef3-3519ac7b7d8b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c08e18cc-b79b-4dab-810e-7563ffd0fc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb971fee-694c-4767-a00f-a418a94b59cb",
        "cursor": {
          "ref": "65a88d58-24aa-4ec7-bab9-332f3ae2ddd0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8bc8e163-16da-4457-90c0-d050c11e2251"
        },
        "item": {
          "id": "bb971fee-694c-4767-a00f-a418a94b59cb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3ccebcde-3c94-482d-b49d-853e3d488982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8f29ba-cc42-4da3-98db-e8496cbf58cd",
        "cursor": {
          "ref": "85749735-39c4-40e4-b3f7-0064431d2428",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6d10032e-ce84-4499-9991-47e257da12e8"
        },
        "item": {
          "id": "ac8f29ba-cc42-4da3-98db-e8496cbf58cd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cea04372-c815-41be-a7c3-be374f310406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754b841c-e593-482f-84df-3c2d7e5b2842",
        "cursor": {
          "ref": "a16546ad-d5f4-4f97-ab08-f276155ea412",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9127fec1-5f41-43cb-815f-08bae3a5b6c8"
        },
        "item": {
          "id": "754b841c-e593-482f-84df-3c2d7e5b2842",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c4fb8cf5-f287-4b2f-87ef-07246f88c31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f4dc0c-289d-4f5f-9c62-9314753e9851",
        "cursor": {
          "ref": "e295af96-0c95-49dd-8a9b-9630d2e51577",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bbe71707-0942-4d7c-9f1e-731febfaccdd"
        },
        "item": {
          "id": "00f4dc0c-289d-4f5f-9c62-9314753e9851",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a61eeca0-0bac-481c-aa76-37615a7f1689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a38d975-f852-4fc4-95f0-c15561421448",
        "cursor": {
          "ref": "fa9495df-f7ab-4eae-8dd8-fa35e7ca38c0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4456e5af-34a7-4f43-a860-2e041e39669a"
        },
        "item": {
          "id": "4a38d975-f852-4fc4-95f0-c15561421448",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "884496af-cf0f-4dd6-a071-b95c9a427974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0f4674-7f38-421f-a1c5-fa1301eeaa57",
        "cursor": {
          "ref": "a4a75960-e72d-4222-b986-e8be95d28826",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cfdf5660-0f60-47ba-8d8f-43e3a57bf37c"
        },
        "item": {
          "id": "ff0f4674-7f38-421f-a1c5-fa1301eeaa57",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "883e9c2a-fc6f-48da-9f5a-3f602196b560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68582a1e-448e-4c18-8857-cf9e275fcddb",
        "cursor": {
          "ref": "34ffbe7a-75b4-4e28-8012-06251ffd7642",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f3baf6f0-feb7-44b7-8255-eebcf62e10a6"
        },
        "item": {
          "id": "68582a1e-448e-4c18-8857-cf9e275fcddb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "96718ae6-7c09-43b6-ae1e-bf4f7caef23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d47917-8df5-4763-b828-af86d0f35428",
        "cursor": {
          "ref": "7d7d0864-8d80-431c-9b14-276163296ecd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "10873ee2-905f-4db5-9dae-a4f522fd00ec"
        },
        "item": {
          "id": "60d47917-8df5-4763-b828-af86d0f35428",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0d443837-b975-4997-aa0a-e07b58a242ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c39c00d-664c-4204-8123-20428d3de5fe",
        "cursor": {
          "ref": "b9a2d27a-1dee-4a5e-82ae-dae7ab3eeb6d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a476424e-d136-4fe6-8238-43616b4eb1a4"
        },
        "item": {
          "id": "8c39c00d-664c-4204-8123-20428d3de5fe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6800337c-e72d-4857-b461-9093b02b34a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789cf24f-07fa-425b-bf65-5de5f041bae3",
        "cursor": {
          "ref": "877774d9-c9e4-4697-bf8d-9094bab70146",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6adc275f-04f9-45ec-967b-457dfd440b15"
        },
        "item": {
          "id": "789cf24f-07fa-425b-bf65-5de5f041bae3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c32236a0-ad64-4327-aedc-e20e07abc0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6f8a72-622d-48ea-9a9c-56a58cd7211c",
        "cursor": {
          "ref": "688071d0-7a38-453e-aad3-337ab58a6e45",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f306cbf0-366d-48d8-ae9c-10738dc89fec"
        },
        "item": {
          "id": "ad6f8a72-622d-48ea-9a9c-56a58cd7211c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "237bd4ad-0923-4a60-b667-bcdbce5b8572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb4cfac-16da-4738-8609-4f48c137a0f6",
        "cursor": {
          "ref": "dc9326f4-d784-4a11-98df-0bd5a52b58ab",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f18fd07a-05dc-4ead-86ba-879e8a5aeb88"
        },
        "item": {
          "id": "ebb4cfac-16da-4738-8609-4f48c137a0f6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b5632727-f461-4376-9fe2-98589e27dcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2523ae02-9e6e-4e7b-b2f9-4ceead36b4a0",
        "cursor": {
          "ref": "f598fb04-89fd-4cd7-b4da-5c59dbc231c4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2474ce47-b0c0-4a94-92fb-6678bcb41206"
        },
        "item": {
          "id": "2523ae02-9e6e-4e7b-b2f9-4ceead36b4a0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d47f3e70-1b71-4668-80bb-4f77b6365645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f714dd-43b2-4288-bbab-79ab3b94759a",
        "cursor": {
          "ref": "8c59341f-f5b6-496d-87fc-d689cbe7e86b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ad3efce4-3939-4cd5-9dce-856fcd1d7305"
        },
        "item": {
          "id": "d6f714dd-43b2-4288-bbab-79ab3b94759a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "928f0551-18cf-438d-90ea-4abd62525709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d4aaa2-1c87-42ba-a912-0426ec11d5da",
        "cursor": {
          "ref": "b9cba3ff-4346-43ea-8028-0fc681cd5c21",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ffab280e-6ff9-4464-9878-4bf6d2f620f5"
        },
        "item": {
          "id": "64d4aaa2-1c87-42ba-a912-0426ec11d5da",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e6a45a22-4448-4d8d-9e77-534334f62eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa594664-0458-45d4-a8db-36a122a5956a",
        "cursor": {
          "ref": "5e7e9f01-ef56-4945-9591-710e39028811",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e66cb744-a2ce-4f0a-aed4-dd1c6c2a0a54"
        },
        "item": {
          "id": "aa594664-0458-45d4-a8db-36a122a5956a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5ee1e8dd-ed24-436b-8823-e3fb62346fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137aa1d2-e255-4765-901b-376eb6e6c2e7",
        "cursor": {
          "ref": "486a48d0-e342-4af1-a876-88257a1b8c8c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a2e3fde7-02da-417d-8bd1-665acc83798e"
        },
        "item": {
          "id": "137aa1d2-e255-4765-901b-376eb6e6c2e7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da1eda16-1e96-4b6b-9d39-4de928700f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e0a2c6-dcca-47ff-8ef7-456084a1d9b7",
        "cursor": {
          "ref": "c5f88a4d-2af2-47a2-8c2c-02f65edd2d64",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "167b6fb2-047a-4120-8b9a-5c7d393f0a94"
        },
        "item": {
          "id": "f7e0a2c6-dcca-47ff-8ef7-456084a1d9b7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b9b1f1cd-8504-428a-9aad-81fa6fda55d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e14672-7d00-4ff6-a692-d4050df630cb",
        "cursor": {
          "ref": "50c18df7-24c6-43a6-832c-8b4a8e7fea6e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "457ed00d-741a-4f5b-87c7-9e788c362036"
        },
        "item": {
          "id": "50e14672-7d00-4ff6-a692-d4050df630cb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "09d87fe9-428e-4d95-912b-47929170003a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741de37c-5b13-4732-9daf-9716fcc9b688",
        "cursor": {
          "ref": "d9f03c7f-aedd-4743-af61-282466f332bd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4e02a52f-6828-4ea4-b716-ece62bf661ef"
        },
        "item": {
          "id": "741de37c-5b13-4732-9daf-9716fcc9b688",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d475e7b0-e851-4956-b121-fe58d84368af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bce571e-8d19-405b-a806-5d9d71e94a6b",
        "cursor": {
          "ref": "4e906452-4319-4861-ab9a-1b5e8ae1643c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c95ad0ba-86c1-4d2b-a694-118939eda000"
        },
        "item": {
          "id": "0bce571e-8d19-405b-a806-5d9d71e94a6b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8144e544-5a8c-4b0d-bc79-cc5886d78017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9915203e-43cb-4d13-aa40-456f16923260",
        "cursor": {
          "ref": "de02f746-1447-47fa-842b-9ef186e74b7f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2fb82f40-46c6-448a-95f6-7d87adff228c"
        },
        "item": {
          "id": "9915203e-43cb-4d13-aa40-456f16923260",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "90f63d70-c9d0-44ef-950f-468d5a1e1f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83363e55-3301-4a82-a08a-a1607ff59ddf",
        "cursor": {
          "ref": "7dc38a6e-a74a-42e2-88a0-a5da86cbcb98",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c802dbd7-ce9d-4b3e-828a-21070e712438"
        },
        "item": {
          "id": "83363e55-3301-4a82-a08a-a1607ff59ddf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "59c90694-a460-47b1-9118-08989806fb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3f6a6b-0bab-4e1b-a457-2d0e0402399e",
        "cursor": {
          "ref": "7e05c59d-66cd-42e0-b1d9-bf910608b302",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e0f0cdd7-c0ab-4ed7-8256-c77cc6982385"
        },
        "item": {
          "id": "bd3f6a6b-0bab-4e1b-a457-2d0e0402399e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b04cce7c-36de-4944-90cd-79267c59cf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d9f80a-56bf-486c-9514-00fc205b85ee",
        "cursor": {
          "ref": "5ede40cc-a49a-4d88-bd1d-49b6da57dbdd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "938c33f6-3557-4b04-ad38-eafea182d85b"
        },
        "item": {
          "id": "e9d9f80a-56bf-486c-9514-00fc205b85ee",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eec74f83-a173-4283-8682-104af6b98d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d96e54a-2219-405f-94d7-9418d43934b3",
        "cursor": {
          "ref": "80a2c76a-55b3-4d4d-88e9-6e70f911455b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b9dc1463-b1f2-4910-a984-56e74d09e3e1"
        },
        "item": {
          "id": "7d96e54a-2219-405f-94d7-9418d43934b3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d3557108-e3c4-487d-af79-6ea7e8afe5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f787bb-457e-4a37-83d6-26895eaa87b1",
        "cursor": {
          "ref": "bf15d6e0-f241-498b-9288-9207849fb197",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fd24cfea-d010-487c-b54d-6639f36b08ce"
        },
        "item": {
          "id": "d4f787bb-457e-4a37-83d6-26895eaa87b1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d87efe4a-8eda-45c1-8c87-e735ec7fb4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bf393c-deaf-4dfa-974d-b737ffd019af",
        "cursor": {
          "ref": "e3a06cd2-5cbb-4cfc-82d0-31d4e27e76a1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b4b3de5c-dee0-46fb-9e3e-22818d96185c"
        },
        "item": {
          "id": "99bf393c-deaf-4dfa-974d-b737ffd019af",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "476bf033-5f37-4486-a62a-67c2e015797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e21b059-f94c-4e89-a988-608f773f4189",
        "cursor": {
          "ref": "cf105716-e416-40a7-b2a7-f582e4eecce0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "542e4db8-ee36-44cf-9323-544a030265bf"
        },
        "item": {
          "id": "5e21b059-f94c-4e89-a988-608f773f4189",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b1acb322-7642-400b-980c-fcb06a359d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41268a94-2224-4a8a-9712-2282c22e43a7",
        "cursor": {
          "ref": "b82af37c-345c-4164-9e12-94b227cae673",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4caa39ac-3fd2-47d2-ab28-47372db6a192"
        },
        "item": {
          "id": "41268a94-2224-4a8a-9712-2282c22e43a7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "073fd4d7-4ce1-41b7-9156-be3275753187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02baf5d7-2959-40a2-9f4d-1c2c88689b47",
        "cursor": {
          "ref": "12449ac0-f7b9-4e80-b479-c87689c251d9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2e6a32c8-3a45-4b09-b6ee-437092131a4d"
        },
        "item": {
          "id": "02baf5d7-2959-40a2-9f4d-1c2c88689b47",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f0ea1423-8496-422f-97ac-5ae3142aa392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b240bef5-feb6-4034-a4b6-470a297c7142",
        "cursor": {
          "ref": "31c8b822-f0ad-4ff5-a070-25af74664d33",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ac326231-fc90-4ebc-bdef-d160e93ebcc4"
        },
        "item": {
          "id": "b240bef5-feb6-4034-a4b6-470a297c7142",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1180e5c5-5a63-4889-91d7-c604644d15a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a947881-3a22-42fd-a1eb-dd121c0199ea",
        "cursor": {
          "ref": "2939d6ab-3f06-4373-b5cd-f160b05b5a07",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "18e57fe4-d874-4c75-b9ab-7df3d860c94a"
        },
        "item": {
          "id": "0a947881-3a22-42fd-a1eb-dd121c0199ea",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0e4ab9dd-808e-49b7-aa03-38fc18742018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a79374-fb92-4ed2-b8b6-d478f4a2d5b5",
        "cursor": {
          "ref": "2156bfd1-4ecd-4653-bfd4-1082e549448e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7dcf96c8-5dec-4caf-a87c-760d1e2ed8c0"
        },
        "item": {
          "id": "95a79374-fb92-4ed2-b8b6-d478f4a2d5b5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4707d0b8-0638-4d67-a6ee-65142e9523d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a845f5b8-6e9d-41c6-9465-d5b4f1265029",
        "cursor": {
          "ref": "25e4085b-f98b-4e55-9612-22cc123fc1ff",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fb4fd3ad-0243-413b-b04c-808b70221903"
        },
        "item": {
          "id": "a845f5b8-6e9d-41c6-9465-d5b4f1265029",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "630c68f7-743f-4a22-bc62-74e18810eb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05368348-cd3b-482a-a045-3ca1f4d7b2bb",
        "cursor": {
          "ref": "c6e970f4-07ae-4ea4-81c2-fc00424607f6",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6a438e53-faeb-4bd7-b256-740cc6debff9"
        },
        "item": {
          "id": "05368348-cd3b-482a-a045-3ca1f4d7b2bb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c78936f5-7af5-4270-b02f-e6a984246019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667f7b09-efdc-4ee1-be49-b295c5196492",
        "cursor": {
          "ref": "3250c53d-e2d3-448f-a8f5-3eab2251f692",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "de6c93a2-cba0-4a15-a663-daae5a2137fb"
        },
        "item": {
          "id": "667f7b09-efdc-4ee1-be49-b295c5196492",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bedf0ee4-53de-4e78-9fe2-3e0404c40025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d172e-8636-434d-b984-59e54abec405",
        "cursor": {
          "ref": "67c87173-e57d-41ef-adad-ab44824720ea",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "274962a7-06d3-4def-8d6f-975de1125892"
        },
        "item": {
          "id": "928d172e-8636-434d-b984-59e54abec405",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "21d7a070-5ef6-4e35-a1d0-482edd1accdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6de116-626c-4d02-8c4c-2f248f38788e",
        "cursor": {
          "ref": "515bc6aa-f9b0-4752-8498-3841e839805e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0b01509c-6633-4911-9097-1f2732a10f6b"
        },
        "item": {
          "id": "4a6de116-626c-4d02-8c4c-2f248f38788e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4c868b03-cb58-4127-aece-b4ce8fb99ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1485b897-14e0-417e-8ce8-bbf3a55c1d99",
        "cursor": {
          "ref": "fc6a8f94-d7c5-45e7-86bf-5c19f1286d76",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "523ed94d-3f0d-46db-84e9-2e95fcfcb00e"
        },
        "item": {
          "id": "1485b897-14e0-417e-8ce8-bbf3a55c1d99",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "51f71dcb-d256-492e-8501-aa9ae8c5755e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c107c0e-8827-4a19-8bba-83f3f7c519ef",
        "cursor": {
          "ref": "6c519e91-78a5-4ed9-9f55-8f90ec5d9948",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ed9e3526-3ba4-40d1-9656-a4894268e768"
        },
        "item": {
          "id": "6c107c0e-8827-4a19-8bba-83f3f7c519ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5b02ac2d-4e15-4c8c-8808-864b481c30a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f83416c-2821-4e04-86c5-853667c2cfb7",
        "cursor": {
          "ref": "24dedd5c-bd11-4870-b0de-d332753a8753",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "04f64678-3877-44e6-a77b-2b4998c79a3f"
        },
        "item": {
          "id": "6f83416c-2821-4e04-86c5-853667c2cfb7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ab929eef-07c5-4db0-963c-1022da53af35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959e1519-1a14-4a8f-a7b5-ef42ff13f050",
        "cursor": {
          "ref": "974bf3ab-ae6e-4dc1-b38e-79bf96a4e4de",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bd1b7bcd-0565-40a8-9a40-801e879693ed"
        },
        "item": {
          "id": "959e1519-1a14-4a8f-a7b5-ef42ff13f050",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "33196689-12cd-43fa-b251-cc0c2a1eaf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401abf00-400c-4791-a9f7-949440329e31",
        "cursor": {
          "ref": "f1e24192-9c01-4112-a176-943cdfaf5815",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d7ce5cf7-b39b-4ae5-a3cc-3bf1943da0cf"
        },
        "item": {
          "id": "401abf00-400c-4791-a9f7-949440329e31",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6e400684-a5e3-4966-ae24-71729bbab461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b746d6-9445-4f4c-89ff-0c67f3288356",
        "cursor": {
          "ref": "7c3ea896-534a-40fe-a181-de4fac961576",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fb7e2cc7-6163-4c3a-a8cd-3d7961dbadc0"
        },
        "item": {
          "id": "56b746d6-9445-4f4c-89ff-0c67f3288356",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "88732817-2097-4acf-b912-01018c805e9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10747a13-9e6b-419b-9641-cbdcf575804b",
        "cursor": {
          "ref": "77498df2-c2ad-49a9-b843-06d6a9841c54",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7dbeacf2-1709-46ae-bb50-fc38359a4e1f"
        },
        "item": {
          "id": "10747a13-9e6b-419b-9641-cbdcf575804b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4526049e-ffc2-4f00-a841-22f5f61550f1",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3069cf3a-fd18-4e9d-af23-c27045acf1f6",
        "cursor": {
          "ref": "7ce82366-8101-429b-8683-fcf30a5de144",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c3feb2df-16b4-48de-bef2-3ee3882d6176"
        },
        "item": {
          "id": "3069cf3a-fd18-4e9d-af23-c27045acf1f6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1a12d7ca-25c7-4d1e-941a-7b724cc6fde8",
          "status": "OK",
          "code": 200,
          "responseTime": 2196,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8abd0d7-2110-4405-a19f-6998368aaf46",
        "cursor": {
          "ref": "7b6800bb-c547-4256-bd22-69f97687ba20",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6e948125-0563-4ffc-a24e-7be791d202d1"
        },
        "item": {
          "id": "f8abd0d7-2110-4405-a19f-6998368aaf46",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2f7de7a1-12ab-4326-85a4-11e7f2860817",
          "status": "OK",
          "code": 200,
          "responseTime": 2217,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab6355-e83b-449e-972c-1026f6d4f168",
        "cursor": {
          "ref": "aa7b8f62-d100-4aa6-8569-9c5266e2219e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ad96bc04-927b-48c1-a2aa-a128875ae0a5"
        },
        "item": {
          "id": "f6ab6355-e83b-449e-972c-1026f6d4f168",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f22bf6b-c768-4d10-9ae0-9aed4cd6c149",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab6355-e83b-449e-972c-1026f6d4f168",
        "cursor": {
          "ref": "aa7b8f62-d100-4aa6-8569-9c5266e2219e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ad96bc04-927b-48c1-a2aa-a128875ae0a5"
        },
        "item": {
          "id": "f6ab6355-e83b-449e-972c-1026f6d4f168",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f22bf6b-c768-4d10-9ae0-9aed4cd6c149",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee64b78-74eb-46c1-832d-7ca55714e3eb",
        "cursor": {
          "ref": "bab89996-0150-48e9-8814-325af45cad42",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0fe7d4c1-4b81-45b3-9b89-c0b0586fd4c6"
        },
        "item": {
          "id": "7ee64b78-74eb-46c1-832d-7ca55714e3eb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bd694039-20fd-4d7d-9abb-787bde04c6b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2ebe5c-e267-4a98-891a-243cd453ba7b",
        "cursor": {
          "ref": "83cff82d-4dda-410e-a5a9-9a4aed48565e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cb5174ba-a711-408d-8ddf-144f9f36c9de"
        },
        "item": {
          "id": "4f2ebe5c-e267-4a98-891a-243cd453ba7b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e5722e48-d889-48af-8ab0-2af6d180eb05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}