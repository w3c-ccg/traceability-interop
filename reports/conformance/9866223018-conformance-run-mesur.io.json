{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0af2a092-1fea-4ac9-a963-4329cd748443",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9438954b-7c96-4203-9b56-b5bfd8cd8c32",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d684030-c523-4b59-b9ab-a0af833b892e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4fe398de-8788-4c90-9555-f56310ef4ab2"
                }
              }
            ]
          },
          {
            "id": "3fb7ad96-9827-4015-bbb2-07d34fbc34bb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e0fc9a9-d29b-41ad-b011-15a15f669da0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b40a093d-bc8c-4d9a-95c0-21ea8fcc71a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ab07ed7d-0c92-4b77-8b62-38b0cce0bd57",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1398578c-a207-46f7-b476-f8b6ed1167a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0a55f66-5bad-449a-8689-f327e2240278",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "305e7d7e-f7a0-4504-b8ac-ec59ac7ec9d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55ed53c1-0ded-4364-a64e-24078c8a1257"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d20d3410-6b71-428c-aa36-20adbb41fc6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "402aae8f-be66-4721-859e-ca1e53121dd1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da92c128-5185-40e7-9ff6-2d8c5f6c781c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "905a3229-81cd-4d0c-be16-bed30cfc18e7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbe4270b-0bd2-4e4f-8ec3-2980441e6f7d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "630a3507-1645-4f0a-8c73-cfbe3afe565d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9f8d538-ef01-463d-be1c-f19228b8e3e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df2fdf7d-72bd-45d9-ba51-e3e1f7cd5547"
            }
          }
        ]
      },
      {
        "id": "ae5b17bf-264e-4098-b4c7-e6ad0c9f198d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8e35ab4e-c621-435c-9294-6f9b583ebbc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64f705f1-c40d-4f82-a193-4fd293d17e67",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4abfdae8-d6f3-4943-b571-7e01c6c56c4c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda27e7c-803d-42ea-a3bd-e8741aa8220a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e329893-9f8a-4323-b870-32afbfabeae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d09ccc-be9b-456a-b347-bea69105cf60",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3439c5-c61d-4f48-8b68-a5e9b1874afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15dd0948-5dbb-4899-abdb-95c16f1fcd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8258b72-3833-4ed7-aa9b-8fa49d69ccdc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0bb710-50eb-44a6-83c4-452be16c747d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "460c6b41-5ed6-4a6e-9275-c2042381914f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54efdb41-9793-465c-b3f9-78e12fcf0298",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8339a54-48d0-4e61-a676-6fd21ec55ef0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06810d34-2658-4954-8861-3ccfbac037a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77997559-8022-4117-9182-81ad47f03c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbf30dd-b8a8-4720-b4b5-9af3027d5f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eadeeb7-64e9-444d-9529-f97447b3ba35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eaa13eb2-0bb1-4787-89d1-118e5da08504",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43c09518-643e-420a-a90e-d63aa3b8ef7a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37e7b30a-b72d-4980-86ca-f2aec55021ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "84380e46-a408-4003-bda2-ae56a17663b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5e49dcd-e355-45d5-a120-4c1a7039284a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a9ace09f-7605-46e8-a5cf-7b7f7b727c2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8635b2ec-8ef1-403a-b13e-68b0d695f61f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e81ae065-5bae-44f8-9ed9-0c910a5d6579"
            }
          }
        ]
      },
      {
        "id": "25a2be6f-7fdb-40db-93c3-934249548af3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "088d3bb6-92c1-4ab3-9222-ab8f93713c6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c16efd0-629e-4e3c-99da-814c56b29106",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b08615f6-7fd9-4e98-bb51-62b882a6eb18",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e65cc4c-706b-43a4-890f-6dfdaddbfa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51b0d80-2194-4f28-8588-092741eb3a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156d99dd-08fc-4550-9266-ecaeb72e201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8259973-0014-4510-bdd8-9d5d18094fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a9ca71-7877-4dfa-9d5b-aca5eb191b8c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5707e73-d2a1-458e-a2ac-e1267ae1d996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e818f8f1-51e0-4723-a4ac-0189484ad914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33b0f32-27b7-4c13-83d4-5fbd215bbd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae5dbbac-ae8e-406b-a04e-7769a1b29d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a796ff-c679-4559-92c9-0e8889d00586",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eac0e33-c8b4-4ebe-b504-59dfc3264aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df49b7e-20b5-4582-9943-b8525e12bc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfc0ac8-ec16-4633-b8cc-cd0b6111be86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f878d9d-2f4e-427f-92d2-4da366b746c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c996458a-2361-4ed1-be18-4ee138deb1d4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899ef0ab-44b6-403e-91d7-763006a8b8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1eaf85c-6c02-40c6-ae4c-bb6daaac84b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5849367c-dd82-4d6e-9dd4-2c5bbe9f3c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89ee52e8-9e42-41c8-83bd-6f5b450d18db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e38872a-b8ed-4e76-9373-960c7a768aee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a327fe93-ddcf-4ceb-817e-eba6307ef714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee503b81-a870-4e0e-b09e-57e021456d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07fc5b6-70d3-4065-961d-419fb024d448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d1337c3-065c-4956-a4bb-020d3b5cba9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8d7263-a55e-4165-b3b4-6bfb009d264e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86962fcd-d84b-420d-83c3-e5dc2119a2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbd494a-d6ed-49f8-8f89-1d410f7313f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fd0650-fcbb-42bc-9e69-2c25374a39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f228003-6a1a-4196-8619-6e928cf10541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332258f5-b5f2-4cc1-a49e-6174385036a3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f13bab-6c54-4eb1-bd49-2a6f0bbe1c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d98ce16-c492-422a-a416-2aed137d6436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4285e2c0-b642-47a5-b531-de54fb647ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cda0da8b-bf5f-48c4-afd5-be2a333d51b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff262f43-7e43-4079-a58a-67483864800d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc779ee5-9691-426a-a7a3-59adf0e1771d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a61c8d7-64cf-428d-8e41-88245e70cefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207ceac2-90b8-4143-937b-ebb5bec1cabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d9e2fad-49b3-4503-a424-091aeb73b34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33ebe9e-d446-4894-bf2a-b319ab7d2de9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcbe0a4-26b9-4f83-ae8f-7e76983e8124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1070c316-4e6e-4fc2-bccf-04c36c9bb54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f68c2-2197-41c1-950f-5720fc49a749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c05d438d-984c-425c-b22d-a77168275269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea6b397-be0b-45eb-9dd3-0cdd6fbf1cc2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b61401-eff8-43e1-80f0-b4951b66233b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8c0d10-315e-4db1-80d4-e7c8e03955fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66504d98-a673-4111-b56f-1daa1aeb8f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02772c30-3d55-4db0-b086-d168dcbaf4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8371f912-6937-4727-95c6-83287d78c6f2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806483b4-1032-4419-9b83-a166550e8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351806fa-d2b9-4eb8-a479-cf71045ac7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58d4e72-9b7d-4a30-884a-189f2f07f9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d3b3a69-9b95-4b16-87e1-1e48558e8fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b1bbeb-eb13-49bf-b191-498ec9331e36",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d436757-f091-4707-b2ef-12f81cdcd5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79621faa-ef8a-4d4c-af82-f3ba0ae11384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314a728-758f-4c0c-b65c-739eba859b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1cc7239-a454-43de-bc1d-52113258befe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9e800c-bc33-4fe1-9131-a562727bd241",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259ba57a-5cd6-4a31-a537-c0a0e96fd785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ff3732-84e0-49dd-a34b-537e6b51bb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942515c3-5c0e-4d66-b0d1-0e1b17478d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3420cb2-b944-4e8d-b37e-0c8e72bc9803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7baa25-0fc4-4c21-89a1-9bc0ea8ec083",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9671a9-49ea-4884-b9fd-3dc6eeb6ef4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3926724f-0e2a-44c3-b822-01c969eea659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926704cf-fba9-44c4-90e7-caf24e2b424a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fec3221-4ccf-41ec-8386-b9636caed417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79007e9-4711-44d9-a50e-d65e53d776a6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8310e0ea-d349-4085-aad4-37e27cb5d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706cd154-6aa8-407f-8855-b28aaafab5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4b2024-b950-4131-a819-8f4dfbe668c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd2bec96-b14d-484a-8588-725a92bf74ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b02caf-7537-4afe-a36e-375c285e1736",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68ecdb7-ae4a-45a1-a2d2-31e67a6a8a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be17d01-c722-49f8-ae3e-02a7865e7554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b06d93-b3d4-476d-8f7a-4cdf4d6c55a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47ec037f-6a70-4f54-ad56-795061cce46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6660e14-4762-421f-a3d8-4e067b6ae88d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096a79c2-258f-4f33-bb6c-e7e8892da43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ef3785-ab17-42d6-bba6-27de478f2baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4456830-8677-48c7-9f83-b24f80038010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6feb03bd-cf4e-4faf-80e2-9a600b3b0592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944be502-ebd9-4bce-8a40-ae14b04aa022",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6617f598-d7e5-42e8-baba-81ffb812517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d40518-472e-4ce1-b493-311abc4d90d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5752ab7a-19bb-4494-a46f-cfb833b4eadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "632dac5b-79aa-49d0-b0a6-72e727afbe2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94132c4-e95a-4b2d-8908-14d9e73efee8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f70ae-2732-4fa0-994d-2c9d3230d6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e566ae74-dfe7-4efb-82a6-ee9f29a86ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a6ae27-8462-4d43-a2de-26a331b15d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "518d90e3-e530-45f5-90e7-24d19bffaa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b8603-90a7-4a22-8a53-5ad082a734c3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090ac59-026a-480f-a87e-2cc3e87c79cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eca6863-4e2e-4852-8b62-1a9427e293bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b319052b-2adf-435d-ab94-c326f771e3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8506cce8-c833-450b-99a3-b850482040fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866b3699-1ddd-40d0-94b0-cb691b0f7f1b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0604bf78-b0ea-47d4-92ec-73dc316f4b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e3ab44-4a2e-4b55-b84e-e1fb7ea382ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b680f67-85a9-47d7-97cd-b231454864c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b8a33c-367d-482b-8ee2-3fca5da098c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6342bdc-543b-4333-aeb8-6767eb547a40",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf149098-0f15-4d34-b3f9-5385ef373059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b269de-79ac-4882-81b9-489853ea2875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd42968-f8d6-4cfa-9338-957ded78448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a042889-e07a-41a8-8e55-276e36634815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96f146e-248d-42aa-a1b2-2e9054cb3e7e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a83b7b-4193-42e8-b490-b93e6a84cb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38722094-dc2f-4874-8f22-6c654540d964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc1ef1e-ca33-4a4e-b8be-900d8f8e033c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b02a629-af16-4a72-abc5-7b1a81e34b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845ea584-e289-4401-acd1-c4f7c0a75da1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c8cc8e-4d19-482b-afc4-9a2abfb4bfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d4476e-5de9-4150-94f0-1a535295c3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c82377b-ba32-4522-858b-597cab21a138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9b958c-5ba0-41c2-838e-736dd9721a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f39b059-e342-48d1-9993-043fe513b132",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66bf9be-2119-47e7-b07b-f14184909711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebf15af-ef14-4054-a1d7-b1912412d5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aee1a5-5ff5-4080-b9a6-83aef1d51cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb55a8df-5807-46b0-9978-d828b662b3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895cfc33-f6f4-4edc-bed9-34e713367984",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f475b2-cd6e-49ac-bd56-43e34b6c4071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4267c5-2c7b-4155-ba9f-f78c2abdbdba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739a2b34-ae34-488c-b855-032c2439c76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa12bfc-d833-44f5-833d-9b0ff5f1db47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216bb810-7488-42f2-9471-7066b3e9dd8b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc8db41-3b09-42be-b08f-05232f8caf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9177256d-331b-49ea-8843-95088a476675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611debf4-243d-485a-b8c1-d46c9bbeb01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "934d2e9f-cd49-43d0-88d9-7273b5703732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d361fe58-a319-4307-9eed-f888554c9545",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b7fb52-3522-4cf8-8879-57bdd2f3caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd703bfd-1f84-4301-af38-fc1df4d24134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bef406e-e539-49e1-9b1c-bbd6d16f7fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1638cb3-49fe-49c7-baf1-089f3cdfae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d2bcce-3a71-47af-a299-4081cb610e13",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a643f1b6-5db8-4a0a-b777-9a2f65666b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad9e68d-5e58-4467-b639-d99526149ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce528750-6386-496e-a91d-89821c185452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc572d60-644c-428f-9c2b-acec38914abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85594bbd-5e6d-4924-913a-c4093f8032df",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af5162c-f497-47a8-95c4-e8019eb098fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c366fa-6c95-49e1-ab33-ad2f25e78e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d70a5-4df2-430f-9bf3-d1998a5ec580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "be8a1bb3-d229-4e1c-b492-99c67af2d5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b13509-3db3-4a08-8941-9f309cface79",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d6495-fcba-426c-a1cf-fc2a425b0f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea89917-b166-493f-90cf-7580ec855238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde8ed89-9131-4584-9747-adf97b12b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "699c3666-8b99-4dc4-85e4-e2836b586925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eef0baf-30cc-4e78-83f2-8de19c86a01f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb4511f-8a52-489d-bd5a-7e7e4af9d65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c3f329-09fb-461d-bbd6-f90680518b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d69aaca-5aee-49a4-9ea0-e5083db7e0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "313b77c3-9e48-4465-b76d-7d62d13a5960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9d0925-c3b6-4e59-a921-083ee7dee53b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e2b0a3-2472-4eb2-9ce4-2e76d1a67ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1924f612-b9bd-4684-b008-2e583f75d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79300122-90e1-471f-9283-2f97e22ca619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b9528f-7fea-4264-8b52-4be9eaf7b6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba42270b-f10a-4379-a1dc-5ba26dfe3c10",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d401d69-1d8c-467d-9d05-d92c89164905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5a708e-9eaf-46f2-abd0-e63c27f7d65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead6f93e-97d3-40b2-9044-cbf5d9a5823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "525fc7f8-b96b-4dc7-af8f-c1ab565dfd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea4b392-8869-48b5-b2bf-c3e18324818c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d079bbd-0356-412b-827a-31c0a01e1e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f818c4be-3b8e-4c39-88e9-2ba2450f0915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c4f828-f843-4112-bcfb-4d40c105220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ba208a9f-a44d-49d1-b475-951ad6843739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f3f2dd-2c8a-42a6-ba99-9d8d48e02107",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1f4d98-082f-44d4-b504-5d92b1eba0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05cb4aa6-28c9-4ddf-9610-fc2cd51c94b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c28ed5f-940d-433a-ab5d-28a9559a6f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8e6aff-753d-47fe-9891-3c7c9811bbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9bc5b5-e785-4843-8720-b5c680c73272",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323aeec5-cdec-460d-804d-f699ad586111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b15b1c-135e-4b9f-b565-7aeaaabf93ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a15692-fd22-4319-8512-487aaaf4feba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b98e7af-abf1-4817-bfc2-b523e2023563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117ecd00-4b8e-43fa-a05f-1bf6725223ad",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71de4153-c90a-4dbe-952d-5b2f202d14a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d55fb7-4c1d-4004-9934-3267b38f718a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e99bbd-4ab1-44a0-895f-de28a115cfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb96dcfa-9d9d-4a3f-947a-af38a1548de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be69f16-5c04-4303-9574-9a2cd8f6c3da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb068ff-cb25-40c6-a185-9b3b2ee58f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e5ea34-0bc1-4525-a0e6-dd1ce388beec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60e22d-5d76-4f68-b0ee-d72f32580a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "493d39f3-c2b9-422c-87d5-3eb0061db6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0f8166-d3fd-46c7-9b4f-b6a30ab960a0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac43397-8096-4926-9611-d8950cd5fd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3987983c-d98a-481d-8660-a497b32540bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b907849d-3358-4841-959c-70da1e5f9e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "113f6690-fbfa-40b1-9e0a-9e86c23f7af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6b94b-7035-41a4-83d6-73f8fd4dad48",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005dd989-b8de-452e-8246-cc92fcf00095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77254554-c9c3-41f8-9158-4f07bf499d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306ab20a-52c1-4a46-8a58-2361340ef1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6809ed98-621a-4d00-9800-700da858dac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beacae03-275b-42fe-b47a-479e7c4577ec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dfb50d-5766-4291-8e29-794bc8c3e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29bbf4a-91c0-4d2b-a561-8b10898d60ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25562782-cf0f-4279-a046-6d3982e8f2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ede02d-9e61-4b1d-8df3-42dcbdbc5fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1b69ef-119a-4bc4-af85-27622278a962",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c9957b-99ff-4b35-9a3e-0ca06a6d2c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962b4866-2da0-420f-8234-ff986579c638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4164f594-e22b-46c0-a302-74002529c309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9765323-f5d2-46bf-9450-cd635b7b2854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3843f2ec-e1b5-48ac-9e67-cad9d158727f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2432e-72e0-432a-a2da-7264e58a2b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badbc66e-4ab5-49ba-9609-c711e80664ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb19165-8447-4fa7-874b-e78608abff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6e76ac-44fd-49c2-883f-9bcca1c09715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2c48ce-ac84-4222-bd7a-5ca2e01228c9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980278e9-d7f4-4f38-9865-a95407140ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e8a913-91ae-4145-bf24-dfe8d97b17a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51caefc8-664a-43f5-bcaf-d7015c81f50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "326e1149-93b2-4287-868d-b3327a07a69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ef490f-4260-4205-945e-981dc9cc2034",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8451d5-be51-41d1-ac97-f37fe2ae7488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ebca0e-0eeb-4521-929d-2c03f86409d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6687572-f28c-4fa9-ada8-5b17624f1a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e109c9-310d-4670-a6a3-cacf8f10a7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5372ca4a-ab69-49c1-b345-dbd09289341b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fd3d8b-6a1c-4d8d-97a0-ecf874f55ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d621e78-d8e2-4312-a37f-5fa6b63f1a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e654cad-c525-4b7e-865c-e9fb73f297ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b530fb8c-0c5e-4b5c-8fca-fe367dabe906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9cc975-8015-4dcd-8464-474bfadef6e1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d589ebf9-8b11-42df-a650-af04470b60f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d575863-063c-4c51-8dc5-d037be7be22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc465f59-8010-497a-b698-0d6c3326f0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6794c0a-4480-4373-b6b0-e977e1d0c0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50a345-2065-4f78-8ad6-3bcba74cd1ef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8996899c-4deb-4f1e-ada3-276cbee33f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b89228-c6fc-46e3-adab-51f2f6216941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf03a8c-3e2f-412c-82c3-c795ec454839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f15da92d-5cdb-432a-bbcc-2cfb6aa374a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc2bd21-7c0c-4a8c-95f2-dae382d6cb54",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97a4bc9-6cd8-405d-ba96-f9076697912c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f0b53a-9189-4728-a546-7898865f3d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25552059-a27b-473f-b6db-b6e46c008448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05d5f47c-a81c-43ea-98a7-e806a9ebf12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db627d84-81b5-4d41-9e1d-7839ed6aaf85",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef54d4ee-38c5-46ed-9341-6773818f7eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e4e561-2935-4947-8112-92ffb7200b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc42c3a1-482b-4e70-9f84-4523dd24e655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed74e58b-6148-405c-87bd-9ed6532da65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3822eb7a-e213-45cf-8df0-5cef64db4345",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354bb74e-6e4f-429a-b61e-0ff43f833f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f89f90-afdb-409f-ab71-16b8662e11c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d2a71e-6a9b-4b43-9045-8f0bc6332e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00cf6241-90c5-4e6a-8c61-685f7b3523c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc815ed-dfa9-4dac-9f37-f1c72fdced2a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8952458-48cf-49ea-912f-9dfe11fd95d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903e39d0-7124-4564-9a45-405da032eb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e26fc4b-164a-4881-88bc-1d4ef4d65ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "916882d6-ec89-4303-a8e9-4ca6724e923e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a73580-bb6a-4358-ab06-5cd57866fcf5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1395ef0-d5e7-4f57-8ad4-f1815e5a2232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78950b82-3cb3-4a26-8df2-0b8a314ce9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796a1035-6d4b-4c72-ba9c-0f09f03b52d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e70546-16b4-44fb-8ff9-6b89c40a7619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9069c0b7-ff3a-4b47-b117-c26b4a405694",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721cbfe1-8665-4d39-bd1e-38191fb28a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65ac432-f2c0-4cc5-bebb-f2de0f32035f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76e1a11-e9c4-4e07-ad54-94d64b721656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fa1776-65ee-4e37-b220-8de61f37c2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9ca4ae-1fc7-44ef-9bfc-96bd91bc26d7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830cd5f6-6c74-4822-8aca-424649997ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b042443-c340-47a0-a297-d7e16696a269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d1e721-d000-4225-9824-59361bf1bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2794bfc9-8d17-4418-aa2b-4f01bc552052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4215f2f-458a-4301-ab40-0e2e50779c56",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef3070a-09a4-4ef1-8b80-5743f3d08af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72ce835-16cf-48af-8b38-182f1a35fd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1b7bb6-9a59-4300-a367-b8590dc0f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec825ee4-0e88-4b97-b380-c060512747a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81563c00-3529-4d80-9204-8a467dc6780e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf4bd8c-fdf7-4d2f-a4c9-930ef2fe2bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0db055-f63f-4127-8b0e-9d0278f283bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52092ad3-6140-4873-983c-d6847f60455e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4eadd4-e450-483a-b16b-5f03e40788e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699b88f9-83b0-4e9b-9c51-787835e75933",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087b786d-1333-4bb4-9bde-a5b17073fe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81e0981-e88e-43e9-a9f2-89ccf47b5c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc06ddf4-efcf-4e16-8495-e1caeb0f2b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54cd3c2c-d04f-4c3d-81fb-8ed6e874611f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c669208a-8e35-4172-86ba-8c702c62d953",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b726fc2-7a8d-4f86-a364-0eae166c6043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615e3e94-f2b9-4d03-80cc-bba453344ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519945e9-cd0e-4c98-bfc9-73063f36db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a0823c-795b-446a-bedb-6be46e329c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fdeb10-fc32-47ef-9cb8-8118719a9f03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7abe3b-228f-4550-b5b3-acea86476a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbc1c1d-0462-4134-a82a-215ce55489b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e49445e-1c99-44c9-85e7-3212853a65ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44a41ec7-8397-4398-a542-ecfa913c1e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89427bf-4357-49d9-af9d-7034a8860071",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2df98e6-9604-4277-8111-fa570cad8bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e3da7d-e2ff-4af5-93b4-5c02ce7bb718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88808afa-6f21-49ff-92db-60f6fdccb7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a270175-d3ef-4567-beec-3929e61131ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ceca14-ee1a-4e2b-9e6e-e2ce5394a6bf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e4e586-9e0a-469f-b71d-f7a81b17ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3fa237-2fff-44ba-aa83-5fd6a3ae9caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d10a0-ed73-4cc1-89c1-10c17646669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aaf8562-51c7-4932-a103-49aaca7a0936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425d8e41-013a-4732-80fc-c9a3a36bf199",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81369163-60ea-4c1a-ad6b-08a750a4fb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41cf970-9713-404b-b1b8-6e415e41f184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babbcf8c-7a65-49c7-9843-73b844b8c53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b03bfa55-6427-4e89-9fcc-331c37a8819a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a6fff1-71f5-4737-8e1c-8a3ba81c56eb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2283adf3-0a8d-414f-8603-cbb6161d6523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb2599b-72ad-48b8-ad66-05e6bed1d690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f19b4a5-fb0a-4864-9cb8-0582f6f69e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3123c286-ac35-4e06-8eae-0530f86018e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3148b116-8ba4-4cdb-ad75-f9933b39e9fa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62915d57-fc1e-4c35-8cfd-42009b2eb982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0857b9f-7e4b-4a85-9313-6282cdc93d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e5b4c2-1dd0-4b68-9bd2-36c8e72a3cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1278b54e-ed14-40ff-8b1b-98a9ecb0c883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d234eddd-ae21-4222-952b-16c80ad0d5e3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d8c361-1622-4208-b3f6-6e53ba66bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7a8d8f-42c8-4a13-8beb-f5f7ee34e73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f93a61-ce11-41ad-81c6-436069d61239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a387487d-b8d6-4654-8905-d4cfb9f8dc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c73624-4830-4c12-b856-dcb4e4ab541d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e2367d-5580-4e38-a570-66753d18e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7f55c0-5342-4095-8a98-c3d9620a0425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d326df0-1fdb-4b94-a67e-0c7f60a01fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c6d510-b254-4f71-b004-fdd9bb97e4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ad19ab-dc61-4d31-a800-ff4dbbcab403",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9db0d23-8269-4ff2-b4b2-7fab05f9b725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224098ab-255f-435e-8e1a-d45aa50251ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e8aff7-6657-497f-9d24-6d618baa7bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c014e9-0053-4d0d-8b8e-8a64913c212c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a63a8a6-d5c3-4f8e-8f8b-a1a0c30f1e9f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d881fd-94aa-458f-a9e0-858327dd8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4aa1b9-3ed3-4561-b946-06fdf7afa669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fa0e35-877c-48e9-a369-a3c3a5d334eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf641d9-4a83-4871-80f5-82d0b03780a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7791bcf2-433d-4793-9950-2f78d80f463a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f4802a-d250-4b51-86a4-40a13696fbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a81e3d-dc67-43a1-b2d7-d435eb0ddb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596875fd-d67e-44f2-a079-cd49a18f880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1171362d-ae2c-4b6e-b7e5-db93fd106864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c36a63-60f2-4ec8-a63d-2ed58f4b6548",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ccbfde-6608-48f2-83f4-befe2538e96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e936610-103a-40a9-8508-a30f41a67f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2a61ed-2bda-4b6e-9b61-7ac66662d77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88580c6e-d100-47f1-b59f-cb9c741ec126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0045963a-616d-40a9-b9c9-50672f62161b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40b28f1-5f13-4385-88b7-9b66061086fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7a31fd-d81b-4eb6-ab04-7a98f90eb8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d102490-59d0-4850-9a21-ca0c023f25e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4e7e66-d2e7-44ef-848f-a94adce53fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc720ee-54bc-405b-b2d9-752c53850eee",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c679488-164b-43d4-8736-de09f3f98cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c5fb52-dc15-403f-b64a-196105cb65cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bb2133-fb3f-4dbd-9792-a268744fb0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "346c6a83-5727-44e1-8511-e4d154aaacfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab29ca21-594f-4b8b-aefa-b2dd511e1bd4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaec621b-dffd-422b-bd5e-b7b1cc6e603e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eaf44f1-70ac-4863-b6ed-b5ffcdfc2cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16b8282-ff2c-47f6-bad4-7f7e7ae11817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "544df1de-f1f1-4a39-b9c8-1b5ba381c953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1efc36-4874-4475-8d19-1170bfaee73b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bb91b0-27d8-4e26-b1c1-94229b9b4f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba71fe5-dbc6-4858-96bb-ffe5216360da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959d81f9-c469-4adb-b891-dabc1f874dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d19cce8-1296-4ece-b43a-6fd87878d3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8392fd2e-ffc2-4cec-8c20-471f23b8cd12",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9183ad3e-3ab1-4e1b-958a-7d538c1581fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857fa529-0ed2-4975-9eea-0f92c4e892df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f73d8a5-1fd0-4444-8584-c777c44fc029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa8f59d-2d85-41f0-b757-04a8c019f37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4412546-eec7-4284-9044-847b4caabcd9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b587d1ed-67d4-412c-b10c-b3c363c34d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0d4f78-4439-4653-81a6-977818c9c4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa25a68-7e4c-4024-8d88-511c24ecfe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d839c9c6-5234-4ad7-8085-58022774fb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85204d4e-a3b1-4a5d-9f3f-f460dd4ec309",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fc0838-c1f0-4617-bb6e-c6a3c1ee848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bb4dbe-0005-4784-971f-7cf4c1b81e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a891b95-69be-4078-9123-8503fafc268d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "422efcc2-d25f-41e4-aa46-ecdfc48712d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a5b328-d87f-4f4e-be42-3cd4f928889b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35c657f-2c49-4397-9d8b-70f88977fc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1088dc-7eec-4b4a-82b0-bcefdb0ae315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bed2c33-e6dc-4ff6-a9a2-73c69975e28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aadbb4ac-093a-4248-8c01-ce2df7d4eb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d114b424-8950-4e8f-86ff-ef6817b23ae7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b222d61-52f6-48cd-acc3-fc99aed2f1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72003cea-fc1d-4303-9221-159fa1268354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601d8330-2080-4f5e-9672-f0457dc49912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3049f4-fd6f-4f71-a692-59cd8ff6b50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d22478-75f1-4403-a49e-ffb447c82616",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c90ad6c-f9bc-4bcc-9bea-21048202a41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dee8280-b1f6-411c-881e-5cec0de58aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b79945-d75f-45b3-911e-a94b595eb5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab8551d-f9ef-492c-b1b3-b19bda543f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba1c0ef-296b-444a-8e5b-cbe0690e200c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001ff9e-be40-47a8-b312-1589b26c3f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136d74c7-3474-4694-87af-455d05b2d6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1eaa21-8f3b-4f2c-a7bf-f24e61858601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "229ffeb7-89f6-4a99-9089-c86c7e4eb7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca8c461-0bcc-42e4-8f70-49bba9b2d47c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57495f70-d531-4afe-b149-93eb2b811726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f81661-253a-443a-bf79-db853b4ded89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60762e32-7d6c-43f9-89cf-4848f01445fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e49cb41-5aa2-4786-8e2e-39baa6b72da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a093a28e-ddca-431d-8f09-49912ef6b009",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489a3435-f4e3-4cbc-a963-a357f400c719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd4d251-d575-4cf2-b0aa-8ce738fd990f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b174149-9048-46bb-a40a-e8e2d4478efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22a08f58-ec1c-406f-b235-4728951d271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfee8a54-bfba-41ba-8880-7bf764860ee3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b2f40f-7eec-4fa2-a3d8-ff18950c0f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acb721e-df2c-4e95-ad07-5007cc3fc93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce23856b-bb4f-43f8-9d10-dc598f5cc445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ad89cb-2b39-4e76-a1cc-f4dea5bdf839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42be29b8-599b-452d-9f04-fa260d12ad3a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbad964-066a-4fb3-935e-86b890fca714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef160bc-41c3-420b-8bea-3904601ab0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ff2023-f95c-4274-8e79-152e34b0ea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db36774d-bbf7-4cc3-9832-34a3cd513dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7799a09-18a9-422f-8572-baac8cd2d1eb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25236b6-b0c4-4efc-8af8-6079d1fdfd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c750949d-1dfd-4050-84d5-377b6529a8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a048baa3-2cc1-49ae-a070-ca01b5ce6447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d01d22a-c14c-4579-b94c-ea3962c16c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e15437-6e15-4d82-aca2-eec7a93fc047",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545845bf-d610-49e8-b02a-d7393f4f41a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553bcbb7-619c-4a94-985a-c8444490669e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9268423b-1a1e-4a1c-908b-9000100543d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b92e2be-3e61-45a4-9667-b0a5001a28af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37c90c3-2c12-4308-977a-eede94ba44b2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83ef4ec-148b-4775-9cb0-42c56c4d38f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b24f058-9009-4332-8a73-54f90a51843e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb585e8-f849-4a64-a6ab-0b2663ac0239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71eccb7d-677d-435d-b106-adfd4a2055f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d937d4-73d4-4548-a394-d32c9cbbeb5d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b5eb94-fa73-43c1-92b0-a4c9976a18d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c837a2-27ee-458c-b28d-619901ebb3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04b506c-3a86-4b7f-a3ba-1c5c718c504c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de67e54-62fb-43aa-9105-feab5ed35102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949abf89-89b4-42a6-9199-821636a3ec8f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c8c7c3-11c5-4a96-bd36-f608c5714244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4f1a7064-ee0f-47c8-9c53-55bf823ebd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f89b8f5-2d76-48a5-ac6e-12a7a3718186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "95ca0e15-dda8-44a7-9826-a090b34f4983"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b9ee2ba-30ad-41bc-8572-d0a18c8a135a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3aac1bd7-02cb-4723-a727-33fc03cdb514",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426ef9f8-c1a5-4418-b1c4-fb39ad63b0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d82f8021-4a16-470e-bf73-75da986eed75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86325fde-e3d8-46fa-b716-7964eca838d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c39593f3-49a0-466b-96f8-52cdba1688ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "066f4241-36bc-4eab-9b11-649bbf1ce9c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5282cae-6119-412e-8747-343273152afa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3d5727b-770f-4dad-93d6-cbd5ef1c0127",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47d48c62-de48-4c95-93d6-9363dcf9f7bf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a80b8418-b50f-4fc8-98aa-749726dbf0e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d670ef18-b7f6-41bf-8ee9-50f21b81a7fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5080f95c-4240-4a63-8e23-8b2b9905d380",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfd72a69-aa45-458c-9c52-ff0ebe4c74ce"
                }
              }
            ]
          },
          {
            "id": "6ac13781-cfb1-4482-b75a-f9f118a4cd71",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64d441f0-7ca6-4614-81de-d0f93d0acedc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "32007cb6-1197-42f3-94d6-0538d46f4b68",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077da41-1327-40f4-b19b-6bae9891c3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8bc51f73-70c8-4172-bd9d-5ce5e8585ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cfe1aa-cc25-4fa2-8ae4-cf184aafaeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52078a32-d565-4c48-b5bd-3c03eec9ccea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e1f641b-4833-4361-b0e4-9582886dbcff",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fd717dd-471f-4382-8c1f-342bf8e7dfc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6221e63-10bd-4a43-8616-808837c91028"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d354ecd5-3bf0-4d97-b10f-563f18ba53cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac1a21b9-a183-4dab-a183-a69a9aebf987"
                    }
                  }
                ]
              },
              {
                "id": "07103988-e847-4a73-b250-0deedfaa9dd8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d938e03-7d0f-47a9-9b21-81f4a11e5b56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "888d81c8-38c5-4f93-a3e4-d6594058eea2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e0dda50-6c79-420d-803f-c3a9b30c5a60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af010efe-d041-422d-8f53-a1c79b97e508"
                    }
                  }
                ]
              },
              {
                "id": "c87c7ceb-090a-422b-85fe-0d8644f0a9d7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "404573e3-2378-4c7c-a9df-9afcaf014781",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b61d17d6-91b4-45d8-ac6c-aea98550054e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a04f614f-5660-410d-aef4-e18a68695b6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3adee70f-1a46-401f-8e77-53f70e569a7b"
                    }
                  }
                ]
              },
              {
                "id": "0e115605-f771-4168-9ea2-fe3edc27a620",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74db9976-7591-48f4-adf0-9e79f0a82a6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd8366e5-15b1-4acd-8e67-e5a02cbef381"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed404c9b-f40b-4968-8c5e-ec6756e6c156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "352717a6-de0d-47c5-aa5a-f465ce6e6ee9"
                    }
                  }
                ]
              },
              {
                "id": "e8b8e5b2-3bd5-4396-9ba2-258350dfc72c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d532cbf-344b-46aa-8a0d-24e16ddb2ec4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ea7bffd-6d45-4ef3-b699-b8d5949781dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f47fd9c4-7175-4441-8b95-7ce5a37c3273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "124bfcd0-32a8-40cd-83e8-799dbe3a0c14"
                    }
                  }
                ]
              },
              {
                "id": "8dc5332d-aabe-455f-a646-4f138aa63913",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcc63c38-c914-458d-b398-839f7a86f618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89073c98-6187-4380-86d5-81f6214cd940"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "357f0970-2737-4fec-9f39-b79e300d2ebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "412f996e-e35e-4ca0-a401-63de3ed7a70e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9579bd43-89f8-49d6-83e1-24caa431d26e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24209247-1bb9-4a3d-9c81-6dbb8af8f035"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1cf2ea89-bf21-49e0-93fa-40559c079e97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d0ec32b-7e12-404b-ac51-a7ada5541f70"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "230cf015-0971-44e0-ae9d-46d7e2dd874e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8a95991f-0f12-46dd-aa0c-9067e9330dde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "338ea662-3be0-4885-86d7-6de6950dc1a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5aeabb3-fc43-4288-a9b4-08d2f0adec51"
            }
          }
        ]
      },
      {
        "id": "40da2e48-be6e-4944-a0d7-0548104afce5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "17af501c-2a83-44bc-bd5c-107e05aaab3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adc2406d-4044-42ca-ab88-5d194b6ac3d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8804e78-c189-47ed-a099-89128d2c385d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec92c17-3ba1-4d70-8a38-c8be826bb98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104cf439-fbb2-4351-a47e-77da1bd19a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66a7609-9179-4760-bd9e-ce49917b322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe155507-427b-4e03-b177-23cf3beb9145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0893fbc-e998-4b23-b152-5db713237f3b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a03719-aba4-495a-be1a-95ce856de690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a59f9d-57ad-46fb-8b5a-e3114525850d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6799337-17a3-4ef7-9599-d2f1bf1807b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58cb82c7-b154-4824-b1b0-d78d5ca858d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259672fb-4dbf-454e-a96a-95dafa0b1b26",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a66f634-b9da-469d-8351-be506581c675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8ac9a1-4e41-46e6-8382-c2a065935c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe481fe-b830-4088-a721-d3bf2df42bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c80d6359-6f79-418f-a5be-2b1b18111ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcccb2e-246c-40c9-94cc-d194a550ad59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5da707-f4b2-41ec-a0b5-185c0267b6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d5b551-fa8b-431a-a8a5-a562929aebb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0170d6-946c-4057-9916-317f046b2c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba2bcbf-3410-4a5a-869a-5a4d7a0f4cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928f1da2-724f-4de1-a0e7-f20c15ab4bb0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970f8eba-2976-4b9e-a7b9-b9e8a3e670c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb08c22-f375-4223-a443-c1991e1f9e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d952a448-f0c7-4ca3-83d0-ddc25c8851cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6017046-52a7-4295-808d-c5cd7cd0ae06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba8dff4-d3d8-4691-9ecb-2eca3c9e77ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafea889-9931-42fa-a44f-1fe6ad6cd811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da556fa9-b989-48a9-9412-994476a6fc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187803ec-f6ed-46d0-baf4-2285225ef0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c015f3-7060-4665-bc59-c7603ce73c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdba568-be9f-4bf5-b185-f125aece5408",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514413b2-8c88-4bb2-b2e2-bb085a891f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09f0f1e-9eca-4a05-866a-cbc313ad5359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bd8816-47f9-4573-bd57-18243f6b3f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "190b03e7-dd83-4547-b34e-863fdb2e625c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86a3c7e-77f0-4384-8d0f-d8364ef8ee46",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273cbc1a-c1c2-422b-bd10-2d92ee62f57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4780963-9805-49f9-9803-21f2dd8b3a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d10290-c3b8-43e0-8877-ca414588cea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5937b15-772d-400c-b3be-c88926a9a490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a095b4b-95e2-422b-981d-b0ccede33e10",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8157896-f492-4c1d-b300-26421f618a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36939227-cd83-45db-9a95-f3d1b705447d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b1f6b3-5d8b-49a7-843f-aaad9c86bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "997f9b27-0af5-4e5d-9027-0334c7f60e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edc874a-857e-47df-a4cf-5392b761c178",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7ce3b2-aa7e-40bb-b14c-3e9de379a950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3619a546-d511-4bf3-ade5-66d83431cc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8285b5-34f7-45f5-8d85-ccf5b9838736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61792fc9-073b-48ee-a5db-1e54b8992a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51068e96-030a-4855-935e-968f8898b9da",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ef89be-25c8-4ad8-ae4d-e02312594d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326f71ad-8869-4abf-af10-d3e699f300a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f94922-9a46-478d-a8f9-5072928b5ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7a11cc-cd95-418f-af13-e0edec05d028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80c477f-8b49-4313-a0fb-8b03f0bf8b14",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb52a4fe-9a23-4585-999b-942f0d086a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75abbb95-bdbf-44fc-b597-c23225ffb3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb944c98-c3f3-4483-9cec-9b76ecd0e040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59b7eb19-eb8b-4fdb-a80b-d12cc13cdae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53487b96-1eb1-4837-8c4a-8d285eb430c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead98f05-852a-4b8e-afe0-2c5bc8e6b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcb209d-9391-4275-a1b6-f6d01ab9b65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad8e502-24bf-4911-b4ce-01ce87930105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "597779ed-e729-4bed-bcc6-990398a2ec85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082cd266-6725-4055-9230-c78358c75d40",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaa3a1f-9757-46d8-b3fd-26b668cde69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c726736d-cd12-49a0-9cb3-8bce90c3fde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679f08ad-5f68-4d02-b79a-9defdee8c1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f22c40b-7e48-4479-9f79-db41215f639a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae125617-3ca2-49ba-9490-2eebede8983b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d9a0ec-aeca-45cd-a75f-b837001ae25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db0d5a7-4fc9-4e24-b7f4-9ad6c5910c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9742af67-e676-456f-bbbd-5a4559312379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a35ef4c-28b1-4940-97e1-c9bee083b5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11b5859-4c82-4520-8fc9-3200f843447f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd99a08-1831-4bd7-b8e2-8a8ea55396ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41620e8b-aad8-4876-a788-aa89f7727fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffab794-aa3b-42e5-bf45-79bf09c7fdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a5d071-976a-4553-91ab-173fa940e52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f7426c-d862-4f52-9693-35f3e27d915a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b4d641-9901-46c4-b7d3-a8564630246d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b01ded-b7bb-4225-9548-265081db30d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15249c5d-ca4c-4aec-b016-cb1a88f26bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "662ae4ea-f5b5-440a-84cd-0542a2be12c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f15ab25-c7ba-43d7-9527-ee68b4fe7060",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4692c1a0-b1f9-4bec-98f0-da25dc6da79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c49934-3bf0-49b2-b3cd-1d12baa6cae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fc63a0-e981-450b-ac09-2c59b04ce380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd079daf-4aeb-4554-9918-d96369b86328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629b131c-7d11-43a3-ac64-023499f3d548",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e972bcf-718c-465f-ad80-97d50d4873af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8afe729-3bac-4224-8fda-00b829277c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbac1ac-4fdc-4cdf-b45f-cf0b827c0a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8de1e1-bf5a-4ffa-85b5-e6122dceea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29b75a3-9146-44a4-8b2e-1380ce4de479",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0336ca91-2c41-49dd-9c4b-acdb0dea14de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b687f59-f610-4cc1-a4c3-53944a8e4103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb25094-70b3-4d5f-b4e4-c55124858e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "197e8640-e2a7-43fe-a5db-a8b0e54989ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c36e5a-2cab-43bf-8004-cb45fa338e32",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daf4f67-ec10-4343-aa18-68503e665852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a22d906-76a7-4266-8124-d6d71da3005c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efba35d9-e970-40d3-ac8e-80025eb4ce17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b0d7f9-3018-4e01-943f-b0db2749b96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbde888e-5932-4285-a6a6-0456c9976730",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b2eff8-8903-4f75-a285-4b737f901a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24cfc36-7f34-494d-9af0-6db111d2cf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1347bc-f4de-41ae-a943-1d93cbb0aa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2337f20-2773-487a-8e75-2be84746137d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b67eaf-d4c7-4574-a829-b70aa16ad15a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91ee23d-4174-411f-9c5f-0ad7656e89e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c25516-0bf7-4b37-8c47-110e054e9b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006af1bc-3f28-4333-aabe-c6bd0f6162ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "519e3db7-488a-43ff-93f6-5a7393eea6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17395b94-9eeb-403b-8b1c-b42b6c2c8e56",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c17b52-96fe-4e5e-9d8a-859ffba6c72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b74de5a-bed6-45c4-90c1-3944649bc5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edbff5e-bc13-4291-9c01-55eb18b5be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7494455a-d3ae-4ee5-8451-ea489a93cea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9366248d-d8a8-4574-8b84-de23be765983",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51f16a4-bd6e-46ea-984b-9aaa0cd75c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9264c80-167f-43ab-b11f-1c57b64e6573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216ec956-9b89-4ff7-a6f6-bbbae25b9e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8239440-3ed0-4631-a65b-408c6fb7fb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6920eb8-fed3-4517-a7c1-1e3959cfe102",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9c7f60-b314-41ce-a281-82b9d5071740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5589af94-17c2-410d-b4f5-8c52d0470dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee6f442-f8d9-4f72-a126-ad71e549292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18227d8c-72c1-449b-aa2c-9e2b6489057f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab7a757-86c5-4026-8969-044dc1482c8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470c1968-ff59-4471-a055-a4beaf3dfdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23211b81-3101-45a3-b363-7556e24b9af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5442fef5-ec87-4945-9b79-0a849dd4ece9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b32fdf-7f21-48c4-9f43-56bbb26ef59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066a6573-3c1c-48f7-b745-0ca87dd44ff5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5654c452-ab90-43e8-9920-769c1fde6938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1327fe-6b53-499d-a966-fdbae9530c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582dd817-14eb-4c49-afc7-20f2f4d5267d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49867946-3bc5-4a4f-9747-4f07d9c5e33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44812e82-1bc0-4209-b7ff-b6943afd9e42",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcdd750-16b1-40d5-817c-92c2c43eeda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a6e1fc-cf03-4e90-aa49-32928f71110c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35f5c64-90d7-43f3-9fcd-b028b69c4be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4915af7d-2721-4ef1-a63e-4031499639e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae37dff5-7abf-4982-8c82-91298326f47d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08aaa914-8ae8-40b8-99dd-7989b316b8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c437ecbc-9373-4cb7-bc2a-d76a1aa5425b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e918b8-5270-43ae-8608-1270c46ae638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27cd74e7-0ed6-44c1-b981-32c9355ed33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bbd057-a547-48db-bf6e-eff12cee6af7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c92234f-8c4b-44c0-8f86-bf361a869441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb6bc6d-35d8-4ef8-a859-a376ea45de92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d51863-74be-41c1-b635-be4ddb5fc6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6a9954-565a-4d0d-85e4-6518dafa9cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b74ab6-bc3e-4684-946b-ef3c336ada37",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b60d2f-4745-4ed7-928a-053f4154d761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52736829-3491-4dda-97a7-f116d26f475a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a9338a-fb03-43b7-b2f9-d00400577008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae86b82d-79b7-4ec8-a01e-3216a52dc744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329e430f-5b81-47f5-8826-81f26ca05d2c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675069af-dcbe-41f8-8482-4fa0f9649a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3585adbb-0846-48dd-bbe7-4b8d7e805b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4574b6a3-6443-4110-9d88-f47c2f6fea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c959dadd-6a81-47e8-96a8-23a34a9b93e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4ecea6-fdca-494e-8d41-5bb0768dc4a0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ab5fc-058d-49bc-bdbd-f16c91d63d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e1c27d-9d4d-45a8-805f-21df79973c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc976d72-84f0-406c-9842-06f8295e51cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8827654f-5431-4048-8eeb-cdbed7723739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c668962b-de81-4624-aa71-3ca376126006",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca325729-5a47-4ef1-9890-d7237aabeb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0249a5cf-4eaa-4724-bb10-16881b9c0fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d3ad20-2c32-4336-b5d7-f3b8c4bd6ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42377ea8-cebb-4ebf-99d1-ace3c2030a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21f4769-0b3b-4db1-9a1e-7c485881a7f8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d341cb29-643f-4ce1-bea2-4baa68ba2611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a305678-819b-443b-9c3b-d84fbd8fc79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396ff299-c7a6-4ca3-87eb-4a2af0a3650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "534170b2-9e42-4993-9b7d-4269ecbc5277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2136ab9e-08b0-486f-91d6-77edf40aaf13",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5708cc-f46a-4869-bdf6-b722d5eeb8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc3f2dd-4b22-4a3a-a224-c254b694c2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be5302c-4a18-4898-a209-5382a7a02bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0364a8a-3d56-4ed4-8b70-7d01a39ebbdb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8337b85-1359-4e0f-93d0-db8dc03eee25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fffdc3e6-4480-4776-a2ac-499bcbbab92b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d387cc-b4bf-483a-b381-8701beb00b14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c4f205-cb0e-418d-bcc3-0a33eaa736e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c0e01d-4b52-4a5f-b002-3cf5567b618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0da91581-e2cc-4e59-9667-0d193abd48f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33865ae8-d941-4d2a-9e1e-5e7662cae7ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "565f43a7-2ce3-41ea-9962-99b37e2e0039"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5d9dab0-4700-4bdc-8227-959d2b78739e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b5ee97b-0cba-4aa2-870b-418dcf04a4e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e7d9051-bde6-4093-8a16-00a82a96c6c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45a225cf-daaf-455e-96a6-57846b9119f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58d550da-6bdd-4774-a0bc-cf39445ea83d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9b99a19-aade-4199-96ee-03ee543aef1c"
            }
          }
        ]
      },
      {
        "id": "9af66217-fdbf-48a4-8566-3f31bc0aaea8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "da325eda-9fe2-4540-a7dd-a0233d1b3fdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aeffce94-e8df-41ce-b4e4-d884054518e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38401238-e33d-486b-a341-84b67b5d94b0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80c4cbb-8df8-44f9-954a-c88830a44bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca9a0b9-76be-40d3-b448-5963afdb8d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe0f9ef-4ab8-4828-a50b-01a103cf3549",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e498e2-216e-4030-8820-15767973298c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a28e55b-0450-4c0e-a777-171677146827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4e7c2-47e8-4e63-a9fe-49a6d4616a98",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ccad21-90ea-440e-9b7e-129c2e83752a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deadb5a9-b837-4539-8f05-f931a4e75e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7006db8b-fd00-4a42-9807-187fd467710f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e6a0b-436c-4cfa-b27f-090e3ae72f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a35c14-13e3-4d55-a016-4abb6628248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc476f63-f43a-41ff-b4f8-a474f2ea789c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccb9418-050d-43e8-aede-7f797eb1a369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e6f786-9232-4f6f-8454-5086c447d7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa5d147-0a55-49ab-9c6a-5fd7c4ea15fe",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f34839-7aaa-4112-b90b-706154d7bf8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4224cc6d-2ab6-40bb-aecf-c702947c8a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491ca057-14df-440e-9f38-39f5f8459df4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df97e54-713c-44f0-aa50-850f5443b6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1638a9f0-9c39-4045-9a53-58c222fa4b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2ab2ad-53e3-4dff-8989-2161c89b8902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a776ae1-147d-4100-875d-5a8614ef6330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b6a9a5-1f6c-49c8-b923-e130d3eb6547",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c26ebe-fe18-49ba-928b-7fe403b148ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088838ae-d553-43b5-be3a-e2e95c43f901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf0f230-a153-43a5-bcc4-2ae30bd21e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e478d430-49e7-483e-aaf4-e68613eb8db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d607bfda-0eb4-4bf6-96fd-52c863e98e6c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7769c11c-9912-453f-aba6-d69f207ff265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f83dd1d-2020-4a1d-bfba-0c761a9aeeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248dc2c2-0f6c-470b-a4cd-cef1409e2f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae841163-ccda-47b6-b655-5489b474707b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98888a29-96bd-408c-9559-b6c840c03232",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d243c602-96a7-4f22-9443-094ea59d07de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016598bd-8f0f-40a0-8851-e64243027cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb525089-e07e-4099-8e04-b3f39c7137df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3766e32-2482-4168-9d64-662771e6cb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83878225-b1ab-4364-a985-2c9ddfcc8063",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05340134-6f8e-47a7-8951-b3459c173bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea61c0c8-8eb7-46ad-a8dd-bbb1cf25e78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4e1858-55c2-4494-93c7-fe4e2084e324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632b5e68-e9d0-4b2e-9753-e8979e11ab38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2506b094-f86f-4610-90e0-0b15579d74d3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44f8475-be34-42c9-82a1-e5e07c851f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ae91bd-d8a8-4b63-91e1-a7c9b472f997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27790d50-8541-4fd1-9c05-26f7618d0cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5908c7a2-c02a-402c-b8ff-31aa2109ab65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afee09b-3286-4936-8db8-c6e2735a6cbe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864fc18d-aa4f-4ab7-95e1-9793740d4216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5155f0-370e-4a2b-a38d-8ea6e8f34733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156ae642-c628-4385-8c40-db685d35ee8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3a73db-a09e-4e82-9021-da154837047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfda13ee-8634-4b12-9c70-88641be6604e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9cca55-a7ee-498c-9a2d-42836fb4a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c11d1ab-4c6c-4b13-9477-e384ee3d85c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26570fd-9d63-465d-8c1c-8a24215e4dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60ba966-5b4b-45d9-932b-edbea028aea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d6c708-7ec4-42ff-a1d9-5d8c1998aad0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bcc872-5953-447a-807a-28532c4f160f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "154d3783-2b57-422d-8b67-9b9313ad14e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5911bf-3c86-4fce-9168-43610bc4c96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbbccf1-6b83-4e37-999a-861edd62ee64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99682928-ec38-4dbd-8133-6e7593d07065",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8766fa-8c0a-49ab-8f57-2e4c9c062510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021567fc-f203-48d4-9374-48e1300e9dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2709354e-db53-4362-8105-793727cfeb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7e4880-d7d8-4d72-a781-de64507226cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c26e6c-d582-4699-8291-62d7839415ba",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9769d5b-3158-4baf-85a3-d4d46641266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c00af8a-746b-4c81-a8fe-145732cc27a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a4493a-41d5-46ee-8b2d-2c6840839b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa8b700-2d55-4ba7-8d80-ffe2039b7e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c4d690-64e8-498d-aa23-27d1427dc0ab",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d7a6a0-2736-4ce3-959c-836942636efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2728b6cc-d62c-4870-a1a0-a0b0f5f55286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc36019-777a-436a-acce-871d4453cf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96479dad-856b-4c64-976a-d3a9ec990bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99404e2-a676-4d61-98b1-1e3b6006cc00",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e842c9-7fbc-43d0-9e41-daf6a27378a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801f9d5e-1bc1-4942-a5aa-5639cbad3c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b561a5e-448b-48da-9b36-68168ff82df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5978a7fb-53a2-4234-9288-a18f10f66905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5604e9f2-ad7f-4847-8347-d182ed2914e3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac85a42d-d544-4d98-a081-501953ab6939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9634c8-3abb-4754-84cc-dfedad4ffa05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fa13d9-ac56-41c9-93db-12f5fce5f044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8bb804-fb90-4132-8878-6496f89c451d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95567bd6-84cf-41c2-8c84-6aada3d511d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8ba5b5-7723-41f2-a1bd-1511f1369e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a35590d-83fb-4327-9ba6-c396307c174d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d132976-c17d-4a9b-8c22-69cbef1a9c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed2ce7f-a533-4c35-9aed-85bdacf2d4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0783e35f-63f5-42c0-844d-62e70513738c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084c9bea-55ab-4c10-b770-dc7047c4ffda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09614b73-8c55-4165-a7c7-1cc86b36a3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56496c46-6fed-470f-a23a-12186abb88b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dee78ac-4682-455a-9e9e-4909af6c5fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b7b147-baf0-45a7-b3e0-68d35911ce00",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da44b1b5-a7a6-4145-bc19-c90ea215cf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092d612a-696f-4ed7-8e78-2b0e56edeaf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6386dd0-139f-48ef-b4c7-34d9efbf0c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41845234-5601-408c-a428-98a0eb95a920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61210392-afae-43a2-825a-62e29b50d211",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532c4d95-7fb2-40ce-8c4a-e6a3ad57b540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95037cd8-1399-4d3c-8d73-b89146b65b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cf4830-2599-4984-9548-bfda1d45ed63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03b7c65-9f8c-497e-927a-c2b17904efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428cbf73-9ac0-4172-a7df-b3f663b9338d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c206477-5e25-4411-9db3-94dff0d0eff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9babbf-4a6d-4ad2-983b-171b913f1481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad824793-a46a-4633-add3-07ca0aee7d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e786fef6-7d89-4e1d-923b-c63e5f4d5546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f839f0-6c22-4b38-a773-a9f42b4247a9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eff662d-d892-4dcf-b2e4-a01b83e6ae80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8775cf0-6525-449e-be7b-77577d575bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebc1fe8-6255-41cc-8d92-1d5670038280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8311bee9-b852-430b-8063-61532f79c47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b560557-1313-4f39-8de9-552ef27c883e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fa44c4-c400-4a78-a2fb-4a4a6416e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9618adc-776b-449c-bffb-885f6f3bc1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9570770c-5ad9-4c2a-91aa-6f88ea3acdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e955ee71-316f-4c18-8fa7-7d61b7516093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55079983-08c6-4c66-b7e5-b66bb183032b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a630bd5-9de2-4db0-83f6-43e4a5d0bb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0280dc07-002d-4b00-a228-1a01f82fc492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cb737d-2d91-4454-ac83-d74b6f3f525b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2be943-4271-4b60-8b55-eb1dbcba8581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b9bf3-b612-495e-9aba-5d724d6f2a8a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efeffb8-b09b-445c-9651-5dca40bc92d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8b2dca-8579-4825-95fc-6f1b2ee983d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3553f792-8304-4b58-ab3c-11d1d08202a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607706a5-37b7-4c05-a963-811ade4f0b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02fa7f9-ff45-4cb5-a164-7277642999d5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022598e7-924f-495d-9ae7-a05170bae7e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29bfdf3-cf59-4db5-9a4c-4a1e97bb5afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341b3650-9ac2-49ab-a160-2153b00a1a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dc0259-1346-4980-8f48-f4941a982035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aac9c8-f73e-4d73-be7c-cbeee807a742",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8217c44-a20c-4391-9c65-f8b660e6a16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6344c11d-e0ce-4440-8595-bcdbdcc78b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda62723-dd91-4ae8-a02c-0a41e3efcc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63458a5-2d42-4db4-9219-9d95df740086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4c78da-086c-4704-a340-9427fc1fd0cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc4dd4a-b4a8-4042-b733-bfc4f71e8f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221fdb84-14eb-4aa5-9a66-047796eb2097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb09c816-2108-481e-a817-59daa58f47d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281d9db9-a122-4755-98e6-e9173671f48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3301325c-e176-4cb8-b540-edc6097def68",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8179f5-849e-4f03-b5a0-2d488be39057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede1df03-ed38-4e22-a70f-bebabc680dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4261ae05-65e5-43d7-b1bf-0739c93b3f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98616304-0b24-4d31-88de-a1ceede29b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3ed5b9-b2ba-4933-acbe-5b21dc4bc9d7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49032970-144b-43de-b3c6-d31a3346d5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e85dde-4ecf-4261-8092-38b561abaa65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac37a59c-ca50-4868-aa17-b6f01ab83fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3641bfc7-78f3-4493-a75c-9792c5fd6d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc55e67b-f0d7-4a19-a095-a78b41927cb3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3292194c-6098-47c7-922d-398ed0072eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75926d1-de14-4ea3-a85d-754a25043f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9f2d5a-0f0f-41f3-b386-f93943bc2742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d73a885-39a8-4e44-866a-73be76a6a183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5721d69-f3a4-4cfd-8ba3-eba7459bec45",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eec557b-1a64-4fbf-b13b-54d012e73723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f9bced-93ba-4f47-95e1-2967a7266ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fea195-ca72-470a-9d66-b2e0ec8922f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e95b401-e73b-453a-9fe6-88d9c444cc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bd6335-244e-4d6f-9455-7bc9727b220d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18485aa4-4288-4ae2-bc5b-acc6d8cda215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fef64d-7b8a-4993-a0df-5024417f3f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3021ec-1838-4d0b-bae8-2977f586c826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089ae1fc-bde5-4119-ba8d-192c8697726d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35be734e-d217-488d-a21d-d9ec82cdc7a3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d3f5c6-ed2e-4ae1-8a88-f0b08c9d9d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17344d65-8697-4d6c-9a91-a04d2ead421c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cad1a44-18fd-4e92-9c94-71596d6dee27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c656add-9f58-4913-98ed-cc990bceb5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2336ec53-236d-4571-86bb-6b71c18df613",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3777f337-ca75-47a8-afe6-6aa6078e9d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa231277-5624-4b1b-9728-58729e84186f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e540f99f-fb41-4cb9-bbda-b31c8eeb0d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cb559c-b5b2-4f1e-b344-273a1db425e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa020655-7cbb-407c-87bf-61a4ab8fe5ab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237d5fd2-6781-4e6d-ab8e-83567ea156c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aefffd0-fc31-429b-aabc-1f7a6a4aaaaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8577094-3f79-48fe-b8fd-402012f0f64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cea2dc4-e4c3-44fc-845b-c35e0ad080a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0201a2c-ee66-4921-9f96-c8224e86ddb7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefd9704-0fdb-4edd-8973-8cb4ba3abcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f768fa1-d2a4-40bb-a015-a2ba7b2442e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae98568d-501a-489a-906b-44de27dd6d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7810f0-8bec-46cc-a731-4862b40f0a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a51c2a-70bf-4377-93a7-c498a9786ded",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee76edd8-8e02-4452-b583-d6cab55a285a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3c50cc-58ae-4a53-9fb1-c452dfc54978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc3b519-c256-49db-ad41-057eff8a0942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a27ce9b-e626-46f8-9003-b1e8addb9b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a7840f-1c36-40cc-a08b-b9bc557fffb1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0c3ee1-942e-473a-a657-f2316fe66383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fdb666-0eb4-4c32-8e79-ce0505075490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c258c5-3514-4873-b960-6c593fd01032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a9db98-6525-4210-91ef-98bd953ceb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326a0e8f-27ff-4b71-91df-60184d61217f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9771d5c-1afc-417f-8a44-5b583f8e7a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f730bff-a59f-4ea1-b9ce-0fcee7314507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073deb99-4f89-4af8-803f-ca8ae43920d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3f5195-7c81-4f08-89d8-b568330d6a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ce0484-551d-4ee1-b5c5-eeab961d85e7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29bab34-a7f9-4b34-8884-9bf9a49f8fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96962bc-f0cf-4806-b430-d233c8785a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681bc2aa-d8b6-4d0d-a5a2-3e85bfc88937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de576661-ce00-43df-87f0-29969de5835e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9197b0e4-fb4c-4326-a119-9547e181dc8d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f3ffea-3e05-42a8-aebb-5e20d059c243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b4956d-860d-4404-8df3-1e1f46e442f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5186bebc-ade6-44a7-95ca-38f9431323ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afb16af-8eb5-4662-96f6-8b20fa0f1590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bf500e-b71d-45a7-8922-a711f1da2eda",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b981314-f918-4180-ac85-d6ea821773b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d15583e-afee-4817-80aa-89a68073b4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bed2e34-eb44-477c-a21f-f15d5da87a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77da2c6-c315-482a-98c7-338f95282f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2c31f4-0f3d-4f1a-8c0c-1d31fa9d69b5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68ef565-ce67-4f9e-9b56-a96770685a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee47e95-d22b-42c0-a5b8-632e3b5bfe22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193741a2-f946-4563-b6f2-575a9d88b10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9fa1c8-8e0f-4375-b0a7-58168d1b5e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f208334-4f03-4c11-8119-89999b7863a9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9cf77c-47b1-4120-8464-cfa68a26906c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4784ebc-7a47-4c1c-9f77-c71eda659f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50537ba0-6326-488f-9160-7ff0ce7f3669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ee752b-7787-42a6-9bf4-26ebed9a028d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c98737-dffc-47fc-8a29-efd46b97db77",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461d3e8d-62d3-455c-bd92-4295a561a718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfe4525-4573-43d6-b597-874bf9aa4a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6793b78c-872f-404e-981b-dfae036cd8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a172fa-30ed-4b79-ad3b-707229f907ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9199794-08b1-4a81-b092-6b90a8aadb82",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776dacaf-1163-4fa3-aed8-bd3e639ef8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8960be54-d20f-4f20-985b-5efa0944fea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c48d61-fd5a-450d-8c69-6d5dffeb3813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4911c0e4-b0ac-42c9-ae6e-d7b7a6be8b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccb09f7-f693-4e5f-bbb1-bf62f819b89b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563dc1a3-2d03-4c45-9781-7f5a43a69b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc39ca4-a362-4809-a155-05733493082e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de834ed6-2e42-43e4-8e47-e6006a68ce9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b90f15-e152-4743-8c01-139d256a95d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d9adb7-01a8-431a-bf41-b32f1e2e4332",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3359ddd-1219-439d-ae69-b07770541128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab60cf26-b169-4fdf-82d1-2a0898b4bf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373a14fa-7c47-4d1c-a74a-991ee4524ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa05d60-af54-4135-98d2-3e850a360315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70bda86-2266-4a84-90e4-2cdc6bcea50f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1d202c-2936-4f73-94c9-5c5b149946c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acc9202-1d3b-4719-8cfe-a0b4698e3b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7b98ee-6047-4a46-8806-6d6aaac4b0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e633d2-ef5b-4f3c-b82c-ebdb0a07fca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b8b3e3-414d-44ee-a1f3-a5378c485667",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771f6a2d-04ce-4706-9493-86a23e6a47f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41803d5c-40fe-4604-b740-67042a5beae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d720397-4b6b-4c34-bc11-e695afb2b9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f2655a-6611-49da-8544-21a864f7d941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309c6b51-b62d-46a9-80d3-126c5700ad61",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff50ca97-968e-4765-8120-dc024237e25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e692572e-35ad-487e-b99f-d812793cb7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e72f35-cf86-46f5-8472-f4c50a9b9000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528511bf-99dc-4dba-bfe0-8c67796210b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e227199a-7a86-4699-8cff-8a0e33d1ef79",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9affa509-ed2b-400e-b06d-6a611a4e1871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e981c9-78bc-49ce-9667-11bb2640d988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d12259-5e99-4c34-a294-aeb2f266c6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b93084-4b30-41bd-a15d-d6827e467022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf1616a-247e-4bb8-a768-5fd15aabe811",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ebd487-dd77-424b-9c9b-bbcf2f01ece0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cb14a8-6ec0-44bd-8fcd-8de35357732a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a083942-a0f5-4ed0-b935-f7a015a8abaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4930ef-9c09-4e5b-957d-0d0d71384e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b749f8-1e12-445c-950b-91b634bbd72b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fb06bc-f629-4d53-92ef-91b0c52bc056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2952bc-07c1-48d0-8e91-b7fa2610e3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb96749-4e84-4089-ba42-eb8617ffd1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac75bc0-7685-48f7-86b5-2c3e788e3e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e058fb-5210-4b9d-9476-6c2de0d4a324",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618194b9-f724-4291-a5be-a1e2c7319759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d31e9b-5980-4ced-9707-4d3b27d645d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f34c819-665b-4891-affc-76955551a65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dbe5d1-f448-4a33-abb9-3a87202430cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b1ca64-fe15-4b5c-958d-fe9406ebdf80",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471627c4-ccc2-44db-a037-704b5701aadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bc7b0a-a19b-4644-863e-e4fc6cf59267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c3c6b9-1d1a-4a38-af4f-9e1d6dde4e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0866d801-85fa-423b-8dd1-3188a8b49cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda32b45-4899-48ae-9609-153c27e67d2a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad34c2b-a406-4957-959e-0969197b9bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8dc031-02c4-4ca5-b06c-652f180fe188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb7b6d6-fdbe-47e4-9374-bb74762c4599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be45a4ea-a8e5-4a7d-b0aa-f0bf3e9f7612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6bd740-55d5-41d3-be45-c66173b05900",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b509525-cee4-4e99-ae14-487332b94ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9873c3-edca-4476-a22a-b0759a88b8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf41724f-e7dc-4514-8dfa-5fb55b98d360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5829bc80-04a5-45bb-9f20-c86f7f339dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcf8c71-1f50-424a-a643-a586e3c8a4d5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdb5c40-3463-4d0e-a01a-502d8c1357e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ade5ea-d899-4a23-8e19-2cd91b1d14e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6c2a51-7bf6-4f9c-8190-6d1e52f94116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0487cc61-a142-4106-888d-5f86262dfdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3bfc30-a25b-4cfa-b873-98db59aa1c78",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c84357-b9d0-47f4-be96-808c9c6f2d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df35b88-40f7-45d8-ba62-64368ed4f60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3915b20f-ca04-4a5d-9f0c-542e4e4b6dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016bff7b-27f7-4d58-9e72-5152d24f8e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c82ad-60ad-4d17-aa4c-23827d8c2673",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a4fae1-d15d-4178-98cc-081f6b00da8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077d2f69-b967-42c6-9390-4c3eb7ce397c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9270921e-3e52-44da-99bf-127d8e744c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1483bac-32ae-4c4a-82dc-80d4f2e8995b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15376d28-7d61-49b0-b153-b3e95ddb3f07",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a73d971-43a4-4483-b020-a80b346ff73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b23d8beb-90a0-493d-9817-29a79ccbcfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae91b77-197b-4d14-9403-97c0003e7404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b43ea51-198f-4be0-adc0-7d63eacac23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ba0a28-e330-4cfd-8feb-31d5af581cf4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe8ed4d-eca8-4bff-9870-4ef581376f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c58803-1e39-45d3-b20f-aa6e5540081f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b686dc0f-f5df-49ad-9df3-dcec7493d603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1a0e93-6c72-4888-8dbe-4c632cd65bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ebbad0-3e6c-4959-a3f5-fd8c42985102",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95323ded-c44c-4eb3-ac3e-bf93c0091478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08fdaf87-5fc1-474e-aca9-46995f84923b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7574ca74-deb5-441f-9f01-4dce61fd75bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d18f4d-45f7-4a30-9c2f-a2981cc64827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a76428-a50c-4687-8297-e9fdd9bb1743",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed18fdbf-970d-45aa-9d55-ef4a2da6dacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176e7650-b36f-487f-9df3-a345c57c7955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e562573-3092-4acc-bb7f-bf00cb1b6cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096832ed-647f-41e1-8082-4160af041ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3674af0c-2136-417d-9e84-f75fc01ac8f0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207e537f-78f7-4fcf-973e-67550088c342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f3d7780-704f-451e-bb14-aaf17bc7cd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf074dc3-2539-488d-a80f-b8675d8f2368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d6a6f0-341b-4b5f-ba34-5c9ef41e2d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b33268-0503-4d55-b658-68cb39d3b4d2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdf8577-0f22-418c-8cb2-a224fbaed4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a32d87-0abd-4c35-a664-05ac2b6a8b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c96921-35e9-40d1-a774-13968636f94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1c9d55-b5f0-4c92-a3fc-748806843852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb786e6-1a5b-40e6-8324-a9f3b1dc819a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5cdd3b-9ba8-4f0b-8d4b-2643bf0f3a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757ee8de-2984-4d26-8140-03e1d112d1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d04dc3-e7ba-4f1a-8b53-a0474b0e112e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01becde1-42f7-4713-b8a8-33bf39bdcf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880cb1f4-2fa5-4055-867d-9f6772288232",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e64258-e922-4fd3-8d5b-a9dbe588f754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbea3660-94e9-48f0-9836-daed872635c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa61456-96d6-4d71-9de0-4552dd3a6cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218d7004-22dc-43b1-ac07-7cf4b21a3992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1e9b86-0a41-4d6b-aa74-8271ff743c24",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff5b889-349b-4438-8c08-98ab3990e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac19ae25-c213-48dc-a346-a94f66ad569d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b741b7-6ce9-41a3-9534-cd5ef5cfbe77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d52059a-56b3-46ab-a5d4-ea23ca5af29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f345c44-3e05-4538-8274-e7471776e4b0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0629f001-29b4-410d-9a85-cc0c782a2e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a91534-5772-4848-902b-3d1541fb3682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a017bb6c-a38d-41c8-9850-8c71de88ef67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a113a77e-9457-4791-a269-c52383adb4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454978ee-8e9e-4a38-9939-ad0f88ab5ea7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe08c79-8117-4e15-938f-86260070f870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac4412d-b3ea-4bf5-8b56-c1524962695a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4111c4af-8d38-4851-93a0-d4573600f4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855e09bb-24b9-4090-a2e5-d55bfd6c64c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00849ee0-89d0-4123-91dc-e6818084d481",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6aafdb-3b49-4b06-9e61-25f6782b93b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c5101f-f9e9-4f1c-b450-498648b3c599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3c4e39-c57e-45d6-8279-7df29b2783ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078e01bc-4d38-4ba8-87fa-171aa65d799a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7784b2-c7da-4017-8be0-e96e5d967b28",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0756bddd-0a5f-4128-b7cf-dc5d88faf9f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015597ed-3dc0-471c-8297-282387969ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb95f3a4-4097-4f24-a1f8-8994c2dd776e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedb57e5-0aeb-484c-841a-3144c5d0bfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f0ccf8-6d33-4962-8051-3060647a7ed5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aae4b2-d957-42e4-a0a8-231991495e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85dde8a-eb5b-4600-a9ed-ef4a80d69758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c0a5bc-8c19-45ae-85b6-d7717be9ed78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0292e3-8269-4e8d-8905-2facec415e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18ab7a3-df8e-4936-9e51-b24545498fdf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d2ab86-ade0-4376-8150-3abfa61aa7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25aabdb-f2d0-4632-b56e-b4deade96a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6328b2a4-271b-4656-9ab8-f7ff0fe443e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357c50b8-56f7-48e0-aa83-155d00d78ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6baf94-19d9-4ade-a37d-83fe2c72f228",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaabd47-0ed0-4208-8745-a9b9e87f3262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2bc207-e669-4229-9178-453c5f2cc61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4b968-4bdd-408e-8c67-6de9be338a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7479f069-3d8a-47e4-9494-0fd0f464ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3becc4-7768-4ea2-8655-337fc4413626",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407a2123-b7ae-4d41-97a8-be410f5c1ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63134025-c0e3-4bfb-a651-efbacba5f4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e2160b-67d6-45bf-a164-890520ba82d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a102d5d8-e03a-42c7-bd4d-218ee0feb544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92adf90-6199-4ccc-bed5-e4d8db3f2574",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d57b483-a613-40df-a965-5d5a9685dc80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e1d734-5098-4757-bcb4-6471f19ffde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f8d28d-ef1d-4688-b64a-992a13bf59f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395af12d-bd00-42cd-8745-b682f1098bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730ad22f-2691-4f8f-bc4a-0e0b64a2f4ba",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cb2981-44b4-43a3-ac17-278e976d998b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2fc7d1-bfdf-46ee-8384-5bc47cf31605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb97f365-6cd4-49b3-8a1e-2c009b0d14c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab58f12c-fe33-40f7-bc91-a74677205679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46484286-4763-4988-bee8-cdf1dceb8fe4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048db926-29f1-4567-9129-5a7539a3d7be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51dbd48f-e6f2-4680-ba36-70b9ad851501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da98cbfd-0e3c-4e05-8fa6-aba3471a4a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4917e722-2589-4208-8bc0-7200fa97c959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567cb8bc-9643-4388-b75d-9857cbcce896",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded4724d-c6f9-45af-9ab1-f896a0356a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a6ea7e-83d0-494f-88ba-870477c19365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3297e0c4-c85d-4234-af0a-16ef36a1d342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade29e56-9785-48b4-9d74-95cd5a02f2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791f73a9-93e5-4ae5-a5be-79a69fffa2c2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07118b28-e203-4225-b420-cb5cbc3101fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1812a132-4f54-4a5b-aca1-38051d892320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b6d0ef-d737-4360-899d-9375fb48ff27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8ccf3e-0a79-4da9-b2ac-2bbf5f77fa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e545064b-f171-42e7-8a64-2176c06957c3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d031c0a-f34d-4c8a-88f7-18566f52617f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb18b69d-2a0b-4e14-8978-fc72d42cca5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eb3db6-136b-4225-8474-c63371403c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055c9267-359e-4ffb-b932-de7970742b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9806ff1e-dfb7-4e37-b2da-49f325408449",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715961be-666f-4f27-9f4a-aaaed19455ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5cd673-d7b9-40fe-9857-0365899aad88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663dafd9-7ee6-438c-acba-b4d3b11b1aae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f849a848-acb8-4846-b1f2-e61fe3b1352c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba99ee6-b46c-466c-9cee-ec85f3ac17f2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c85f77-35fa-43a0-855d-9309f3ffbd43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d765ede1-0942-4538-b5ed-3aa49173b2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f6034e-08c3-420d-92bd-d047d32e01c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e73327-d844-4fd3-9e62-8341a02b959a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bd7055-b681-4864-86a4-b5090f95be82",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db80687e-f126-4dc6-8368-39b67d74725d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fa6af1-945f-4e66-8d85-69fc01ead5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d532dc-10e4-4d4e-879b-509d73d0d945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997d9442-657d-409b-9773-1caf6e1b8215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573ba4f3-ff57-49eb-812e-274fd94efbe0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202b122d-e05b-4509-bf7c-13e5c4abaacc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99514fea-5045-4b92-a3e8-6783d18423c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80cb73c-b59b-4f7f-b4f1-7850cac26603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02c3f10-8ae9-4449-93d4-f03cde1fdf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c52b91e-ce29-4e4f-8e71-3d82863a3727",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9a3ede-6df2-47ed-8811-e4c19617736c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3edc189-e7be-451f-908c-c8b3320eaa41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada754d6-de9e-4594-ad25-70ffd1b6ed1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a069f80-0424-4713-8e70-252725009b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb71526e-207c-4f6a-a4ed-282efabc69d3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57517fc-fe6b-45b4-8d8a-b7f384933da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5c5754-92e3-4433-8563-ae6ae7b0435f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618eb5e5-3c5f-4375-b852-f43d9e13bc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e385b3aa-5f1b-4620-b75b-8857ec90be7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516a70b1-3c9d-4bd2-82ad-d4a28ae9d70f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c75ee2-0ea6-4c85-ac5d-8f18d677f5ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f08ee6-d00f-4eeb-a8ca-6ad64ef2ed94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6a214f-918d-4476-a167-41ba9e9541ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4d3b2f-2c25-4de6-a472-a76a061ba1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7059af86-6438-40ca-b2bf-086e3dd0afb6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07fa99c-8ce5-4c1e-b14f-bdb1c10c9708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac764ebd-fd5b-4d4d-8b5e-9c7354c78e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e25aff-b572-416a-8b5a-8295516b2c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe3bc01-4b9c-473a-859c-960b949c30d4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6900867-41dd-4c6b-85de-2579e8cb590e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7554f53-c903-4e14-97f2-51c71c6dec5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "180babf7-6e73-407e-8ee4-c9b26edf84ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c5e3abc-89d0-415c-a70d-b92a2e185479"
                    }
                  }
                ]
              },
              {
                "id": "06a2f968-cacc-4787-9e5c-634f17cfd7ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a634e372-f0c5-46d1-90a1-c843b2ba276e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362dc312-90dc-4252-8942-c2b09bfaf0a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b2f1585-9812-42e8-95cc-98267b75f568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bceeca5-cbb8-4cdd-af77-330698be9b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4513c5b-54a9-4a6d-956c-e2524806dbef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3201b70-5dd3-40c4-8396-55ae81a1d18d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4fdff19-af27-4430-9259-870db14572bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "405c92e7-02ed-41b0-a365-9c9203a72443",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e78034e2-4e6a-4707-8eff-a512ece2edea"
                    }
                  }
                ]
              },
              {
                "id": "426a06e4-eac5-4cc3-82b9-8b11609c5bfd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "abcf0ff9-d081-4b84-a523-6fe55d48d8b4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89910f13-ebd2-4459-8d23-ec6b7faa828d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "95b0fd44-bb04-4f32-be0d-dc25e6248e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ff9c14-7d0a-4c4e-ba0c-0284021bfbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7c7fe3-58d8-419f-8b2a-2719561662b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "840513b5-1038-4ec1-bf8f-bbf947b5b10c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b495f79-292a-4c3a-abc4-c2fbcc0a5dcc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d01b098-8f00-4858-bf43-2b893f6e7d02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "77157de3-139a-4549-afff-d748cf79eb61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3416742-220d-4df7-8c5a-dcd855caf197",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c02737f3-7565-46f7-a357-427ffaff0e4f"
                    }
                  }
                ]
              },
              {
                "id": "3de0d4aa-11e3-449b-839b-0a911cfa99d2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97adcb44-7281-4346-9105-08e24010952e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80d3613f-1fcb-4cb3-b38c-43e40693fd28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d754a7-712b-49b1-8289-701b45c5b438",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9054d74-1d0f-45ff-b8b4-b65ef831d98e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c03b750-d679-4e85-90a6-140d5d14f397",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "af024421-9cd7-4014-9488-f2a3283c4e9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eda70f0-3f2b-412a-b8d4-a39a80f9f267",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82d14857-99d8-481d-8aee-3da02c0e8295"
            }
          }
        ]
      },
      {
        "id": "bc395e7b-5dcb-42b8-bdc2-b50fd83dfba1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "406dabd7-531e-46f7-a7ba-1e20c564eaee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6e8ade6-857f-4e3a-a1d5-44f105b2db23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a3e31af-d524-418e-8843-7dc26391a7a4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10800ae-891c-4669-ab73-ae6b7f18a08d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8efca2fa-d509-4314-819f-395bd772cd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25cc2db-2e36-44d0-9d9f-e08e9480a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8de908bb-b121-49c3-8479-ad8a03eb333b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51ffaf96-992a-4647-9faa-2c92cbcd5f81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b4d49f1-37c9-48be-97f8-f63d5785d159"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ffb3a2a-f3bc-49b7-a801-9178193b487f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a1a41e6-9bea-48eb-8b61-dc06501d57d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48297cc9-5cd7-4b0c-9256-9425426b3333",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "187e0790-f634-42e5-8070-338215e96193"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cebf3e7-0f9e-4951-9a3d-53387052017a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17b53cb2-b6d4-451f-bb86-dab5aa4d3a4f"
            }
          }
        ]
      },
      {
        "id": "b20cb644-e579-49c2-bdd5-7606254194cb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d1ecf6de-c949-4936-936a-d31893b4a0f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2fcdef6-52b2-4c53-81fb-348528b478f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4242f1ec-975f-4789-8644-92e4ed4156c7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9636db0e-2dc5-47ee-ae1c-67823a14543a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2232bcfb-9767-4351-af5c-615af19fcca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b404677a-79f8-48f8-a915-d2b129dea98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf0564b5-83d4-4e3e-8f50-f53decdaf686"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1df653b2-0591-4414-ad67-d045063174a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f6a3a23-cb2e-47f0-8bf6-a9ea2f561127"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ea3ad2c-f050-4198-a99e-7d885437b123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7005263d-73e1-4849-9cf1-f85209d2c1a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c11015-c45b-41ab-8227-e654b9d29a46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66900390-f82f-4749-90e3-fc68145ca2e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "053632c3-00a9-4c58-95c0-f6cf738b4598",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c716d959-0d54-4969-b8c0-e8cfe1d5241b"
            }
          }
        ]
      },
      {
        "id": "821dcf82-1533-4c22-b164-910b1226a5f8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "26c89572-3835-4912-8651-a0a9dab2c695",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f76342fb-18b7-437f-8d25-0c5995779717",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4452928c-e0c9-4411-830b-10805b8becfe",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5a0d2d-37f7-419b-9bef-aa361b36a950",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78d4fa97-4263-417d-891c-80259ff70a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3434cedf-2cd7-4c52-90ec-155ff923a099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a858ff5-6106-4a6d-bb53-af25d9f15b16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3869128c-746e-4c56-ade6-5e40d83823cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7505a1-1842-476d-b97e-a6c57658fe1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de8173c6-078b-4b16-900b-274f35bdf073",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05b23894-4694-4d5c-90f3-50f2d1b36b31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d565162-757a-4c22-a171-3d386ab3d62b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbb095d0-7db1-42b1-8063-769221b57a05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67a4bc4d-9d38-4021-98b5-f9fb01692b5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87f6dd17-ac54-4de9-bbbd-2ebd14f12b3c"
            }
          }
        ]
      },
      {
        "id": "3de94d7b-f0aa-4b79-90cf-083d42352bf0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e99ecbf-4c0c-476a-8e7d-b596996fb6f8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c01b31d2-4876-40b4-8af2-d301cb1b338f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "23052c47-801f-4fb7-b971-c305abbbbe67",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "048360f0-11c7-41a9-ac18-f5b26fb1c365",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82f35320-f420-493d-b113-e690ce92118e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 29.492063492063483,
      "responseMin": 7,
      "responseMax": 316,
      "responseSd": 25.36080779337432,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720571978378,
      "completed": 1720571993704
    },
    "executions": [
      {
        "id": "9438954b-7c96-4203-9b56-b5bfd8cd8c32",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e1d74344-2b8e-4edc-ace6-d39e3c2f88b6",
          "httpRequestId": "a2946c1b-f41c-427a-b854-6e5b36eb88eb"
        },
        "item": {
          "id": "9438954b-7c96-4203-9b56-b5bfd8cd8c32",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9e885027-c7fe-474b-bb11-244f0aea5b21",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "3fb7ad96-9827-4015-bbb2-07d34fbc34bb",
        "cursor": {
          "ref": "b2f1a702-83fa-4a3a-ab80-dbbe8d26852b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "704ee8b5-a185-4382-b54d-8a8ea0524d34"
        },
        "item": {
          "id": "3fb7ad96-9827-4015-bbb2-07d34fbc34bb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b1182bb8-8613-44b1-982a-caf31a9ee1e4",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "f0a55f66-5bad-449a-8689-f327e2240278",
        "cursor": {
          "ref": "de1a9466-4ac2-4b96-a01a-bbaaa06bc583",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b950cc0d-123b-4076-b7a7-739092236cf4"
        },
        "item": {
          "id": "f0a55f66-5bad-449a-8689-f327e2240278",
          "name": "did_json"
        },
        "response": {
          "id": "ce0c6ae0-d721-49f2-a80e-70a8d3631952",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abfdae8-d6f3-4943-b571-7e01c6c56c4c",
        "cursor": {
          "ref": "3e6186fd-fd44-490e-a8f6-60b589208c43",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "65dc5136-a544-4269-abc7-23f61d5945de"
        },
        "item": {
          "id": "4abfdae8-d6f3-4943-b571-7e01c6c56c4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "e11bbe11-86a6-453c-8974-3fb86a685de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abfdae8-d6f3-4943-b571-7e01c6c56c4c",
        "cursor": {
          "ref": "3e6186fd-fd44-490e-a8f6-60b589208c43",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "65dc5136-a544-4269-abc7-23f61d5945de"
        },
        "item": {
          "id": "4abfdae8-d6f3-4943-b571-7e01c6c56c4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "e11bbe11-86a6-453c-8974-3fb86a685de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d09ccc-be9b-456a-b347-bea69105cf60",
        "cursor": {
          "ref": "f4fee248-3040-4d0a-a868-2f4fdf370fd2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "868bfb3a-de53-4552-b2d4-1c2bf537b778"
        },
        "item": {
          "id": "08d09ccc-be9b-456a-b347-bea69105cf60",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b2c5ccc2-dc05-4a73-9f41-014146f845b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 224,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8258b72-3833-4ed7-aa9b-8fa49d69ccdc",
        "cursor": {
          "ref": "8debf7bf-c8ae-418d-85f5-679e7103e4b3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "44c1f0c8-09e6-41f4-b6fe-aefbcc786156"
        },
        "item": {
          "id": "d8258b72-3833-4ed7-aa9b-8fa49d69ccdc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a4201e81-b39a-41c8-a6ba-4b6b16cf4b7d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8339a54-48d0-4e61-a676-6fd21ec55ef0",
        "cursor": {
          "ref": "06c8e9a1-b663-4807-9f2f-2804832ed5b1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4fecfe70-2fe0-4c25-b6c5-8b55c66f7055"
        },
        "item": {
          "id": "e8339a54-48d0-4e61-a676-6fd21ec55ef0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0d7f1673-38b7-41e6-a568-5f0bef1b0905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c09518-643e-420a-a90e-d63aa3b8ef7a",
        "cursor": {
          "ref": "4432e680-4d1c-4f42-b51c-6c593909925c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4ec507ec-eadd-401e-ad72-2466050ff5db"
        },
        "item": {
          "id": "43c09518-643e-420a-a90e-d63aa3b8ef7a",
          "name": "identifiers"
        },
        "response": {
          "id": "2fbf3323-1926-479d-a366-8db3d41faf51",
          "status": "OK",
          "code": 200,
          "responseTime": 178,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08615f6-7fd9-4e98-bb51-62b882a6eb18",
        "cursor": {
          "ref": "bb606494-efaf-43f6-8d32-8911063e4153",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a833613f-3e27-400b-8e54-51e09312f3c4"
        },
        "item": {
          "id": "b08615f6-7fd9-4e98-bb51-62b882a6eb18",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "93c2ad78-4f2b-4950-ae9a-274f11c303e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a9ca71-7877-4dfa-9d5b-aca5eb191b8c",
        "cursor": {
          "ref": "489831fd-ef7e-4542-9e4e-2b12e30d9c70",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "29f78c91-91c0-49b3-858e-5f35f9f3c63d"
        },
        "item": {
          "id": "97a9ca71-7877-4dfa-9d5b-aca5eb191b8c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bc2b38cd-4716-4839-b742-8f12c49c8f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a796ff-c679-4559-92c9-0e8889d00586",
        "cursor": {
          "ref": "86cb31e8-0b52-4d70-bb0f-1cfef636a210",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4cfb4c12-843d-46ff-96ed-546250d193c3"
        },
        "item": {
          "id": "11a796ff-c679-4559-92c9-0e8889d00586",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5f6dd2fe-ea3c-4191-b6db-ba77943b9506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c996458a-2361-4ed1-be18-4ee138deb1d4",
        "cursor": {
          "ref": "958ecc29-0594-4b0d-a81b-36480a971e80",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "17132224-0442-42cd-9c2b-a6a5a56c76cd"
        },
        "item": {
          "id": "c996458a-2361-4ed1-be18-4ee138deb1d4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "61031feb-d029-41ea-9d22-3816a488527b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e38872a-b8ed-4e76-9373-960c7a768aee",
        "cursor": {
          "ref": "014685a5-2034-4798-b8a5-c596e17e2535",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "002b07a8-69db-49d6-b7e8-2b38fb559f0c"
        },
        "item": {
          "id": "8e38872a-b8ed-4e76-9373-960c7a768aee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8622f006-5fb4-46b2-a68c-0d82fe696a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8d7263-a55e-4165-b3b4-6bfb009d264e",
        "cursor": {
          "ref": "8998643c-b555-45ea-ad71-17228065a32e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "146b9aa3-31ab-4387-af42-d1f7fdb99226"
        },
        "item": {
          "id": "ee8d7263-a55e-4165-b3b4-6bfb009d264e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "96f0cbed-a241-4776-9c8b-81dbc4587550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332258f5-b5f2-4cc1-a49e-6174385036a3",
        "cursor": {
          "ref": "4f28fc75-bf61-43a5-8e6c-dad16929c0ee",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9af2e0a5-f56b-4000-87c1-f73633ee88a2"
        },
        "item": {
          "id": "332258f5-b5f2-4cc1-a49e-6174385036a3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a53938b1-c8a5-4961-a9e2-342791046df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff262f43-7e43-4079-a58a-67483864800d",
        "cursor": {
          "ref": "5b1eb0d9-1584-4a0c-ae05-520377bb0e93",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aafbf920-1f4b-4b0c-9512-3c65d5360c9f"
        },
        "item": {
          "id": "ff262f43-7e43-4079-a58a-67483864800d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "044a8817-3095-4a6d-906c-f552ef215526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33ebe9e-d446-4894-bf2a-b319ab7d2de9",
        "cursor": {
          "ref": "79bf3f41-5778-452c-bfa5-290f83b52d42",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a998ef1c-a3aa-4d6c-9f14-6c79570f98ae"
        },
        "item": {
          "id": "c33ebe9e-d446-4894-bf2a-b319ab7d2de9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "971262e3-1e17-4f37-91b1-7c511b34c0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea6b397-be0b-45eb-9dd3-0cdd6fbf1cc2",
        "cursor": {
          "ref": "f81c01fd-9221-4dcc-a4f4-9872eb2c18f5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "46eb7595-4ac2-4ed4-9812-ce1fb0a2f2c5"
        },
        "item": {
          "id": "eea6b397-be0b-45eb-9dd3-0cdd6fbf1cc2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "15e76dcb-1cb3-4497-8929-33d9d13f3ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8371f912-6937-4727-95c6-83287d78c6f2",
        "cursor": {
          "ref": "17a91804-7343-46bc-b268-de4e5b5d9e1f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2782b173-a8b4-4f1e-8f97-a8b0f0c906e0"
        },
        "item": {
          "id": "8371f912-6937-4727-95c6-83287d78c6f2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c009cee8-f9d7-485c-806b-f8dc29e04def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b1bbeb-eb13-49bf-b191-498ec9331e36",
        "cursor": {
          "ref": "101818ff-e577-428c-9665-e7e68e20f32b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "43fbfb78-09d0-423b-8786-2d7168fa9272"
        },
        "item": {
          "id": "29b1bbeb-eb13-49bf-b191-498ec9331e36",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7c7c3320-a79c-43c6-b294-98f3a8821e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9e800c-bc33-4fe1-9131-a562727bd241",
        "cursor": {
          "ref": "1067655e-3668-42a7-bcb1-2831b7c85f9f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "19df0ab3-f6c4-487d-8786-9246ce7ebce8"
        },
        "item": {
          "id": "6c9e800c-bc33-4fe1-9131-a562727bd241",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "018ef67b-6d19-46b8-aa8e-d643d9476e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7baa25-0fc4-4c21-89a1-9bc0ea8ec083",
        "cursor": {
          "ref": "014b9d31-a083-48c4-a471-8181c9392cc0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "27e324de-0cb4-4014-bb8d-6ab53be5625d"
        },
        "item": {
          "id": "7f7baa25-0fc4-4c21-89a1-9bc0ea8ec083",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b3e15bf-9d75-40ac-9738-230b0d9aca58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79007e9-4711-44d9-a50e-d65e53d776a6",
        "cursor": {
          "ref": "898bcb41-3216-49cf-89ec-9bc3d6a6297d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "15f51087-8dc8-4515-9672-daa7b3b0c35e"
        },
        "item": {
          "id": "d79007e9-4711-44d9-a50e-d65e53d776a6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "435978ab-521f-4000-bc13-e2fb4c233f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b02caf-7537-4afe-a36e-375c285e1736",
        "cursor": {
          "ref": "d977b7cc-1167-4faf-88c3-6780d70cfe74",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7cb5532-bfb7-4aa5-bc38-c514cd8f2c88"
        },
        "item": {
          "id": "74b02caf-7537-4afe-a36e-375c285e1736",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e56b7b9c-814c-42b9-883c-abfeb65ba978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6660e14-4762-421f-a3d8-4e067b6ae88d",
        "cursor": {
          "ref": "599a0327-09b5-4b9a-9ea4-af4f3ff6755f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3ffc88bd-3003-4836-8b5f-1c738826f2be"
        },
        "item": {
          "id": "a6660e14-4762-421f-a3d8-4e067b6ae88d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "99b97ae2-9c7e-4631-97f9-3bb95afc584c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944be502-ebd9-4bce-8a40-ae14b04aa022",
        "cursor": {
          "ref": "3e704c96-2262-4515-b3f2-42ce8b57dffd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b1c0f512-3b18-4a31-81b5-0dc5db5d0804"
        },
        "item": {
          "id": "944be502-ebd9-4bce-8a40-ae14b04aa022",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "775f8486-c5c2-4b55-a17e-f18b49e44b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94132c4-e95a-4b2d-8908-14d9e73efee8",
        "cursor": {
          "ref": "d5084af9-1b38-49a3-b378-8e3dc23cfa14",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "370bef6b-b10d-4a48-a5ec-a138a078ba21"
        },
        "item": {
          "id": "a94132c4-e95a-4b2d-8908-14d9e73efee8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a8bb4980-96fa-48b7-ad76-4e48e7cd343a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b8603-90a7-4a22-8a53-5ad082a734c3",
        "cursor": {
          "ref": "0288cd76-5ab7-4877-88df-221d967d5adc",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e9e59f67-9a7e-49c4-9e51-85801b1c98b7"
        },
        "item": {
          "id": "fa9b8603-90a7-4a22-8a53-5ad082a734c3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "63896ada-b1cc-4fd9-b016-a010ccb621cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866b3699-1ddd-40d0-94b0-cb691b0f7f1b",
        "cursor": {
          "ref": "ba44cd2b-ff9d-42eb-a235-7db8314f727e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5b59659c-5fe9-493d-9061-32d40cc435b9"
        },
        "item": {
          "id": "866b3699-1ddd-40d0-94b0-cb691b0f7f1b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "724bc171-52b8-4cf0-971a-4be8bd78b9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6342bdc-543b-4333-aeb8-6767eb547a40",
        "cursor": {
          "ref": "09a6495e-1d6f-483c-9184-295e632d36ab",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cacb8b47-3971-4eca-8149-946674b9f2f3"
        },
        "item": {
          "id": "e6342bdc-543b-4333-aeb8-6767eb547a40",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "226ab242-96a5-45ae-abe5-3dac33e03d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96f146e-248d-42aa-a1b2-2e9054cb3e7e",
        "cursor": {
          "ref": "e0a5c78a-de06-4a70-adc8-b756664fa074",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e502b66b-58a0-4540-a93e-534508ab2738"
        },
        "item": {
          "id": "e96f146e-248d-42aa-a1b2-2e9054cb3e7e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d8305b89-15cf-45b4-8c24-7b7f6e13ac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845ea584-e289-4401-acd1-c4f7c0a75da1",
        "cursor": {
          "ref": "5be251d5-53ba-4ad9-9c14-c7589dc6c383",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "aaa988fb-1146-400e-b01b-4c41f2a851e8"
        },
        "item": {
          "id": "845ea584-e289-4401-acd1-c4f7c0a75da1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90d54c16-18fb-4b16-bf1d-dced5e60d167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f39b059-e342-48d1-9993-043fe513b132",
        "cursor": {
          "ref": "b42576eb-ee42-4668-97a8-d8da6688b06c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "26d495a8-f607-4cf0-b161-137f04ac8154"
        },
        "item": {
          "id": "5f39b059-e342-48d1-9993-043fe513b132",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "88b98347-4a0d-42c0-b75d-ab6042fcd8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895cfc33-f6f4-4edc-bed9-34e713367984",
        "cursor": {
          "ref": "4968b4d9-e92d-4287-994d-238b7c5b9cee",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9cd0fedb-102d-4483-a5ed-ac50c554f92c"
        },
        "item": {
          "id": "895cfc33-f6f4-4edc-bed9-34e713367984",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "235dbea0-7df4-42c4-84a3-7e89b8a629a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216bb810-7488-42f2-9471-7066b3e9dd8b",
        "cursor": {
          "ref": "93319060-1b10-4b6a-a855-f73aeac451b8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1e9490ca-5135-44a5-8402-5d857b4e42c5"
        },
        "item": {
          "id": "216bb810-7488-42f2-9471-7066b3e9dd8b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "064b4d2c-2891-4ce5-af02-32d94276bc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d361fe58-a319-4307-9eed-f888554c9545",
        "cursor": {
          "ref": "97b112ca-15f1-431e-ad87-3acd2219651e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cc17dc4c-bc4c-4578-bdc1-39cbbe2452e7"
        },
        "item": {
          "id": "d361fe58-a319-4307-9eed-f888554c9545",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aa659d44-11c9-47f9-a7d3-07b2fd143ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d2bcce-3a71-47af-a299-4081cb610e13",
        "cursor": {
          "ref": "293edc50-3a43-4486-8691-8ab9f2ded6e3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a417a81-e36c-43f3-a001-5728bebc828d"
        },
        "item": {
          "id": "a3d2bcce-3a71-47af-a299-4081cb610e13",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fe8f482d-50f9-4d16-b159-f051242baec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85594bbd-5e6d-4924-913a-c4093f8032df",
        "cursor": {
          "ref": "48c87abc-2d4d-4781-ae10-92d25b824af0",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a653319c-2b0c-433a-ab63-3a3b84ab596b"
        },
        "item": {
          "id": "85594bbd-5e6d-4924-913a-c4093f8032df",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "461ed4e8-e26c-4a97-a111-7ad12a40a922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b13509-3db3-4a08-8941-9f309cface79",
        "cursor": {
          "ref": "81ab714e-7b79-4406-a228-0f4b859c5a4a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e5b2c30d-9005-492d-8438-636eda86221b"
        },
        "item": {
          "id": "e8b13509-3db3-4a08-8941-9f309cface79",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "21f0ff7f-b91b-46da-9325-ea98a11fbaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eef0baf-30cc-4e78-83f2-8de19c86a01f",
        "cursor": {
          "ref": "0242df1f-6651-4650-94bb-d77658238d03",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0a98fbf2-de50-4bae-8e9b-453200eeaa03"
        },
        "item": {
          "id": "7eef0baf-30cc-4e78-83f2-8de19c86a01f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eec1402d-daee-4c1d-ae04-4f910202268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9d0925-c3b6-4e59-a921-083ee7dee53b",
        "cursor": {
          "ref": "45ebbfb4-a664-4f5c-9af8-80bd2a31a1dc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "274c5ef3-c69f-4e18-a34d-fb6da5694df5"
        },
        "item": {
          "id": "0d9d0925-c3b6-4e59-a921-083ee7dee53b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1fe481a-f686-48e1-b9bf-9e8fa7f472c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba42270b-f10a-4379-a1dc-5ba26dfe3c10",
        "cursor": {
          "ref": "555da330-2699-4577-accd-4933b50305a6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "26f18db5-8346-4a2d-a622-2bd7e4bd8db4"
        },
        "item": {
          "id": "ba42270b-f10a-4379-a1dc-5ba26dfe3c10",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e7aa152a-023d-4509-9fce-b66c91dc3d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea4b392-8869-48b5-b2bf-c3e18324818c",
        "cursor": {
          "ref": "607f032b-03c6-466b-ac6a-31919d468eb2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "271b5ea8-eea1-43be-ba36-38f162d9c1cc"
        },
        "item": {
          "id": "cea4b392-8869-48b5-b2bf-c3e18324818c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d1b53199-762d-4d49-bf89-46f9a2467789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f3f2dd-2c8a-42a6-ba99-9d8d48e02107",
        "cursor": {
          "ref": "02741224-b5b9-4614-ac16-d884559dd6cd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8c5badf3-b70c-4925-9a4b-69f437dd327b"
        },
        "item": {
          "id": "53f3f2dd-2c8a-42a6-ba99-9d8d48e02107",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e77d267a-ac7f-4cac-895e-764387d7bd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9bc5b5-e785-4843-8720-b5c680c73272",
        "cursor": {
          "ref": "6561adac-47ca-471f-892d-33d6d67c0a38",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "195f8133-5ca0-4712-8cbd-8680f22226f2"
        },
        "item": {
          "id": "cb9bc5b5-e785-4843-8720-b5c680c73272",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bcf0f6b6-02fd-4ec7-bd0f-8a3f7ccda833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117ecd00-4b8e-43fa-a05f-1bf6725223ad",
        "cursor": {
          "ref": "8555f994-a9dc-4b69-b388-668f6f2bf794",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d896ddba-f179-4f59-828c-ec451c641dc7"
        },
        "item": {
          "id": "117ecd00-4b8e-43fa-a05f-1bf6725223ad",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3ee70465-76a8-49bb-bfbf-02f4134a94cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be69f16-5c04-4303-9574-9a2cd8f6c3da",
        "cursor": {
          "ref": "c45794d3-8174-4673-a2f0-0416cb744728",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "303a02c2-7a2e-4ad7-a660-b9495d8fa9e1"
        },
        "item": {
          "id": "8be69f16-5c04-4303-9574-9a2cd8f6c3da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e8d59602-cf0d-4715-8ab4-9ed1f40c35dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0f8166-d3fd-46c7-9b4f-b6a30ab960a0",
        "cursor": {
          "ref": "e2e187d2-f94e-402f-816b-d2bbd7771531",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4c5db3a2-dfdd-4548-b6b9-46d78d7e3a16"
        },
        "item": {
          "id": "df0f8166-d3fd-46c7-9b4f-b6a30ab960a0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5df346ee-e793-46e3-aa4e-06596065a7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6b94b-7035-41a4-83d6-73f8fd4dad48",
        "cursor": {
          "ref": "4943bd9c-8532-406c-a499-c191701f66f3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fff1d9d9-e410-4eb0-918f-f8d422635804"
        },
        "item": {
          "id": "40f6b94b-7035-41a4-83d6-73f8fd4dad48",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fb43ae38-ec78-4dd2-8c4f-a680485832f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beacae03-275b-42fe-b47a-479e7c4577ec",
        "cursor": {
          "ref": "e9b557ea-4c2f-4e52-9699-6dc9f35297e1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d5f403b0-e4fc-4e2e-a7da-1223c806e1d1"
        },
        "item": {
          "id": "beacae03-275b-42fe-b47a-479e7c4577ec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "97658f5e-e1f3-48b8-83e4-c8fc08aa8093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1b69ef-119a-4bc4-af85-27622278a962",
        "cursor": {
          "ref": "79c76bd6-26ac-4710-8476-e6266e86cc2a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "31ec1c57-e1c3-4016-926d-ecaf9f8ac01f"
        },
        "item": {
          "id": "2c1b69ef-119a-4bc4-af85-27622278a962",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e383d8e5-a5de-4521-ba69-434ffa7bdd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843f2ec-e1b5-48ac-9e67-cad9d158727f",
        "cursor": {
          "ref": "7c5a2a83-8dd5-4277-91cd-b016f90fcbc3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "327d44ea-7042-4fbd-98db-357999bcac26"
        },
        "item": {
          "id": "3843f2ec-e1b5-48ac-9e67-cad9d158727f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "76e826ea-c720-40bd-871a-39f2140510f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2c48ce-ac84-4222-bd7a-5ca2e01228c9",
        "cursor": {
          "ref": "af850471-595d-414e-8143-dee37b9280f7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d847eb1e-7dd0-4fe2-8e66-8f77f23c7a20"
        },
        "item": {
          "id": "4d2c48ce-ac84-4222-bd7a-5ca2e01228c9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "57723d3c-636a-41f4-a3e2-bf250f1d92bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ef490f-4260-4205-945e-981dc9cc2034",
        "cursor": {
          "ref": "cbcd11d0-2589-447f-97ed-42f2292b39b1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7a10769e-a8c3-432f-8f03-154c3d49162b"
        },
        "item": {
          "id": "e1ef490f-4260-4205-945e-981dc9cc2034",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6cecd0bd-2e56-4b66-97d7-deb6e0494631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5372ca4a-ab69-49c1-b345-dbd09289341b",
        "cursor": {
          "ref": "191dc3ba-4a2f-49e2-88d2-2f834510f4da",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "62074287-f4d2-44ec-a39b-d0efbd5d4491"
        },
        "item": {
          "id": "5372ca4a-ab69-49c1-b345-dbd09289341b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7dc3587a-90bc-424a-9938-635474cefabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9cc975-8015-4dcd-8464-474bfadef6e1",
        "cursor": {
          "ref": "0618d8c3-2b35-42e3-ac12-e31c4b20aa2a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bc099b8e-d29b-4ba6-be29-17470f48790c"
        },
        "item": {
          "id": "db9cc975-8015-4dcd-8464-474bfadef6e1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1b97e69b-9173-475f-a54e-7bd87e2113a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50a345-2065-4f78-8ad6-3bcba74cd1ef",
        "cursor": {
          "ref": "c501dbb4-48c9-416e-acd2-1e18de6a65d7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3e2c2dfd-b670-4751-b37b-80115309a87f"
        },
        "item": {
          "id": "da50a345-2065-4f78-8ad6-3bcba74cd1ef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "331e9216-b04f-41e8-a06a-250e2bda4816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc2bd21-7c0c-4a8c-95f2-dae382d6cb54",
        "cursor": {
          "ref": "2bc25093-7d8b-4333-9eaa-54bcbbcc5ce8",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d85665ee-c57b-4cf3-91dc-d4c2720332cc"
        },
        "item": {
          "id": "dcc2bd21-7c0c-4a8c-95f2-dae382d6cb54",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d40a0258-613d-4496-805c-87db13f73cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db627d84-81b5-4d41-9e1d-7839ed6aaf85",
        "cursor": {
          "ref": "f3a3ce46-70a9-4834-8cda-009363d2dcc4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ab2d2176-860c-4e71-8d0e-0dec4f1f5312"
        },
        "item": {
          "id": "db627d84-81b5-4d41-9e1d-7839ed6aaf85",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a9d6a8c7-3f41-4fe8-8515-173b7f7975d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3822eb7a-e213-45cf-8df0-5cef64db4345",
        "cursor": {
          "ref": "46ef9e81-d1b9-4899-b0fe-f6f7cab3daf8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "002e6b57-d162-413d-9bf3-0b36b9786841"
        },
        "item": {
          "id": "3822eb7a-e213-45cf-8df0-5cef64db4345",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9b957ff7-3532-46b9-9149-81b4a29bc359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc815ed-dfa9-4dac-9f37-f1c72fdced2a",
        "cursor": {
          "ref": "2b6bb1f6-1204-4d70-b459-41bb75d5419e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7e6aa641-9991-408a-9b49-d35c928386c4"
        },
        "item": {
          "id": "8cc815ed-dfa9-4dac-9f37-f1c72fdced2a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "57739f61-bc3a-4261-9075-f745ee62dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a73580-bb6a-4358-ab06-5cd57866fcf5",
        "cursor": {
          "ref": "298c63d4-ba6c-46cf-b75c-8d04f2101b96",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fc154d27-99a8-4f10-9035-c083cede60a9"
        },
        "item": {
          "id": "23a73580-bb6a-4358-ab06-5cd57866fcf5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9ec45dc7-b2e4-4269-ac99-b8e723b235bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9069c0b7-ff3a-4b47-b117-c26b4a405694",
        "cursor": {
          "ref": "e6f7962a-766e-4ff9-b38f-e3bc6c59d92f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5b8c25c0-1d3d-429d-93e7-33e51ccdabd5"
        },
        "item": {
          "id": "9069c0b7-ff3a-4b47-b117-c26b4a405694",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "85409ad3-7f1b-4659-931d-2f292c91bc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9ca4ae-1fc7-44ef-9bfc-96bd91bc26d7",
        "cursor": {
          "ref": "91a91718-3e49-4442-be95-5608690e4c8b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b07f48f2-2eaf-475e-a13d-6c691b675771"
        },
        "item": {
          "id": "8d9ca4ae-1fc7-44ef-9bfc-96bd91bc26d7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a66e75a0-e966-4a5c-95ba-93492f3871e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4215f2f-458a-4301-ab40-0e2e50779c56",
        "cursor": {
          "ref": "0fbc6c27-f2aa-48d0-a4ac-dbe02b2bbc77",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "35e86348-8459-41a2-a33b-602447c3946d"
        },
        "item": {
          "id": "d4215f2f-458a-4301-ab40-0e2e50779c56",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "689375dd-bc6f-4d3e-aac9-67884e8d505d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81563c00-3529-4d80-9204-8a467dc6780e",
        "cursor": {
          "ref": "b389d963-bbfa-4963-9479-f0e1750fee9d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c83f6d05-c50b-4272-aeb9-9628c26a433b"
        },
        "item": {
          "id": "81563c00-3529-4d80-9204-8a467dc6780e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "498a0725-817a-451f-9032-3e6d9e0be20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699b88f9-83b0-4e9b-9c51-787835e75933",
        "cursor": {
          "ref": "c1900d1c-a375-4303-b19c-68de87168799",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7602c946-9601-4974-82bd-b836882da784"
        },
        "item": {
          "id": "699b88f9-83b0-4e9b-9c51-787835e75933",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7f3a4da1-10a9-4f40-9f25-1cbd920c27a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c669208a-8e35-4172-86ba-8c702c62d953",
        "cursor": {
          "ref": "5c24ae8e-edb3-4af7-aae0-f12aa24fd247",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1ef72462-c833-489b-8e76-9e13c48dee32"
        },
        "item": {
          "id": "c669208a-8e35-4172-86ba-8c702c62d953",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "034b5e90-eca8-4cfe-8662-8bb265073411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fdeb10-fc32-47ef-9cb8-8118719a9f03",
        "cursor": {
          "ref": "fb84bad6-cf77-4f07-9c44-6262e204c6f4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "74fc0af9-c244-4b31-bdb2-0b8d2a73370f"
        },
        "item": {
          "id": "e4fdeb10-fc32-47ef-9cb8-8118719a9f03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ea293bdc-5476-41ae-ae74-c8d4959e430f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89427bf-4357-49d9-af9d-7034a8860071",
        "cursor": {
          "ref": "7c183777-49d0-4fad-b696-ee5fffe4908e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ae167d15-b1be-43c4-94a7-0b016d39257b"
        },
        "item": {
          "id": "e89427bf-4357-49d9-af9d-7034a8860071",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "31aef755-173d-42ac-8b1f-cdc22581667d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ceca14-ee1a-4e2b-9e6e-e2ce5394a6bf",
        "cursor": {
          "ref": "5875d088-a047-4751-a73a-95549e51e435",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2ca71d80-761b-42d1-b25a-5a6a52c9f4ba"
        },
        "item": {
          "id": "28ceca14-ee1a-4e2b-9e6e-e2ce5394a6bf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c210a309-b8a4-487c-ae2f-0737b4a5eef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425d8e41-013a-4732-80fc-c9a3a36bf199",
        "cursor": {
          "ref": "a118a4bf-88a1-4f84-b940-b4be0fb14471",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1358338e-8696-4162-8d0a-3a9ceb0d400a"
        },
        "item": {
          "id": "425d8e41-013a-4732-80fc-c9a3a36bf199",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "57115d8b-9bfa-48e6-84c2-a367574bf74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a6fff1-71f5-4737-8e1c-8a3ba81c56eb",
        "cursor": {
          "ref": "e6c170b5-1356-44a2-9940-4d9633c2589e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d87099e9-b5fe-4892-b1b4-427a402461ad"
        },
        "item": {
          "id": "c4a6fff1-71f5-4737-8e1c-8a3ba81c56eb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b00cdb73-5b8b-4ad5-820e-3c22e258ebc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3148b116-8ba4-4cdb-ad75-f9933b39e9fa",
        "cursor": {
          "ref": "0e0db892-0b30-42a3-a231-1d5eacf10fc3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "08ba2819-bb4c-421c-8e1e-d00e7799e930"
        },
        "item": {
          "id": "3148b116-8ba4-4cdb-ad75-f9933b39e9fa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ce8b70a9-d421-4314-b30c-e4a107fe357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d234eddd-ae21-4222-952b-16c80ad0d5e3",
        "cursor": {
          "ref": "c561e5e4-f8e7-4efc-9797-3da7c3724834",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b4f3bb75-9683-4174-b1e7-df4780a793c1"
        },
        "item": {
          "id": "d234eddd-ae21-4222-952b-16c80ad0d5e3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eab12606-8e69-4936-9e5a-c99598f92fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c73624-4830-4c12-b856-dcb4e4ab541d",
        "cursor": {
          "ref": "61b698fc-b0e9-45fa-9f3c-c48bcf9a975b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "03229e40-4b06-4977-8ec4-af5f5d4330cd"
        },
        "item": {
          "id": "75c73624-4830-4c12-b856-dcb4e4ab541d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b4a5ee1a-b832-4dec-a58b-d0ea9b2d35d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad19ab-dc61-4d31-a800-ff4dbbcab403",
        "cursor": {
          "ref": "9ef91ed6-3fc4-48f9-8829-2942fa18c7af",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "526e3ef7-7a95-4961-b073-2305cf6c3417"
        },
        "item": {
          "id": "c3ad19ab-dc61-4d31-a800-ff4dbbcab403",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "df962457-ed5f-429f-b7eb-75eedebca775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a63a8a6-d5c3-4f8e-8f8b-a1a0c30f1e9f",
        "cursor": {
          "ref": "3b4d47a5-14d7-446f-9f46-6b933ab0f0a4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c39f7ff3-97c2-46d6-b784-d17ef8e54a31"
        },
        "item": {
          "id": "0a63a8a6-d5c3-4f8e-8f8b-a1a0c30f1e9f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2ae74bc6-412c-431e-aa5b-14bc67df79d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7791bcf2-433d-4793-9950-2f78d80f463a",
        "cursor": {
          "ref": "c1490fc7-b23d-4e7e-abf5-d85fa4d3458b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3732654d-42c6-4723-92bb-9bddba326e1c"
        },
        "item": {
          "id": "7791bcf2-433d-4793-9950-2f78d80f463a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "51e2cb86-100f-4d5a-b08c-a9721c67ec90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c36a63-60f2-4ec8-a63d-2ed58f4b6548",
        "cursor": {
          "ref": "83237c94-ed15-4a9d-80f1-9cc7dac1a6e7",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "34e655c5-f236-4819-b239-dea8853e3325"
        },
        "item": {
          "id": "67c36a63-60f2-4ec8-a63d-2ed58f4b6548",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "73886917-a01c-41a5-a690-b10dec360f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0045963a-616d-40a9-b9c9-50672f62161b",
        "cursor": {
          "ref": "e5777fbb-52c9-4485-91da-650fd36169b7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9efc63de-2f4b-4f88-9852-971f028fb366"
        },
        "item": {
          "id": "0045963a-616d-40a9-b9c9-50672f62161b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f607a604-84ff-4518-84a9-d833c32ff52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc720ee-54bc-405b-b2d9-752c53850eee",
        "cursor": {
          "ref": "68f86a33-35cf-4e52-bd5d-b44d2658c849",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e79da2c8-b97e-4e02-904c-65bfa65f632c"
        },
        "item": {
          "id": "efc720ee-54bc-405b-b2d9-752c53850eee",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "585294f4-403b-4590-be52-0c8ddd54e64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab29ca21-594f-4b8b-aefa-b2dd511e1bd4",
        "cursor": {
          "ref": "d1496e3b-a299-4cce-ad9e-f023290f883c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4a4832f3-1e2b-4bf0-854a-1395073c8e94"
        },
        "item": {
          "id": "ab29ca21-594f-4b8b-aefa-b2dd511e1bd4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5dc32250-bb44-42e1-94c3-b841b87350c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1efc36-4874-4475-8d19-1170bfaee73b",
        "cursor": {
          "ref": "fb86e2ff-4a87-4ad0-b8e8-3f3a5cadc5f2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a6a9d041-8e37-47da-8e7d-6adbdc558a4c"
        },
        "item": {
          "id": "7b1efc36-4874-4475-8d19-1170bfaee73b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "40388ed6-0911-451c-b2f2-f02870fd6005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8392fd2e-ffc2-4cec-8c20-471f23b8cd12",
        "cursor": {
          "ref": "4854e19b-dc0d-4e35-9ad8-158b6f993ec1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6a3d186d-05b3-495d-9e32-6db3f6094522"
        },
        "item": {
          "id": "8392fd2e-ffc2-4cec-8c20-471f23b8cd12",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "df23598f-b623-400c-8096-d61fec1d0b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4412546-eec7-4284-9044-847b4caabcd9",
        "cursor": {
          "ref": "ad81a14a-98b3-464a-92db-707083128b41",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a0704ea4-960d-4093-b89a-6de8ac6c78d7"
        },
        "item": {
          "id": "f4412546-eec7-4284-9044-847b4caabcd9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1cf10c0d-d5b4-4382-a085-9e98a568ab4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85204d4e-a3b1-4a5d-9f3f-f460dd4ec309",
        "cursor": {
          "ref": "94fba518-aece-4c74-ba81-672d416c0191",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2261ad15-ecb4-4f65-9132-6d9776b406bf"
        },
        "item": {
          "id": "85204d4e-a3b1-4a5d-9f3f-f460dd4ec309",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c0ca54d0-9946-4bb7-a2a9-e8ec920739d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a5b328-d87f-4f4e-be42-3cd4f928889b",
        "cursor": {
          "ref": "f400939e-671d-47cd-912c-09fa23ee30bc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fa2a2ce4-85b7-4824-a14e-aeca2450ce64"
        },
        "item": {
          "id": "a4a5b328-d87f-4f4e-be42-3cd4f928889b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5f9ffe99-3da0-482e-806f-6f8653c0ae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d114b424-8950-4e8f-86ff-ef6817b23ae7",
        "cursor": {
          "ref": "b545c325-5a5c-465e-9ffc-47458a28a0eb",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "47ce5786-9a6b-4b76-a01b-23d2ccce3582"
        },
        "item": {
          "id": "d114b424-8950-4e8f-86ff-ef6817b23ae7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "05352448-b013-4ab6-a3c3-81d15cd87056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d22478-75f1-4403-a49e-ffb447c82616",
        "cursor": {
          "ref": "8b37be77-cec4-4952-a8f5-6cf77afe2418",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8575ebbd-b1f9-409d-9869-fc658b4c5f97"
        },
        "item": {
          "id": "c1d22478-75f1-4403-a49e-ffb447c82616",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "972b56a5-50a0-4a40-9c1a-a6a2b5fc7f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba1c0ef-296b-444a-8e5b-cbe0690e200c",
        "cursor": {
          "ref": "e86ada35-2b84-4455-88af-07fce87b2405",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3d789515-b136-4386-9928-ff38c0bbf49d"
        },
        "item": {
          "id": "2ba1c0ef-296b-444a-8e5b-cbe0690e200c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1e39a145-77a0-40d7-9912-aa9e9f1abd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca8c461-0bcc-42e4-8f70-49bba9b2d47c",
        "cursor": {
          "ref": "bdd7d76a-a639-4de1-8d29-07e2a46c788d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "69e161cc-5744-4df3-8aa3-6f0567fb8b15"
        },
        "item": {
          "id": "0ca8c461-0bcc-42e4-8f70-49bba9b2d47c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ee955960-9bda-40ff-87e1-1d6675a205b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a093a28e-ddca-431d-8f09-49912ef6b009",
        "cursor": {
          "ref": "dab1ae46-c401-4263-9121-c4b7a1b891f6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1d004405-66e1-4878-971f-3d657f9195a8"
        },
        "item": {
          "id": "a093a28e-ddca-431d-8f09-49912ef6b009",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a3ee8603-0960-43b1-9cca-8618749ab26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfee8a54-bfba-41ba-8880-7bf764860ee3",
        "cursor": {
          "ref": "f37f8057-fdf6-4cc4-bc4d-4d168c4557d4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6ceeb0e8-e417-44b8-b7fe-2417c932fb36"
        },
        "item": {
          "id": "cfee8a54-bfba-41ba-8880-7bf764860ee3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a13d0f69-f39f-456e-9bcd-0a722e3e8884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42be29b8-599b-452d-9f04-fa260d12ad3a",
        "cursor": {
          "ref": "2119c956-ecdb-4848-84f8-afed3e075b42",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b9b36a65-22a1-4768-a8ba-ed644e925223"
        },
        "item": {
          "id": "42be29b8-599b-452d-9f04-fa260d12ad3a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7c2feeaa-a6ce-4e02-8e0c-91b02d762d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7799a09-18a9-422f-8572-baac8cd2d1eb",
        "cursor": {
          "ref": "e3003734-1e83-46ff-8ebf-a50cfdc4c29a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "923089a7-a82e-43c3-877c-b763a99b695a"
        },
        "item": {
          "id": "a7799a09-18a9-422f-8572-baac8cd2d1eb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7c26b9e9-7ac6-4cf2-9a29-97b681a9fad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e15437-6e15-4d82-aca2-eec7a93fc047",
        "cursor": {
          "ref": "07e2abd9-5f15-4346-8d1b-b263465dc2d0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "19d6ba48-134a-4a27-a512-91e2fb17d026"
        },
        "item": {
          "id": "a7e15437-6e15-4d82-aca2-eec7a93fc047",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "789505b5-e194-4220-9ded-f7fb083363bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37c90c3-2c12-4308-977a-eede94ba44b2",
        "cursor": {
          "ref": "796f399f-8114-4787-a722-8d3f23e325f4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b0585a1e-c677-4fc4-b994-1a8dc46ab8f3"
        },
        "item": {
          "id": "a37c90c3-2c12-4308-977a-eede94ba44b2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bddaa62c-5e3d-432f-a5bb-ab716bbd8cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d937d4-73d4-4548-a394-d32c9cbbeb5d",
        "cursor": {
          "ref": "ae38c7aa-d297-493f-be3c-75036f33153c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fdf78059-155b-413c-8896-bf932f94b012"
        },
        "item": {
          "id": "e8d937d4-73d4-4548-a394-d32c9cbbeb5d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e52a0c3c-ce61-4910-9858-5070c3267ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949abf89-89b4-42a6-9199-821636a3ec8f",
        "cursor": {
          "ref": "83458c60-72e2-4d4e-af86-ea81210cc94d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0a6e19b5-cedf-410d-a0bd-3920ae9524eb"
        },
        "item": {
          "id": "949abf89-89b4-42a6-9199-821636a3ec8f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "be9f9570-10f7-447d-bbb9-1f4929f26fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aac1bd7-02cb-4723-a727-33fc03cdb514",
        "cursor": {
          "ref": "991a51da-5c3b-429f-a4b0-a8cfc8d7ca8d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "06d343f8-8b26-4cc2-a16f-79facfb8cb20"
        },
        "item": {
          "id": "3aac1bd7-02cb-4723-a727-33fc03cdb514",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3eef7122-4435-4fdb-9ab4-c072b9aa9ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32007cb6-1197-42f3-94d6-0538d46f4b68",
        "cursor": {
          "ref": "874dad51-6fc1-4f9a-ae6c-987b63d3e71f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "65b8c0f7-74f8-4413-961d-e7a4ecdce438"
        },
        "item": {
          "id": "32007cb6-1197-42f3-94d6-0538d46f4b68",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4fa0ea01-6048-4718-8d31-2d798a776e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5e1f641b-4833-4361-b0e4-9582886dbcff",
        "cursor": {
          "ref": "f6fed097-72d0-4564-a78a-5beec6f80c66",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4b9e5ac7-9533-4c17-bbae-286854203f2e"
        },
        "item": {
          "id": "5e1f641b-4833-4361-b0e4-9582886dbcff",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f06eefc7-70a5-409b-9db9-fa26e89b59fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "07103988-e847-4a73-b250-0deedfaa9dd8",
        "cursor": {
          "ref": "3544f2f6-a91c-49c5-8239-76298908976c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "14851302-f56d-4825-aaac-cd7b2424eb6f"
        },
        "item": {
          "id": "07103988-e847-4a73-b250-0deedfaa9dd8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4089c38e-67bf-4644-83a5-0eab7ad65d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c87c7ceb-090a-422b-85fe-0d8644f0a9d7",
        "cursor": {
          "ref": "84888aef-e081-40d4-a208-452c326de5b1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4c4e12fd-8d4a-48f4-8d1d-f1cea289cf58"
        },
        "item": {
          "id": "c87c7ceb-090a-422b-85fe-0d8644f0a9d7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "387609c8-0ed9-4433-98b7-81517e19b097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0e115605-f771-4168-9ea2-fe3edc27a620",
        "cursor": {
          "ref": "ec153fbc-745a-4bb9-bba3-b17eebd4c28d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5bcbc333-b834-43fe-b4b6-6833102afd70"
        },
        "item": {
          "id": "0e115605-f771-4168-9ea2-fe3edc27a620",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "592ddb2c-93dd-40d3-be88-dd7951a8e0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e8b8e5b2-3bd5-4396-9ba2-258350dfc72c",
        "cursor": {
          "ref": "12427317-35f3-460a-afe2-c380ed361be5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6dbb20ba-260b-4f1a-8a99-973498ab72fe"
        },
        "item": {
          "id": "e8b8e5b2-3bd5-4396-9ba2-258350dfc72c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "68be388a-daf9-428e-a2ad-3f3c16ff22f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8dc5332d-aabe-455f-a646-4f138aa63913",
        "cursor": {
          "ref": "dd387679-46fa-4c3d-b86d-a4dbae6a0dbb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c8fb349c-d7ea-40df-8a02-24d0807b8922"
        },
        "item": {
          "id": "8dc5332d-aabe-455f-a646-4f138aa63913",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c8b7a9fe-f1f6-41cb-ae27-5b902323dfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f8804e78-c189-47ed-a099-89128d2c385d",
        "cursor": {
          "ref": "94c2e6b9-f9ee-4ece-bddd-ab7ff4423ae1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "14a8847f-6d3e-4c02-9d91-67a349252e52"
        },
        "item": {
          "id": "f8804e78-c189-47ed-a099-89128d2c385d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "21353db4-a2fb-4442-b482-08c21cf8440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0893fbc-e998-4b23-b152-5db713237f3b",
        "cursor": {
          "ref": "c0f83c7e-44b7-4aca-915c-5a9cc085534d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e760bd5f-5210-4304-a347-f36070cd2e53"
        },
        "item": {
          "id": "d0893fbc-e998-4b23-b152-5db713237f3b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "35e1c646-c306-4202-a526-13f988e7792a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259672fb-4dbf-454e-a96a-95dafa0b1b26",
        "cursor": {
          "ref": "35320f10-8390-4f82-b3bc-1dc8ce660fae",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "be315805-1aca-45fe-9e79-c7284cd89735"
        },
        "item": {
          "id": "259672fb-4dbf-454e-a96a-95dafa0b1b26",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "90702279-c0f0-40cc-90ce-7d67269b0d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcccb2e-246c-40c9-94cc-d194a550ad59",
        "cursor": {
          "ref": "9855bbed-5cba-4a77-a0b6-07e3e9f7c342",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4325dc51-b72b-4d47-9044-b5ea3f08617d"
        },
        "item": {
          "id": "efcccb2e-246c-40c9-94cc-d194a550ad59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9f3a0a56-e228-4928-b59e-2f1e4cee3c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928f1da2-724f-4de1-a0e7-f20c15ab4bb0",
        "cursor": {
          "ref": "97bcd237-2836-4e54-be82-2925cd818e6a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "58f79f6c-1ff0-4f75-8324-6b26dd418371"
        },
        "item": {
          "id": "928f1da2-724f-4de1-a0e7-f20c15ab4bb0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aed525f2-6ae7-41b9-b79a-818d4a541274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba8dff4-d3d8-4691-9ecb-2eca3c9e77ef",
        "cursor": {
          "ref": "94e5fdf4-56c3-4830-a408-504463fb8f48",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "babe6c85-08eb-471a-af45-cb59d0746e18"
        },
        "item": {
          "id": "cba8dff4-d3d8-4691-9ecb-2eca3c9e77ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89cbdea9-d4fc-4d20-93d0-3a8be664edea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdba568-be9f-4bf5-b185-f125aece5408",
        "cursor": {
          "ref": "852e348d-975d-4c92-bc36-67350f448b4b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5509d7cf-2772-4c8f-a22f-97a3f59bd412"
        },
        "item": {
          "id": "bcdba568-be9f-4bf5-b185-f125aece5408",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bfed8a00-16bb-4845-94e8-479d7c69caa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86a3c7e-77f0-4384-8d0f-d8364ef8ee46",
        "cursor": {
          "ref": "024e119c-58f3-481a-9a21-6fea72f35df8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7225c7a5-8aa7-4656-9a3e-9a11b2ec772b"
        },
        "item": {
          "id": "f86a3c7e-77f0-4384-8d0f-d8364ef8ee46",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c5d9cd4-f168-4d67-9816-d8e3a4739dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a095b4b-95e2-422b-981d-b0ccede33e10",
        "cursor": {
          "ref": "feb12a42-c8f7-4850-8846-c4e61212a463",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "953dcf33-3897-4fce-bf1a-c7f64884ed98"
        },
        "item": {
          "id": "1a095b4b-95e2-422b-981d-b0ccede33e10",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fa72a892-555d-4122-b7ae-cb4bda43e558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edc874a-857e-47df-a4cf-5392b761c178",
        "cursor": {
          "ref": "37e055e8-2868-4f1b-a29c-88a8500f8f95",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b1c5ada-0d99-4d43-984a-aa4ea238e940"
        },
        "item": {
          "id": "8edc874a-857e-47df-a4cf-5392b761c178",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c17168b8-25d0-458a-882f-d226b8d7f22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51068e96-030a-4855-935e-968f8898b9da",
        "cursor": {
          "ref": "2bba769d-6e49-4e91-ad4a-f62cd05d8e9f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "30870ecf-6aa8-479b-ad2e-08b9343df070"
        },
        "item": {
          "id": "51068e96-030a-4855-935e-968f8898b9da",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a48df3ee-6947-4207-a3da-4f074d56fbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80c477f-8b49-4313-a0fb-8b03f0bf8b14",
        "cursor": {
          "ref": "926c0026-740a-4515-b76e-d18d09e1889b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ee0d0717-cc1d-4040-b51a-b5874e193c7e"
        },
        "item": {
          "id": "a80c477f-8b49-4313-a0fb-8b03f0bf8b14",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7e9e4169-1f4d-436f-bf07-bf4aa7718987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53487b96-1eb1-4837-8c4a-8d285eb430c1",
        "cursor": {
          "ref": "c7b68041-5cb7-4073-9289-6abdf2c40108",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3b15c5ea-1ceb-4912-9893-bbcd7da22240"
        },
        "item": {
          "id": "53487b96-1eb1-4837-8c4a-8d285eb430c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0cc5819b-b1fb-4354-92ed-ba1d9facc895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082cd266-6725-4055-9230-c78358c75d40",
        "cursor": {
          "ref": "4d612b9a-d46a-41a1-a445-ebb5556b4091",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "00caf792-fb7b-4f5f-bd71-5c2937f6dfe6"
        },
        "item": {
          "id": "082cd266-6725-4055-9230-c78358c75d40",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a118b5e9-d660-4922-bced-34d2cc464f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae125617-3ca2-49ba-9490-2eebede8983b",
        "cursor": {
          "ref": "e6bd0f7d-1559-443f-835f-ba1d97e1dbb8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0b83d5b7-2b85-497e-a1b8-3e9acdacf3ba"
        },
        "item": {
          "id": "ae125617-3ca2-49ba-9490-2eebede8983b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5043632e-b136-4ee6-ada7-275cb216a4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11b5859-4c82-4520-8fc9-3200f843447f",
        "cursor": {
          "ref": "ec9bfbec-3b2b-4af7-8b29-a916b8e3e24c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cef33c67-0f44-4322-b746-7ae3f4e00bd3"
        },
        "item": {
          "id": "b11b5859-4c82-4520-8fc9-3200f843447f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2dc832a7-7ae8-4f50-a7e2-1736e0e63477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f7426c-d862-4f52-9693-35f3e27d915a",
        "cursor": {
          "ref": "b10c8cdd-bbe1-4c63-be1b-0e9595f0ef1d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "85a9568a-59bc-4034-a2b9-389b346070ab"
        },
        "item": {
          "id": "83f7426c-d862-4f52-9693-35f3e27d915a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8acfceb4-0281-46a4-9093-db3ce9c4cfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f15ab25-c7ba-43d7-9527-ee68b4fe7060",
        "cursor": {
          "ref": "b835f730-5df1-4559-894b-46380088055d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "39c7ef53-9080-43bd-932b-e33bac0ab23d"
        },
        "item": {
          "id": "9f15ab25-c7ba-43d7-9527-ee68b4fe7060",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "74b64608-21f9-404b-b11f-c429b6100373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629b131c-7d11-43a3-ac64-023499f3d548",
        "cursor": {
          "ref": "011e6f42-f834-4227-bdc1-6919f08aa050",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b4f5973e-2e1e-4fd2-9763-fdec6a3086b4"
        },
        "item": {
          "id": "629b131c-7d11-43a3-ac64-023499f3d548",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ea490638-616c-46ec-afd2-cbe3d2a752d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29b75a3-9146-44a4-8b2e-1380ce4de479",
        "cursor": {
          "ref": "c7f7aa6c-4764-46ed-b317-780c1ac39d26",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "10f643ef-510f-4eca-bcfb-19d2b78b14f0"
        },
        "item": {
          "id": "d29b75a3-9146-44a4-8b2e-1380ce4de479",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f36788dd-a0d7-4c42-b866-2dacb75ab2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c36e5a-2cab-43bf-8004-cb45fa338e32",
        "cursor": {
          "ref": "df7455bb-d083-4180-bd3a-7b2bb1685f7e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8aa1bd32-4bb4-472c-b269-65452811bcb2"
        },
        "item": {
          "id": "f7c36e5a-2cab-43bf-8004-cb45fa338e32",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e58e087-bf50-40f9-aeee-6a262e873d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbde888e-5932-4285-a6a6-0456c9976730",
        "cursor": {
          "ref": "a24d2fdc-c6db-4184-b64a-72c7af85d019",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0b88262e-19c8-43a6-9b19-245054d76423"
        },
        "item": {
          "id": "cbde888e-5932-4285-a6a6-0456c9976730",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "184e4144-410d-4388-9fc9-7d68af15fb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b67eaf-d4c7-4574-a829-b70aa16ad15a",
        "cursor": {
          "ref": "d15d1c02-0ed2-41dc-b549-e61776afcdf7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cbc2f0bc-92a8-4123-b804-dd80a380d024"
        },
        "item": {
          "id": "22b67eaf-d4c7-4574-a829-b70aa16ad15a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7969708c-d54b-4a8c-bcda-850f10d42fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17395b94-9eeb-403b-8b1c-b42b6c2c8e56",
        "cursor": {
          "ref": "bfdeec91-8cb3-45d8-a762-093c7c88638c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ee16030a-6131-4e76-b886-4ffa48a4e436"
        },
        "item": {
          "id": "17395b94-9eeb-403b-8b1c-b42b6c2c8e56",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b2984c0-af54-4e1a-b7a0-a59dae2434e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9366248d-d8a8-4574-8b84-de23be765983",
        "cursor": {
          "ref": "9f8faebc-0782-456c-a15d-f1a39ee05fe2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ac3e6422-d3b8-497f-91ce-5ffef2bf7df7"
        },
        "item": {
          "id": "9366248d-d8a8-4574-8b84-de23be765983",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "38dae364-be56-4ec5-ac37-d03a6ea34bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6920eb8-fed3-4517-a7c1-1e3959cfe102",
        "cursor": {
          "ref": "43fd0959-461c-476e-a8bb-3b45a4ab5898",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "176fb819-7bd8-48e0-acc4-09d48754878b"
        },
        "item": {
          "id": "e6920eb8-fed3-4517-a7c1-1e3959cfe102",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "242ac09d-30de-42bd-b007-fb86ff65c149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab7a757-86c5-4026-8969-044dc1482c8a",
        "cursor": {
          "ref": "a52b9c96-857c-4749-b22b-f5fedfe38d96",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "946cb2ad-934c-4331-9c10-a6b4ad864b76"
        },
        "item": {
          "id": "8ab7a757-86c5-4026-8969-044dc1482c8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dc8345bf-5498-4499-a4e4-8ddb129731c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066a6573-3c1c-48f7-b745-0ca87dd44ff5",
        "cursor": {
          "ref": "63a72a05-b11b-4164-b442-70b8fac5d674",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c4988a33-8beb-454d-84cf-c18e264dc9db"
        },
        "item": {
          "id": "066a6573-3c1c-48f7-b745-0ca87dd44ff5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d86a89da-0d5a-486b-8723-536109a1bb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44812e82-1bc0-4209-b7ff-b6943afd9e42",
        "cursor": {
          "ref": "a59e1b2f-6d84-46e7-81e5-2180ac58bd2f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b1a9904e-f15d-464b-8597-61195ef9e245"
        },
        "item": {
          "id": "44812e82-1bc0-4209-b7ff-b6943afd9e42",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a1cf371-6974-4f12-9cd8-f1e90fbefc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae37dff5-7abf-4982-8c82-91298326f47d",
        "cursor": {
          "ref": "0c76a6fe-364f-4dcd-b34b-ff221df695c1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eef7ad65-436b-4123-88b3-77464b5cfe5a"
        },
        "item": {
          "id": "ae37dff5-7abf-4982-8c82-91298326f47d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ddfbf788-0096-4a79-9f3e-1bb62638d1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bbd057-a547-48db-bf6e-eff12cee6af7",
        "cursor": {
          "ref": "ab3a1758-7837-4a2b-84b4-9bd229a49abc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "950102e6-e874-47d8-877a-1431443f379e"
        },
        "item": {
          "id": "e6bbd057-a547-48db-bf6e-eff12cee6af7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f02f10ce-5716-4542-9392-293191a5e79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b74ab6-bc3e-4684-946b-ef3c336ada37",
        "cursor": {
          "ref": "9c56375e-b187-4b5b-b5a0-ca3260143dee",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5f995ea9-7fe7-43f5-8788-8910f87502d6"
        },
        "item": {
          "id": "11b74ab6-bc3e-4684-946b-ef3c336ada37",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1ee29e5f-a5fa-4696-9b82-5a7a5e42110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329e430f-5b81-47f5-8826-81f26ca05d2c",
        "cursor": {
          "ref": "1707e5c7-bd80-4ec4-bc96-363fd9210805",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0fcb1bf4-8e2a-4279-b294-4cc7dcd66bb6"
        },
        "item": {
          "id": "329e430f-5b81-47f5-8826-81f26ca05d2c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c199aa06-1c80-477a-8933-9f6c58b86f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4ecea6-fdca-494e-8d41-5bb0768dc4a0",
        "cursor": {
          "ref": "463638e8-a504-4889-b1d4-effdbb9be202",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "24335669-a3e1-4fca-81f9-43e85cc15fd4"
        },
        "item": {
          "id": "2b4ecea6-fdca-494e-8d41-5bb0768dc4a0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "44cfe6c7-f850-464c-acff-1cec212ed63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c668962b-de81-4624-aa71-3ca376126006",
        "cursor": {
          "ref": "c36eb20f-062a-49ed-a441-1d7a9847272d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d31cbc5c-3da7-4099-b25b-a945f9c984dd"
        },
        "item": {
          "id": "c668962b-de81-4624-aa71-3ca376126006",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e9ecf832-19b5-4e45-9e8f-ec9d8c813951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21f4769-0b3b-4db1-9a1e-7c485881a7f8",
        "cursor": {
          "ref": "a9a9cd49-352a-4236-bdd9-6f1d158c1f4f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a3faf295-3bfc-475f-aa85-76766819bb45"
        },
        "item": {
          "id": "a21f4769-0b3b-4db1-9a1e-7c485881a7f8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b9454c6a-319c-48c8-8fec-611e136fbde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2136ab9e-08b0-486f-91d6-77edf40aaf13",
        "cursor": {
          "ref": "f4f81684-93b3-4efc-a294-86ac9d8165f7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7544ad9c-5278-4cef-af58-ec00e67dd076"
        },
        "item": {
          "id": "2136ab9e-08b0-486f-91d6-77edf40aaf13",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ed45ee65-8b44-42f0-b011-6009be929428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffdc3e6-4480-4776-a2ac-499bcbbab92b",
        "cursor": {
          "ref": "d4f6fc28-24f3-4197-990f-d71f6c02cf1d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "43596382-eec3-4d27-945f-71ef00d8df6f"
        },
        "item": {
          "id": "fffdc3e6-4480-4776-a2ac-499bcbbab92b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bd7ad4df-2645-42b6-85d4-45339ccce962",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38401238-e33d-486b-a341-84b67b5d94b0",
        "cursor": {
          "ref": "97d84e0e-958d-4aff-80dd-1cacd941c707",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7a56e8c2-35f1-4a8f-bc75-35e11da7a87c"
        },
        "item": {
          "id": "38401238-e33d-486b-a341-84b67b5d94b0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eefdff3c-e882-4e18-aeca-8dc77d41361f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe0f9ef-4ab8-4828-a50b-01a103cf3549",
        "cursor": {
          "ref": "1a57ba3e-f30b-4e9e-81ce-741d154a5fe8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f294cc36-661b-4a03-8d5d-746d8866fb8f"
        },
        "item": {
          "id": "ffe0f9ef-4ab8-4828-a50b-01a103cf3549",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c914c4e8-d3ad-4375-9a9c-9bb8a7dd36f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4e7c2-47e8-4e63-a9fe-49a6d4616a98",
        "cursor": {
          "ref": "c83cc901-2315-47e9-9a80-c986aba9d696",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "06c775b5-7925-4fc7-970f-17477a2432f2"
        },
        "item": {
          "id": "0fe4e7c2-47e8-4e63-a9fe-49a6d4616a98",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "632f322b-8fe0-4a63-9071-f23aac299870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7006db8b-fd00-4a42-9807-187fd467710f",
        "cursor": {
          "ref": "b72700a6-30e6-47ea-86de-5245f859e297",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5dda4b71-bd36-4996-95ab-637585ff3dc1"
        },
        "item": {
          "id": "7006db8b-fd00-4a42-9807-187fd467710f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85081ee5-49f6-4091-aae6-5605e0c6a04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc476f63-f43a-41ff-b4f8-a474f2ea789c",
        "cursor": {
          "ref": "693c7ea4-b13d-4929-954f-8097b94c8805",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2ecf9c90-978d-4fdb-b090-11512d60ad75"
        },
        "item": {
          "id": "bc476f63-f43a-41ff-b4f8-a474f2ea789c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3c3582fc-7cf7-4663-905f-9efdf4473888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa5d147-0a55-49ab-9c6a-5fd7c4ea15fe",
        "cursor": {
          "ref": "800b3b6d-f5a5-4851-bb1e-23ee6b602094",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1a5a2005-583a-4d69-b437-e38e2e858f65"
        },
        "item": {
          "id": "1aa5d147-0a55-49ab-9c6a-5fd7c4ea15fe",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d6bee278-3c7f-4880-bdda-3591eff9a428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491ca057-14df-440e-9f38-39f5f8459df4",
        "cursor": {
          "ref": "9843339b-b058-496c-bf87-a3ecd048e33d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "254f65b3-8676-4235-96dd-0502e15ae1e9"
        },
        "item": {
          "id": "491ca057-14df-440e-9f38-39f5f8459df4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "76fc1440-fe9c-4e8d-be37-36bc642d3141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b6a9a5-1f6c-49c8-b923-e130d3eb6547",
        "cursor": {
          "ref": "90396a71-e42f-4db3-ad15-95cf3abb5264",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43b3f6b3-5f1b-4410-b794-459142720572"
        },
        "item": {
          "id": "36b6a9a5-1f6c-49c8-b923-e130d3eb6547",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "110ac86c-bd69-415d-96a6-479c0b2b7461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d607bfda-0eb4-4bf6-96fd-52c863e98e6c",
        "cursor": {
          "ref": "1854c47d-434f-4d65-8122-3ddb0f5e2599",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a4fd4933-20e7-46d2-8ccb-26b5a1d4c4bd"
        },
        "item": {
          "id": "d607bfda-0eb4-4bf6-96fd-52c863e98e6c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "34ca79a7-fdd9-4db0-b16e-996d02bf56d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98888a29-96bd-408c-9559-b6c840c03232",
        "cursor": {
          "ref": "33234cb2-6053-4832-9db3-fc42526ad0f1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e3f542eb-fbaf-4826-8ee7-8bb924c26c4d"
        },
        "item": {
          "id": "98888a29-96bd-408c-9559-b6c840c03232",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "59f1886f-e55d-427f-b1f3-8ed57c7a4691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83878225-b1ab-4364-a985-2c9ddfcc8063",
        "cursor": {
          "ref": "debe525e-d84c-4335-b132-cc49ba17b4de",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4b3c77d9-a2e0-4353-8f46-b17bb68cf90a"
        },
        "item": {
          "id": "83878225-b1ab-4364-a985-2c9ddfcc8063",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6774792a-f3c2-46c2-b367-d33e0ed0150f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2506b094-f86f-4610-90e0-0b15579d74d3",
        "cursor": {
          "ref": "28fa8c61-ddc9-40ee-9f3b-657103693f27",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "525f1167-84ad-4fcb-8e28-65876a8d194c"
        },
        "item": {
          "id": "2506b094-f86f-4610-90e0-0b15579d74d3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "14212cc8-ea4f-44d2-b0bd-80fd66824c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afee09b-3286-4936-8db8-c6e2735a6cbe",
        "cursor": {
          "ref": "588c35ce-62d2-4333-9889-d0858ec8a6b0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "492eab2d-25b8-47d7-a823-0a8a1980491d"
        },
        "item": {
          "id": "1afee09b-3286-4936-8db8-c6e2735a6cbe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f1d6116c-11ed-44ea-97b0-5a5fdeed0bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfda13ee-8634-4b12-9c70-88641be6604e",
        "cursor": {
          "ref": "a15b4e37-0ecf-48f2-b149-3ed3fc0ec056",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f3708a7f-ce76-433b-b8a8-ecc75cc7ab93"
        },
        "item": {
          "id": "bfda13ee-8634-4b12-9c70-88641be6604e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ccf70178-c22a-4a56-acf8-c1d5b9857e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d6c708-7ec4-42ff-a1d9-5d8c1998aad0",
        "cursor": {
          "ref": "6ca0ed89-c1d2-4f79-b5a0-e2220fa467ce",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3ab1378-5f8a-40fa-97a7-3ab89e1de1c7"
        },
        "item": {
          "id": "15d6c708-7ec4-42ff-a1d9-5d8c1998aad0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6f7a1e5d-bf9d-406b-b6e6-80ec1074288a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99682928-ec38-4dbd-8133-6e7593d07065",
        "cursor": {
          "ref": "c88a95dd-5fc2-4bc2-aad7-70faeb9843da",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bf3bddc2-cb49-419e-b0e3-bc8b4a091da4"
        },
        "item": {
          "id": "99682928-ec38-4dbd-8133-6e7593d07065",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d13b8919-bacb-4418-90e5-f8301ebc02c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c26e6c-d582-4699-8291-62d7839415ba",
        "cursor": {
          "ref": "71b999f4-8adf-4fba-999e-f98faa292b34",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e2a29025-6386-475e-b81f-94327d57085a"
        },
        "item": {
          "id": "b4c26e6c-d582-4699-8291-62d7839415ba",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d1d960a5-5f6a-4107-9fe4-aa8085a3fcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c4d690-64e8-498d-aa23-27d1427dc0ab",
        "cursor": {
          "ref": "6979fef4-61ed-458a-b7f3-6205aede8911",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "576aef43-f218-4d89-abb3-27a06a3e03c8"
        },
        "item": {
          "id": "e8c4d690-64e8-498d-aa23-27d1427dc0ab",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a0f98dba-ef83-4d04-9adf-72478eb8a892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99404e2-a676-4d61-98b1-1e3b6006cc00",
        "cursor": {
          "ref": "dd313720-23e2-4472-b4c0-fe24e92b55cf",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8fd8af7e-12ec-4678-880c-4393ec97ba36"
        },
        "item": {
          "id": "b99404e2-a676-4d61-98b1-1e3b6006cc00",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2d2ce1e4-14b2-48d7-9f39-68e9377b1d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5604e9f2-ad7f-4847-8347-d182ed2914e3",
        "cursor": {
          "ref": "d69bb1d8-65e9-411b-848f-2a41c921cbf5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bd16a436-21f5-41b3-ac6e-06d285a54dfe"
        },
        "item": {
          "id": "5604e9f2-ad7f-4847-8347-d182ed2914e3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a6d7d06b-7a79-4c57-b8a4-c3c4cc54b74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95567bd6-84cf-41c2-8c84-6aada3d511d2",
        "cursor": {
          "ref": "565ff99d-9b6d-4411-a93a-023d2bd8c7b4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ca416a09-3675-4737-851d-99e6c08e18bd"
        },
        "item": {
          "id": "95567bd6-84cf-41c2-8c84-6aada3d511d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c214013-857d-4ac0-8824-b4e1b82ae687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0783e35f-63f5-42c0-844d-62e70513738c",
        "cursor": {
          "ref": "9cb3d6c9-9e88-4ae5-b28d-c8a95147c0d3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3bb04913-527c-42d0-a139-a70acb37ff29"
        },
        "item": {
          "id": "0783e35f-63f5-42c0-844d-62e70513738c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5df2eafd-86df-45c4-a2ef-050f7e275339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b7b147-baf0-45a7-b3e0-68d35911ce00",
        "cursor": {
          "ref": "a167b0fd-e45d-4097-a557-dbb1420d51ef",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "10ee92f8-c824-4d74-8b22-808c9eca6491"
        },
        "item": {
          "id": "f4b7b147-baf0-45a7-b3e0-68d35911ce00",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9ba3e0e6-13ce-48b8-a975-0c67517c3e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61210392-afae-43a2-825a-62e29b50d211",
        "cursor": {
          "ref": "7645fc49-dbed-48cd-b977-c8c146103ee5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7ab54b1f-f36f-4232-8486-191baba626c9"
        },
        "item": {
          "id": "61210392-afae-43a2-825a-62e29b50d211",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2642ae1c-c5f3-45d0-97c4-d696d7599ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428cbf73-9ac0-4172-a7df-b3f663b9338d",
        "cursor": {
          "ref": "1b095dfa-e0da-41b2-a230-95c843afedb2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a86003c-b537-4b1c-afaf-02c98bf7b204"
        },
        "item": {
          "id": "428cbf73-9ac0-4172-a7df-b3f663b9338d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8ec9f77e-274e-4a98-ba7f-8eba6e825ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f839f0-6c22-4b38-a773-a9f42b4247a9",
        "cursor": {
          "ref": "1f5b1290-1141-437d-bb9b-6bb4ad448105",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6e95b03d-cac4-43aa-9eac-cb1bada452f0"
        },
        "item": {
          "id": "f0f839f0-6c22-4b38-a773-a9f42b4247a9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6a75d2d9-0302-492f-ac1c-3a168632385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b560557-1313-4f39-8de9-552ef27c883e",
        "cursor": {
          "ref": "3a1340af-118e-4023-9860-0505a1df8531",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a2e04f1-9d45-4c63-aee2-13debf070280"
        },
        "item": {
          "id": "8b560557-1313-4f39-8de9-552ef27c883e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7df7d7fe-4516-4f7e-829b-a46f7862f4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55079983-08c6-4c66-b7e5-b66bb183032b",
        "cursor": {
          "ref": "bf17c737-0547-4ba0-b6ab-1921b93c54fa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "70acabec-27f5-468d-a1e6-5235de7e48bf"
        },
        "item": {
          "id": "55079983-08c6-4c66-b7e5-b66bb183032b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9d72956c-1eb5-4de7-86b3-8de37e65e706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b9bf3-b612-495e-9aba-5d724d6f2a8a",
        "cursor": {
          "ref": "c21d02aa-9136-4905-a6c7-a8c010dbf7c4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d176d6d2-df4a-4750-8a78-071b4f0ebc2b"
        },
        "item": {
          "id": "ed1b9bf3-b612-495e-9aba-5d724d6f2a8a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ccc4c0c8-73e2-40eb-9061-79548c341c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02fa7f9-ff45-4cb5-a164-7277642999d5",
        "cursor": {
          "ref": "80fb2909-b6a0-4817-aa35-e5ef13127c1d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "968efa3c-e555-4215-846a-36452201017a"
        },
        "item": {
          "id": "f02fa7f9-ff45-4cb5-a164-7277642999d5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3832423e-46ea-4a0a-9334-74ef84cf96f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aac9c8-f73e-4d73-be7c-cbeee807a742",
        "cursor": {
          "ref": "65c9e7d9-25fe-4c32-a36b-90a52dd7eb8e",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f9e0beff-fe88-48cd-ad8e-3fef8c7c4b93"
        },
        "item": {
          "id": "28aac9c8-f73e-4d73-be7c-cbeee807a742",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "77bf76a7-499d-4c9b-a402-0782d88f76a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4c78da-086c-4704-a340-9427fc1fd0cd",
        "cursor": {
          "ref": "cf8b891f-484e-4286-9702-ec9620543a56",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6dc12121-e69b-4fbd-ac59-0e4fb7c343a5"
        },
        "item": {
          "id": "fe4c78da-086c-4704-a340-9427fc1fd0cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f60690a6-b1e9-47d1-aa12-4da815734cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3301325c-e176-4cb8-b540-edc6097def68",
        "cursor": {
          "ref": "3b71df64-ea9c-40d6-9e9c-faded79e2523",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dd753b0c-db3a-4444-967b-8f652e1d3124"
        },
        "item": {
          "id": "3301325c-e176-4cb8-b540-edc6097def68",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "005df4ee-351d-4c8f-b28d-7f5eff712ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3ed5b9-b2ba-4933-acbe-5b21dc4bc9d7",
        "cursor": {
          "ref": "2aa30afd-3a66-4ec1-a1c2-6d22c773229e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7a69f17d-eaaa-4845-b9b6-a2dd7bb99fc9"
        },
        "item": {
          "id": "6e3ed5b9-b2ba-4933-acbe-5b21dc4bc9d7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "06ea7e81-adc4-4dca-9b18-6d6a4a268746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc55e67b-f0d7-4a19-a095-a78b41927cb3",
        "cursor": {
          "ref": "c4313de7-100c-49f7-a2cf-a722d6e28733",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0bc87741-6e0e-487d-8342-554b637f6104"
        },
        "item": {
          "id": "bc55e67b-f0d7-4a19-a095-a78b41927cb3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d8481614-8634-4719-9513-47f17afdff82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5721d69-f3a4-4cfd-8ba3-eba7459bec45",
        "cursor": {
          "ref": "95a80e11-3b6e-4c26-8ba9-309a4cc52d9d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7d31e102-3927-4b22-b71d-7847778e4160"
        },
        "item": {
          "id": "a5721d69-f3a4-4cfd-8ba3-eba7459bec45",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c3e6b9cf-1cdb-49e3-92b7-336ea465f8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bd6335-244e-4d6f-9455-7bc9727b220d",
        "cursor": {
          "ref": "4509f034-706d-4b62-86f4-b665dcf0ad68",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bf7ec31f-3bad-4547-bc37-6de26ffa733a"
        },
        "item": {
          "id": "82bd6335-244e-4d6f-9455-7bc9727b220d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1e0ebbe2-d51d-4e4f-813b-5bb51f8b14e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35be734e-d217-488d-a21d-d9ec82cdc7a3",
        "cursor": {
          "ref": "bf00c751-59cb-4e8d-aa37-70c18c694483",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "474bf38a-2982-48ef-9dbe-a8701eda63a8"
        },
        "item": {
          "id": "35be734e-d217-488d-a21d-d9ec82cdc7a3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "687fe85e-ea07-4f57-a46a-8fbe419a8cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2336ec53-236d-4571-86bb-6b71c18df613",
        "cursor": {
          "ref": "509055d2-84b4-429f-bd18-a6ab1251c35f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a6e96032-399a-479c-bdb4-002941e9a3d6"
        },
        "item": {
          "id": "2336ec53-236d-4571-86bb-6b71c18df613",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b3627512-2fe6-407f-80b6-7d8c5a9a35d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa020655-7cbb-407c-87bf-61a4ab8fe5ab",
        "cursor": {
          "ref": "6eccd279-045d-4a92-8b36-b2ed5a29c296",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "764dca3c-a189-4cef-9387-c0653bdf1693"
        },
        "item": {
          "id": "fa020655-7cbb-407c-87bf-61a4ab8fe5ab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c44e3709-c5c2-444b-8fa6-fbf9824e1920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0201a2c-ee66-4921-9f96-c8224e86ddb7",
        "cursor": {
          "ref": "afd66e59-41e7-456f-81b5-1c4e24bdad6a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c68313c5-13b1-45ed-889f-2fbe8b24661c"
        },
        "item": {
          "id": "b0201a2c-ee66-4921-9f96-c8224e86ddb7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b6960421-c1a3-4c5c-bb77-259784600560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a51c2a-70bf-4377-93a7-c498a9786ded",
        "cursor": {
          "ref": "8e69037c-6995-4d32-9dab-bdad99763e9a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "99f71cef-a53c-45e2-9aba-38b3101d5ee2"
        },
        "item": {
          "id": "30a51c2a-70bf-4377-93a7-c498a9786ded",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ca3c297-e514-42d7-bb96-67ae50c94280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a7840f-1c36-40cc-a08b-b9bc557fffb1",
        "cursor": {
          "ref": "faa6fd4f-8084-4e4b-8037-f635d113a092",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6cfd49f3-9cb3-44d5-8d22-b0e6e034fc33"
        },
        "item": {
          "id": "38a7840f-1c36-40cc-a08b-b9bc557fffb1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "96fbf86b-f260-4f6b-9725-f6db1e350be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326a0e8f-27ff-4b71-91df-60184d61217f",
        "cursor": {
          "ref": "d72a7c22-a63a-4a3c-a12e-56e0bc580622",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "647526c0-d0c8-4b6c-a15e-e4629cc72440"
        },
        "item": {
          "id": "326a0e8f-27ff-4b71-91df-60184d61217f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "81338f2c-0b58-49bc-b22a-5e5d030d5c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ce0484-551d-4ee1-b5c5-eeab961d85e7",
        "cursor": {
          "ref": "2f78ae68-3cfa-4b46-b872-0efcba8ebfaa",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "50b77221-ba0b-4578-9a20-335df128f0e8"
        },
        "item": {
          "id": "55ce0484-551d-4ee1-b5c5-eeab961d85e7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "147c0484-6faa-4cce-ae7b-2aed9d8581ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9197b0e4-fb4c-4326-a119-9547e181dc8d",
        "cursor": {
          "ref": "f37fee8f-8b51-432f-ae9c-cac00de1cfbf",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "36b3e179-4f4e-4cca-a543-7b1da0e75486"
        },
        "item": {
          "id": "9197b0e4-fb4c-4326-a119-9547e181dc8d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b4562cb7-d555-4439-9eae-08a30e80009d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bf500e-b71d-45a7-8922-a711f1da2eda",
        "cursor": {
          "ref": "d95edd97-2202-41d7-9466-42e7a87b8906",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0e28ddbd-250b-41e8-b171-2b35a6194fef"
        },
        "item": {
          "id": "a0bf500e-b71d-45a7-8922-a711f1da2eda",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "30b30496-c7ac-4f0b-ba72-9c44e3209f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2c31f4-0f3d-4f1a-8c0c-1d31fa9d69b5",
        "cursor": {
          "ref": "ebc52571-d1fe-49ef-b82d-4bd3d9c42db8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c4f57f16-2ae9-47d4-af06-2e00173abd7a"
        },
        "item": {
          "id": "1d2c31f4-0f3d-4f1a-8c0c-1d31fa9d69b5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "148239d6-e3b1-443b-ac24-7fc1f64e7630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f208334-4f03-4c11-8119-89999b7863a9",
        "cursor": {
          "ref": "8f2a8546-23b6-4c9a-bcf5-8ff0b112284d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e17cbf11-2b1f-481c-8fc2-c094e06fe358"
        },
        "item": {
          "id": "0f208334-4f03-4c11-8119-89999b7863a9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3a277837-d780-401d-9202-06775e489342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c98737-dffc-47fc-8a29-efd46b97db77",
        "cursor": {
          "ref": "16ddc11b-6d2c-4b41-8b73-a5c327391cf0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b1eee5e-650e-4e9e-aba1-2f851a036fba"
        },
        "item": {
          "id": "84c98737-dffc-47fc-8a29-efd46b97db77",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6e8289b9-09d5-4d9c-a312-f5f9e82d7771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9199794-08b1-4a81-b092-6b90a8aadb82",
        "cursor": {
          "ref": "51b74132-49f9-48e0-86fd-2f69b901adb6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a5c824fd-af4d-4bd8-bc76-2576a49bf52d"
        },
        "item": {
          "id": "d9199794-08b1-4a81-b092-6b90a8aadb82",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "370f5a93-d7d3-439c-b523-ad55d2754a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccb09f7-f693-4e5f-bbb1-bf62f819b89b",
        "cursor": {
          "ref": "67bddbec-5531-46d7-a55f-830b0a4b5389",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ce3a8a5f-558b-4f88-a1c2-625548d02ac8"
        },
        "item": {
          "id": "3ccb09f7-f693-4e5f-bbb1-bf62f819b89b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0b604041-f20d-472a-a67b-99e9e68b662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d9adb7-01a8-431a-bf41-b32f1e2e4332",
        "cursor": {
          "ref": "03a9263a-2dc1-4393-8bee-d310ff2c25c9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d5ec812b-4c03-4dd7-a213-b30b54a3b67e"
        },
        "item": {
          "id": "f2d9adb7-01a8-431a-bf41-b32f1e2e4332",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc3e6e8c-39fa-48f6-a7b5-a7ec33cf416d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70bda86-2266-4a84-90e4-2cdc6bcea50f",
        "cursor": {
          "ref": "6bfad25a-12c9-4de1-9282-5df2369e9f96",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4e0d392f-9c3e-482f-9187-99643ba5b638"
        },
        "item": {
          "id": "a70bda86-2266-4a84-90e4-2cdc6bcea50f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b65f8251-bdf0-4620-95fa-627a1ceac456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b8b3e3-414d-44ee-a1f3-a5378c485667",
        "cursor": {
          "ref": "26d2fcd9-7b2b-4825-a4c5-44d94b77d353",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "784f0de1-dd89-42ae-b3c9-f2dfe5bcaedc"
        },
        "item": {
          "id": "79b8b3e3-414d-44ee-a1f3-a5378c485667",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "05df4256-b113-48b0-b548-07b97cffc414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309c6b51-b62d-46a9-80d3-126c5700ad61",
        "cursor": {
          "ref": "e6c9ebdf-1861-4673-b9d8-f1399f415aee",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bbeb0cd1-d3c5-4c9e-a514-ffbb94139e0e"
        },
        "item": {
          "id": "309c6b51-b62d-46a9-80d3-126c5700ad61",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e55d928c-1063-4b54-a51e-27e6b5d46c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e227199a-7a86-4699-8cff-8a0e33d1ef79",
        "cursor": {
          "ref": "d05ffb60-dbd9-4033-a258-2e1f688203c7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5f90d414-74ed-41b4-a6a2-cecb066a63c5"
        },
        "item": {
          "id": "e227199a-7a86-4699-8cff-8a0e33d1ef79",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "09622b53-2ae4-4d2f-8b9a-3243cc2f03b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf1616a-247e-4bb8-a768-5fd15aabe811",
        "cursor": {
          "ref": "930d855b-895a-4fc4-992e-43ceb1d2bd49",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7dbc4b7d-4fca-4514-872b-e51d19c23609"
        },
        "item": {
          "id": "4cf1616a-247e-4bb8-a768-5fd15aabe811",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1413b55d-ae1b-45d5-98f7-84df1ed891d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b749f8-1e12-445c-950b-91b634bbd72b",
        "cursor": {
          "ref": "59f989bc-7928-4a7b-b70d-ca11b3e46083",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c0518ce5-761f-4f65-b463-e009d7ca0807"
        },
        "item": {
          "id": "a7b749f8-1e12-445c-950b-91b634bbd72b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ebf36105-4418-4c7d-96ad-9b53701cc820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e058fb-5210-4b9d-9476-6c2de0d4a324",
        "cursor": {
          "ref": "d5e34520-5e90-4db3-84f1-656f466c4f8d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58eef5b1-1787-4fce-addb-6a68a815b76c"
        },
        "item": {
          "id": "b3e058fb-5210-4b9d-9476-6c2de0d4a324",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "30995b3b-b8a9-4f10-ad2e-32dedab576d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b1ca64-fe15-4b5c-958d-fe9406ebdf80",
        "cursor": {
          "ref": "b3eb44d4-e214-4d81-b0a4-dffb94f774b3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bb70a3df-2f80-4386-9fe7-79f151c9e912"
        },
        "item": {
          "id": "96b1ca64-fe15-4b5c-958d-fe9406ebdf80",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f33f931e-434a-4d4c-b814-cf0f520898ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda32b45-4899-48ae-9609-153c27e67d2a",
        "cursor": {
          "ref": "60af6e04-6fb9-46c4-b1bf-d09544960119",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d05f9cf3-26f6-42bf-b289-25a90cfeed35"
        },
        "item": {
          "id": "eda32b45-4899-48ae-9609-153c27e67d2a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b4237b9b-5175-46dd-8db9-0da9e8337e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6bd740-55d5-41d3-be45-c66173b05900",
        "cursor": {
          "ref": "42eed0d8-cbc6-4f0b-b726-9cfa90fc2896",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8c7e518f-8c7f-49eb-b336-5af713b38eb0"
        },
        "item": {
          "id": "9e6bd740-55d5-41d3-be45-c66173b05900",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2338eea7-0207-4059-a186-cc7398348a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcf8c71-1f50-424a-a643-a586e3c8a4d5",
        "cursor": {
          "ref": "96301ffe-d60a-42af-9df1-5ac5aa31e2a6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b895209d-eb3c-4fd4-a381-4c355e19fed2"
        },
        "item": {
          "id": "6fcf8c71-1f50-424a-a643-a586e3c8a4d5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "16b7365d-fb07-42e7-98b2-7fc64545d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3bfc30-a25b-4cfa-b873-98db59aa1c78",
        "cursor": {
          "ref": "5454ce0d-7878-421a-85ad-e66cbce21151",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "85c3d96b-530c-4d51-b008-2c4b36869f55"
        },
        "item": {
          "id": "aa3bfc30-a25b-4cfa-b873-98db59aa1c78",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "149c4808-4c66-4757-b20e-21cd34af22f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c82ad-60ad-4d17-aa4c-23827d8c2673",
        "cursor": {
          "ref": "1354559c-0487-4d98-a989-08e366eba45a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dac04133-e132-49fa-9670-6fe3b89096be"
        },
        "item": {
          "id": "240c82ad-60ad-4d17-aa4c-23827d8c2673",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bae906be-2275-4f1b-8718-acce06fac88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15376d28-7d61-49b0-b153-b3e95ddb3f07",
        "cursor": {
          "ref": "4a20dcf4-67bc-4102-b31f-8faf49d77e38",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0b07035a-96b2-45d4-b68e-38c48ecec0b4"
        },
        "item": {
          "id": "15376d28-7d61-49b0-b153-b3e95ddb3f07",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0b16c78e-f00b-4af5-a21f-3d0678b01cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ba0a28-e330-4cfd-8feb-31d5af581cf4",
        "cursor": {
          "ref": "a2a9b3e5-621f-45af-b874-7f31fe10a927",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d3e7d915-226e-4e33-8c08-5286abf9b497"
        },
        "item": {
          "id": "d9ba0a28-e330-4cfd-8feb-31d5af581cf4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "31c6b84b-79dc-4604-b64d-e7ad084e35c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ebbad0-3e6c-4959-a3f5-fd8c42985102",
        "cursor": {
          "ref": "4286bb7d-d747-4ecf-a574-87926bb064b9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "77a53bb7-7b5a-415a-9ec9-9877756dd8d5"
        },
        "item": {
          "id": "74ebbad0-3e6c-4959-a3f5-fd8c42985102",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7693b485-0fdf-4977-bb93-6d31f7931a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a76428-a50c-4687-8297-e9fdd9bb1743",
        "cursor": {
          "ref": "381fe8d9-a81c-4c8a-9427-63dd106629af",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f5fd9843-a1aa-4bea-8f5c-46fa7f151099"
        },
        "item": {
          "id": "13a76428-a50c-4687-8297-e9fdd9bb1743",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "44591343-42e4-490e-8525-691f172cb41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3674af0c-2136-417d-9e84-f75fc01ac8f0",
        "cursor": {
          "ref": "8f72ad8b-d807-4f3d-9ac9-b1a16552b0df",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6196678a-44c0-45bd-b7c8-6a3c52eb2b88"
        },
        "item": {
          "id": "3674af0c-2136-417d-9e84-f75fc01ac8f0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1778f8d6-c670-4652-b8b0-01152eda56ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b33268-0503-4d55-b658-68cb39d3b4d2",
        "cursor": {
          "ref": "b71f736c-fd37-4d2b-a5bb-d6bdf6796062",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "483b2a42-ac08-4252-bae9-69f2498ec18a"
        },
        "item": {
          "id": "33b33268-0503-4d55-b658-68cb39d3b4d2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "18192dfe-0035-4201-8288-f22c5711af53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb786e6-1a5b-40e6-8324-a9f3b1dc819a",
        "cursor": {
          "ref": "7dedd050-d769-40c3-9cfe-522de2b9e8a7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4754e64c-d6fc-4edb-990a-4a610da30cef"
        },
        "item": {
          "id": "4cb786e6-1a5b-40e6-8324-a9f3b1dc819a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ee406ae1-f326-4ed3-9569-98cf44666b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880cb1f4-2fa5-4055-867d-9f6772288232",
        "cursor": {
          "ref": "3afdb4e3-6d38-46ef-9007-1a9f4025daa5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b78660fc-bf23-4b9f-b7cd-77f9592e4ba4"
        },
        "item": {
          "id": "880cb1f4-2fa5-4055-867d-9f6772288232",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f1f17a08-bed5-4d44-b9e0-77821de5a602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1e9b86-0a41-4d6b-aa74-8271ff743c24",
        "cursor": {
          "ref": "60a7f1db-dafd-40cf-b206-5e5a201a1fe7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2d69830b-e788-4357-bec3-7e39c2233606"
        },
        "item": {
          "id": "7e1e9b86-0a41-4d6b-aa74-8271ff743c24",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ca8279e4-6cde-472d-95c2-c5d19cd5f7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f345c44-3e05-4538-8274-e7471776e4b0",
        "cursor": {
          "ref": "d0ca126a-d85c-4642-ad0b-9827f3787ccc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6aecdf13-e1ae-4195-bf1b-4929613c6eb7"
        },
        "item": {
          "id": "7f345c44-3e05-4538-8274-e7471776e4b0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2616b103-faa5-4ab0-a105-2cb6eb994470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454978ee-8e9e-4a38-9939-ad0f88ab5ea7",
        "cursor": {
          "ref": "bc9360b4-3161-405f-9c8f-6fc7c141ba56",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2960e79d-6e6d-4c69-8aa2-9ec5d9ba11f6"
        },
        "item": {
          "id": "454978ee-8e9e-4a38-9939-ad0f88ab5ea7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7c491a04-c348-4878-aa99-31e269fca3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00849ee0-89d0-4123-91dc-e6818084d481",
        "cursor": {
          "ref": "96a0d793-964f-4488-a49a-540d343af0b5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9a43836e-8048-463f-ac57-00c74a8fff26"
        },
        "item": {
          "id": "00849ee0-89d0-4123-91dc-e6818084d481",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2491dbec-6c7d-4ed8-a01f-de5475d8c9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7784b2-c7da-4017-8be0-e96e5d967b28",
        "cursor": {
          "ref": "9dda6952-cbaa-44cc-a6d6-0aafb7eb0405",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e37cb1ab-b76e-4825-b590-e970d279adce"
        },
        "item": {
          "id": "6a7784b2-c7da-4017-8be0-e96e5d967b28",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d05becc8-f4cf-48a0-adc3-748d78d727e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f0ccf8-6d33-4962-8051-3060647a7ed5",
        "cursor": {
          "ref": "f20d756c-96b2-47cf-b58d-24c47526eae9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "135cde45-ac38-4ad8-807c-f8a8b4dbe55a"
        },
        "item": {
          "id": "94f0ccf8-6d33-4962-8051-3060647a7ed5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5df06af7-ef8f-4844-b47d-a43c61b0a871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18ab7a3-df8e-4936-9e51-b24545498fdf",
        "cursor": {
          "ref": "73762088-5bef-4996-887e-58e914daaec6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8a08dbd0-c248-4479-b893-13637a6d5b95"
        },
        "item": {
          "id": "c18ab7a3-df8e-4936-9e51-b24545498fdf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cd27b9b7-00bf-416e-864a-3c3599e4782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6baf94-19d9-4ade-a37d-83fe2c72f228",
        "cursor": {
          "ref": "70a64122-ca3c-4757-adc0-a4adc8888e37",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9bdcfbab-d509-435e-947a-0c6c30cdba68"
        },
        "item": {
          "id": "8c6baf94-19d9-4ade-a37d-83fe2c72f228",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8b4f3cf2-0b57-4305-81f3-a8e0366dd1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3becc4-7768-4ea2-8655-337fc4413626",
        "cursor": {
          "ref": "d5ff76ee-4d58-43df-b039-99642eb47328",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ddc159ff-041c-4aba-b628-380c876b0a8d"
        },
        "item": {
          "id": "dd3becc4-7768-4ea2-8655-337fc4413626",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b1d38f76-eef4-4ab4-b412-3ab7fda9db0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92adf90-6199-4ccc-bed5-e4d8db3f2574",
        "cursor": {
          "ref": "18ac11a9-d7f0-4a89-9d64-ac70ad65e769",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b003cbd3-e4da-4e98-ba25-77fd0402e55c"
        },
        "item": {
          "id": "b92adf90-6199-4ccc-bed5-e4d8db3f2574",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6e502962-1c4e-425a-97da-6f01a9043db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730ad22f-2691-4f8f-bc4a-0e0b64a2f4ba",
        "cursor": {
          "ref": "878f9512-f29a-420e-9e25-f4b3cbdb1b25",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7a4e7829-a180-40f0-a22d-9a86321d07f1"
        },
        "item": {
          "id": "730ad22f-2691-4f8f-bc4a-0e0b64a2f4ba",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "daff07a1-01bd-4f68-a3bc-16074462e0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46484286-4763-4988-bee8-cdf1dceb8fe4",
        "cursor": {
          "ref": "81cd3f5b-8157-4722-9a81-ab0d1adbec62",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4c840cbe-c083-4c9b-b197-1456841b3071"
        },
        "item": {
          "id": "46484286-4763-4988-bee8-cdf1dceb8fe4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "12f93d55-68d2-486d-a0a4-5e1106e874ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567cb8bc-9643-4388-b75d-9857cbcce896",
        "cursor": {
          "ref": "543f7800-ee8c-4dd1-9af4-4a79b27fd32e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "204f63e7-6668-4e1b-9ecb-13e788ae84d0"
        },
        "item": {
          "id": "567cb8bc-9643-4388-b75d-9857cbcce896",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "37140731-910f-46a4-bc6a-7e905b4e80eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791f73a9-93e5-4ae5-a5be-79a69fffa2c2",
        "cursor": {
          "ref": "0c6b71d0-741d-4976-8d69-98885fee85c9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bc79366d-2f3b-4921-ad67-e07c67d80aab"
        },
        "item": {
          "id": "791f73a9-93e5-4ae5-a5be-79a69fffa2c2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c37f4e8f-a903-4f66-9a2e-c823ff56608d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e545064b-f171-42e7-8a64-2176c06957c3",
        "cursor": {
          "ref": "5b061f1c-83db-412c-9cbc-1464540f34fd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "82f0e3ba-6620-476b-8ee0-cf3a6b19e279"
        },
        "item": {
          "id": "e545064b-f171-42e7-8a64-2176c06957c3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0c8f43d9-1abe-4aa7-8789-08fc1867ca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9806ff1e-dfb7-4e37-b2da-49f325408449",
        "cursor": {
          "ref": "b3b89851-9654-471f-93d6-378384a087ec",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "15eb4ffe-13fb-4a4b-853c-74e2322e7bdc"
        },
        "item": {
          "id": "9806ff1e-dfb7-4e37-b2da-49f325408449",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a73c2ed-3cf1-4d30-b5ef-3962c9efbe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba99ee6-b46c-466c-9cee-ec85f3ac17f2",
        "cursor": {
          "ref": "21b313dd-4726-4a5a-835f-4acb2869385c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9b458981-2142-46df-82b7-f90222d66e7d"
        },
        "item": {
          "id": "7ba99ee6-b46c-466c-9cee-ec85f3ac17f2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80389593-1a12-4584-9249-1e0b5a3cab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd7055-b681-4864-86a4-b5090f95be82",
        "cursor": {
          "ref": "e2ef94c6-7276-427e-ba50-e19dede11fc2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d5d1d075-d070-454f-a905-b37da3f53926"
        },
        "item": {
          "id": "02bd7055-b681-4864-86a4-b5090f95be82",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0409f8c4-f156-4b88-a76d-b0e827b74242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573ba4f3-ff57-49eb-812e-274fd94efbe0",
        "cursor": {
          "ref": "c8bdb7d5-2a97-404a-bf25-322ec852a73d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0dd4aa9d-c4e8-4556-aa85-05acfb652ee4"
        },
        "item": {
          "id": "573ba4f3-ff57-49eb-812e-274fd94efbe0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e90f99ab-cd4f-4820-84f2-802e348249fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c52b91e-ce29-4e4f-8e71-3d82863a3727",
        "cursor": {
          "ref": "22f94c77-2c43-4fa2-9967-6ffc0fbb1f30",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e4b5c426-41f8-42f2-8437-ec0e0e1ad8da"
        },
        "item": {
          "id": "4c52b91e-ce29-4e4f-8e71-3d82863a3727",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "40531bfc-5474-4f43-80e3-086379fd1ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb71526e-207c-4f6a-a4ed-282efabc69d3",
        "cursor": {
          "ref": "13e3fce3-14fb-45cd-9a0a-3f37d7bd3b52",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7a4398e8-0d36-4754-9a88-3889cebf14b9"
        },
        "item": {
          "id": "eb71526e-207c-4f6a-a4ed-282efabc69d3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "13d04476-39a3-4d20-9a15-52a26bc90000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516a70b1-3c9d-4bd2-82ad-d4a28ae9d70f",
        "cursor": {
          "ref": "e33b6737-6d52-4832-befd-e9da51b7c9e6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15f3b8b8-774b-4f74-a644-668f420c68c5"
        },
        "item": {
          "id": "516a70b1-3c9d-4bd2-82ad-d4a28ae9d70f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "688229c8-7af5-4fee-a77b-a8b1b9141d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7059af86-6438-40ca-b2bf-086e3dd0afb6",
        "cursor": {
          "ref": "f5f26466-191a-4e1e-8af2-6d196473ef1c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7a8a40d3-2893-416a-af9e-5b21105f30b0"
        },
        "item": {
          "id": "7059af86-6438-40ca-b2bf-086e3dd0afb6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ac6138f3-8beb-4c14-a9f9-9929a6bfde33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a634e372-f0c5-46d1-90a1-c843b2ba276e",
        "cursor": {
          "ref": "b2ae2ac5-5000-4b04-95e7-c8f1d4e15922",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7a7d687d-1407-41e7-8a2b-838a82bcf179"
        },
        "item": {
          "id": "a634e372-f0c5-46d1-90a1-c843b2ba276e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "16b2ed7d-5812-4f2b-bf7f-ea4b30349001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcf0ff9-d081-4b84-a523-6fe55d48d8b4",
        "cursor": {
          "ref": "c17301a2-af8c-455d-89c6-50692f182337",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5c8818f0-115e-42f2-b448-b5141f5b91bf"
        },
        "item": {
          "id": "abcf0ff9-d081-4b84-a523-6fe55d48d8b4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c7b6e963-38c5-4e20-b461-c75bbee7e547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "3b495f79-292a-4c3a-abc4-c2fbcc0a5dcc",
        "cursor": {
          "ref": "aec37309-9236-4195-aed3-31743f2f8db2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "827d0f0f-06ad-42b6-88b8-b5c282bea54a"
        },
        "item": {
          "id": "3b495f79-292a-4c3a-abc4-c2fbcc0a5dcc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fb19687d-1472-4536-8b24-808744d38d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "3de0d4aa-11e3-449b-839b-0a911cfa99d2",
        "cursor": {
          "ref": "a20d4bc4-48a3-4ecf-83ef-f9569ea5c29d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "026e7090-1ba8-4d42-a6fc-06eb0dfafed8"
        },
        "item": {
          "id": "3de0d4aa-11e3-449b-839b-0a911cfa99d2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cb3eeb14-4a4c-4391-8614-cd5db04f70e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "2a3e31af-d524-418e-8843-7dc26391a7a4",
        "cursor": {
          "ref": "823b8add-b300-4fee-9f5e-b05f432792d7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dcd7d35d-aa5c-41c8-a3fb-6b1030127d68"
        },
        "item": {
          "id": "2a3e31af-d524-418e-8843-7dc26391a7a4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f11cdd56-7914-4d64-9edd-23f3b167760d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3e31af-d524-418e-8843-7dc26391a7a4",
        "cursor": {
          "ref": "823b8add-b300-4fee-9f5e-b05f432792d7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dcd7d35d-aa5c-41c8-a3fb-6b1030127d68"
        },
        "item": {
          "id": "2a3e31af-d524-418e-8843-7dc26391a7a4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f11cdd56-7914-4d64-9edd-23f3b167760d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4242f1ec-975f-4789-8644-92e4ed4156c7",
        "cursor": {
          "ref": "cc4a6d4e-b634-4d19-a2c5-8eb83e809617",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "47ba5d5f-ee7e-4cb8-ab75-087e0a7b2e76"
        },
        "item": {
          "id": "4242f1ec-975f-4789-8644-92e4ed4156c7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "98d87236-f667-4c04-92eb-928604282721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4452928c-e0c9-4411-830b-10805b8becfe",
        "cursor": {
          "ref": "880f668f-cb74-43fe-b5f8-c2e059be2ca3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "46c1a5b6-dce7-4473-bade-b8244747b075"
        },
        "item": {
          "id": "4452928c-e0c9-4411-830b-10805b8becfe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fd17f18a-936f-410b-be1e-d79309de5f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}