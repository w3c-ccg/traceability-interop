{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6008c94b-7b5d-47f9-b19c-5b056d44f9ad",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8604785f-da20-4925-9d9f-1f361337b21d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c7f6177-059b-4b23-bea8-184577050897",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "88ef0ea3-aaa8-4592-8cc7-e1691d83b6a6"
                }
              }
            ]
          },
          {
            "id": "fd3f8a90-62bb-437a-b131-2c8f5abc6dd1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21bc2545-d0f8-4724-9263-0350d5993544",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ac502e4-404b-4630-b7a1-83e4e7b7aaec"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bd480d41-0393-412e-a58d-66f650e40c9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2aa4a3cc-7619-45bd-b3d0-041dcaabcee1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08d17712-4a5d-4de7-8eb8-2d814aaf7c1b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b06d651d-c9b7-4b05-b353-aebc1f8b16ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaf259d1-6ac3-4925-9102-bfdd443cd64e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8473c863-cb30-4572-b661-74d5b7b5b3fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64ccf84d-eef4-4b2c-9930-e0c9b76b5005"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f68c7b12-4ad4-4718-9126-ef538f157b01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1c48f87-4aea-41d8-89ec-04819ba80b40"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb72c502-bb24-4ffc-820d-56ecb161d878",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "771633c5-cdfd-4550-9243-a5624d58ab6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d32288ce-9017-46e2-9cc2-6ba38b5ac697",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd4740bc-c25e-4b77-a8d0-1683e7891f92"
            }
          }
        ]
      },
      {
        "id": "e7e83432-0150-4cc0-9f6d-47256c83956c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b11b60fa-a54d-4944-a1cb-f52a3fd15a68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50bc0a41-016b-4b93-94a0-2634a8341e71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a5cabaf-96bb-4e00-b3f7-5816df58adbb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ddf1d6-64e6-4d0c-9c03-e820a31d2a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d22d16a-b9f0-4522-97ce-6fae43199b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f4e451-2ca6-44c9-b1cd-2cb1080f0944",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67608f19-e5e6-49ea-9cc4-11d72b156946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b913e821-f499-4f33-8755-288330a0ee48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab3502-6bbc-49f0-ba0f-6929628f9c1a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b899794d-8a74-44ef-a41f-cf54bf83c5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bddd5b54-edec-4037-b597-d809ee4342c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f80a858e-db95-4fbd-a410-1b62d8db0964",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbd97795-bf86-4563-a8bf-5e3f7dfce27b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3301088a-ad7d-4292-b475-3f942b275e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20f32544-5d53-49d2-a6fe-f40b596486e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bb2f6e-5fff-4380-9b58-e26f894de2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea868a6-d018-4e1c-b403-f67951b547f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "015b93ef-97b3-46ec-82a8-9e1f24cde008",
            "name": "Positive Testing",
            "item": [
              {
                "id": "212c1c22-b7f8-4545-85a4-b8e0c6b46d57",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b257689f-19ee-4d80-9094-5be6d8261fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1af46829-5fc7-4b60-bea6-7297769faf6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c654f9ac-bfde-498a-91d5-cfd90316aa8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "59772a73-17bb-4451-bd29-609438af7743"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a90970f-21fc-48de-8a06-7be9999048ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c16ed3f7-5581-4475-8fdb-52e1c29dfb22"
            }
          }
        ]
      },
      {
        "id": "538281ba-d2e4-417e-8b79-0153401da79b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "623e65d0-c7aa-40af-93b6-a5883e2997c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3265e6a2-e641-486d-9c34-f89d5cad50d0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cfacc06a-8dd1-4d58-977e-9671823d60f8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adde7ac4-c136-49ff-8a4f-f49b2f3f82b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e20f33-58e7-4d52-bccc-7651d25460e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4bd311-17ab-4c20-8110-2c3b284e1d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d97029b4-caab-484a-9b19-6c313272394f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e292a5-797b-4e05-9d09-410fbb717c84",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d88453-9c22-4850-8239-a66e1735244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c64170a-38d5-46e1-b0f6-fbeb9a25acae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bb895a-edcf-44d5-80e7-39ca37b78fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92a9c174-774c-4836-aff5-4d8a8a09a530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72983c6e-3788-489f-898f-b920fa6e4890",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29862068-3958-43d4-b713-b4a9b7ac6c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9aab7c-f320-4f05-b8b1-522245580c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467db274-c2c6-4b3e-8ae3-c050fbf78c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b385577e-3fc2-4435-acdb-63756cd7375a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f491ca94-fcc7-4965-a053-19f732fb22b0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a973fa9f-cad6-4cb5-b808-897319ff87df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30b70fb-8c23-4113-a604-4007b43bc9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1edf98-4212-421d-ac63-dda956f234b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "383fd1ac-42d3-4fab-9350-67a70fb37ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9474ced-aace-428a-815a-529fd561f2f9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749a5bf4-f52d-45d3-a607-a19366369c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392a9ca4-1d57-420b-89c7-596f1f102d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fcd710-18a3-467c-b765-00664726d508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5db20c4-d5a0-4420-9a20-823f90d2f6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f5c439-e0f7-420e-930b-4a73725e372d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31feb285-4ab5-4424-bdda-aa0ddb6369ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7feb5c43-f64d-4f37-93ce-9fdfb95b72a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef5774c-c1d8-419f-8d7e-09b06d8dcf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b36d77fa-2822-468f-8fcd-667f79a0806e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300dcdaf-558e-441e-98a4-0516fba7d3bf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e7681e-f266-45e9-a362-42b75acd3475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb6905d-a381-4a39-a39a-5cbb93060627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9c536b-f295-4f67-8ffa-f81bd7a9b4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b81ae8f-6074-443f-9f54-f07d9800a46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8c3976-3e48-4bb5-a498-a47a1c2354f7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3530b7f-8bcb-40ac-9280-173077b1e3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5e0f4e-7fcc-4fd4-8e1e-87aaaf7b66aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617ba77e-2b0d-4517-a0e1-d1b4f18b4078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95acba8a-df78-46a7-ab4b-af893417a2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253cc3a3-d492-4f9c-97b8-78183bb69714",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c20d48-ba78-462b-83ea-1dd7eba0dff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9294ca33-baef-4264-963e-787313d692d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d00efae-9f63-4b56-a9e6-e32cb881360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82a4cb2e-03cf-4539-bed8-3399acd9d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e554842a-6ebe-43ac-8f21-5d53249a78e8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec679a0-ef0d-4cb6-a329-a87369077c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27acd0fa-c91a-4dc5-88c5-e59659ce4df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b9522f-945d-42d0-984f-c0a222917465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb7866c9-6237-46d7-8521-2aa9b3a0c693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c59fa5-9496-4dc1-9f6b-2eefeb5d6a4a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb61d51-5522-451a-a111-acc776210ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a41209f-5272-4181-a669-34e233b03895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4199018-4afc-48d6-962b-d48c4b5ccf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8c52639-0b90-41f3-a6de-9f040c8d3df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab649e8-b21d-43a5-a687-89ddaa8f9990",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64f477d-59e6-4c2d-9af4-8d0186b6990b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419f98a9-7e2b-4e61-bfa4-b74ee30db556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe1f269-d940-4ae5-80d8-f34185d6534f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "876e7009-9e4d-4c08-916c-dbf9ee7d9b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4ebf58-47d9-4e96-9d0e-f3c24cc7407d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b10c1-346e-491d-9d2c-5ed8532cb430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898b78c6-b11d-4bb5-b169-e0525375b043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb8d02e-b697-4e9c-ab45-ad55ee5a3f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f3eb0c1-d6a0-4f33-a4cd-93ddaba2bd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564e3c80-8a03-4507-8fa6-43e352796399",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1207e365-997d-4e18-8d05-3659b26c9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06479395-1f63-4326-9318-263ba0f4a3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fa7f7f-b88e-4f28-b52d-002009b806e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fef87b7-1e8a-4219-846f-972bc174aa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e3d257-9e79-48ad-b303-c283ce5cc243",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dec6ad-8058-4633-a448-5e92e9e40ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a25fc3-ecd6-461a-ab0c-05f4f16d512c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa3d382-1bdc-455c-93f0-abcd315e5d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba27b7f0-2eca-4d03-a30c-f3699d335e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145b0cd0-3689-4978-a339-eafff08ff9e6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbf24bb-7476-48dc-a130-2a37a013d657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da824af-3b45-4e79-b3ac-cabb28ea90cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ec452e-80d6-49f2-8136-cd424df897a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b99e4059-dec8-44c1-9588-8670d8247ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7fab2e-2642-4351-9bbd-8019ae26bba2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b935fb3-59af-46b5-9038-0630bc737866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8dbe08-5c96-40c7-afa3-019adf6b1cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef595c7-f52b-4a77-9f50-eba85aecc961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "239fe8b7-15cf-4727-89b5-3c50cb9ceac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50f59ac-8dc9-462a-8a13-22e0609af4a4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efd35bd-2419-40ec-b402-52eee94b111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98016f8f-6f57-4268-bfb3-b433ba3c629d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6b849c-2da7-4d6d-99ae-4bc470c552c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ee6f22-63a0-4f64-86c9-72ef7071ed50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b002b014-019c-4a0d-934f-cfad0bfbafd7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e65a972-a434-4232-9eb1-2a37cd119a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b190e3-c412-4bf5-b9f7-2dc498f45256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f67715-46d4-4b17-bdec-2eaed5fe680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd8c72c-5048-4e49-9033-8bb2688ca187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1051d20-2683-4235-b0b2-84d955de95b5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da65cbb7-9e2b-4e7f-882e-2cdb6fbebbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f46d9ef-1a5f-4dad-9005-390fe69a1ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce320ff5-7194-4be9-9d14-bfe1bccba70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ca7244-4141-4d9b-b146-9a3a35b77369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22954654-5d0b-4c01-842c-eb2a9a0beec0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1bb633-fea7-466d-8742-bf9419453162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6e571a-3258-44ff-a4a0-dd455dae817d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a757e38-c982-4790-97a6-1dcf14d69cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42bcd700-39b8-46e9-b6cf-e8ff58e9cd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3adb3df-dfbc-449b-8fd8-0c5a83587863",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392a949e-b342-4848-b145-4805e37b7b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae38985-5034-4225-92e5-6571c1c0d793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d8baf3-8e06-4ffd-b3bb-bd3880582f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca67c01-2dc7-4483-8de5-204755cea958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c148703-083c-4714-b317-14e7dea70c6f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6904edfe-a271-4172-b289-85727509c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f02eeeb-0126-4180-b344-6eff9841fd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dacb45-3d4b-453d-ac46-9f16d57b9148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2437bc-1754-442a-8ed0-dfb8f7e9ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b224d30-7b5b-49e5-b7fa-a03ce8c9ed1a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc820462-fb11-4eca-bf05-048f95ac9681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0ad997-363f-47a6-ae6e-b7e6ad27e9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed531b5-fa1a-41ae-b6b3-d945c3420802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf9897e-dbce-4c06-8c72-9073061dd454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a7078d-b825-4ef0-a70a-1551d647939b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81978fe-3a35-4cd6-b9b2-8dbb0bf1ea4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfda6a1-dc9a-4677-be4f-ba5f03d98193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61de78bb-c6ac-4688-a99c-fd20121297f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "089dd7de-68eb-4ba8-9fe9-a03a1233d638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840b8e36-d77b-40e6-898f-8988a70bfcfc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfb9b91-ee00-4268-8f72-aef64617e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769268a0-d380-4b8c-bdd7-abfae5cf116a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c31887b-549d-45dc-a0a1-ae55d78ffc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33e03e2-cea4-4d2c-9b78-aa20318f7514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0524b7ec-ae7c-4822-8752-da697b19c2d0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb98f5b-9352-4858-b897-74046b84733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efca93c-74bf-4a57-bb2d-51593a860e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6d0e85-21d9-47e7-9a84-739ea755c840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "902efda7-c32c-4e33-8fda-94a946f35687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a9b86d-b4ac-4d5d-80f7-cfa3bb32b64d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1039761-8d0e-4848-8165-373069177bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f55422-33b0-45f3-8404-ab85f0d089df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6489d44-3e78-49f5-910f-b41f6d68be2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a1d48f-8660-4142-83c1-7b98f46e5102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5cf29f-62b0-4151-8920-4e1b593f3eb1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96cce09-6206-4683-9219-47ed98a89acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7a6999-6c71-47cb-84a1-2e2f2b14206e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e42393-4c51-4751-b136-baa3212c9435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "640998f0-8ba3-4af5-b3dc-fe5c32d76e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a927e0b0-9702-4b84-929b-a1343c0d274b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96f5c34-40e4-4c52-97b8-58ecd76bde1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03d89e9-49ff-43af-8c11-67e98c832caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f08880-1972-48cf-9c99-1ec3d05c56f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd154ee5-7ebb-4885-a1d8-89c1dcb127eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc2a890-64dc-49f1-8a7a-237c24bf9a62",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ba8be2-5eda-4e6e-b669-73b154b3115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1584043-bf0d-4e6b-a8fa-4aeb8cec2a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950b6cfc-8e9a-4c78-9dff-c028ae6c3a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8caa4f09-4d40-4f59-860e-1107a679830e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8748804-73db-421e-9226-6b918aeb4a90",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64118919-c9b7-4a5b-9dad-b7cfc2c9cf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1ade77-ffe5-4e2c-b89f-3f21e6d44f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05b4283-4ea1-4d34-807a-8d6e51fce34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37d94ff-7696-4e8c-bec9-9fbadceb74a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6656081f-6f17-4625-9c73-1bc10af390b9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ce5f91-cbb4-48c0-ad79-81b731e823a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34812196-3477-457e-84d5-d272af4f3043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca322f6-ca55-4ad5-a462-be96de30e5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7efdf5-8396-498a-89ed-2aadf0e298f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f0f79e-f43c-4688-8560-43fde26d9eee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d308d638-f787-499f-886c-69a2cb067992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024df423-1551-4acd-b349-e4aeb29f541d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87723d81-af7c-43a2-9521-5133b15557b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2b386f-66ab-4abb-a7ed-921456c7c930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b62a2f-f13b-411b-b909-7c8fe8371c5f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376b1087-d290-4bfd-b40d-b324b1e4f8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a1e5b7-1616-4739-9e2d-07f4bab2c8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b919adbb-9a3d-4378-b378-7474b9a022c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8da78df6-7fa4-4fc5-830d-dd181af63d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe097e7-f957-4630-ae3d-563aa8ec38ec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6c54dd-aae4-4812-8010-041e7e41eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5951f081-313d-42a3-9948-827f450b68fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b5cd84-ba3d-4cdf-9b34-1bf6470b930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e181553-e06f-473c-8e25-b7d34d194b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5b3255-8f1c-41f8-b2c7-3bc935c39046",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7f79bb-6b60-4793-84a6-d6153a667a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164b3733-06d0-4e57-92c0-945c286a3c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbee663-08f2-409c-9997-6adfe76cd0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8503fc35-7208-4948-b8ab-2121bef60c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f4538f-22ca-4865-8d11-8deca42acf52",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf02866-21df-4b94-8a4f-cbd560f1b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61f8938-bd98-42c2-a417-45e7da9a6d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a4d0c3-58cb-4dd0-a679-049effb1a558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05dd1eeb-09d2-443a-8d6a-9cc5c341e97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27a7314-461f-4315-8ef8-6342b1d8c059",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371c40e4-ec40-4537-8bda-d10f40421e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27f083b-dd4c-4287-9389-c8985206a378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3048d9f4-1a0a-4489-b00a-738cadc4c9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "def02475-df2e-43c5-a886-d8400f00c9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18e5cc2-b33a-48ca-ae60-af51dfa04bc6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c8b506-49ef-4283-b79c-0d28de445bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5acf745-96df-477b-a195-b2e40e6837cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae97ba3-a5dd-4339-8def-5000e968df03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7a49d1-e1a7-4bfd-9dfc-a5daceaaccaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b7d5fd-5f87-4a0d-a41c-16d8c33a55e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d00959e-7aed-4c6c-90d2-b8ebf19afa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd42c417-b797-42d4-9044-4ec31320b35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673edd87-7917-4d8c-a8f0-25470a9983fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "82532bb4-33bb-4a75-ad1b-6352e89e472c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a46ca72-50bf-4c59-b7dc-4dda1ea8db80",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d232af-9964-4625-b6eb-a90759ba8236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0f3d4b-4d8d-4546-a372-cfb5d08b19b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650a05d1-14f5-4f6c-a485-9eb6c07265e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc77113-ff05-4f9e-8170-6f9bc1ca1a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6c5c68-2bc0-4c32-a388-de75d9d01398",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a8158b-c479-4dcd-a693-4f4051403abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f791023-c0b1-4140-aa78-fe3e0b8388ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b65c43-8dd8-41ab-b961-26b2674b1ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3ff313-1c85-4904-a384-45348daaacab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842ca23c-62e3-413e-94a3-32c416781d90",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32415987-6b3c-4a5a-8c8d-24c1b242c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2484a76-b967-426c-af48-6c6b0122a162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b617fe6-b416-4657-80e4-0d96c93e3c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7022a0f8-1c20-45f8-99c4-025b673d038d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6610e0fe-94c5-42e0-be13-caf99aebc3fb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c436cbc9-3e8d-42ca-a0e4-3bcf7245a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde2a156-a105-4a94-a282-8501cce4a0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a95c822-f9d7-48cc-ad98-491e83154ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be59c27-c561-49f4-901a-89f13caa1b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d57295f-0089-41f0-ab08-b7e54da659d0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e84e0b-829f-4bce-8cdf-e181c7b996aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0687ecb9-6e06-4166-99ed-ee166d870fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21a95f3-47b7-45b2-bd81-9b4571e263ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6248c376-e9df-4eb9-b0c8-9c04c24292bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa484c7-f6ba-4c40-880c-5bb65c901e2b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b45fa7d-828f-43f0-a413-fc89b198e1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4f2b91-13ee-456d-9d80-623523dd40d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548af63a-f15f-4097-a8ab-e20c91e30539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4767346-b911-4120-8640-c61f80a4c7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c902ae-e44a-49e5-8a95-fffc13010b80",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eac263c-0911-4e05-a89b-1f22de3731a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16066c18-48b2-4f4e-b2fa-dba556fda27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11089919-a66f-42e0-b199-6ff46f2a7e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67d4972-ed1e-473b-a41c-ebe8550b0a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9d7da1-2293-439d-abf5-0306290f16a6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee9355f-058c-4f36-8e78-dcf45ef3d863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddbd994-e45f-46c0-b2b7-2bb9ed1b4238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aca6d5-5523-4ec1-839d-4e9489711263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ec97e4-a99a-4dd2-ab0b-75de28d4ae46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9159efa2-0daa-4efd-b9b2-7d82da16a4a5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f02bd-0621-4d39-9dc0-fd88ee4e7104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00a43dd-f4ff-4725-9744-d393be87b90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccbf2eb-251f-4f24-88dd-b6ea7814ce29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdeaf70-5e27-4244-be58-1a1bd2128972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c584fc8-b244-4c59-8159-214276b7285c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fa2513-9ee8-4e63-90bc-6f4e7497cec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c833a7-6397-4c36-96e9-2cba717a15b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab633d3-d515-43ae-a30b-a503bef73bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f7be02-a6cd-457b-b63c-aca6ebba4586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d94cc6-cd3e-4777-8c18-22e067802825",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a9d26d-5524-4ea5-805e-0b94c7127dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f484fb7-46f9-4188-a6a2-2813ac7cabe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ebf9e9-f6fd-4a39-a580-4c4cb4d536aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43148aeb-e970-4289-889e-692639accb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97112e3a-8be6-4e6a-8f8b-ad4e0ff86eff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef3d397-6d52-447b-a9cc-bc67eab355bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bfdc5f-bcae-42f9-a96e-b168b5846c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad209a89-cff1-464c-8bad-304626c6dc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14dc9e7f-82e0-4ca2-b7c7-b7f63d38e782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eba68a3-c36f-45b3-9661-99f8b7522c9c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f429c4-b7b4-4980-8e74-f87da722ae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede7dab7-cc04-40d6-9925-0809d9919749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d54df86-e368-4e65-a244-30f9d0797521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4b290a-0e3f-49d8-9468-58a21284131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8e9fb8-37b9-4507-8bda-60cc6919e37e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf839aa0-a473-492c-92d5-edf2c7e487a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e4c39d-4a4c-4335-9270-d5afd2609620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4596e9a6-79cd-4e48-98a5-80bc1c6af94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c42705-18e9-4e34-9e3c-c28c57dd2fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d87c8cf-8736-482e-8ec4-65ff0bdfd1ec",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ceb2c2-1f19-445c-b3b3-a01cef40f421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb3107b-7316-416c-93c3-79196ed3f3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb04cbc-1e75-4393-804e-dcef39635c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c23a2ba6-f0ef-4daa-8708-c7a779c6d20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e597ddb-e4e7-4e53-b921-17b3f0e78089",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fccc786-9992-4b85-984f-314c3a11b048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720a94b6-4eed-48c7-8795-910b701f90eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91abf83d-bc8e-405b-9f14-b144f9aa43d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cde793c-ddce-4a3c-a175-6b3c8f27d90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85469eb7-7697-41c2-9ea4-f4934dc8fa30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c4e9c0-e1cd-41df-aa31-112dac6ff5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5785f1-7233-4ca0-b34f-314dafcce86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8175ad3c-8f8e-4c5d-8e49-681521063fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9024c5a-0798-4054-91d8-9bca50de2781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29cd44d-f00e-4852-86f6-94192e7ef3a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febdd51a-49da-43d9-b437-c470e6b143e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150b21ce-1d68-4a80-b39d-9ad84dccadbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642a409a-0bc0-445c-b187-f214f2b45173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6ae74c-d654-46d3-8992-7a50528b1f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c739b512-017f-4ffe-b139-8b92978eeee0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786dd2b3-fb6c-473d-ac8e-e119627bca3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7214bfe-6d47-4483-9223-8b3a88f1cb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f55a2c-78eb-4a35-a946-01e2f7d3294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ec8e0d-c52c-4ecd-8c53-88586c02b327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b721e34a-bb44-4c05-b34a-5595183adbca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d2186a-fe95-4241-986f-423eb45eb82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e0189f-6ab7-40fc-868c-4152ac4e5303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b34682-6efc-4b43-8e6a-aa6bdd42aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c10a7d5-d9b8-4432-9e8c-05e39a14f9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cd659d-2d6b-43f4-abff-f16606516325",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7434ebbb-2438-4469-9612-d34bb22e5003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c40e52-0c74-4679-ae43-5479f0918994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ded7ccb-369f-416c-9fb0-df56b54a2065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "471fab59-0756-411a-8b56-48bbf7494cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e827099-b6b2-4a55-bb2d-bdd522cf86d6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc0c945-158a-4df5-a123-c7d63e6c67f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca04d2e8-a493-48c9-aade-044588307eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5350a591-5a98-44f6-8708-b3be2ffa14e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6c15cb-3d84-46c2-b573-f59af98befca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4739793c-44f4-4b14-91da-9e3ad00c59b0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdd6915-8a6e-4758-8158-63c6d6965476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d98737-35b7-4d21-a845-44fc5bbced03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a59d58-efe2-456b-8b2e-c8e816916fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d54c621d-433c-44ba-af3a-e23a3d52b092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9732834-ce47-4a78-832b-a09cb4dd640e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f189ff-d342-4288-8f26-f98a7f5e79a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f62234-0cc9-4c30-a382-82d6ae71e58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a49bbb-9b02-40cd-b694-87144d83cae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04230ff9-967a-4b6e-87df-346da6c66231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f547482-49d5-49ff-9c4f-8ca27a085982",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1311b7d-2aec-4c3a-85be-110540e29bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5be4ef-40e9-4130-a6b1-e779922c813d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97ec48-6099-41eb-b29e-22eb221b15d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b533c468-2c53-4b8c-978f-e5415cb1b056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61a41ca-4bab-4f27-a186-aa9f70e88acc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d2de3d-763b-459a-860c-6965805b9577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a0e0a3-da12-40f8-928a-2117440f7a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a9b8d4-ce20-44e4-a0fe-c600c3974da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e95eb93-d93e-4efb-b6be-319873fa1f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c9eeeb-d442-4dce-bc24-9f4031ae341e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79c643a-e39f-478b-a14a-18fabd2a1ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92e19f8-902f-4fa7-a43c-142fc266d48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af48af5a-090e-4488-93f7-f4885c0add07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d86dbf-b3ea-40b1-a701-6b36a5637a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd39ab2f-2b81-42d1-bd33-e413c204caff",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcda2c8-36d8-42a6-b1ae-d320e7fd8437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98107f3-3070-4f20-ac31-1c6c3bcaa87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb304937-74c1-49b7-94a1-ed24a74739b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7c1e61-78c3-4bfb-8ee7-06541987d4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e166a3-f1dd-4eb7-a32a-3fb990a09a9b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a516aed-447c-4f27-959a-74611bc14da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e03ec6-0adc-492c-ada5-345b81ced7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb1f179-3a75-411c-9370-a039bdd8e7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c8f724-1755-4deb-a631-8919b902b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80582b7c-4880-4dc5-b10e-3adf644404ac",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e28a328-5359-4f38-b37f-cf8c6b3d68f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6238f6a5-a467-409a-b293-3c735239a039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efed749e-a2bb-4d39-81b3-5c7eb57a6542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fb9ca3-c656-4be9-bea6-21798a41fe0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38b494f-f4de-4952-95d2-329746ff8098",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e617566-8101-4456-93de-d0cec5a30bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a0d234-6ebd-421d-9ae5-947ad4f45921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c2037e-025c-4d3d-a522-29b9ab3214bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83bdcde-f86f-4de0-9333-dc6b7e4a845f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab81e76e-9f64-46c2-b122-0651438a4511",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d8ea9d-d537-4d5b-ab5a-179abf85b2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eabef02-69e5-429e-828a-dbfd0bbe7479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd659f06-0f15-4e65-a950-79cf63105a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bf1494-e380-4cc8-97c3-6fec14d80a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ff5f11-e471-4903-8c16-71858c976ea9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db29573-8311-43a5-ac9c-ef9ae0775fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc90f245-67f3-486e-98b3-b3454b7d7ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd0c05b-647b-4728-bcba-4c763bc755c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3593055c-a15c-4331-9d0f-df632df12c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb2e894-99b8-40d7-acfb-06eb5ae8b2a8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28ff7f7-3af4-4d40-9e24-23399e8ea7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bfb1c0-b2c9-4ea8-a639-427993b913fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872588ea-d2cd-4280-a5eb-0ae077262bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "262381cf-71cf-4282-b49e-629133811d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efb3b82-3071-4e1e-b9e7-642994c51566",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dc9876-52c7-43ea-9791-0b5e5cdd11ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6321ceb0-2561-4774-8ce3-58bdf6ef9ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc3b61b-6af8-4a0e-885e-8d37ec1dd724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eecd307-f2ac-46a0-a327-c53d6b75863d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e32307-fabe-4ef3-8a91-18ae6fb4af41",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600b66e5-a2d7-4ce3-8541-abc48dec02d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88a9b73-fb8d-4b90-b1b6-dd9fcf385c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e020ea5-9aab-4fef-a570-1ac1cceb2b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9305241c-cfe2-4a33-bd2b-3edc59f7d808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17ff14c-5998-454a-9bca-6081f2e09d11",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41aae1e2-8523-45ef-b65b-2cc1dce0b368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa479cc-bf70-4feb-b439-63c89efccd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92be8e1b-e4c7-442c-97b2-a06092c9bc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d30f940-aca8-4d8d-bff0-8df03b7b31c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7893cf-fa59-4a80-9ea3-193c305f0ba3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff3ac27-4370-4310-a37c-55402dff48bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea15a50e-f9a0-4096-99b6-28d48346af96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5df529-6237-4dea-9211-2d11e6fd7747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6935caa-ce3c-4c77-8a27-e745974bb8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6284016b-4723-47ab-88f8-58c271bae925",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bec4ae-c827-4f5d-ac0d-1b4c9cb4f1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5655c3-6885-49f3-93d5-bd2a631c0e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a95136-a5f8-46ec-8b75-1eb34c688f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95a9bec4-a4c9-4e05-b605-ebe32a567a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddf9562-5acb-4860-94e8-59ffa03cc022",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edcfb06-9852-4fcc-add4-6f11fd90fc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27c9666-028b-4065-89d8-e95c5377d1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90360ada-44ed-4527-b670-9921702cd9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38aa6283-20ec-43d6-a9b1-cae2a97ee613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10323c6-afc3-41c6-8dfb-77719df41d64",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deff5c35-b899-4153-8f21-2606102f2265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036c26fc-806a-4916-a2aa-94c5c00073d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66378765-9194-4ab2-a5a3-6076df1843ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3818f64b-6b4a-459a-8d4b-6a653ae7fe5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae25e52-24d5-45d8-9a72-4f19a78d99db",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a7a09b-f1e1-471d-9fae-482d4684cef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e63f59c-d95d-4620-bc5d-1a8b753aa05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f0bc1c-ef66-4b4e-a9db-fb8cbc349649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f462a260-55bd-4ab0-8d26-7f210b76bf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825a2020-6966-404e-a656-c82fad1bb08a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010a9f1d-9729-42ad-a880-4ceea73ee393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f7639d-44da-4295-ac9e-81b9e8b2ac74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770ad78f-87d2-48d0-bf6f-603beebbb8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b39b8bb-2fb7-4f30-8ff3-6e7a50288bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8022744-8fd3-42a0-b974-654c82bd7762",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dafebd1-f9a4-48d8-acef-3be3466c0af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd81c24-ec50-4a11-a80b-ca1e8d68f875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57da0bc2-d997-413a-9250-e3af33436d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52eb95f5-b6c8-4cfa-aa10-7b5f698cb32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07661f31-453f-4702-8d1d-3d869bb944ce",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e7781f-5177-4314-8f31-ece1322ab23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea49d88-acec-4227-8b88-96dc3daca272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955376ff-e112-42ee-947c-ac66094db831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d66f656-2ac4-43ae-8c97-8e2aabb01dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f08e70-d51b-4396-991b-8fc111d5e455",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec5d37b-36a4-4a2f-a988-c86f4546a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddbd240-8b28-467f-8913-390a0a213a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dd4bab-b9fa-4241-a27c-a408890e9010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "14da9e3e-eafc-451c-a3e3-51c867d29ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1e9ff0-a94b-4668-af65-c0cf2869c744",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dac8d20-3a3c-43eb-85ab-3fa733f3f654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d5c931-abaa-45fd-8d91-6ebf07f32b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaf8532-dd34-42cf-9840-0a3ba4352de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "081a9ed9-e974-4aeb-8800-5d189f143fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc2083a-476d-4108-bfd8-33081028bd27",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c19551-3b7b-4903-935e-5958cb99439d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cae6d3-e094-40be-8ac4-fa1a7b770ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82651285-6929-46d3-8de2-5735166a72fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be0eae9d-aedb-446c-91a6-2c78c33d3bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1fe4ba-5a85-47a0-a0ab-14b54072827d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dd3ae8-3f3f-4d5d-a219-20fdd9752542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10de976a-a72c-49fd-a7ba-1f7b67cf1c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fece15-07d0-42bd-9d3f-b3fa72abcdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24229633-87f2-4309-a983-ac191235c5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ef2b12-7cc6-4a87-833a-1dbcb4a65ccb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578b7b85-bf47-4695-9db2-8a8fce2bf9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd7d0e-c08c-412f-8843-fe77618f5751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73144c14-9a1a-4e2f-a92a-956db84ddd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "776f6316-c233-49e9-b96c-fb08b3ba4fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470a788c-f3aa-4118-b23f-0753bc3ff336",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027f72c7-8990-43c0-b396-09d360a6b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "20e2c2c4-ee18-4c29-9d55-49f1ef2bdf9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1dc45e-2ad9-4865-b739-6823aaf9da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4090d04c-15da-4c7e-89b3-ca7e0bd188d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "864bbbd1-6651-473d-b540-c3cefa5b9628",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a3429ec-eaab-4f3a-a71f-f0fe51723833",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f82ce5d-0baf-47bb-97a4-ed33813bc519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6c8d51d-c72b-43fd-8c53-bf14dc3f474b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63b45f8-d7d4-49c3-a3f2-ba5d0834dc95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f409db5-0075-440b-92fb-1fbd1a49b805"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93723f33-4bd6-41aa-bbcf-ce5b5e2deb30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6dcfff2-e32e-4cce-adf3-90c9f3caafbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acfb1a76-75b4-4fc7-8beb-4ebfe4aa8b99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb91add-cbc0-43ec-8fd2-c4c5c98c0040"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5cddd32-d242-49a2-ab92-46d62ece4f9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aafdf48-a905-49c7-b1fd-0dc863e99bb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3c10506-4d07-4e19-9997-0e0231d52d7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1009d4b-1e43-4376-82e9-01206abbc883"
                }
              }
            ]
          },
          {
            "id": "1b7108b9-809e-4308-83b4-d0c3c7329739",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd8daf3e-247c-431c-9e6a-0acbcc007c09",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "360f942d-8a2b-44e4-947f-755bd96a89ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9486f01-2637-45a1-814e-9bc0a1f65fd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99227b8e-4096-4ff9-97e7-bc8886808328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58983c14-97ba-48e0-baf4-d860398bdf68"
                    }
                  }
                ]
              },
              {
                "id": "bcbc76bd-ace3-4233-9510-cd3b17098431",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d744a8d5-3ec0-4a34-997d-a9a1874acc3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39c0657a-de06-418f-8b39-84c615cc310b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c14f625-f6ed-4641-bd38-d1dfdcaf18d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c827bef-0a5a-48d1-a6e6-15cd0e9294d9"
                    }
                  }
                ]
              },
              {
                "id": "560fe23d-9220-4b78-a2d4-f1af76c467d3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d7bd550-be2f-4425-a42c-18ccee5d4df0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad8c3723-0971-4f29-94df-23aa4dbc27b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77a08a28-822b-496a-b455-7732556c4cab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5fcb9b6-d682-4db6-ab55-951880b03e33"
                    }
                  }
                ]
              },
              {
                "id": "6a0d696a-0bee-406a-8ce8-edaeeeff5b23",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de2ca9db-1113-42d3-b6d1-0ffb46cf93cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "706ff9a0-48ba-4eb4-9a71-a6886003aac2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "446dd069-23c8-4f61-9d92-29b0ea79bc8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cf86ed0b-3515-4522-ad05-b3caef5bf5a8"
                    }
                  }
                ]
              },
              {
                "id": "0a0cdf83-0dab-48ef-9c7d-1708d6ccfd9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd8f9f97-aaae-4078-8fe2-12aa8b389e91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42a943ae-2129-4ba2-ab1a-dc4ddf329151"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f65da8f8-51b4-4e75-a7b8-c7d6671c8792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9ee2b60c-e2ea-45f8-9547-0c4016a105c1"
                    }
                  }
                ]
              },
              {
                "id": "62954364-e53c-4962-9aa8-ddfbbd595197",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51fe5b0c-e9ef-4c4f-9d77-ddd8245974f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdfe163a-8456-4819-8715-d018ce01f67e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "166e2b48-7e51-412d-9276-50889c8057fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00899b8e-c773-4077-b6a8-002784cee5b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53321272-2090-4ac8-bfc9-ba7828d7f266",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee408020-600e-4669-9d72-e82f7fc27613"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a3af0ae5-2c26-4c9d-816d-0cff8c250751",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15d00813-69fd-4026-9521-f13b8e417b2d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d70d3ac-bc91-48e7-a25e-dd27f96b4d69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b1e8d3db-8366-438e-bce4-a50f18c054e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "760f36a9-d8fd-43f0-a9fd-61a5417f44dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "276f47c9-1e64-4a34-b8f1-9521f867b26e"
            }
          }
        ]
      },
      {
        "id": "a8e47127-7009-424d-858e-c0258e36c935",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "074c08eb-9982-400d-874a-eb21e359851b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddf046eb-1ff2-423b-835e-090ddbc93cc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "066b041c-4581-4d5e-b8d5-51305fccd550",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678c5ffd-6c1c-4d97-b767-ef50d5fb3566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7361e5a-e59d-4b9f-a938-dea7ae9b3036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccf1dd8-df74-40ff-8fdb-41028a719225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4740b068-9a65-4b5b-9abd-695f0187f1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5460ce5c-32ee-4411-ad98-1e9266029397",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeba9c6-7378-476b-8fcd-1ec53c1cdc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12bd726-acaa-47f7-b1a4-b19c3a341499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a504bbc-882a-44fb-8020-90e26246a293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a0bdfd-d698-4308-a5c4-3494e05f8a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56ed29a-e37c-4fa0-a162-4c7c93700767",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f51722e-9a64-4de8-a4f4-f13189cbe165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246eb665-624e-40a1-90b6-cbf071c7125e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb402f9c-6001-4974-8c8c-c6b20832845b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91864ad-b5aa-4952-9f6b-a9ac572658ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5329d7-8352-4453-960d-4e119c321418",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc11750d-88af-47ce-95b4-2e67d3262d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa243f85-c74e-48f6-846d-d7871e8406a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb83672-f102-4589-9e7d-050ab7359f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba402d4-41a1-4548-9ef6-d172d47144f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e17ae46-8ecf-4e17-b7d7-0a4c29f0f0bd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fdab00-f289-4bb2-b504-fef70e94a5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd401196-5cdc-4994-9be8-42e435c75581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb03f33-cc89-4093-bfcc-13c2b6695936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d26e35-ef90-4a9a-b496-d4a68df0ae6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8276869b-cc85-445b-90c3-dc1c96c3e884",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb42bd26-7c9e-4b50-a00c-90b1339a6bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53567aff-5bb4-4c76-b669-538587020fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69dc30d-c3fe-4779-b2a0-81050f58fb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e421f4bd-fafe-47cf-9353-774bdd203e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a3a7b7-2f64-45c6-af2a-86f988b730dc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ae71f6-71be-4c6a-b6cb-9188c36cf55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0984012a-ba1a-4fa6-95b7-cc48a6d86db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d37b4e-ce9a-44e6-be40-639da4269859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04f863b-c86c-4900-a7ac-6f18e2a198e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb552698-7d99-4fa5-9c65-3fa4f88b07a0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2fa08f-c59d-4c8a-89f4-712961987fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be12149-a23d-4be2-82b6-b49c23d49a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ca76dc-842f-4d89-8cb2-1f9c5c041b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b99f25-645d-4e16-a932-14c27b3b76b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e259013-e11d-44b6-aa39-30863b0824f8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ae2795-7589-49bf-8e3a-05bfc71c0b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bfc9a9-43cf-4965-b7e6-781c9e525e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb2fbbe-45c8-4796-8ff5-f650332a6a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf4a62e-573b-4d6b-a6dc-65b3a4dd86ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043e57bd-a605-469b-ba78-7418c1ed5258",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb62b303-a609-4d3b-8000-a5b4997815b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a597f0bc-3ee9-451c-943e-10885900c06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d9a2a5-1061-4228-863d-4e32b2dcce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6884daab-9896-495f-990f-d6712045a3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbaa871-e0cf-4999-af8d-81ea8e1867b5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5ff9c6-7335-4e26-ae74-f7dce2eb8a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9930eca0-519f-4479-9ea8-1d1d5a553887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35940fe-b15c-4f39-83c0-0393d64e2d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e204a9cc-45ef-4a02-ac2f-803d64540de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8481da-f7fa-4469-9a80-fd00ce2e243b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c7d71a-1e97-441b-ab37-3832a4d0d234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c41496-36b4-4224-bfdb-80c106e8ed28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baba6678-c06c-4d14-90f9-1ec0f9b49c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c765df16-0086-408a-b859-920a9ca147b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75ea85a-8052-4dcd-b1a9-a25b2b3a482f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5231a74f-c6d2-4652-a610-2e27efa8534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac964b3c-308e-4d22-a6ad-94a99366d37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0185b82-6d26-487a-907e-261dd7113cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "373bde9a-a9f9-4e69-acab-ff502c80cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba480cb-674a-4deb-8208-6bb20fb28838",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245df16f-2348-4808-9116-97f2226d365b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077059e1-52a8-404c-9e86-e59a52b8d5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31b6de6-2671-4270-8863-6ff9f781b948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "239e748e-e238-4caf-a26e-0e94fe5b7000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2214d9-e52f-425a-bb85-d5cbcdd99f28",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920b761b-10ff-44e2-830e-bec9464c0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4191cf5-24a0-4ba2-bbf2-a82abcc0d776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f6cbcb-7a9b-423b-8c29-ca37727ea8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3fc12a-c5d4-4753-b55d-b3d471b194f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abad359-b75a-4283-baa5-f18ef6081a47",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7cc6b4-3fdc-4c30-863b-0e36e0478d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c466b9-6731-4e00-9585-8226cde9dcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b326e786-b8b8-4dfb-ba63-703d5216d3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a1b9ef-883e-48fe-8baf-2b07a681567f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4737d7fc-a32c-491b-87a8-a6665c84dd0a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb49083-e238-4841-aee6-52b7cd772aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6975078c-1e1d-4b78-a6ac-1afdba84f64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f60892-0063-412d-b036-0a79c4e95790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d64b7c8-ed8d-4ff3-90c7-12bbaa0a6b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687e06d9-afdb-4814-bb81-5661383d6cd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfee718-1749-4937-94f4-48afec94c04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85953c32-a6c1-4263-9dd7-d73c256a5bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfb67fe-74d6-4811-a68e-252ff921b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2962f31-7402-4564-a8ce-4a7264c48375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9a9b15-45ba-42ea-aea5-c79f2e235c23",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f906384d-4242-445e-a8e6-3643fc894b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e833ef77-be6a-41de-a7fc-b09e234366bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb260806-090a-416a-827e-6c3d678c3ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0ec9ae-4270-4039-b6ab-c2e8a75f6485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33041a48-6780-4135-beaa-dd8b73618bf8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f712605f-a45a-42d1-841d-feb5a1ff419c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ac9d3a-24c1-4daa-9999-664e1c1977bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2142dc30-d6af-4bf7-ab65-db24047a2dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce006d0-650f-4c18-8aa0-5b4e0fe618bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509b6bd9-4346-463a-9864-6f64a8740940",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fc84d1-aa60-4cb9-bf3a-dc920664a175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59056a6d-b11d-489e-9d4e-c2135806cfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198864c3-f3ab-4bfc-a326-1ea5e922b171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d39eab3-1277-47b1-ba73-89e3bfd5fdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b572f0-a787-441d-ba53-6a0b4d5d519a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88616b8-4f52-421e-85ab-5714a6d2a936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cbbf29-1722-4fba-83ec-151074aeb407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4755b236-945a-471b-98fc-a89399a9459f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4e8d8c-ad44-4e1b-ba99-708895750faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d0f7d9-d69c-458e-9e50-85da3e68ac2e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b37c4e-0e2e-4bdc-beee-c75bd0ed1392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56e79fe-3fbd-46a1-9a2c-98623e6d82f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a1db90-bb6d-4cd9-a8f7-29df234ebe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2b1a95-31e0-4a77-bfa9-e72f22a10642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1374f8ea-176f-4da1-894a-1178a70831ea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad404850-5945-4f21-a02c-6db3e1959c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcb7c6f-7033-4c29-b789-e5c8bd5b325f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fae481-db44-4413-92cf-26d7b21153c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a493074f-148b-4a36-a2de-1728bc97a53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9780b68b-807c-4607-9fb5-dd060a91a34c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943efcb4-9474-44ff-b6c8-56850dd9a329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1b1fe4-9260-48cd-970d-d610b95749e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b8efef-bf02-4b12-b59e-7bafda20513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd8ef93-c235-4610-af81-b9a7339cbf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a4a8d6-f007-45ce-8693-97928282dfa7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c491ac7b-06cb-4101-aa43-7a6a43575d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40534400-f5ec-4c67-a8a3-bdba1590149f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f337697-5734-4a83-97d1-a77777d4f92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b999356a-09c6-46ba-850e-18979a6ac5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45612dc-098b-417a-82b8-cc82144d373b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07740992-553b-48ea-b79c-514491165db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2a8f3b-d93d-4566-824d-e7d3b67b8fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db44e42-645a-4807-9c93-2d977d09d0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74c59cc6-5600-43dc-afb5-38ec86505702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0ef171-5f8f-407e-bf4b-924aec256b14",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9436d51d-108e-48dc-a630-346b669aec1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28705745-5e9b-4660-90a3-bafc573f9e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64a5436-51b1-472b-b44c-71960b66382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9b1931-1197-4db5-ad4a-cae613d08d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fc79e6-4731-49d0-84e6-6408dcd4bcf2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f54a24-dd86-4154-9159-1978bc0b99bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd17feb5-1c49-4268-8464-fc2f2e76dba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23880f64-5dfc-4b30-b1f0-4d5b4e838e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d5a8f5-723f-466b-b7a6-0e8d9e69e644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef43bcf-d0aa-4e67-a060-d82b0a8de794",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812fe62b-a660-45ae-a61a-107950f7c252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0b03a2-56ca-49f5-96a6-65bd14aee58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143f7b9e-eb97-4aa1-bae9-18631a871d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a566d0-81b7-48f9-9c5e-9e8600c13693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1475aa92-f6fc-4df5-bc47-fb60954bbc89",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02f4a04-d133-421d-9a99-130cb7f14c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfb56f1-3702-45ea-a692-d5df8756a3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9419d9-4fbd-4afa-9194-60573c5b4662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2104c6d2-aa82-4c78-8f7a-fba9f8d05252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e26e08a-e267-4ee7-9218-5c73a9791b2f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec85f131-d6ab-48be-b3c0-b8f81d3688a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b345b5-7a70-40d9-8f73-19bd128ec2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd18760-f12b-4f86-a47f-4013c3f232a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab981f54-a4a0-4166-afd2-a63409850fd5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f65233e1-ae2f-466b-9825-a5af68ebcba7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aff6ee6-6f09-493e-ae2e-261a7954e3e4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5170842-dfe6-4170-bf46-b99fc017b45d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d89804-0d74-4fdd-9133-f4d81fca79e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6aeda4-da45-497b-8ca4-b81688440645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6688b103-0529-454b-9f35-c7b2b7fef8ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae3a7d9f-cac4-488a-95af-61fa210fe233",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca81e28a-9708-4ef9-96b6-8bf2ecb28816"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2756bbd6-316b-4798-bc00-5a36c567d210",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc275817-54d6-43f7-a3d7-08f5ef01098c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4190c2e3-2733-4a6a-8212-94cc4618ada4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f129ddcf-fb75-409b-ae60-e85aba66aa36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "523597b7-146a-49b2-857f-7843f053f424",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd20d641-331c-4591-8b64-ad15a8765c4e"
            }
          }
        ]
      },
      {
        "id": "e16c00a6-8dc8-43f5-9583-1709735d7ab8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8062cbe9-4069-46b2-aadf-1bdf79bd7c69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40842122-0a37-4d92-b1bd-9ba512deb81f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "501867bb-c187-44df-9f8f-cf579582b398",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0125c37d-eac8-42d9-a471-002764c6261a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16819b69-631d-4d95-b809-2fb56337bc05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2193c28e-7b57-438f-a86d-163fa6ec7b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "598c86b6-8701-4a7c-94ec-95d2e53d4a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc0fea0-bff8-4cb8-93b0-63fc20a45a10",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255429c6-f198-48d8-9926-aa01449f748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b7a2ac-dd5d-4e1b-acd9-322f5a0c52b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3a75cf-2191-4fd0-af4d-2e1758fd9cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7b4639-dae9-40e9-a919-694c14ea6d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f7e838-0e05-44cc-808f-d2e65e43d4ba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f439ea43-1358-4496-85a3-9d237c11913d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5f3168-d49f-4880-bcfb-c64887bce23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3504133-709f-4902-bbc8-70b8f9f46caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85840e9a-7624-4f9a-ad35-f6d7851c81be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14228e2-b89f-43bd-a264-6ae4cf5a7c5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcfff36-5b89-48d2-9dcf-01944d4b4bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a123da4a-70eb-413f-b561-724a76707fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6f6aa2-1085-4625-a79e-804708080858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7789346e-528b-45f9-9037-5fbd5ec09fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897b1d64-3a76-4e3f-af1a-a81def049972",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58181569-97a0-45f9-8ecf-04b5c7744fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebbe290-0fce-4610-8c76-75f575ef9156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae5e891-0a2f-4b64-a860-34806c826353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7a409a-7c89-4711-aba1-33e62d7915f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5143e3b1-0711-488a-9118-6016c9d020a5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a771c906-56d3-4f9a-8067-87afc5a978cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d137eb8c-65f6-4d8d-a80b-b47eed0bbe35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb1f1ca-2f23-4396-9208-335e2b4f1b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae991a40-1748-4d25-bf46-b0185d853100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b73076-74c7-44c4-aa70-0b4990dff40f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8750eb86-1423-4fc3-b8fa-e98f933d23ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef486693-c03d-4343-8abb-50b8ddfc3583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366a4af8-25c6-4ae6-ad05-c182699d4818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcad0562-228c-44ab-b866-53a777b50f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb699cb-0c77-4a7a-92f0-e41627d11d46",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1911ba84-fee0-4f36-954e-a58f531d0cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaeacc16-f966-4ce2-a6fb-91d70d99ca08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f201cece-4792-4145-b5ae-e7fbe976da74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "594c8051-0c63-4aa1-919a-8433bbd60a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763a18a8-2b63-4012-ad9d-ff7c6f4b0007",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19309674-9bcc-4dd4-ba4f-e3316ef380a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d7c1d-1697-49a1-b7d7-0e6ec6d6a5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b656543f-d899-4d91-9a4b-e7516e02ed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ced4b4-b04b-4f96-8da1-958a0b279851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2d9719-712b-4d28-bcd2-2656e85e6394",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b2773a-4bc7-469f-8245-2b00413e6c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0da4c7-2767-4043-9523-9cd54563605a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6d67a-e558-455e-a3c1-0a5c96160b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "840606af-8105-4e4b-8587-573299ffe5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c340545a-8cd9-43d2-ae98-fb2469ba81d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f110a31-7a35-46be-aed0-d1272debbec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e9b1cc-4e7b-47cf-b46a-dc64d8b2bf47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9782e003-12e7-46e5-96d8-3703a42d752d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7ba042-d914-4553-9f4a-a124ee06a6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d92468-c607-4c58-aa36-a3c9da090238",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aaf560-19c8-42d6-844d-7bfc1a9bc4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14a5663-0e6b-4770-b617-6259de5b0b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3538bbd-4040-4d16-8baa-a0e28f9af7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "146c0f29-4383-41d3-9914-0d663ffb8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2350ca1b-5871-4e44-815a-7e58e8b25b76",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56ef5c8-0b0c-4528-b88c-01881bca6802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85e9820-e050-4d0e-8974-2aa3f3c77839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2564b9-fdd9-4962-baac-2d1b37ed17d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79d3d20-1a0f-42b7-aa75-e9a9e73b2d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662ea426-2d44-4fb6-8c22-77f7f7ccdc1d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee2a11b-fc8e-4636-8f44-fe0ceb2b52ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd200818-6e1b-4303-9770-2a3d0136db9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991be445-27e1-4a63-a774-cbda8a4e9bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1c026c-0db7-46d2-89cc-9b2216e3b4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afeab18-1134-479a-bf54-98087d197127",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eb7265-853b-4178-bfd6-96875bd0f29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa631e9f-8bcd-4c42-81d9-e9d8a4b1fdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212f8545-4540-4260-83c6-3f697784bda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "988a1d81-6e7a-4cb0-b0b6-e2f82951d162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752ce4c5-4cc0-4990-98d9-bc8efd61ee42",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f5cfb-b01e-48bf-9f3d-7e56cfa2df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94656ac9-ead9-4563-a579-f8095c93a850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0716155-eda4-412a-9c9d-b6eda0fd584c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a37e9f-6769-4a51-9b3a-c46c3f1a6952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01c0d74-3ba4-43d7-8dc0-0d5199a433f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e822f6e-f395-477d-b7fa-edb402029ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27111089-bc52-4389-91f4-0f7299641d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd52140-1d95-4d45-a530-a69ba03e1110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9a3776-9327-434d-a083-e3943b038b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d191fa3d-a2e9-4d33-8d4c-aad87ec0adb0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98734b6a-6ef4-4b97-9d9d-0d6e34526b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a744e618-b8d8-453d-a1e9-3827c182229e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5105200-c473-4c19-854d-8e52039b5c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6249bf93-ef4c-438c-9328-ff452cea6ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a045834-3437-4c0a-be34-1380c77041bd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de228aa-de48-44ba-847d-3c515b4b768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6324eea-4ead-425e-940d-c6eaef24d4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1128ac8d-734c-4203-a062-f55852c2e5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e941edfd-9332-4019-82c5-2d763644de1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e2e5a4-e48a-43b8-a050-401d33d7e5a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03be200a-2cb0-4f6b-911d-fcbf4de4fcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b214bc87-c348-4722-a0fd-2fde5e559c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a7ae11-5e38-4367-bce9-b0191f0319a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a02d2d8-bb71-46f2-b651-5de746fa8998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad703b65-4ac9-4408-a11e-3d4b75b08ec0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fe824b-2bea-4c8f-922b-442dc50a80a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330a717f-6169-4f57-8513-620324d9e68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aead5ac-1585-4d77-8158-a17edba803df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b936b4-b9e4-4c24-96c6-7cf68eefcd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05097749-ed88-4326-b8fd-5fec851959c4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649e279c-7a36-40e8-b0dc-8194a544849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb417c1d-b174-4dd6-a481-fadfb43d1dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f488718c-33cf-41f3-ad87-b505ca66c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b2510a-38e3-4c3a-a9f8-74f8317cce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8085a2b8-683d-4535-9630-22c8e5dd1705",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6f9747-63fc-41f3-a336-76886a294840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9942b40c-0780-46d4-a3bb-5e2d5d6bf5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e312176b-c959-490d-bcae-c0894d8f7b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a02c7e-f472-4ae4-95ca-7dd9e56007ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaba89d-0e95-46ad-80eb-e873462e9d97",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f8dad0-c387-4efd-aa29-31f138cfa016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382dded8-5e38-408c-a2a2-ab0020b55f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c74a10-9fc3-4dbb-ba0d-7fdf71701722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f46de5-f85a-4756-9fa0-d25a0d04c530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c63a5a5-1c31-4a56-85e9-2241cb5d6ac0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f1b3f5-058f-4aa9-b8a5-eb4e9618b5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e18f25c-030f-4481-b8ae-56fd5fd6a633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef8de2f-7354-4323-bbe1-f3f293696de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18028efe-0dd4-438b-ad97-d900e95906b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3edb94-2946-48c7-bc5e-b18bc22b3358",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec375be5-3615-4497-9794-c624455ef223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beac7e07-6873-48e5-a879-0f421596072b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c405b24c-a6fe-4911-be73-e6efc2b1e679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6884bf5-dcd1-481b-a648-92ccd304b1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d370cc4b-68ce-4310-9056-77ef54c62351",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c6aff3-47e2-4a4c-b755-af3a0f24f61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ec7076-0685-4c9b-9aa7-afed1f3abbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c94ab8-9528-43f2-bc1c-7f01774ed484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c956b786-464d-440d-8fcc-f56aee4d5d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfc62ab-561c-49ba-8f97-5c1a32adafec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd140d8-5a6d-4846-9db3-8fd0584eadd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ca4d01-d17a-4041-9543-a2b38e3be536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7ef544-6cc5-4383-8d3f-ea04b5651114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b320ac94-7acf-4ecf-81e4-3f1025317ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e5e61d-6ab4-4e98-8d22-ee9140ee59a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fce334-dcff-4b1e-876a-97d7def6759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61b81dd-75e5-46b7-89fa-46cf7e742752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2c57df-2c2c-4582-b606-1845aea9d034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e674c4-9117-4a20-848a-941b05f12870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41acb9e2-f266-4eb7-9a4b-396479f83906",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8841dff8-ee15-4dc5-93ba-3c22430d1a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bd0c98-730d-47fb-8ef1-e59815f2423c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd89a491-7c1d-417e-a8a5-2c34ce188009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "377f6c3a-ca45-40e5-be74-941fd63ddb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67949f1b-b20e-4660-a6ea-9f5034921a11",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a16514-4a10-46ea-b903-2e57163180de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3b414d-47b0-4f1e-84e2-27f1fbd76f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a9cb7f-6729-4246-889f-949d23cef999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ef29d9-764b-469a-8493-c6bd638214f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd53807-c7fc-4fd7-9c1b-28a5ee6bc9f7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766b9286-db9f-48ae-9f57-78bbea2dfe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedc9661-effe-4140-986c-fb2e2b8c19c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9be9e7f-e52d-4cae-ba2b-7237004ab993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4787fe-d69e-4289-9873-be80065651d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea33e692-02b7-4475-a627-d4c1af5350fe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93085a5b-22bd-4d52-bafb-cdf7350f5783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7c884a-a275-4ed5-9116-a16b0e648f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4ad660-caa5-4ad5-90d5-205b5401ec3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2dd71e-6cca-48ff-9d5d-6b29e32c8bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b2d4a1-0f19-4623-9fd5-61dda66a242b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f6000-21f3-455e-901f-5f45bb7a299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5ae374-a9e8-427f-bedb-dbfc68371b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ba48fa-7a9a-40b5-8472-215ed9c8966c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2485f61e-97ce-4b1f-b61a-a18ab114086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5270099c-afc6-4f6a-8e6f-8a7efcd4f041",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17ba2b2-d205-4677-a2d2-be8c9591d653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a55e7c-4ba3-4956-8d60-2a50677ef64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8839ae-551e-4891-98d7-a279fa387f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "431a8aef-b3d0-4e0d-a094-bfa85c93bc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c133acbc-0334-48c0-a992-790c058ef87d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a74f32-e3ed-4449-a4a8-9d2c84fa133a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69078e46-a32e-4c28-b89a-442433a63812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226e97d7-1a7c-49b9-9ab9-95f4b793aa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c536e55-6c17-484c-97a2-e268f41b9377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2d1524-cd8e-47ed-95cf-033d51b8e673",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeecedb-ee19-4823-9119-067be82e7bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3017d6a1-6363-4b00-ab27-ced45b30acb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c3d162-7121-46f3-a78a-ddc5d59194a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1075f13-6c7c-41a4-a432-5b2f46cf1d6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3e0351e-55df-4b27-bf6c-0c3db5dd4a7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6979dd7b-3290-4b33-9af0-fdf4976f2bee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb7cd24-6a9c-433b-a020-d2d2f94cb9a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "487d4c0c-6e3b-43c8-9f92-c1c9ec588a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba3a32d-8c08-418c-bb5f-e6b118412818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbea2682-b000-4c84-9cd1-f5ce15edb4a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0805410-d031-4bdd-8431-f4223bede562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8bd063e-c8d1-42ec-9fa7-8d74033db0e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a36bfb0f-6a49-4fb0-ab5d-19331d36d604",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc5f0565-7fa4-4d97-9af4-4aa500219cfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfcbc93b-964e-4cda-8f14-ac8b16352af5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc9df16a-c2d9-4445-8eb5-9b897123ffff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfea1884-5359-4473-8322-1babc3f279f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abd87648-a0f0-46f1-b6c6-aba24d8dc1e8"
            }
          }
        ]
      },
      {
        "id": "48d0e8d0-d213-4242-86ed-16333bb7e6b4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cdfcbcd8-2ba1-4c03-8599-8a7b30b6b426",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67137658-e100-4aa2-8949-9605aaab37cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a24a0e48-9002-4a50-b8cd-32f2981ff160",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458d5f77-da60-4b9f-a66d-f2cd6d8eb519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53fcb24-8a27-44e7-b335-bd8cc0b8ecbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48894f6b-07fe-4637-9512-e68c601344aa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8c374-fedd-484a-82e3-afa933b76762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f4378d-a840-4f12-b99f-43213ffd4781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32846f77-d70b-48a5-a717-5e11c882bff3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebd53bc-d650-4342-b9d4-07e1170e23b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cfed63-45a3-40dd-aa4b-45a8e6d5a0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1708926-d359-4a11-9448-361659cd9fa7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea759f0-143e-49ef-acb7-e8587e302858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3c35db-30fa-41c7-b05b-122cb134a7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d994221-4932-45d9-9044-caf43fcb783e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4575dfd6-6974-462e-93eb-588d051ca00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8572a56-14cf-4879-96de-7ea3738c4d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc46014-3038-450c-a6fc-2e27c3ee0a3d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9951f4ce-758e-463b-b69d-a2aab3e7c9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c69979f-e1b8-466a-8ed4-2a6ee61460ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c618b3a7-24de-490b-9345-34ce62cd4dac",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ce3da6-d907-4c1e-b477-ed27168e3407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81de1e12-be57-401f-a428-fa11774b3bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167a493d-bbb9-4719-8ec9-4fef60b4a63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e09793-648e-41be-8170-c81a4b98f34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f4d27e-c233-4ed7-8a68-42e6ab083bd0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91440dc1-4d6d-49b8-bc85-f8c23d0c1da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74f6c02-3af8-4c3f-ada9-6e21640e3538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71890a37-84c3-400a-96ad-944bb23c32f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1aa5781-cee7-420f-978a-26bef822b5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436c9171-00c3-40bd-b44e-e339ec703386",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af6269a-cb5c-4060-a7cd-523901cc56b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b2347d-fb31-468e-91b2-c3ad880e930b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90707299-d86a-4ade-b25e-5c049c34a2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac4bcf0-26f4-4d47-92f2-c9205c09ef59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415f0aa6-e4b7-434f-9b87-f7f5096fb000",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c213e53-42a6-47e9-b34b-983528defad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d87f4699-85e8-4b1f-a855-e9ca9d5f5da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8d32fa-a6bc-4b13-87f9-42c58773c5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe442b2-38a9-48bf-a1d3-e2c54295e36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4909b3b-0b9f-4b1c-8388-abc2a121e2c1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68484257-56b6-46bb-8521-c32248f6d0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65bdc63-e527-490b-98e5-7e83eb3adb20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c5f760-db38-47c5-9550-8501cb501dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6251c1a-b6db-4fb7-ac69-f3a0b553ec5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46da92f-c21e-44f8-8768-9465fe79a033",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09986a0b-0ac4-4826-902d-f90277745431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a802135f-1360-46e8-80fa-0cecdd2a060a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee0eba6-d212-4516-b462-d46e1df369cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4911b8d-1b37-4bd2-ae47-656a63218593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c6a597-8b36-41f9-9e71-3426253a90c6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8f1494-382e-4802-831e-16373d68ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12277f16-36f4-4a6d-b73b-e6c362b12e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8a87e5-877d-41d6-a3cb-09b4f38bf94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7417ca92-cc9a-42bc-8c54-2289a77c39fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461a2b45-3346-4493-bde4-b65d2986b2a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a12d19-b598-450e-9e34-12f3053c3666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd527ef-2297-496b-ace9-ea8c16b7a0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304b2695-4cec-42e6-8571-f6f4227fc8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bb6b83-b34d-4893-a4c4-8a55596ff01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5071c5da-a59c-4510-8bdd-3bfa221d8e7e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0e9b52-e635-4522-9a02-d2bf96b6db02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac5dd2c-6392-4816-b0e8-a0f8f74af0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a33edd-15fb-4521-8bc2-0955192b8536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdbcd7f-ce82-421e-b22d-88de8db01e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f731c2-80cb-46e5-a04c-61ddd52698c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1cd488-6e7e-45c8-8717-e6a3d64549e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cfc0f94-7b66-4801-b8cd-c17bb212d9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4cdc8b-8ceb-49e0-bca3-6b8a83316ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7a1421-d622-41f4-bdd3-ba15d01f27bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc9b678-2d52-4850-8245-9f30898ddd9e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546c61b2-15b6-4d50-85d8-d1818d5b0951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b479c2-7d16-41e6-a1ac-99dc02abc8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99a54af-b3e5-4c57-82f2-aa396e63d54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e39847a-e4b1-47c6-abe0-65a666687890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e50fd41-cc47-46b7-be45-88093a57623b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9163b183-0746-4895-81d3-f130128040f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfcd50f-a794-4bea-aca3-61ce6b91534a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a724752c-3708-4056-84ee-3cf73787be67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed86f8d-584b-48ff-b5ed-aa3f38828b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd2bb41-deae-4300-aac0-dabf1177e011",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c421fa-dba1-4f97-892c-2cf73d561174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662ac27c-e867-492c-8478-7ea4c048d5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb00d209-666a-4956-9ca5-752abb53157d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e8f4cc-eeb2-4a47-b179-46eb101e5b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e17d253-8325-4b27-aa19-d48e331b7bfa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134c5646-428c-423c-9995-7a3b0876ffe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0fc31f-8666-4eb7-8e18-e30f73c9c0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf11d73-039f-443d-bbe4-1233172b07ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3158d8-3ba1-4b6e-849c-6b69ad8f9ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab242200-16c9-4c4c-b0e5-e14c0c32147c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc5fe49-5482-4934-93e4-9a06b0d4f621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e58eb1-157f-4251-bdeb-eff4cf5affb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f81a0b-996e-4c2d-b16f-3dc2ffadee76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5613d72-8a6b-4861-b134-7495eb98b781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9989ce-7318-4bfe-866c-01510bc69260",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2925b224-6514-4927-b80b-f36f32b48f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb55553-b5d7-426d-85d2-432b578179e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6394159a-7840-49a2-9e85-3efe4124f463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047644a5-baf7-4018-9883-654a5601301c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d3e743-ff03-462b-b2c7-11ac18efd542",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7faf127-865a-489f-b357-f1862a0a3f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a322778-5922-4f77-812a-a2ff4848255e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa718f75-62bf-4add-a497-b2af57357da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d8f8cb-b0ca-4255-bf5f-865bf88b8914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d725dd3-6063-4575-820f-7d779c12e3a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df173d6-9166-4db6-9e72-6416fb7b018e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6e8647-2c86-4577-bd15-6e4d5373288b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72dd98a-123d-4d51-bf9e-86468ed76058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62e54d4-5742-4293-aa5d-1150d6c3e72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bf2855-24af-4b87-b3bc-2924f5891877",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96723e2-3543-4537-8ee4-c679fbfe9952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf64a821-d592-4d14-8199-1c0922e6d33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98a8baa-5caa-438a-9102-c5d965f2c5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec3783f-cdf7-4921-b020-b2ed046cb2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73502381-b1b7-472b-ba26-3ea606b9f1a9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6177fd89-d501-4c61-af14-5ac504f656d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b51fb1-a181-4684-b21a-19c6db171c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83303170-5686-43ee-ab9d-31f00743275b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbae1c8-87a9-44f5-8119-949224bd6d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626a8fa5-8ed6-4b86-bcd4-204588c7642d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebdb11d-3078-415c-b68c-adbffa88c508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1b6162-cfd1-4b3d-b859-74e46c45f0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e7deed-093c-4953-bbf5-904708431c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5e9d17-ebbb-45f3-b5e0-c15c8b26f7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6389a1d7-4791-46ba-b844-d1247a65b857",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e50f0b-23c0-4da2-86ff-094dd24c8264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73721da4-a34f-4702-abee-52d0b15e7693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f29c61d-54d4-4d7d-9c12-fb7d3174e721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f511bf-051b-4441-9f38-1cef309ff712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145739f9-83ed-4f33-900c-f741537c86ca",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ec5c2-d428-4376-b903-77cc73c4d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603be28c-0e6b-4843-9a82-8e8ea6bdc837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e880e333-6393-4588-8765-d7cb0644e51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d055a76-6596-48ea-966e-b3b9f9e253c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4453083e-1b2a-4979-b5f0-ac591243fbd3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd2b8b2-aa48-422d-b1f7-f0357f395842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5cbddf-2d61-4a06-8909-196479dac583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53441054-db7c-42b7-99ea-ddfced86a1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aff5ab-6fe5-4339-a4e6-597328351eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5ad2e1-dc98-4874-b41b-f9be78346058",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4741024-b3c2-445d-9804-c6ad751e6971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6367dd54-7010-4e93-8ff8-89cef5604b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5cbb9f-7b86-4aff-944e-901476e77328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878fac4b-4b54-4f38-aac4-7b04e8f20265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a444a4-5ac9-436e-8015-6165b7fae19b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305e1966-0aa6-4695-a7ac-4b4220c59ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695798ef-0bf7-44c3-956e-a1c66fb65a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c64a5a3-1b96-4f86-93cb-3003bc6e84c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713607cf-be9e-4649-ab93-44a96cd2a49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffeec6a-6536-474e-9e1a-f22ab36bd050",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23575bc7-c8c4-41e7-a547-f3cc73ec16cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ca6a81-ce40-48da-a254-09f9a680e32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45283a75-2170-47f0-9b22-5a71c975651d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7535ea76-a99d-4069-8f16-df186cbe8e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9029f7d-d131-4438-a1d7-7f1bb9471020",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d285715-c34f-4d9f-aa00-24727cac008f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f05665a-3103-43c3-9239-c5e50f44e562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3817b83-5494-41ad-9b5d-b48139208751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0907d060-4457-40c4-98d4-825475ae92b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2163d8-6f08-4ed3-b90a-c55c070bc232",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5456f-40c2-478b-b89c-1e01da38d3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d91633-3f24-468b-8cc0-b3a813315af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e6452-fab2-4a46-8d74-1fd392e29dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee876c55-e1da-407f-8459-4d9c70ef8c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba405b7-caca-47c8-82ab-96032e3658f8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11811251-c454-4ada-bfe6-ff66919b57e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db942320-34cf-4673-8bbb-90ecce9a5c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da9430d-9608-40f5-ab76-6329ab3c3c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b830f5a-6111-4b2f-9022-957faaa7f8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99095f0d-92e7-4792-956f-261291f9d550",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc0d325-8859-4324-9777-3bbc32a23d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84ed434-8369-4c05-8eab-d4ace16ff1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05479b58-b500-4b14-8ce6-77905918f719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372fc20c-4437-404b-8641-e84702d723cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384362e2-21ed-493c-b586-33cd4f96f29c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4efa90-c9cd-4997-8026-fdb381886138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ac2b38-3bb8-49c5-a9d3-5c602aec4879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c4e5d0-2348-4e08-b298-7a92fc7773fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598328a5-6d78-4bb3-9b62-887ee74b6218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3c1de8-d3b8-4455-abb2-5fc3f642bc06",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf63dab-e807-4af7-9eab-1891af00214a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716b4731-fc33-414e-8c49-a9ca9e92d479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab11c56-50d4-47da-9f8d-085272a157e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77cb3bc-06ae-4be9-8d36-40b85842443d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b8112-d971-47fa-8d72-f5724841290d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed39a74-639f-4d3d-9a7e-3d555faa45ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b1386c-f1d6-4bee-9fa1-7608b9e83b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762e6348-a71d-46fd-84c3-c999b392a278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f313820-3589-4a5d-aa85-7c84b677f462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3234d0e9-714a-456a-8788-438fc07fd483",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f21d97-eba2-4271-ab57-a3c968052d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb8299b-7f9f-4974-9fdc-20e1532d33e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f55d0a4-ceed-41a4-b692-2e36aa7af379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8247ae-e806-4ecc-af95-533d7868703c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fe875c-df1c-4d1a-98ea-926068e5b5fb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b90cc69-08cd-44bc-9b89-eac7c50f3459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bd351b-8868-4e3e-ac12-38465c319a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f167ce52-5287-4bbf-951a-74d27db4bb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394eff8d-ba28-477a-b3c5-575b77140f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18efb100-b3a7-4552-8eca-338c30cbfd09",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feed805-14ce-4017-bbe2-596196f84da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9470725-7cad-4874-b71c-fc6f00573c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc6547-7ec7-4fe4-b825-0a85a878e5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3cddd2e-6856-48c9-babd-3812c1968eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2768c8a2-43cc-4b11-9c28-6dd942f6eeee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe4b097-8c3b-403d-8786-81f552f0e80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fc77bc-e670-4900-99ae-ce189564b42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90fe17d-7524-4908-959a-87bc1af1913b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ac40ce-bd4d-4eca-827a-0763140c36c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a272d85a-2755-48d6-a723-cf61f44b0385",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefac29f-5830-4b4d-b71a-395df2979750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11b14b1-bbb7-43cd-a97c-7b5696c0517b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66e4436-b6a3-4f98-9ec6-e21185d42407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109aba83-a1d8-44bd-86ea-6ebd86e7c37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f3c445-8aaa-4d3c-a32c-7ee3d04e7f4e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f4a3d7-ec2e-452a-98bc-9439b184537b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d37193-8129-4bd1-8f2b-779e2bfab50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975e52a2-41fc-4845-a59b-921367afec86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b059703-3099-4e40-9fc0-5451f8ca28af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17956b6-b24d-4863-8fe8-7f6f3cd287f0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532d3a79-b7bc-4eba-9d16-ae7c2eea0df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef7b37c-f1c8-4c29-82cc-63379db3578c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba12eab9-ff80-42b5-b996-4a99c12c51db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2055a9f-eaee-49d2-afc6-67988cf1ec1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e7d99f-b184-4ff1-988a-535919c362c0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c605b746-edad-4994-bd17-b2fdbafcc391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e91b9e-5954-47a4-84bf-63d1903e74c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d040c6-8fe5-4e4f-a2e7-0692b7d43163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21d57d5-b5a9-4edd-a7a5-939866084592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02bb6a0-1262-458a-951b-89875febba7e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1137daa8-8490-468f-b39d-28f8483a91b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c48a33-e434-4e3c-b10f-e993b6b430bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaa02fa-00f8-4315-aef4-8dd7ec382700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c35b2a5-7ba3-41a4-b6a1-da9b9f7ee418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9d1393-ecaf-4093-bd26-63b943d5ffb4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e290f8-df34-44eb-81c6-6015475dd31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9777ef3-c3a2-415a-82da-761fa3ca3c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56da78c9-950f-42b9-8262-fba238818182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cafb9c6-169f-429f-9529-42066dfb1a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0501d55-8c8c-4f3a-9f09-edb2ed9ddb1e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95eb7ce-11e3-4af2-905d-4f8c7884e6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b885ce-7949-4a49-827d-47c0bd6440dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7864076f-659c-42a1-8eb8-4e7791d5f992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30748dcf-a64b-4033-852a-e004f7d29f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc5757b-e0f5-49fb-965f-aae67b1c4c41",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce000a54-6209-4979-903c-4da015362860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e7ed5a-948a-4b88-a70e-fc91f311c932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2addaa56-935f-4a8a-87e5-fb20e970f33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43b9d60-2b5c-4d9e-92f7-68530d196d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce507b73-6c68-487e-8aef-281667e59519",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e2d164-07ef-4339-b1d7-f3f3f92757f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cf59b5-d928-4bdc-9181-958289f0d492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34d6404-7ec1-41f0-9779-0978cb2c4160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0416bd8-b7e5-403e-96b5-4f6794a43d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd86f06e-2d15-4971-bcef-b18236ac1e4e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b564ce5a-0f5d-4dfd-b0fd-ba5b7d4c6548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a45b768-d5e7-43dc-a8db-cb1157e551f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95dfff3-f554-4e26-8eec-2123af6b5928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1469eb-c198-46ca-bffe-2c5b45cb9faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079b5e88-6d38-4ac2-83d3-31d9d0cceb5a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d5c6a-385c-4196-84a7-c428fc416efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc4605b-c353-412d-b755-8dede82e07c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fd7180-d5df-4514-8b33-6b2aa31e08b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dccee8-0e46-4e5b-9da9-1d70d7c49bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748e81db-3d6c-4884-915a-9c08d2cfd067",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3785e1b1-f9c4-465a-9e6f-96606ebf0bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d119e3b-e6cc-48dd-8a38-7e710765d728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68b2d11-cda5-4950-bdfb-bc7b19f5325f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a62fa3-a251-470f-9665-6b9395dc7b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ecdefc-fbbc-4481-b66d-09ee745c79b7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d920df2-82b9-48c3-9b4e-a5f6467095b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4a3e2a-1eb0-497f-9924-b28e4bc4a60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdcf409-2258-4b9d-9abd-688a028ea6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7407ff4d-da6b-4601-b321-63a8460e56a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a0469-1511-411e-a888-284332e28da4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5047e7df-533d-45de-9c57-d6f609fa2227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b46abc-2997-4215-ad0c-151e15ac691d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dfe167-fb11-46c8-8711-248f89abe5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8453adb-5505-4a68-86f9-2c1892a6a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c8d5e1-6e0e-45d1-b784-571ebed72d35",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec16151-dbe0-4da9-8ff8-bfd62e323f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8dd26f-e77a-4fa9-b8c1-e361e4b3c7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e10309-a664-4406-b29c-220ebd970f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a95356-b0c7-4873-bfb8-de1bf534e464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0321d79b-1246-4a11-b065-e8432479fed9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c02ab2-c1b2-48d9-8d87-81d7449281e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be9397a-24e7-468e-8d32-2e100ecebd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de7a14a-1462-4af3-a0bd-5253a210236e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a31b22a-3b60-42a3-820b-ec2e24f448e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a029200-ccc7-4993-9b1b-8c9b1b12e843",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c412d8e2-a7da-42f8-8109-b38a9898e600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4073b34-7b16-4373-8f47-5e94e157ac56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86477cf3-b750-4807-adeb-b96e783bd05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56874101-6e5e-4700-b5b0-beeab0cb1a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e87a41-bfa9-4447-b2a3-2ab96137de24",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3bbac1-a82e-4914-a37f-1b4e3e69e3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280687e7-ec0a-499b-987b-a192d70587f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e6f772-7e07-4bfa-8fce-491a98827130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce07948-3210-4ebd-b8ce-50a44016271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2253517e-79a6-4664-aebd-dff175eb1c06",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a01515-da13-4b04-b849-b7f9027e2bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be890bad-fb8a-42b0-8d5e-0ea4bc1f727e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa7e09c-1c96-493c-9eb5-26f2a94f849a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be973c7-2f22-4a04-8fcc-e4e4d10c8a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80591016-8c2f-4cfb-8cd3-ed4fbc7f6254",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b015f30d-c207-4405-b637-493e733932f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3483fc4c-9eed-4410-8dcd-3ad2eedbee83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3486261-5d1c-46db-b418-0c70276ec728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3924f56b-e1f5-4b9e-abb2-24935f44bcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec1fdf5-a84d-44fe-9008-a5ca56be34e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d30c4e9-478a-48b9-a2e3-e7348dd3e195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d9161e-835f-44af-9266-d40873e70f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b54eb95-f83f-42ed-9727-89ad4cdd7a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05b75eb-b087-4958-ac12-d455225b48c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b4e71-dd2e-4b9b-a6e5-a8597ea73444",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231885e9-0ae7-4ebe-853a-20f5b66d5953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e8fa27-d5c9-4fd2-a6b2-5214dcbd1e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559836f9-5a48-4f5e-b660-280afdbce447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba1b564-3b93-48b8-ad23-c50e14489eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314ddf99-7954-4dfa-93b4-d4a87dea8c47",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75649a93-8144-4025-af79-9f5e7aec76b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da45e68-62b0-4a82-a3bd-52a77817f5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f84eaf4-5661-477c-8a4f-368a2561a406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee1a3b4-df08-4887-b55a-2180fbf9a7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bcc74d-f8ec-43dd-88b4-022219ee6147",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc8d720-cb05-418a-b36b-d07e7382c0a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe417a4-7075-4e18-9d47-4304ae173c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b103ba26-1db0-4025-982e-5ac7f572af56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f01a9e-02e0-48a2-8e2f-f8c58b1b4cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02846120-34c8-4f8e-a6fc-b1d27cbaec43",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e4f165-8d35-4a86-a8d6-81569ed83841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c350dbda-2376-4fac-b4a3-c02ffcae09a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867298b3-e799-44ed-9e3c-de861682ce62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffcdbea-428b-4d85-bdb9-03bfdb710e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ae34f8-49f5-4713-8d4f-b27080d9d975",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e4ce63-a591-443b-b7ea-d3c334061a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a45dab4-59aa-41ae-bde0-6c45d2fbecd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104ea277-5106-4024-96e8-0b1ebcef55ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c174e9f-f486-4145-8b1d-41e38833b6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5564858e-d9c0-4cbe-ac19-7dbbd8372994",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab26e85-6f50-4244-9eee-d24342b799d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2b8641-d947-49d0-b469-8446ab6bd0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd35f4d-fe6a-40b0-a1cf-43aa9dfdfd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55e3434-2d03-4eb8-8696-53b76c727eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00185a2f-a3bc-44e9-86f9-6b52c167fe42",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29f57e8-a077-4616-b490-99d50c93408b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66ecee7-2211-4ba8-805e-21adc758c3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053707cf-902f-447d-be86-9c09be011f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d51b2d2-7852-4f4b-9142-59805b552a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6b45f7-f1ae-4d9f-b47e-61de21620837",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bb5f70-e0af-4076-af9d-c35b5cb69b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08eff992-3b4f-443d-82b9-9c95560b655c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c7f4d2-d551-43dd-af18-575afabb3bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cde2257-7c41-4f51-b663-031a8bb9e59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb0773a-8140-41c1-948e-43af5b618a0f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab6ba25-61f4-44b1-9650-e5b4b997ee6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3a1468-0742-433b-b24e-c44bcbfa4df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8279d12-9012-4d4d-b4e8-8a8f2736fc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434735df-1993-4984-b3fb-4e3f4c54e682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c950a260-6418-4f0c-bde9-bf049eaba1a7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7f1d64-2065-4148-a448-b3d45af7ed38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5439e306-ddc1-4702-880b-745b51fe4fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c84298-78b0-4618-a908-80e4d75b556d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f3a032-8eef-4e63-aae5-fc6dd25291f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435e934c-6f0d-4fb8-8f59-eda5e8fea1c5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26bc01a-2ab4-47d7-9f19-60251b6e2344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39621cb7-3987-49c9-a516-0113c10188d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa6c460-dfe6-402c-88c6-7f93857974fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d9440c-75b4-48ce-92e8-43d9644439a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac56a54-565a-4651-82e8-f2b455c51b76",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbdaa7f-b18f-478e-8d94-8766febdb669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1f1758-fe88-451f-a65b-c42a8ad2d012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ad84be-914a-4f9a-8de6-19ba0613f7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dad80e5-717a-4562-bb76-a2e7fdce0e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9592aab-c3da-4f0d-9904-f8c24ef9dad9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d449b71d-9ded-4264-8a0c-92e66aaf52d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2984bf36-1bc6-4b50-845e-7e415b8998cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60721561-2019-40a7-ae9d-23e5dd3364e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb592cb-e4e6-44a1-af2c-70ce17444508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342bad85-c6ab-48a7-9435-c59efbdf7b15",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3749d18-ae44-4c23-8fbf-28ad4b89e3f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7ddd39-1390-4095-a70f-67cf4612427c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14798a7-ea73-4ca5-bcdb-c4c33c6ae4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e0ad35-bbaa-4848-a821-c8cce2fb06b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7a5903-1a10-4d4e-b5dd-98e723c10654",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e121ecb0-a5f1-4bc5-9009-11c86f41fd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98d18fc-48b0-4112-809a-960f383c4ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dae2efe-015a-48a0-aba7-c5e14d26c57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12765ae-0caa-41af-b122-53d847a9eae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9cbaae-65ac-4f9e-b7b6-65a4490da969",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0a77ef-d002-437e-9194-fbaeb1425fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c025768-b593-41ba-bde1-8723a6e195e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deae6fd5-f91f-4ccf-a074-848f41b99ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e771128-d640-4220-8a4a-0b3777b1bedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b142453f-2f7b-420f-a8f5-142fd6d8f910",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a3d7c4-bdd9-4905-a4e2-d66ce0b5d78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "890d74f3-becb-4ece-b466-fed6f496de7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be36a56e-fb46-4714-80dd-33229418b486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcab225-cfe8-4789-8289-9772f28fb9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af80ece6-9204-46bc-a1a0-bc1ecafa2dd2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44fdf1f-eabd-4db9-b56a-ff6fdd769964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306e1625-96e7-4194-91f1-4af054be5281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fac5825-f94d-46a7-9e46-22eeb8c1fd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadb94b3-1f1c-4022-9dfd-08dedb4fe426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce9c44e-f85d-4897-a525-d47bf70cc4a1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82517b12-e67b-41e8-a01e-519309fff9e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d402baa3-0c09-46aa-b86a-5bd17a6c6106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1c057e-0bf4-4ef8-b79e-20a0aeb3c0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87068f2a-58d8-4e78-9817-d29b4ff2035f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4261efcb-ea36-4314-b907-858d559a8406",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ae0909-9374-4592-bce6-2f0459f7530e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738a6432-2936-407a-b1f4-4fa6349671e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31f403b-bd92-4647-873e-f903e0e52500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a229ac88-df7c-4086-8d03-20673673fcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9b1fdb-5eee-428d-88ec-d1854ff5e60e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be9b445-27cd-4d3d-a06d-0e3a7ed7afb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb8b3d99-03f0-4abc-a9f2-08ba6155de0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e180d9ee-e4a6-405c-a043-7bd760b3018d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9d059b-d509-4e0c-b85d-b0d08cdf7510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716a2934-29a4-4533-ad40-cef8362c9997",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e606d2-07e6-4c3e-befc-f0a076c4315e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b48b363-980d-4f40-b4ff-8f1742db915b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e466b0-fdeb-4902-9e9c-2dd89d399ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892f7dd9-fe48-4153-bdd1-1c7a1512dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c34c0b9-874e-4a43-aa98-e99243fa29e9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb365d7a-9fff-406e-94c1-c8c733d6fa8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec92cf09-45c2-4adc-bd9c-ea597e83f379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7352d0f0-ecc1-4113-9249-324fe1f4f7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06f4875-c6ed-47ab-9408-08be675be513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4a8a3b-fc8a-4106-9337-e74706c272ac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28377cff-a7a7-4fae-b35d-42ed427344a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e49bf0-7dc5-473b-95b5-cf511c6fe9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00772685-ea6a-475c-a886-4df673a59d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553a9a07-f579-4d8e-92f9-89af6f0787aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6df4aea-7c8a-44f2-9963-3f8f35f3455c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd2229f-3a31-42a1-bd67-112e9831a0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0308823-4ae6-4665-9f86-c24b34eaea4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a7ebad-5a33-43bf-b00c-c48902e253c5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c94db5-2c0d-4c62-b00a-666b91e9cdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61872630-f9d3-4858-8956-4e5e42742bb0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96407638-1eb1-4beb-b81c-bf898624db63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457f591b-1101-4a26-8133-921f9c2563a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0abd82-5112-4075-8b05-898db601f3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61b2d96-b613-4562-9f26-32405c56d7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1662b608-816f-4d44-909d-5448e4daaf11",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d02db7-c603-40b3-85a0-e608ecb4ba35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eef9647-8d25-465d-b6d8-ea540bdaea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e3ff5-fab4-4061-a8c8-5d82364fcfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d82ee8d-6d70-40c6-831d-cc22a190070f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad68ecd5-bb39-480c-a0b8-59e66ea02aa0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9984cf-9a95-4871-aac7-2e546fda48c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6324dd3-74ce-452f-a1a3-dbb0a47fa5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94120a7d-b4da-4f9d-b0ff-6b790b1bc6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bdcdc3-130f-4758-aea6-9b47e81af8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c8631a-0eca-4d19-9442-f478e89e4bf2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e168022-5156-46f4-aa95-b377bcd07c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a63d021-7888-41ce-8793-ea4c55f2f947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c613c-31a1-494e-a90a-4406930ca88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43394ad-95cb-44ce-8cee-6d062db9b775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990dfb06-1b1f-47da-aad3-2a51ae20f085",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e719f44-1ac4-4299-96b4-55c0a055b06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b83356e-dd91-4b8d-805d-29dc503e38ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5944cdb4-ba5e-4914-a7bf-ca6137a4d1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a39b940-2657-481d-b809-cfa74b23f76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4069007d-e6ba-49dd-84cb-2d112fbedd41",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e024e2-191e-4c73-b65a-c65268d1fbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a146c7d3-dad6-4374-bc70-f5602a2784fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc490c37-d2ae-496c-acdb-ebb92617e826",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abe14c4-c0ed-4876-84e7-b2dd5c914776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b933308-ef02-4b7f-8ae7-6d2e73efe04b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540031c1-c474-482e-ba4c-bcfe16ff8b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca7a23d-5268-4dec-b071-37231b4e1f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f288cbe-3dca-4dba-9741-47cf428dcc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8142baf1-8e8e-4b08-8409-8da0f5fdc734"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73dafc56-7a94-46d1-ab0d-6a6ca076259c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e9535c-2b89-44d8-b962-0bcff44540ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70a8b97d-65a7-4d76-9021-c42d9e692359",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9d6b3f6-8f24-4d32-afdb-81531896ee17"
                    }
                  }
                ]
              },
              {
                "id": "5d079239-62b0-4dbb-b464-1919d1c18f90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9639d993-3e89-4da7-97c1-a02a58f05929",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7981acf3-ffcd-4b02-8d41-06d1bf346d96",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1ea761a6-b0c3-4dee-9d0a-3bd1551d3cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7703470-7e0a-45cf-b5b7-d5bcc9363c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77fd798d-e0de-4d88-8fb9-9b0e2248dacd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e91ca57-cb44-483c-b18e-51a1236c9618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08ba46dc-8f4f-4ef4-8aaf-ccc8c8dfbf60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1686b39c-84c8-4c73-9704-6e3d723a0cb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26ce08e0-82a6-43c9-a498-d1555c798520"
                    }
                  }
                ]
              },
              {
                "id": "b239d186-2772-4562-a92a-4dbe88285356",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "441c9811-51d5-4f12-a35e-c26c4cbb2e90",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7886a9ce-b789-4fb5-b94f-beeb72307fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "784f21f2-c4af-458d-af5e-2417ce617cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cc18ed-5dd0-4d39-92b7-687ef9159384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37a47f9-a933-4805-b5f4-1cfe232f3e70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5e209a7-62b8-49cd-971e-146d362cc6af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9dcd62e3-a1e1-46fb-bd91-eea53a58d9fd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa34dc0-8458-45c3-a042-54966cf35f43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61a9707b-7c4e-4c1a-8e27-902e0b1a2936"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be00ab13-eec1-47ac-baaa-369ede2f30a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c200291e-009b-4007-ae34-124eec0602e3"
                    }
                  }
                ]
              },
              {
                "id": "79cebd5e-2f78-47ec-8e67-af75e295efb0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51f9f77f-61da-400d-86ca-7a9b37b96e49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "885a24cc-ccc8-48d9-9ec9-dbf7357f2746"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b321b4b1-7e22-4a59-90de-513564bfcadb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9441a690-53f5-486c-b1f8-0552b1b0d1bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d00b2673-8a57-4582-a207-c302f1e66bbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fc8d921b-29db-458c-93ac-8956c6f45dcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f0327ea-3426-4bea-b709-cb6af7cbb021",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad2c7d53-bbd0-470f-93a4-1725534a5569"
            }
          }
        ]
      },
      {
        "id": "c1b732d2-5c57-4edd-bdb5-54a95aab50fd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ad8a4789-b19d-4cb2-bd91-531ec3eccb63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e592780-a0e8-4a09-9001-e5504b70967c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92e52143-be70-4d4e-9f62-d55e25434f5b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00017087-de81-4a1f-80b9-2704498312b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "681fa67b-3ed0-4fa9-ab62-d1e917267ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7d6eea-0ac7-4f77-9cee-4d972006a312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04825601-9ee8-4e78-95b6-4d3de00c3565"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "629eb115-9306-4b90-8187-77fbfd55f131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ee0df04-eb8e-4402-9d86-e4fc664af517"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36897bb7-54ec-435c-aba6-fa273eafb741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b072cec-cbe8-4173-b040-caf035fe3d51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec04b521-997f-4758-b392-f020ed34520b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "134de114-3a98-433f-b399-f445132da83f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7562752-3aa0-4289-bc00-2990908ea4f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed592fc4-2c93-40c4-b00f-b6fff87ed814"
            }
          }
        ]
      },
      {
        "id": "366333be-cf5e-47a9-8aa0-f9276d1cb397",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d3c1a379-249d-453f-82ba-e7c79b7b78da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd6d4b65-8079-4704-8954-6a0a1cf11b44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "676fbd31-5981-4575-9d04-ec5a7da2feae",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721eb4a2-2841-4933-bece-8a52732f00f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33029e8a-f7dd-414e-be9e-63a7d7dc26cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7221ef88-9cbc-4e03-b7a8-b042eefac70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc80d86a-aa67-4ab3-9634-b2ca8110f6e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "443bbc30-4a11-4ad2-ab3a-2aec32ae314c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "185469aa-acb8-4f83-971b-3e8ae76d7415"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71d8eb43-7748-439b-a402-ffb267ad9c6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1460c5a3-5bc5-4e05-af7c-94970b66dc0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "492a1668-6d34-4a73-baf5-ef73dd4ac4d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12f7ea77-5cea-4fcc-af67-c784be3db6e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6332d1b7-0389-4e82-b1de-f9fa727deee1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "923b64ae-9dae-4a0f-8012-fdb989e2ca88"
            }
          }
        ]
      },
      {
        "id": "0880fc60-bec6-4e9f-803c-295eb96347c8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "82f9025a-8d63-4d35-9ae4-c4ab08ba4fd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24489303-0760-4090-9664-76d2267597fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43236b93-c08a-4f6f-99c0-3fc26bbba12e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a98e148-9a35-4109-9591-f004c0db000a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7dee206-52ac-4e60-a76b-ddde2a704c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1396314d-b02e-4906-a56e-17a6a1cefbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e914296-7495-49a5-bced-4f7390f665e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42724439-3490-45bd-9e4a-eb07278f5259",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7584afe0-6c2d-40e2-9e8d-057f68d92a8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1df3add-f52e-4e11-904a-17f90479b4cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "163ec38a-a161-4163-af88-74b4ed49cfe2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7099c079-a273-4eab-904e-b0fa5b358fdd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc0b7e0a-2df8-47f3-a509-952f07b67330"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76d61f72-3e68-4767-8089-f52cbdf293dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f0916a6-964f-4a15-a790-633d47b9fb64"
            }
          }
        ]
      },
      {
        "id": "92cbb4b4-dfc1-4ed2-8edb-712f45d55739",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75c92dcb-44b6-41b4-b4f4-db4a5adf214a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4bf420f-8851-4b75-ab0d-b3a1d49abbe1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "66c16a92-b5ed-48c9-aa68-b3e0a35cb436",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0b1823c-a1a1-46dd-ac2a-5b1b3908d667",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea3b9e8a-8928-4f9f-b75f-2d209fc70970",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 329.80281690140845,
      "responseMin": 8,
      "responseMax": 6323,
      "responseSd": 773.9588257366963,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692750717393,
      "completed": 1692750826512
    },
    "executions": [
      {
        "id": "8604785f-da20-4925-9d9f-1f361337b21d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "34987743-ca5b-43e9-8e15-980134e184e2",
          "httpRequestId": "8f9127cb-fdd9-4fde-903c-d81e3b0f049a"
        },
        "item": {
          "id": "8604785f-da20-4925-9d9f-1f361337b21d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a510d198-b42e-48fd-a83b-9178ddbba2b1",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "fd3f8a90-62bb-437a-b131-2c8f5abc6dd1",
        "cursor": {
          "ref": "383000fc-2add-4548-b46c-c63201833820",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e3a57656-d291-4423-97d8-35e484f72939"
        },
        "item": {
          "id": "fd3f8a90-62bb-437a-b131-2c8f5abc6dd1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5550c0df-db55-4e5f-af45-d8eb89f8ab1b",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "08d17712-4a5d-4de7-8eb8-2d814aaf7c1b",
        "cursor": {
          "ref": "7aaa4749-a7f8-44c0-b440-9357fe86509e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3579ade2-25fe-4a04-bfeb-b2cdddd1797a"
        },
        "item": {
          "id": "08d17712-4a5d-4de7-8eb8-2d814aaf7c1b",
          "name": "did_json"
        },
        "response": {
          "id": "a2474d49-18e4-44d3-a35c-681dd356a70d",
          "status": "OK",
          "code": 200,
          "responseTime": 1257,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5cabaf-96bb-4e00-b3f7-5816df58adbb",
        "cursor": {
          "ref": "4fa4aa33-394f-4eee-87c0-215e4492538b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce4576ff-035e-4b1c-b428-c17439207a36"
        },
        "item": {
          "id": "2a5cabaf-96bb-4e00-b3f7-5816df58adbb",
          "name": "did:invalid"
        },
        "response": {
          "id": "05469b02-999e-4714-b881-7ddf39e1014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5cabaf-96bb-4e00-b3f7-5816df58adbb",
        "cursor": {
          "ref": "4fa4aa33-394f-4eee-87c0-215e4492538b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce4576ff-035e-4b1c-b428-c17439207a36"
        },
        "item": {
          "id": "2a5cabaf-96bb-4e00-b3f7-5816df58adbb",
          "name": "did:invalid"
        },
        "response": {
          "id": "05469b02-999e-4714-b881-7ddf39e1014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f4e451-2ca6-44c9-b1cd-2cb1080f0944",
        "cursor": {
          "ref": "289b3c7d-8454-4626-a568-9788853a44ad",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4708bd01-f9f4-4b61-b4b2-eecd9640816b"
        },
        "item": {
          "id": "17f4e451-2ca6-44c9-b1cd-2cb1080f0944",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "11364e6d-09a1-4629-8d16-6751d746a3b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 435,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab3502-6bbc-49f0-ba0f-6929628f9c1a",
        "cursor": {
          "ref": "4d406a09-fadf-4e68-96a1-b2400ce193dc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71eb3961-7ff4-4149-adf0-bd269608e984"
        },
        "item": {
          "id": "90ab3502-6bbc-49f0-ba0f-6929628f9c1a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0baea69c-d26b-41a5-a33b-084dedc35dd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd97795-bf86-4563-a8bf-5e3f7dfce27b",
        "cursor": {
          "ref": "f2195901-b84d-4c40-a1f7-15bd496f0ae1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d27e8e4b-b81d-44e9-a9e1-156f6910fd52"
        },
        "item": {
          "id": "dbd97795-bf86-4563-a8bf-5e3f7dfce27b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fa53ee34-63e6-4498-85f8-daa59aef61fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c1c22-b7f8-4545-85a4-b8e0c6b46d57",
        "cursor": {
          "ref": "6b844a1d-52b9-400c-9ea8-66f76068df55",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3d20e9e7-3132-45f4-b24b-597cc7ab3f12"
        },
        "item": {
          "id": "212c1c22-b7f8-4545-85a4-b8e0c6b46d57",
          "name": "identifiers"
        },
        "response": {
          "id": "7a1dbb41-9f2b-4683-ba28-389fbc8000ec",
          "status": "OK",
          "code": 200,
          "responseTime": 1099,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfacc06a-8dd1-4d58-977e-9671823d60f8",
        "cursor": {
          "ref": "5d2b3ec8-e6b6-49e4-a84f-456de93ee153",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "62b8e60a-caa2-46ca-b3ab-7cb91c93ac28"
        },
        "item": {
          "id": "cfacc06a-8dd1-4d58-977e-9671823d60f8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f33b83fe-b4a4-4785-80a7-aa0adf40d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e292a5-797b-4e05-9d09-410fbb717c84",
        "cursor": {
          "ref": "e3b83007-b457-48e6-9643-936d2c3195a0",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "15e6abaa-4eed-4930-9b7d-dba67b99a67e"
        },
        "item": {
          "id": "12e292a5-797b-4e05-9d09-410fbb717c84",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7864f478-f31d-49f1-ba9b-f1faa894a31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72983c6e-3788-489f-898f-b920fa6e4890",
        "cursor": {
          "ref": "82025681-299f-470b-8b83-f4d43c0a10c3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3a874a95-3e61-4989-81bb-118a9570c04e"
        },
        "item": {
          "id": "72983c6e-3788-489f-898f-b920fa6e4890",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c38ed968-1a73-4a40-a118-b4ad3bb52d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f491ca94-fcc7-4965-a053-19f732fb22b0",
        "cursor": {
          "ref": "13719513-bbfc-4f00-8974-62bd47584023",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5a030b70-2d5f-4d65-8ef2-acb841de20f0"
        },
        "item": {
          "id": "f491ca94-fcc7-4965-a053-19f732fb22b0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "70458354-3e8e-4f04-b349-658c123c9363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9474ced-aace-428a-815a-529fd561f2f9",
        "cursor": {
          "ref": "9b284a75-1c48-4d56-aaee-7d549e2e22ae",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b8eda9b9-ff5b-4e5a-9637-9d0ad08b88ff"
        },
        "item": {
          "id": "c9474ced-aace-428a-815a-529fd561f2f9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ddfe295-7db6-427a-82fc-c04b2a6ce535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f5c439-e0f7-420e-930b-4a73725e372d",
        "cursor": {
          "ref": "894de201-f361-4116-a09d-2f872649008e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "657ce208-d9a3-4ff2-b1b2-535ae5c5f8bc"
        },
        "item": {
          "id": "e5f5c439-e0f7-420e-930b-4a73725e372d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "58900f35-a788-4988-9972-6c49e1e5e74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300dcdaf-558e-441e-98a4-0516fba7d3bf",
        "cursor": {
          "ref": "917b075b-ed95-4bf4-9ba0-b097fae108e7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "22519370-15a0-466c-8f98-98315cdd7d1e"
        },
        "item": {
          "id": "300dcdaf-558e-441e-98a4-0516fba7d3bf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6b9177e9-518b-49dc-b096-7e39facd630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8c3976-3e48-4bb5-a498-a47a1c2354f7",
        "cursor": {
          "ref": "1a6fc81e-0e50-485a-97fe-9e9f79ab6d37",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f5de7075-f652-4a54-8f93-39e3eba6b5e4"
        },
        "item": {
          "id": "1b8c3976-3e48-4bb5-a498-a47a1c2354f7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "850376a0-b92e-4b98-b566-7f8cf3b95bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253cc3a3-d492-4f9c-97b8-78183bb69714",
        "cursor": {
          "ref": "d21187d3-6d80-44c0-8492-cd67d4709d2e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "22a5dbbc-28fa-46fe-b6e0-576b7b890282"
        },
        "item": {
          "id": "253cc3a3-d492-4f9c-97b8-78183bb69714",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e7e51ef0-2a20-4420-9452-e5c65024254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e554842a-6ebe-43ac-8f21-5d53249a78e8",
        "cursor": {
          "ref": "1c27aee8-c922-4a88-9738-8fb4742f9403",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fbbe3720-fc30-4ac8-b447-6993c9cbac71"
        },
        "item": {
          "id": "e554842a-6ebe-43ac-8f21-5d53249a78e8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "87879a90-cdc6-4dff-a536-bf28dfeb712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c59fa5-9496-4dc1-9f6b-2eefeb5d6a4a",
        "cursor": {
          "ref": "20b98b8a-bc0b-4a47-b5de-b5434f56076c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "72284a89-3653-40ac-b7b0-cc8a4ffeb313"
        },
        "item": {
          "id": "59c59fa5-9496-4dc1-9f6b-2eefeb5d6a4a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "33b11de6-f467-4c84-b766-eaa647854082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab649e8-b21d-43a5-a687-89ddaa8f9990",
        "cursor": {
          "ref": "2b0ebc83-361a-49da-b84d-f758e073ab16",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "30fadf9d-3759-402f-bd01-22704fba2ab2"
        },
        "item": {
          "id": "fab649e8-b21d-43a5-a687-89ddaa8f9990",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7fa67c74-e27f-46b6-983e-4956ce095bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4ebf58-47d9-4e96-9d0e-f3c24cc7407d",
        "cursor": {
          "ref": "ae775312-d944-45ea-959f-d2c829ec6bb6",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "922957f4-a658-43b6-8787-17a4d0ff7469"
        },
        "item": {
          "id": "1c4ebf58-47d9-4e96-9d0e-f3c24cc7407d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "60a6bc71-5bb3-4037-a096-acfd83678734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564e3c80-8a03-4507-8fa6-43e352796399",
        "cursor": {
          "ref": "007131c0-1f96-47dd-8274-4a2445756578",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1ae62e2f-66c0-4473-ad2c-f7ac81795c49"
        },
        "item": {
          "id": "564e3c80-8a03-4507-8fa6-43e352796399",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "390acec9-75e7-4198-a471-c54b55806aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e3d257-9e79-48ad-b303-c283ce5cc243",
        "cursor": {
          "ref": "387ba115-dc7d-4c24-af79-45bad1fe6a87",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "87320ca6-eccd-4030-87e8-b12c4c6749dd"
        },
        "item": {
          "id": "72e3d257-9e79-48ad-b303-c283ce5cc243",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c52cd02a-fd95-4b01-9707-df70759f2194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145b0cd0-3689-4978-a339-eafff08ff9e6",
        "cursor": {
          "ref": "70533295-1b96-4ee3-9ce2-3f596b311fe0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3577ca01-0a6e-4de2-a2e0-a30ec1dc89fc"
        },
        "item": {
          "id": "145b0cd0-3689-4978-a339-eafff08ff9e6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "79ca32be-30f9-45e4-aa0c-1dea492630d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7fab2e-2642-4351-9bbd-8019ae26bba2",
        "cursor": {
          "ref": "8c18fbb4-a3b5-4801-bb5f-f5e629e08457",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "27309ea3-50b3-4ba9-add7-ab21a3c28f7f"
        },
        "item": {
          "id": "5b7fab2e-2642-4351-9bbd-8019ae26bba2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8f01f905-a7bd-4656-9b22-c0c5731ede07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50f59ac-8dc9-462a-8a13-22e0609af4a4",
        "cursor": {
          "ref": "07b742a6-c7c3-43a6-935b-9990b892b2d9",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aa8cddf2-59fb-4c9b-bd62-67cc38d13ac3"
        },
        "item": {
          "id": "a50f59ac-8dc9-462a-8a13-22e0609af4a4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ddba09f7-535c-48f9-81e2-5b10b5ebf72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b002b014-019c-4a0d-934f-cfad0bfbafd7",
        "cursor": {
          "ref": "318d8fa3-cb87-4cf5-aab9-b26578a3fa72",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8a35ac33-55b7-4caa-a316-bac62d878553"
        },
        "item": {
          "id": "b002b014-019c-4a0d-934f-cfad0bfbafd7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8668d4ba-a0d4-44a7-a19b-1147d081fedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1051d20-2683-4235-b0b2-84d955de95b5",
        "cursor": {
          "ref": "de8b950d-0a6b-4fdb-b8ba-80be7f0a2be8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e20ee20f-75e6-492d-bcab-b46f95e5d138"
        },
        "item": {
          "id": "f1051d20-2683-4235-b0b2-84d955de95b5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0b002b69-1712-41ad-8b5c-b52e4ed90ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22954654-5d0b-4c01-842c-eb2a9a0beec0",
        "cursor": {
          "ref": "71172e2e-e4ee-4137-a25b-59dfa60be305",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c82c192b-c589-449a-b49d-da14c59ffb73"
        },
        "item": {
          "id": "22954654-5d0b-4c01-842c-eb2a9a0beec0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d92ed096-b5a8-4586-8f9c-5d9f29ccbdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3adb3df-dfbc-449b-8fd8-0c5a83587863",
        "cursor": {
          "ref": "e7a5c9ff-4511-4440-a402-293fc88c4123",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3778eae9-69e8-4b77-bd61-a886d65e94f0"
        },
        "item": {
          "id": "e3adb3df-dfbc-449b-8fd8-0c5a83587863",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0db1a3e1-2ac9-44cf-95de-58551d90b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c148703-083c-4714-b317-14e7dea70c6f",
        "cursor": {
          "ref": "7661df7f-cf5e-4fd3-8767-7b3edb6b7105",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6b85cbf5-5eea-4d46-96df-6d15040c5e14"
        },
        "item": {
          "id": "6c148703-083c-4714-b317-14e7dea70c6f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b88e1213-4403-4c4a-80d4-075ee0cff490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b224d30-7b5b-49e5-b7fa-a03ce8c9ed1a",
        "cursor": {
          "ref": "17d9c2d4-0c6d-4b1e-85f6-b0ba2e8134cf",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "66567aad-c7ef-413c-8067-de8c3308d866"
        },
        "item": {
          "id": "9b224d30-7b5b-49e5-b7fa-a03ce8c9ed1a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d4a08e44-720b-4860-87e7-1b70169c7361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a7078d-b825-4ef0-a70a-1551d647939b",
        "cursor": {
          "ref": "a3cea3be-8a25-499e-bea8-74a468c37a90",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6d479435-99bc-4e15-9b1f-3a6d3032cf39"
        },
        "item": {
          "id": "52a7078d-b825-4ef0-a70a-1551d647939b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f57be981-152b-48cb-bacd-32f31cb161ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b8e36-d77b-40e6-898f-8988a70bfcfc",
        "cursor": {
          "ref": "833efaa2-b8fb-4953-9eba-caf246846881",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f3242bd-1c70-4be7-af52-76793a89b47a"
        },
        "item": {
          "id": "840b8e36-d77b-40e6-898f-8988a70bfcfc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "97117886-044d-4fc6-b6eb-e53246d317fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0524b7ec-ae7c-4822-8752-da697b19c2d0",
        "cursor": {
          "ref": "ca88cc95-e0ce-4728-92f4-063ad5eff40b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "88bb4e65-9988-46b8-8d82-144173b66ccb"
        },
        "item": {
          "id": "0524b7ec-ae7c-4822-8752-da697b19c2d0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7b6b2c01-4629-4ca5-9bce-ba299d627958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a9b86d-b4ac-4d5d-80f7-cfa3bb32b64d",
        "cursor": {
          "ref": "88ff9bed-99df-4042-bb8d-34a126764a8c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d8f79498-9e0f-418a-b6f8-6d6a410b48c2"
        },
        "item": {
          "id": "83a9b86d-b4ac-4d5d-80f7-cfa3bb32b64d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a74ac114-378b-46dd-9277-a4865c126e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5cf29f-62b0-4151-8920-4e1b593f3eb1",
        "cursor": {
          "ref": "20e60e41-3bba-4e01-819b-fd5ce58a7df2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ccdd9634-af81-41b6-8ca8-10a302b1e784"
        },
        "item": {
          "id": "6a5cf29f-62b0-4151-8920-4e1b593f3eb1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dd4d9171-c02e-4915-8b6b-dfb3f122fd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a927e0b0-9702-4b84-929b-a1343c0d274b",
        "cursor": {
          "ref": "605c247b-810c-4516-9820-aef5239d0aca",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e1b35647-fd23-4b31-a6a9-1db291fd5c2e"
        },
        "item": {
          "id": "a927e0b0-9702-4b84-929b-a1343c0d274b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8ce3e567-b3f4-4532-ab6a-204055dfe9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc2a890-64dc-49f1-8a7a-237c24bf9a62",
        "cursor": {
          "ref": "53f742f4-eee5-43ba-9068-8c94564a9194",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fefac9c2-0d3e-4f46-894d-02295a7d65bb"
        },
        "item": {
          "id": "cfc2a890-64dc-49f1-8a7a-237c24bf9a62",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a3d616fc-3834-429b-9a69-a57fd24d4916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8748804-73db-421e-9226-6b918aeb4a90",
        "cursor": {
          "ref": "439ee7a7-83b0-4b78-bf6b-f3170d5b7af5",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ec26280b-8b55-432c-b10a-daad25c62e67"
        },
        "item": {
          "id": "c8748804-73db-421e-9226-6b918aeb4a90",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e2f9629e-7a06-4f78-9704-e6fb573e589e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6656081f-6f17-4625-9c73-1bc10af390b9",
        "cursor": {
          "ref": "9276595b-ffe0-4aee-99b5-a1eaddfb9fb5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "051ced85-ef3a-4664-8674-d98481f1f0a3"
        },
        "item": {
          "id": "6656081f-6f17-4625-9c73-1bc10af390b9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f9a361f7-65d5-4d2a-8cdf-a315fb226f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f0f79e-f43c-4688-8560-43fde26d9eee",
        "cursor": {
          "ref": "526740e5-b752-4d01-8f67-db2c000fd0d9",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b241cb13-733b-4f9c-9783-027ae849dc73"
        },
        "item": {
          "id": "36f0f79e-f43c-4688-8560-43fde26d9eee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "33ea498c-64b3-43a4-8b7e-c69e40e48b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b62a2f-f13b-411b-b909-7c8fe8371c5f",
        "cursor": {
          "ref": "961dc23c-8502-43e0-88ea-256d73bc33c8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bc43f129-ce5a-4438-8b6e-fad329fc11d3"
        },
        "item": {
          "id": "85b62a2f-f13b-411b-b909-7c8fe8371c5f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "54229b94-8c14-40f6-98bc-1769a32d1b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe097e7-f957-4630-ae3d-563aa8ec38ec",
        "cursor": {
          "ref": "3f8635c4-b365-4987-8830-378d58048ecb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e7b0e5e9-5932-4896-adf7-dab175e4fe42"
        },
        "item": {
          "id": "dbe097e7-f957-4630-ae3d-563aa8ec38ec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "290e850d-fb72-4be3-a54f-3facba4f4bf2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 634,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5b3255-8f1c-41f8-b2c7-3bc935c39046",
        "cursor": {
          "ref": "68d7ed73-ccef-4b4e-aef9-72e4cc56d7a7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ce90e242-ea69-4a21-bd14-8bffd662b20d"
        },
        "item": {
          "id": "ba5b3255-8f1c-41f8-b2c7-3bc935c39046",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "04785b44-82f6-4d14-8591-b2b79edd2cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f4538f-22ca-4865-8d11-8deca42acf52",
        "cursor": {
          "ref": "1d09a5e7-ec9f-4c72-93f5-39387f8b7353",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "06751778-9867-4cd8-a0f4-3f1d61b61505"
        },
        "item": {
          "id": "48f4538f-22ca-4865-8d11-8deca42acf52",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6b715195-0f13-462a-a09d-0ba4e770db34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27a7314-461f-4315-8ef8-6342b1d8c059",
        "cursor": {
          "ref": "27c5c53b-28bd-4c10-846d-88f0c9ca7925",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "74c90dfe-ab01-4b4e-a7bb-214ec5bcfa37"
        },
        "item": {
          "id": "a27a7314-461f-4315-8ef8-6342b1d8c059",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b9ea8c30-46b7-476a-b534-f707513674ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18e5cc2-b33a-48ca-ae60-af51dfa04bc6",
        "cursor": {
          "ref": "8d4e8dae-a979-414a-8f06-b83951597093",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8218b47f-2cfa-40fe-b648-3c6e55eb19e7"
        },
        "item": {
          "id": "e18e5cc2-b33a-48ca-ae60-af51dfa04bc6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e6dd6a15-0731-4ac3-b7d8-fc5ebb9b42c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b7d5fd-5f87-4a0d-a41c-16d8c33a55e9",
        "cursor": {
          "ref": "5c743ce6-45d1-495e-adef-54d931cd4e63",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "69cbf3af-6dde-4e1c-b3c6-933d8d277bb0"
        },
        "item": {
          "id": "77b7d5fd-5f87-4a0d-a41c-16d8c33a55e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "acf205d3-1a4f-4730-b7f7-a3071df72503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a46ca72-50bf-4c59-b7dc-4dda1ea8db80",
        "cursor": {
          "ref": "b88b682d-2c02-407c-b196-2ac1878cd738",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b2f0b98d-b4ec-4527-a68e-8f631738989d"
        },
        "item": {
          "id": "6a46ca72-50bf-4c59-b7dc-4dda1ea8db80",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8ce32844-0e52-46fe-b794-c987bc8065e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6c5c68-2bc0-4c32-a388-de75d9d01398",
        "cursor": {
          "ref": "2b76cf73-5427-48bd-93cd-c2a9c6749c88",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "936eb618-0ce8-4645-88a8-7fbd9e352689"
        },
        "item": {
          "id": "eb6c5c68-2bc0-4c32-a388-de75d9d01398",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6a6a595c-3c7d-43dc-b25c-f480853482de",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 616,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842ca23c-62e3-413e-94a3-32c416781d90",
        "cursor": {
          "ref": "2b1c48f9-4429-473e-9414-49ac5b0ab23c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f08a1e81-c062-4cc7-8740-5887ae64504a"
        },
        "item": {
          "id": "842ca23c-62e3-413e-94a3-32c416781d90",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dfe12034-0c47-4e7e-9ff0-427af7660ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6610e0fe-94c5-42e0-be13-caf99aebc3fb",
        "cursor": {
          "ref": "53d20e3f-7daa-443e-95a6-19549f9180e3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fcb3a9aa-c854-4ca9-9373-4a4c57e17d97"
        },
        "item": {
          "id": "6610e0fe-94c5-42e0-be13-caf99aebc3fb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7687c73b-b781-40ad-96a2-4ad07f9d2568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d57295f-0089-41f0-ab08-b7e54da659d0",
        "cursor": {
          "ref": "6f4e74aa-3636-4b41-95ba-f10357f19e4d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "be1511a9-fef1-4bc5-928b-515cc7cb45c7"
        },
        "item": {
          "id": "6d57295f-0089-41f0-ab08-b7e54da659d0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8960b756-7ad7-4c4a-b689-87b4875b9bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa484c7-f6ba-4c40-880c-5bb65c901e2b",
        "cursor": {
          "ref": "417bde04-5f4b-4325-891d-6ea8bb230592",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ced16710-3017-4564-869b-ec12b7299a13"
        },
        "item": {
          "id": "3aa484c7-f6ba-4c40-880c-5bb65c901e2b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8505ed37-af25-460a-b6e8-0efa9cf6a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c902ae-e44a-49e5-8a95-fffc13010b80",
        "cursor": {
          "ref": "046e3cb6-50b0-4400-9192-89ff53d0e0d2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d545828e-60bd-4ab5-ad0b-940682300ea2"
        },
        "item": {
          "id": "c8c902ae-e44a-49e5-8a95-fffc13010b80",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "219bf0d8-3b47-4e07-8c03-30f5cd45283d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9d7da1-2293-439d-abf5-0306290f16a6",
        "cursor": {
          "ref": "f94a5694-00a6-4801-ab41-8fe87dd2a5de",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e37394d3-1086-47af-b8fe-524339d05f73"
        },
        "item": {
          "id": "4c9d7da1-2293-439d-abf5-0306290f16a6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "315e4f28-7d8b-449c-ad3f-1e255f38b91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9159efa2-0daa-4efd-b9b2-7d82da16a4a5",
        "cursor": {
          "ref": "d0d620fc-4f40-4d26-9a25-1cec2cfccd22",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6ebbd029-2f02-4ea3-8138-46366fefb948"
        },
        "item": {
          "id": "9159efa2-0daa-4efd-b9b2-7d82da16a4a5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9c069110-48cc-4437-82a7-f8f452c1b01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c584fc8-b244-4c59-8159-214276b7285c",
        "cursor": {
          "ref": "06311051-c6ff-49ad-8017-805367c294ff",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6785f8b6-53ce-4a88-a29d-c9208c4f3249"
        },
        "item": {
          "id": "6c584fc8-b244-4c59-8159-214276b7285c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "64aec6a3-a588-48e0-8778-c62d68a51378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d94cc6-cd3e-4777-8c18-22e067802825",
        "cursor": {
          "ref": "9f26c0f7-8973-4029-91a0-f00a0b429ed7",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cf1ef70a-95c0-4b3d-a4a0-2ca22e6eb55a"
        },
        "item": {
          "id": "42d94cc6-cd3e-4777-8c18-22e067802825",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bb1d9d5a-a800-4b41-a175-ec9efc7d6f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97112e3a-8be6-4e6a-8f8b-ad4e0ff86eff",
        "cursor": {
          "ref": "c66e06d4-f682-4ae4-a556-9372c9f77a77",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bdf89ba7-3aa2-4e66-a109-bae341518fdb"
        },
        "item": {
          "id": "97112e3a-8be6-4e6a-8f8b-ad4e0ff86eff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e0b4aecf-e26e-4364-b3b7-d8441f78f96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eba68a3-c36f-45b3-9661-99f8b7522c9c",
        "cursor": {
          "ref": "af0cc795-499d-4267-9fa6-fbd62fedb3b2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f1dbf472-989a-410c-b0a3-c79ae9d388d0"
        },
        "item": {
          "id": "7eba68a3-c36f-45b3-9661-99f8b7522c9c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "123fd72e-2d18-465d-bb59-df826171dc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8e9fb8-37b9-4507-8bda-60cc6919e37e",
        "cursor": {
          "ref": "68af0ce2-8197-4e71-af01-42d805050134",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "09ea4cd8-10af-4f26-87bd-9157d0ef74cc"
        },
        "item": {
          "id": "7d8e9fb8-37b9-4507-8bda-60cc6919e37e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e4cb4b65-9ed0-4048-9c33-f4be37a15343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d87c8cf-8736-482e-8ec4-65ff0bdfd1ec",
        "cursor": {
          "ref": "776d8056-cf5f-414e-a96b-7d2c788ac928",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7a69ae6a-d7a9-4ed3-a682-6c0197bb4c7e"
        },
        "item": {
          "id": "0d87c8cf-8736-482e-8ec4-65ff0bdfd1ec",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9ff33067-8532-471c-8bd1-6270976ba83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e597ddb-e4e7-4e53-b921-17b3f0e78089",
        "cursor": {
          "ref": "18cd115c-ac4f-4817-9ed5-567bc6ddfb91",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f82a4040-e558-4fd3-bed7-802cbb96ac5f"
        },
        "item": {
          "id": "6e597ddb-e4e7-4e53-b921-17b3f0e78089",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dba9b214-c2b6-413c-aa4a-bbf630787f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85469eb7-7697-41c2-9ea4-f4934dc8fa30",
        "cursor": {
          "ref": "1f7ba36f-f2ff-449d-a377-d3e06640916e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c6d970ba-55a8-4310-89b7-2a3781b4d4b2"
        },
        "item": {
          "id": "85469eb7-7697-41c2-9ea4-f4934dc8fa30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "282719c3-d19c-4bc0-93e9-05879835134d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29cd44d-f00e-4852-86f6-94192e7ef3a2",
        "cursor": {
          "ref": "8c5de29b-2684-48c7-9392-93e21ab95b61",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "06e6aef9-856c-48ba-95b2-c565e7c387a7"
        },
        "item": {
          "id": "f29cd44d-f00e-4852-86f6-94192e7ef3a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b20ee5ab-5811-4660-839d-8b98611567ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c739b512-017f-4ffe-b139-8b92978eeee0",
        "cursor": {
          "ref": "8f020812-a177-48be-96a3-702d4afec9d0",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ea2f7058-6cdc-47df-ace3-7a677608e5a1"
        },
        "item": {
          "id": "c739b512-017f-4ffe-b139-8b92978eeee0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7cca8f41-476b-4b19-8e67-ce689fe2b838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b721e34a-bb44-4c05-b34a-5595183adbca",
        "cursor": {
          "ref": "bc5bf9ed-fa46-4774-91ea-b3ba707c98db",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eef9bb7c-a035-4679-8870-77bf0cb77e47"
        },
        "item": {
          "id": "b721e34a-bb44-4c05-b34a-5595183adbca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a11fc44f-759c-4c59-bd0c-17c206015ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cd659d-2d6b-43f4-abff-f16606516325",
        "cursor": {
          "ref": "b8d73cf4-3173-4958-88ce-5cee854648ee",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1b4b568b-49c9-4d53-9b1c-b46a92910551"
        },
        "item": {
          "id": "f4cd659d-2d6b-43f4-abff-f16606516325",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "14356560-e717-4541-bef5-052d336394e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e827099-b6b2-4a55-bb2d-bdd522cf86d6",
        "cursor": {
          "ref": "dcfb425b-bd49-448f-967f-0a84b9231ac7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3234797d-a050-43c2-bcae-4704c664bdad"
        },
        "item": {
          "id": "2e827099-b6b2-4a55-bb2d-bdd522cf86d6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bdcc27ab-b6e1-4a9d-87df-dc51ef7cab58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4739793c-44f4-4b14-91da-9e3ad00c59b0",
        "cursor": {
          "ref": "1347018b-df80-47ad-ad23-f9e3b4297795",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "38a80905-8caf-4588-ae55-01fbcc45c4cd"
        },
        "item": {
          "id": "4739793c-44f4-4b14-91da-9e3ad00c59b0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2b3e8f08-0970-43cd-8675-2761c96498b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9732834-ce47-4a78-832b-a09cb4dd640e",
        "cursor": {
          "ref": "a9ba9683-ae3e-402c-856f-0fef185ac9e9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "35961c4f-865c-41cf-821a-ec35219485d7"
        },
        "item": {
          "id": "e9732834-ce47-4a78-832b-a09cb4dd640e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ea76b07d-77e3-442b-aacf-74a1338aa675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f547482-49d5-49ff-9c4f-8ca27a085982",
        "cursor": {
          "ref": "1223e755-f3a6-4f8c-b999-c0772b5fdbd8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "64e69d4a-b313-420f-9b3c-60c39edb4f89"
        },
        "item": {
          "id": "2f547482-49d5-49ff-9c4f-8ca27a085982",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "38794433-21da-4809-9ab1-275659bce25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61a41ca-4bab-4f27-a186-aa9f70e88acc",
        "cursor": {
          "ref": "a4f15705-ee12-45a5-bd8c-2fa745935fed",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b7a186a2-769f-4c31-8e73-7bd3ca8cbf46"
        },
        "item": {
          "id": "e61a41ca-4bab-4f27-a186-aa9f70e88acc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e57c589d-adde-40d9-a59c-76b7e979af5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c9eeeb-d442-4dce-bc24-9f4031ae341e",
        "cursor": {
          "ref": "daece4c9-b249-4502-839b-a05d41762a02",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b8942159-80ca-465e-b84c-9ac972890bca"
        },
        "item": {
          "id": "e2c9eeeb-d442-4dce-bc24-9f4031ae341e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "019352f9-9a3f-4895-b6af-b4c346d34a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd39ab2f-2b81-42d1-bd33-e413c204caff",
        "cursor": {
          "ref": "4c6d382b-2e91-4187-b49b-807ef6602962",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd2e77af-a45c-46d4-a251-3ede03955605"
        },
        "item": {
          "id": "bd39ab2f-2b81-42d1-bd33-e413c204caff",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bd8273d5-f938-43f1-8abf-6a2a016f1375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e166a3-f1dd-4eb7-a32a-3fb990a09a9b",
        "cursor": {
          "ref": "c59d0b34-e379-426c-b7f0-4cec5af4c4f4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "77b41865-015e-47cc-9519-b35aa5727929"
        },
        "item": {
          "id": "25e166a3-f1dd-4eb7-a32a-3fb990a09a9b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "def48e60-df5e-433c-a9a5-82a7d740f621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80582b7c-4880-4dc5-b10e-3adf644404ac",
        "cursor": {
          "ref": "c04e55fe-fbeb-4fdf-b804-7376c79f2b0f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "79dffe0a-74dc-4dbf-a7cc-6db8ee6e1555"
        },
        "item": {
          "id": "80582b7c-4880-4dc5-b10e-3adf644404ac",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "23831751-735a-4b67-816b-49f14002edf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38b494f-f4de-4952-95d2-329746ff8098",
        "cursor": {
          "ref": "15a9237c-1e04-4433-aef3-9d5514c6fb0b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7802a5e8-34ec-44ae-8949-dde50af4d73a"
        },
        "item": {
          "id": "c38b494f-f4de-4952-95d2-329746ff8098",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bc43436a-fcd7-4425-8a00-1bdd661d37c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab81e76e-9f64-46c2-b122-0651438a4511",
        "cursor": {
          "ref": "4999775f-72ef-4cc8-a760-3262d89b806c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fa2ea3db-cd5c-45bb-a40f-f0813044969d"
        },
        "item": {
          "id": "ab81e76e-9f64-46c2-b122-0651438a4511",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2558c330-d8aa-43dc-93f5-a894709f9e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ff5f11-e471-4903-8c16-71858c976ea9",
        "cursor": {
          "ref": "47f18672-a20c-44cd-a892-90ba0d620f58",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "91ddd459-f52b-4b97-bacd-2d1f99dda120"
        },
        "item": {
          "id": "22ff5f11-e471-4903-8c16-71858c976ea9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2484e27b-d845-4c32-889e-0a578b21681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb2e894-99b8-40d7-acfb-06eb5ae8b2a8",
        "cursor": {
          "ref": "06f78ebb-0ac2-4fcc-866e-5ee8229c2493",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d0ed2ee1-464d-40bd-8710-41a5b29760a5"
        },
        "item": {
          "id": "fcb2e894-99b8-40d7-acfb-06eb5ae8b2a8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "495e832c-8414-45a7-a8f7-24bfd3cf87c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efb3b82-3071-4e1e-b9e7-642994c51566",
        "cursor": {
          "ref": "8ab5d24a-0693-4595-b346-4add5e4840a3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fdc93ee9-be83-42d5-bd10-5b3ba07ac90c"
        },
        "item": {
          "id": "5efb3b82-3071-4e1e-b9e7-642994c51566",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7a619e8e-80e5-4b23-8d41-e68e742b43b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e32307-fabe-4ef3-8a91-18ae6fb4af41",
        "cursor": {
          "ref": "58082acf-94b8-4015-a66a-f34df42bff0a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a7762fc7-2f01-441f-a4c1-495e01a475f9"
        },
        "item": {
          "id": "03e32307-fabe-4ef3-8a91-18ae6fb4af41",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "67b48af1-dfa8-478c-9ee9-c5e8fd03ef07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17ff14c-5998-454a-9bca-6081f2e09d11",
        "cursor": {
          "ref": "a5021595-6d43-4995-83b8-0092a0c041d2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c2cd1ff7-57ec-43f2-b4e6-5222899e4f7d"
        },
        "item": {
          "id": "b17ff14c-5998-454a-9bca-6081f2e09d11",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5e73c8e6-2cfa-4b74-a937-5a33bc4ce569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7893cf-fa59-4a80-9ea3-193c305f0ba3",
        "cursor": {
          "ref": "1ea04692-268e-432d-8964-4e9155bf10c1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1b09d062-e398-4aa8-9703-f878d373abd1"
        },
        "item": {
          "id": "fc7893cf-fa59-4a80-9ea3-193c305f0ba3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b2839bd3-eb5e-4791-b3c0-5712294a13c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6284016b-4723-47ab-88f8-58c271bae925",
        "cursor": {
          "ref": "b7cf4447-41c6-4353-b0e3-22edb4df45bd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ff8b40e7-6e89-4dfb-aa75-02351e1a79f5"
        },
        "item": {
          "id": "6284016b-4723-47ab-88f8-58c271bae925",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8efcf758-c446-46bd-9100-6544e73d782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddf9562-5acb-4860-94e8-59ffa03cc022",
        "cursor": {
          "ref": "6046ef02-3624-4147-a7ab-aeb38d416418",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3ffea4a8-c6cd-4b27-8b1f-330e64d778c5"
        },
        "item": {
          "id": "5ddf9562-5acb-4860-94e8-59ffa03cc022",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d19b9052-01bc-4493-97fe-d8c4f47c83bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10323c6-afc3-41c6-8dfb-77719df41d64",
        "cursor": {
          "ref": "3c9718f0-e065-4689-8830-06671fc8902c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3d8bca46-92ac-41f7-b7d9-e6506938f872"
        },
        "item": {
          "id": "c10323c6-afc3-41c6-8dfb-77719df41d64",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9e7f50ac-b2bb-43b0-84ef-924b509c5430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae25e52-24d5-45d8-9a72-4f19a78d99db",
        "cursor": {
          "ref": "91eadf7c-7822-43e4-9a9c-66e55219aaff",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a5b88e5e-33bb-4784-aaaf-871fc3699067"
        },
        "item": {
          "id": "bae25e52-24d5-45d8-9a72-4f19a78d99db",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "977b9d75-8fcb-4007-809e-852df41f6240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825a2020-6966-404e-a656-c82fad1bb08a",
        "cursor": {
          "ref": "fd706d3a-6961-4c2f-9692-693a185bfdfc",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fe0a4c59-e4e6-447e-9775-0ce5bf1813d5"
        },
        "item": {
          "id": "825a2020-6966-404e-a656-c82fad1bb08a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f7d9d50f-3b6a-492f-a595-3002809c2f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8022744-8fd3-42a0-b974-654c82bd7762",
        "cursor": {
          "ref": "5e8d77df-bd8b-4d7c-9e64-1099ceaa70c4",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "186cac60-8b77-43fe-83a3-bf65aadb3689"
        },
        "item": {
          "id": "d8022744-8fd3-42a0-b974-654c82bd7762",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d0e176a2-69e5-41f0-9641-0b96a39e3c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07661f31-453f-4702-8d1d-3d869bb944ce",
        "cursor": {
          "ref": "0e53534d-3a14-4bc0-95db-f75ca557dda0",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ea150d5f-8ebb-4702-96ea-29cef28a13a3"
        },
        "item": {
          "id": "07661f31-453f-4702-8d1d-3d869bb944ce",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "587a611d-a45a-4770-8f73-4591f5f5ebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f08e70-d51b-4396-991b-8fc111d5e455",
        "cursor": {
          "ref": "28c6fca0-b82c-4363-9b18-548fe418adf0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c7244eef-6cbe-4ab7-a23a-deac65e5cd92"
        },
        "item": {
          "id": "92f08e70-d51b-4396-991b-8fc111d5e455",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e4fee02b-15cc-4f2e-bd97-7a2ff29dd2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1e9ff0-a94b-4668-af65-c0cf2869c744",
        "cursor": {
          "ref": "e63aae60-25f4-4f23-95f0-1b7499ddd464",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8f738f33-72f3-4fd2-8427-fa27398e4fe2"
        },
        "item": {
          "id": "7d1e9ff0-a94b-4668-af65-c0cf2869c744",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d6d004db-7144-4e8f-b5c9-f41672f125a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc2083a-476d-4108-bfd8-33081028bd27",
        "cursor": {
          "ref": "0b510afa-d101-4ce4-af33-4da3a337abb3",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a8d0f4ab-aa19-47fc-ac75-f6df3a20c094"
        },
        "item": {
          "id": "abc2083a-476d-4108-bfd8-33081028bd27",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97601563-89b3-4079-a9a2-f70bedca2850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1fe4ba-5a85-47a0-a0ab-14b54072827d",
        "cursor": {
          "ref": "5d959bd3-ae5a-478b-8738-d903844e3e15",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f35f69fe-997b-45ab-8547-3946bb43b773"
        },
        "item": {
          "id": "db1fe4ba-5a85-47a0-a0ab-14b54072827d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "afa56d2f-3e3e-45b2-914b-5862a2b0f7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ef2b12-7cc6-4a87-833a-1dbcb4a65ccb",
        "cursor": {
          "ref": "9d7332e7-4004-422f-8884-bd9adba9a4f9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f6788372-4fd3-4d8e-b3a4-4ab5033a13e7"
        },
        "item": {
          "id": "f6ef2b12-7cc6-4a87-833a-1dbcb4a65ccb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8ead2d58-a6d6-4172-84cf-883ff0d1c653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470a788c-f3aa-4118-b23f-0753bc3ff336",
        "cursor": {
          "ref": "ab9ae983-e842-4716-b7ad-7a75da64da03",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d664be9d-836e-4082-a59a-f70badd6a2bc"
        },
        "item": {
          "id": "470a788c-f3aa-4118-b23f-0753bc3ff336",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6d2f95e0-29b0-4628-9fc3-e8171ee808e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3429ec-eaab-4f3a-a71f-f0fe51723833",
        "cursor": {
          "ref": "7e09ba66-7fd3-4003-8e9a-4b8837bf8cbe",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b875ed99-3e67-463e-aada-0b1a7e126bfb"
        },
        "item": {
          "id": "4a3429ec-eaab-4f3a-a71f-f0fe51723833",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5a46584c-392b-48de-b130-1bcacb6904bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8daf3e-247c-431c-9e6a-0acbcc007c09",
        "cursor": {
          "ref": "477b8382-5935-44e0-8c75-2cb3debf7249",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "90e7692c-5da5-4f58-9645-3d2931dee453"
        },
        "item": {
          "id": "bd8daf3e-247c-431c-9e6a-0acbcc007c09",
          "name": "credentials_issue"
        },
        "response": {
          "id": "db031d4a-dee6-49d1-aadb-67d36750c1ec",
          "status": "Created",
          "code": 201,
          "responseTime": 6323,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbc76bd-ace3-4233-9510-cd3b17098431",
        "cursor": {
          "ref": "dd744615-f199-4549-9069-52e61d4a27b4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aba5d7f5-8b13-42dc-ad4e-50ce87fc3229"
        },
        "item": {
          "id": "bcbc76bd-ace3-4233-9510-cd3b17098431",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "beeb0bcd-7216-4d18-9b5a-716cf0e1ae1f",
          "status": "Created",
          "code": 201,
          "responseTime": 5917,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "560fe23d-9220-4b78-a2d4-f1af76c467d3",
        "cursor": {
          "ref": "1b856e39-f0bb-4211-b0ec-3cccabbe8fdf",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1359ca37-9b0a-4a8b-8e0e-7b68252c8eb4"
        },
        "item": {
          "id": "560fe23d-9220-4b78-a2d4-f1af76c467d3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7d234292-5c79-4b1e-9180-2cd2c267d05a",
          "status": "Created",
          "code": 201,
          "responseTime": 5672,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0d696a-0bee-406a-8ce8-edaeeeff5b23",
        "cursor": {
          "ref": "a0adb84d-dd4f-43d4-b486-e6a138a3fa38",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f135cf51-7a9d-46d7-89fb-25c27f9bf4e6"
        },
        "item": {
          "id": "6a0d696a-0bee-406a-8ce8-edaeeeff5b23",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c469933e-f2e1-4160-b685-37f777523696",
          "status": "Created",
          "code": 201,
          "responseTime": 5744,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0cdf83-0dab-48ef-9c7d-1708d6ccfd9e",
        "cursor": {
          "ref": "0a5f5e6e-f041-418f-b044-253bb1a2340d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e3b82f3c-0eeb-4beb-af84-4b45ca3c7e87"
        },
        "item": {
          "id": "0a0cdf83-0dab-48ef-9c7d-1708d6ccfd9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b5b576b1-acd4-4f09-a7c7-a88b5548f336",
          "status": "Created",
          "code": 201,
          "responseTime": 6095,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "62954364-e53c-4962-9aa8-ddfbbd595197",
        "cursor": {
          "ref": "828b619e-dbf2-4181-a645-de53a4f41ccf",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a4de89cb-6c8d-4289-815c-36f052aa3dbd"
        },
        "item": {
          "id": "62954364-e53c-4962-9aa8-ddfbbd595197",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "40f78720-337b-43d7-8e47-3a47e903c498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "066b041c-4581-4d5e-b8d5-51305fccd550",
        "cursor": {
          "ref": "4de5d28c-ee5b-421a-b0c5-266800474ff3",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a87d89a9-9ce1-49db-9bbe-e82428804014"
        },
        "item": {
          "id": "066b041c-4581-4d5e-b8d5-51305fccd550",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b69e9eef-5400-4f51-9c59-ee4c9e67c31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5460ce5c-32ee-4411-ad98-1e9266029397",
        "cursor": {
          "ref": "a8bc4658-938e-4c13-9049-a2d2471809ec",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b212188d-e27a-45e3-a432-be38c756455f"
        },
        "item": {
          "id": "5460ce5c-32ee-4411-ad98-1e9266029397",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2939e2d2-a686-4f57-9c66-8f24a24337cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56ed29a-e37c-4fa0-a162-4c7c93700767",
        "cursor": {
          "ref": "c3032dc9-67c1-4748-8b41-49d0ba1d67f1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8a73b322-23bf-4ada-bcb0-56b0b265fc5e"
        },
        "item": {
          "id": "e56ed29a-e37c-4fa0-a162-4c7c93700767",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d0574d91-3c13-4642-889e-3afb502e98d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5329d7-8352-4453-960d-4e119c321418",
        "cursor": {
          "ref": "6f456779-9350-43ce-8956-218ef2ede690",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "639ce71e-21f1-468c-8464-753d5cc6c1a9"
        },
        "item": {
          "id": "bc5329d7-8352-4453-960d-4e119c321418",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41778c61-a553-45fb-9c27-630590504622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e17ae46-8ecf-4e17-b7d7-0a4c29f0f0bd",
        "cursor": {
          "ref": "64c4066b-dc27-4cac-a059-0ddbd08eb7c2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "10bdb921-2a44-4b43-9e9b-e2d4d6f01daa"
        },
        "item": {
          "id": "7e17ae46-8ecf-4e17-b7d7-0a4c29f0f0bd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63e686b5-774a-4603-933b-ee8203f9b143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8276869b-cc85-445b-90c3-dc1c96c3e884",
        "cursor": {
          "ref": "9b9a40ae-1af8-4f05-88a4-cf6827fc1ced",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0700f47d-b6b2-40c7-869d-9221012d6944"
        },
        "item": {
          "id": "8276869b-cc85-445b-90c3-dc1c96c3e884",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "929e4df3-1889-4608-b330-48fe67bcdff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a3a7b7-2f64-45c6-af2a-86f988b730dc",
        "cursor": {
          "ref": "68fce5a8-ae83-4c26-8480-490a7c337484",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0b6f01f2-ddb1-4920-8d93-aef38b6739ec"
        },
        "item": {
          "id": "90a3a7b7-2f64-45c6-af2a-86f988b730dc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3e69a1ce-3464-4889-ad19-244f164a4496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb552698-7d99-4fa5-9c65-3fa4f88b07a0",
        "cursor": {
          "ref": "399aab6b-2a55-4e2f-b957-858e31f54610",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "53818cc4-83f5-4ae6-ac53-afaa4490d347"
        },
        "item": {
          "id": "eb552698-7d99-4fa5-9c65-3fa4f88b07a0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6e6b0c60-f624-420d-9bde-f7cb2551b976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e259013-e11d-44b6-aa39-30863b0824f8",
        "cursor": {
          "ref": "5b0b8023-9f55-46a1-a16f-cf7adca44706",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a4efa276-1784-4774-9c13-208c0c9cbf1c"
        },
        "item": {
          "id": "7e259013-e11d-44b6-aa39-30863b0824f8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d0f4f99a-25b6-4eeb-b42a-3caf20d1cf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043e57bd-a605-469b-ba78-7418c1ed5258",
        "cursor": {
          "ref": "b15d7b3f-8341-49d0-97d6-31375450bd44",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fd64c481-9c6f-43c0-b357-2951e0801a9d"
        },
        "item": {
          "id": "043e57bd-a605-469b-ba78-7418c1ed5258",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f535319-ad9a-415f-b006-ce9c3794bc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbaa871-e0cf-4999-af8d-81ea8e1867b5",
        "cursor": {
          "ref": "d60c2f3c-76c9-40a2-b00d-44308e994e96",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0851a7e7-5299-4f50-aa55-9eaac3a73921"
        },
        "item": {
          "id": "cfbaa871-e0cf-4999-af8d-81ea8e1867b5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "924ec676-295a-4029-a0ed-f20531e489c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8481da-f7fa-4469-9a80-fd00ce2e243b",
        "cursor": {
          "ref": "e8311585-63c0-47ee-88ef-3cedeeec95f4",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d2a07ffe-ace9-4b50-b00c-0dfb67e8624c"
        },
        "item": {
          "id": "5e8481da-f7fa-4469-9a80-fd00ce2e243b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e18b427c-9a74-4e1a-9447-b122464a5931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75ea85a-8052-4dcd-b1a9-a25b2b3a482f",
        "cursor": {
          "ref": "4aafd973-94c3-4b4d-abe3-cc5d24787b14",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "971a412b-3183-4581-a87f-e409b549866c"
        },
        "item": {
          "id": "d75ea85a-8052-4dcd-b1a9-a25b2b3a482f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a4f3883-acba-4186-9c93-87f49ebb97c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba480cb-674a-4deb-8208-6bb20fb28838",
        "cursor": {
          "ref": "5d6c722d-e469-4e81-b58a-1bea47447e67",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2c6cd3cf-c537-489c-9ae0-de679ec0c502"
        },
        "item": {
          "id": "cba480cb-674a-4deb-8208-6bb20fb28838",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "42498e82-b9cd-4b9d-ad33-1466e3cbcd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2214d9-e52f-425a-bb85-d5cbcdd99f28",
        "cursor": {
          "ref": "b3ac6ae9-b772-43f9-b02a-2303817dffe9",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d1b13fc1-fdc0-4980-b7b8-4584c38117fb"
        },
        "item": {
          "id": "cd2214d9-e52f-425a-bb85-d5cbcdd99f28",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "56346d32-700a-4d36-a352-e8fc4e04c613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abad359-b75a-4283-baa5-f18ef6081a47",
        "cursor": {
          "ref": "0630328f-73bd-4ddd-8a3f-f06037322495",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a50e8f87-c10a-4800-a8a8-19747af00c61"
        },
        "item": {
          "id": "0abad359-b75a-4283-baa5-f18ef6081a47",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "329b913d-da0a-4234-9ade-b34716be0009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4737d7fc-a32c-491b-87a8-a6665c84dd0a",
        "cursor": {
          "ref": "447b2289-f608-4e73-837b-e85affe88afb",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5d351844-7dbf-4f1d-b748-e96fe8bd1750"
        },
        "item": {
          "id": "4737d7fc-a32c-491b-87a8-a6665c84dd0a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31bafde4-3369-42b1-8d99-587effbfe921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687e06d9-afdb-4814-bb81-5661383d6cd1",
        "cursor": {
          "ref": "d1a0e16a-35b1-484d-9a67-e60d70b22e5a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "42897914-64ed-4490-84b7-0cbb8b5e5aaa"
        },
        "item": {
          "id": "687e06d9-afdb-4814-bb81-5661383d6cd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ea0a92c3-c41a-4903-8de0-589e0728c999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9a9b15-45ba-42ea-aea5-c79f2e235c23",
        "cursor": {
          "ref": "925a335b-d457-49c9-a818-c1f74041cb5f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e5add5f7-0b39-4537-9a59-4e6bca37c673"
        },
        "item": {
          "id": "5c9a9b15-45ba-42ea-aea5-c79f2e235c23",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "956f4dc5-e3b3-4f9a-9f8b-b521d0e5025c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33041a48-6780-4135-beaa-dd8b73618bf8",
        "cursor": {
          "ref": "74e1a3c8-f0ed-47f9-b005-b881aba4f6d5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "682629ce-d7c6-4b82-ba09-a4134abc6b14"
        },
        "item": {
          "id": "33041a48-6780-4135-beaa-dd8b73618bf8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9cf3394d-6a21-42e2-ab6b-8caf89f12a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509b6bd9-4346-463a-9864-6f64a8740940",
        "cursor": {
          "ref": "9a13c487-6dbb-45f2-922f-fa8c4d2e0bea",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9d319d04-5037-4dd2-a83e-e969fc0883fa"
        },
        "item": {
          "id": "509b6bd9-4346-463a-9864-6f64a8740940",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90671f36-2040-4e81-8237-126961dd4c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b572f0-a787-441d-ba53-6a0b4d5d519a",
        "cursor": {
          "ref": "d69f95f1-92da-4cf2-9660-2d696c36453d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f472ef3d-da49-4742-8d6a-fd98f27e68e8"
        },
        "item": {
          "id": "06b572f0-a787-441d-ba53-6a0b4d5d519a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f6c9007-26d9-4a89-9afa-0e0fb9acc815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d0f7d9-d69c-458e-9e50-85da3e68ac2e",
        "cursor": {
          "ref": "2d897100-3c43-4a0f-bfd4-12bbbad44c04",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fac7e293-6835-42d2-9b8e-895068052421"
        },
        "item": {
          "id": "20d0f7d9-d69c-458e-9e50-85da3e68ac2e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "83d82166-2cc7-4921-91cd-06afaa9217ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1374f8ea-176f-4da1-894a-1178a70831ea",
        "cursor": {
          "ref": "c525d0eb-8462-4b77-9ec4-9abf912d338d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7a222d2d-35f2-45d8-8780-f9d34883beee"
        },
        "item": {
          "id": "1374f8ea-176f-4da1-894a-1178a70831ea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d051826b-538b-45bb-a8d6-3ca3243c3d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9780b68b-807c-4607-9fb5-dd060a91a34c",
        "cursor": {
          "ref": "00886c67-f7ee-4380-bcbd-80506bd1f0f8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9399371e-569a-43b3-8696-1de3c33e19a8"
        },
        "item": {
          "id": "9780b68b-807c-4607-9fb5-dd060a91a34c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d76c0b5-cb14-4e2f-802a-aa0818b99a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a4a8d6-f007-45ce-8693-97928282dfa7",
        "cursor": {
          "ref": "c422dd97-48f2-4123-999c-73d835db4c77",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fbf02d88-e76a-4f85-8ec0-074af9893679"
        },
        "item": {
          "id": "c0a4a8d6-f007-45ce-8693-97928282dfa7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c1cb5a3-fd70-4555-b2fd-5570bae91764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45612dc-098b-417a-82b8-cc82144d373b",
        "cursor": {
          "ref": "ea8d049e-a5f0-47c8-80d9-5c56756efda1",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b3faa29d-5029-41ef-9c7a-f2db11dc90ab"
        },
        "item": {
          "id": "d45612dc-098b-417a-82b8-cc82144d373b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ae46243-096f-4f80-aaa5-05909e295b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0ef171-5f8f-407e-bf4b-924aec256b14",
        "cursor": {
          "ref": "d25cdbc1-51fb-4fe0-95f9-3fb4e65908fb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17bd4646-e1cc-4e09-938e-7dc5fdf4bcc0"
        },
        "item": {
          "id": "ee0ef171-5f8f-407e-bf4b-924aec256b14",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bff6744b-0e76-4cca-9c04-ecb68b6e7314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fc79e6-4731-49d0-84e6-6408dcd4bcf2",
        "cursor": {
          "ref": "076cbb34-02fd-4c0e-82ae-84c954bfca13",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "040bd85a-b678-4166-a8c6-4686262e0b5e"
        },
        "item": {
          "id": "27fc79e6-4731-49d0-84e6-6408dcd4bcf2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "40bc0260-2e75-46e0-ad8b-17e16caf80aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef43bcf-d0aa-4e67-a060-d82b0a8de794",
        "cursor": {
          "ref": "ca5eb01a-ccaf-4108-91cf-3644f457446b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c3c4c7d0-f6f1-4233-be3a-e3ee45d76329"
        },
        "item": {
          "id": "7ef43bcf-d0aa-4e67-a060-d82b0a8de794",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ce5be387-fb00-4d6d-a424-7ec872381b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1475aa92-f6fc-4df5-bc47-fb60954bbc89",
        "cursor": {
          "ref": "399d92a0-f19c-4980-93a7-4cb5052a1d5a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a6bce58a-5b7c-4c44-8927-560291d51e18"
        },
        "item": {
          "id": "1475aa92-f6fc-4df5-bc47-fb60954bbc89",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1f337e84-bde1-48a7-a20d-e2fcf49e6c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e26e08a-e267-4ee7-9218-5c73a9791b2f",
        "cursor": {
          "ref": "a56f9557-bee1-41ba-8a6b-e9e3c49552fd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d772d990-e1f8-482c-a00f-971a3082aa01"
        },
        "item": {
          "id": "6e26e08a-e267-4ee7-9218-5c73a9791b2f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2a07087c-b0c8-4cc0-8035-b3a4d3a24508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aff6ee6-6f09-493e-ae2e-261a7954e3e4",
        "cursor": {
          "ref": "89cde811-3c0b-410c-be3f-0c825ce8e5a9",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7384626d-d717-47f7-b6d0-bc1e448dea6a"
        },
        "item": {
          "id": "0aff6ee6-6f09-493e-ae2e-261a7954e3e4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a25b89b-7791-4da6-866d-d8113469b6fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501867bb-c187-44df-9f8f-cf579582b398",
        "cursor": {
          "ref": "035647b5-2a40-4516-889e-15ade82eb940",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "125867e4-88d7-47ab-a8bb-e1687cca664b"
        },
        "item": {
          "id": "501867bb-c187-44df-9f8f-cf579582b398",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7ad131d2-2d08-4901-ac14-0c93c2b9b027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc0fea0-bff8-4cb8-93b0-63fc20a45a10",
        "cursor": {
          "ref": "3ea54142-ef7c-4cfb-8f51-6279fe841299",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9a00d43a-c9f7-4224-a9de-6856a541c36b"
        },
        "item": {
          "id": "abc0fea0-bff8-4cb8-93b0-63fc20a45a10",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1d1850de-cf9d-4d3e-9853-c06c945e1aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f7e838-0e05-44cc-808f-d2e65e43d4ba",
        "cursor": {
          "ref": "99341960-5ae9-4dc8-b84e-795b12d93189",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cd0f4ba0-6200-41b0-8699-b1592e0d7901"
        },
        "item": {
          "id": "c4f7e838-0e05-44cc-808f-d2e65e43d4ba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "de719abc-6f7f-4d43-8cfb-f7f6ae5046e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14228e2-b89f-43bd-a264-6ae4cf5a7c5c",
        "cursor": {
          "ref": "dca77d0c-f4f2-4252-905e-213f5ec5f945",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a77022fb-fec2-45fa-9784-f6d04af32049"
        },
        "item": {
          "id": "d14228e2-b89f-43bd-a264-6ae4cf5a7c5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2441f9f9-cd82-4063-8109-c7be2577a085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897b1d64-3a76-4e3f-af1a-a81def049972",
        "cursor": {
          "ref": "1d7fb1f4-6a43-44a9-88d6-767f84fe8e63",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "25975a36-369d-4feb-8975-a0128a30a4d3"
        },
        "item": {
          "id": "897b1d64-3a76-4e3f-af1a-a81def049972",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f918c3e6-b240-44c4-9ca0-96d3209d3e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5143e3b1-0711-488a-9118-6016c9d020a5",
        "cursor": {
          "ref": "073168d4-f089-4098-8185-ce37ad24e339",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c04e934d-df2f-4370-9560-ed56a6c9f18c"
        },
        "item": {
          "id": "5143e3b1-0711-488a-9118-6016c9d020a5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd98b939-87b0-48e5-9dbd-fd5546711025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b73076-74c7-44c4-aa70-0b4990dff40f",
        "cursor": {
          "ref": "5da46a59-214b-4bdf-8477-93fe80638fc2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "67c701ca-835b-4ec8-8dd7-1029e6825fb2"
        },
        "item": {
          "id": "c2b73076-74c7-44c4-aa70-0b4990dff40f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "42f2c2fc-e1fd-4717-b73a-972e65eeaddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb699cb-0c77-4a7a-92f0-e41627d11d46",
        "cursor": {
          "ref": "c2705d53-6321-4e2f-9271-21408ec9a9ee",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb61b4d8-5b54-428f-b814-5d03799bc81b"
        },
        "item": {
          "id": "6bb699cb-0c77-4a7a-92f0-e41627d11d46",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c0937764-eb6f-41a9-a8e3-66a9352275b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763a18a8-2b63-4012-ad9d-ff7c6f4b0007",
        "cursor": {
          "ref": "dcb43b96-082b-4732-821c-83d05d7034c0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f52c8bf1-b1fc-401c-a7f5-31a4d1188e78"
        },
        "item": {
          "id": "763a18a8-2b63-4012-ad9d-ff7c6f4b0007",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c967d0ee-ab50-4986-8b50-1359cb795227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2d9719-712b-4d28-bcd2-2656e85e6394",
        "cursor": {
          "ref": "ae010702-f4c0-4eaf-be64-a99ee4bc85a4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a78d1508-6b7f-4fd6-be1e-cd3358bf817e"
        },
        "item": {
          "id": "eb2d9719-712b-4d28-bcd2-2656e85e6394",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f504faf-90ce-4cf1-b090-0d3d6358b3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c340545a-8cd9-43d2-ae98-fb2469ba81d7",
        "cursor": {
          "ref": "7c264024-252d-4c5c-81cc-ebbd5e17a7ca",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "62a522bb-e7b9-4b74-8467-1b5c5b16e601"
        },
        "item": {
          "id": "c340545a-8cd9-43d2-ae98-fb2469ba81d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "96cb510e-c670-47cb-95a6-ec12aa4deda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d92468-c607-4c58-aa36-a3c9da090238",
        "cursor": {
          "ref": "e537b4c0-6a5b-4586-af8f-0efdb2de3405",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "73125bf1-4942-4f3e-a7a8-5f3c4bcaac35"
        },
        "item": {
          "id": "a4d92468-c607-4c58-aa36-a3c9da090238",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6eb677c8-699e-49d2-99a4-16950ee3e63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2350ca1b-5871-4e44-815a-7e58e8b25b76",
        "cursor": {
          "ref": "a06534dd-3b17-4ab1-b9e0-8299ae97d9b9",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4e546d97-65b5-4070-b934-2fd2f8f33af1"
        },
        "item": {
          "id": "2350ca1b-5871-4e44-815a-7e58e8b25b76",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c8952edb-730b-436e-b4a3-6db3193357cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662ea426-2d44-4fb6-8c22-77f7f7ccdc1d",
        "cursor": {
          "ref": "3007abbf-039f-4b93-bd63-0bb884f8564e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43f145c8-96de-44af-ac50-cdac4bb47018"
        },
        "item": {
          "id": "662ea426-2d44-4fb6-8c22-77f7f7ccdc1d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e76dbea0-8b3d-4d22-bc15-49de9e3aacc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afeab18-1134-479a-bf54-98087d197127",
        "cursor": {
          "ref": "5d831a1f-bb60-4f89-be13-a478e4c1f09c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cf3c3ea9-ad44-4e00-b5d9-79796f869763"
        },
        "item": {
          "id": "7afeab18-1134-479a-bf54-98087d197127",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "48f1e2a0-427d-4138-80af-18cccf018fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752ce4c5-4cc0-4990-98d9-bc8efd61ee42",
        "cursor": {
          "ref": "390a8228-e288-4df1-8c04-93476def6377",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4b86a347-5c53-40a9-b2b0-2f62650080b4"
        },
        "item": {
          "id": "752ce4c5-4cc0-4990-98d9-bc8efd61ee42",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8fa40a17-1331-4196-a85a-b20b4fc92855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01c0d74-3ba4-43d7-8dc0-0d5199a433f2",
        "cursor": {
          "ref": "6bc7f918-12b0-47a0-b493-d068c2ef1e25",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b00b1d40-973d-4476-9128-3fb8b556aa72"
        },
        "item": {
          "id": "d01c0d74-3ba4-43d7-8dc0-0d5199a433f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59767dd4-cad6-45bb-a74d-59a6ef6c7741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d191fa3d-a2e9-4d33-8d4c-aad87ec0adb0",
        "cursor": {
          "ref": "7f598fc5-7e5e-4ccc-8a17-867063f2dc71",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "01ce230b-70ce-4acc-8b40-e1b501ce870e"
        },
        "item": {
          "id": "d191fa3d-a2e9-4d33-8d4c-aad87ec0adb0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "16f861b5-d4da-4289-8d04-22e95a4ad26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a045834-3437-4c0a-be34-1380c77041bd",
        "cursor": {
          "ref": "9ce13e2b-19ef-4b07-85fe-13df8581c57f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d3cd8a18-4965-4c5d-8358-1b3d522ab540"
        },
        "item": {
          "id": "9a045834-3437-4c0a-be34-1380c77041bd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "62dc4bf8-2a32-453b-bd40-10e77e57b445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e2e5a4-e48a-43b8-a050-401d33d7e5a4",
        "cursor": {
          "ref": "f305a5ba-bead-438b-b78f-bab7ea80eacc",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f789844b-47f5-4d0d-871b-eaac9c2f6aed"
        },
        "item": {
          "id": "89e2e5a4-e48a-43b8-a050-401d33d7e5a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d0673afa-1ed3-43a3-818d-ba6349590f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad703b65-4ac9-4408-a11e-3d4b75b08ec0",
        "cursor": {
          "ref": "ed3c1ba3-78a0-4eb5-a288-90bda6b5a34a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4420ea78-4dc3-45b9-8026-e5e76ec49465"
        },
        "item": {
          "id": "ad703b65-4ac9-4408-a11e-3d4b75b08ec0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c0de5227-e6b4-4207-914f-d6de1a15ca5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05097749-ed88-4326-b8fd-5fec851959c4",
        "cursor": {
          "ref": "e3e676db-c753-4b57-94f4-77712096f459",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3595071e-2cf7-4b12-a8c2-b8b73598cdfc"
        },
        "item": {
          "id": "05097749-ed88-4326-b8fd-5fec851959c4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "604dc011-851c-4c4e-9d6e-2476fcc247eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8085a2b8-683d-4535-9630-22c8e5dd1705",
        "cursor": {
          "ref": "ac12df99-b218-47e6-b89e-e889844ddf62",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "834471f3-0350-4945-958a-73ca07b2fced"
        },
        "item": {
          "id": "8085a2b8-683d-4535-9630-22c8e5dd1705",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "68308fe2-7f96-47f0-9060-3fb85e00df8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaba89d-0e95-46ad-80eb-e873462e9d97",
        "cursor": {
          "ref": "64a2ed91-7a2b-408f-99d1-7c9833b2d093",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7e1be51f-0265-4ccb-833b-9d7eec964c7c"
        },
        "item": {
          "id": "fbaba89d-0e95-46ad-80eb-e873462e9d97",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eb5cb01e-d616-44b5-a637-c7aa2913a2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c63a5a5-1c31-4a56-85e9-2241cb5d6ac0",
        "cursor": {
          "ref": "f630c4e7-5967-4a53-b818-5f28c363e2cc",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "22ce2094-bcae-4a86-bb0c-06c23074a71f"
        },
        "item": {
          "id": "5c63a5a5-1c31-4a56-85e9-2241cb5d6ac0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0fb3babf-c7fd-4caa-acf6-1f1d90719ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3edb94-2946-48c7-bc5e-b18bc22b3358",
        "cursor": {
          "ref": "5fbe7c84-9c0a-49dc-a872-0ea59448d33d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7a4e7a81-5d40-4eb2-b51f-7c8fd8d5e595"
        },
        "item": {
          "id": "cb3edb94-2946-48c7-bc5e-b18bc22b3358",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "21360873-151f-4a3d-861f-fe4622cae12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d370cc4b-68ce-4310-9056-77ef54c62351",
        "cursor": {
          "ref": "baf60ec1-4c7d-4ba2-b62a-c2db7d57abfd",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bd7fc4cc-7b58-41d2-b637-0c21a9eb2ebe"
        },
        "item": {
          "id": "d370cc4b-68ce-4310-9056-77ef54c62351",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e7a3ada0-ed83-4bb5-a45d-ce4603a7b5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfc62ab-561c-49ba-8f97-5c1a32adafec",
        "cursor": {
          "ref": "7197560e-ba1a-4ae5-81ce-6751b7a2c37b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "505b1945-fb9a-4fb8-adaa-c57558d5e721"
        },
        "item": {
          "id": "9dfc62ab-561c-49ba-8f97-5c1a32adafec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b8d3654-4c92-400f-870e-366a6d8acfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e5e61d-6ab4-4e98-8d22-ee9140ee59a7",
        "cursor": {
          "ref": "84344e9f-653a-4dc4-a598-8b0a9ead0903",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1e87b512-9dd1-4cc6-8000-9567ab577cbf"
        },
        "item": {
          "id": "b0e5e61d-6ab4-4e98-8d22-ee9140ee59a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "baad3703-56bc-4d56-8625-721f84b98de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41acb9e2-f266-4eb7-9a4b-396479f83906",
        "cursor": {
          "ref": "b4e5de5c-e9b5-4336-b3cd-a24ab2503978",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "57f2bebd-4342-4876-811d-ca9f1f585646"
        },
        "item": {
          "id": "41acb9e2-f266-4eb7-9a4b-396479f83906",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f7f53232-6ecc-4a2d-adad-ce96bb9011a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67949f1b-b20e-4660-a6ea-9f5034921a11",
        "cursor": {
          "ref": "db24dad0-80d5-47b6-8a88-d99cba46c356",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e0ca96af-f6e0-40a3-aaf3-e42beb475bf6"
        },
        "item": {
          "id": "67949f1b-b20e-4660-a6ea-9f5034921a11",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "35ad325e-e88b-41cf-86b7-77005a721343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd53807-c7fc-4fd7-9c1b-28a5ee6bc9f7",
        "cursor": {
          "ref": "6d681ed9-6622-4a28-963a-9562b28efbfa",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b24bf1e2-58cc-46ec-a7d3-1bd45ef51475"
        },
        "item": {
          "id": "0cd53807-c7fc-4fd7-9c1b-28a5ee6bc9f7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7ff8b434-d1da-4072-81f1-77cf91b009fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea33e692-02b7-4475-a627-d4c1af5350fe",
        "cursor": {
          "ref": "9651b57b-c040-4add-b4fe-f619db7c0e35",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "26aee361-8dbc-46a7-b5ec-6636dbaf44a3"
        },
        "item": {
          "id": "ea33e692-02b7-4475-a627-d4c1af5350fe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9186d275-af5f-460a-a253-ae914fdb39c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b2d4a1-0f19-4623-9fd5-61dda66a242b",
        "cursor": {
          "ref": "1535d79f-1ee6-4441-b15f-279665ff47e0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c62f85e5-c678-41d3-a10e-bd5ae72f6141"
        },
        "item": {
          "id": "a9b2d4a1-0f19-4623-9fd5-61dda66a242b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d78f83f5-5bcc-4ffa-b0f5-4eba555070bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5270099c-afc6-4f6a-8e6f-8a7efcd4f041",
        "cursor": {
          "ref": "b63f79b0-ea97-4ef0-a6fc-fe3c0d87f5fa",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7c1fa2c9-8a93-4427-915d-e23a6d5c2c2a"
        },
        "item": {
          "id": "5270099c-afc6-4f6a-8e6f-8a7efcd4f041",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cf0b5de2-8782-46d0-a22b-e9c6b5aa8213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c133acbc-0334-48c0-a992-790c058ef87d",
        "cursor": {
          "ref": "72605f26-cd2d-4b8e-a647-ccc32eb3bdb5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "15e178f7-c673-49ef-979e-ac40274343a6"
        },
        "item": {
          "id": "c133acbc-0334-48c0-a992-790c058ef87d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3ff50efc-3be3-463c-8984-e12098c36602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2d1524-cd8e-47ed-95cf-033d51b8e673",
        "cursor": {
          "ref": "75ae2cf7-8261-49b1-b584-da20ceb72ac1",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4a039e50-8a2c-478a-b767-732a7c215571"
        },
        "item": {
          "id": "3e2d1524-cd8e-47ed-95cf-033d51b8e673",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9698532f-0235-4c5c-8add-cc33fde1f7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6979dd7b-3290-4b33-9af0-fdf4976f2bee",
        "cursor": {
          "ref": "a6fa0614-92a1-49c2-84bb-bc0a855f07d3",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b1f25ab6-f445-4356-9506-d45b11068f9e"
        },
        "item": {
          "id": "6979dd7b-3290-4b33-9af0-fdf4976f2bee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dfbe0019-708a-4d96-84f3-4ffbba0b3747",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24a0e48-9002-4a50-b8cd-32f2981ff160",
        "cursor": {
          "ref": "a9ac8ecd-55ed-406b-baf1-d5e97000f598",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7974b9e7-1050-43c4-9946-349e5c7a84e8"
        },
        "item": {
          "id": "a24a0e48-9002-4a50-b8cd-32f2981ff160",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7ee520b5-6fe6-41ae-bed2-45909c50b0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48894f6b-07fe-4637-9512-e68c601344aa",
        "cursor": {
          "ref": "71871eec-2bd9-4dd2-b2b5-34e003988ce9",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "90a08e01-064c-41dd-abfa-e774c7bd09ec"
        },
        "item": {
          "id": "48894f6b-07fe-4637-9512-e68c601344aa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5a574585-925e-4071-b4b6-d038a1c76faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32846f77-d70b-48a5-a717-5e11c882bff3",
        "cursor": {
          "ref": "5f1a97ab-2e01-4d2b-b6e1-296462f052c4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b13a5c12-24ac-414e-be51-43bc8c86b58e"
        },
        "item": {
          "id": "32846f77-d70b-48a5-a717-5e11c882bff3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9f09e40c-e0f5-4d90-8241-85dd5f0ba887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1708926-d359-4a11-9448-361659cd9fa7",
        "cursor": {
          "ref": "d924b030-18c4-477d-bf52-228dfb10a06c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "170de740-1694-4c03-bc5d-3732f0cfa6b8"
        },
        "item": {
          "id": "f1708926-d359-4a11-9448-361659cd9fa7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "91cf894c-de20-4a1e-9476-777afcc6dd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d994221-4932-45d9-9044-caf43fcb783e",
        "cursor": {
          "ref": "28005a14-580d-476e-936b-12f1aa0bf5e7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bfea4ddf-cafe-43c9-b5bd-8fa03a2e160a"
        },
        "item": {
          "id": "9d994221-4932-45d9-9044-caf43fcb783e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "34b4f8b4-4d57-4a8e-878d-2e833db470b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc46014-3038-450c-a6fc-2e27c3ee0a3d",
        "cursor": {
          "ref": "9f939520-5917-4ac6-a988-ca7f4092c38d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b502d22f-0f8f-4d45-b4d8-4459e8b786ab"
        },
        "item": {
          "id": "0dc46014-3038-450c-a6fc-2e27c3ee0a3d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4e68d08c-2234-4831-9305-8ee965e452c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c618b3a7-24de-490b-9345-34ce62cd4dac",
        "cursor": {
          "ref": "7d27bba3-445c-4c93-b655-0f651f041a67",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "808c8b4a-3049-4864-aa5e-6b3594bd4d57"
        },
        "item": {
          "id": "c618b3a7-24de-490b-9345-34ce62cd4dac",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ce475dc6-dfb5-4f18-925f-5b9b15c06007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f4d27e-c233-4ed7-8a68-42e6ab083bd0",
        "cursor": {
          "ref": "14a24f6f-6599-4f72-9327-04a5753b7449",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3ada81ea-0ab5-404b-876f-d6e50fb9d59b"
        },
        "item": {
          "id": "26f4d27e-c233-4ed7-8a68-42e6ab083bd0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3977ff0-eba3-40f8-8f7b-9883bc1e0511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436c9171-00c3-40bd-b44e-e339ec703386",
        "cursor": {
          "ref": "1fc1d0f0-8e2a-41bf-b068-52d6cf3f20a6",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "767933dc-f6bb-41b9-ad70-2eb69e2dddcc"
        },
        "item": {
          "id": "436c9171-00c3-40bd-b44e-e339ec703386",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "101664ff-2413-4001-af0f-a894cdf03407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415f0aa6-e4b7-434f-9b87-f7f5096fb000",
        "cursor": {
          "ref": "6ef6ac30-7a28-418c-8d51-ec5484e78986",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ca7f41cc-d81c-4d16-a914-150611544b85"
        },
        "item": {
          "id": "415f0aa6-e4b7-434f-9b87-f7f5096fb000",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "95567d7d-0f7c-4085-a5df-5866f34d45c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4909b3b-0b9f-4b1c-8388-abc2a121e2c1",
        "cursor": {
          "ref": "976c320d-4e4b-4948-8217-493868d96d4c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f1d3dfcd-5438-42d6-928b-a16afb8021c4"
        },
        "item": {
          "id": "d4909b3b-0b9f-4b1c-8388-abc2a121e2c1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "687cfe73-73cb-4307-aa9a-3d44c6c5920f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46da92f-c21e-44f8-8768-9465fe79a033",
        "cursor": {
          "ref": "09cd2982-3ecd-4f90-9369-d8bc0a617e7e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "81930703-9277-4168-832f-03eff03532ad"
        },
        "item": {
          "id": "f46da92f-c21e-44f8-8768-9465fe79a033",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9433e293-d9ee-4a8b-9ff2-a294436b9686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c6a597-8b36-41f9-9e71-3426253a90c6",
        "cursor": {
          "ref": "0b949a25-c0ab-45e6-b6df-59bc9b4967cb",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "63f73549-c6b9-4838-8a7e-82eeeacbf409"
        },
        "item": {
          "id": "d8c6a597-8b36-41f9-9e71-3426253a90c6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eb0b8ff9-cb03-42d3-a076-e69ac1aadd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461a2b45-3346-4493-bde4-b65d2986b2a2",
        "cursor": {
          "ref": "e4b5a4af-11cf-4afe-93e0-0d3fdb660273",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4bb93a6f-9299-45b5-aeb5-80f6023963c9"
        },
        "item": {
          "id": "461a2b45-3346-4493-bde4-b65d2986b2a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7496a34d-c237-4f9a-992e-117d3c979ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5071c5da-a59c-4510-8bdd-3bfa221d8e7e",
        "cursor": {
          "ref": "b5f31642-0c3d-4e04-afc2-86f9380ccc16",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d1597b48-f2a8-4973-a95c-6a3deba9d430"
        },
        "item": {
          "id": "5071c5da-a59c-4510-8bdd-3bfa221d8e7e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8ef5c529-1a8a-4328-87e7-e0585a5d82c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f731c2-80cb-46e5-a04c-61ddd52698c0",
        "cursor": {
          "ref": "dd30f95f-bcd7-408a-9b64-d86f48e1a7f6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "551ff6a2-0121-4600-832f-8bc53bc0969e"
        },
        "item": {
          "id": "99f731c2-80cb-46e5-a04c-61ddd52698c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7e415617-48eb-499f-b295-2e475232c143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc9b678-2d52-4850-8245-9f30898ddd9e",
        "cursor": {
          "ref": "363d9e82-7903-4916-906e-b5f3503d88e8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ca5f1fa-de02-41ec-afc7-4e3df8b86c84"
        },
        "item": {
          "id": "ccc9b678-2d52-4850-8245-9f30898ddd9e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d2805116-99b0-4610-afd8-8bb5887af85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e50fd41-cc47-46b7-be45-88093a57623b",
        "cursor": {
          "ref": "151609bb-b920-47b4-b785-6d96445cf3ee",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "93a28bbf-2077-481e-9995-0ef11863a84c"
        },
        "item": {
          "id": "8e50fd41-cc47-46b7-be45-88093a57623b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "047f8f61-9f8f-49e6-bfd1-452ba3883436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd2bb41-deae-4300-aac0-dabf1177e011",
        "cursor": {
          "ref": "0c393827-7658-4e8e-9d87-405d1c311c67",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6d3ba489-5240-47f0-bf7e-6d7d00924dd3"
        },
        "item": {
          "id": "2cd2bb41-deae-4300-aac0-dabf1177e011",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "26d0838f-c3de-4fc1-b16a-5e96401eaf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e17d253-8325-4b27-aa19-d48e331b7bfa",
        "cursor": {
          "ref": "3710390b-6a2e-4d7a-9bbb-0c57a2a1badb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eaed0cce-1f9f-4271-aded-e5a829e7c4a3"
        },
        "item": {
          "id": "7e17d253-8325-4b27-aa19-d48e331b7bfa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "abe80efd-aa8e-4207-831e-3a01bbac12b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab242200-16c9-4c4c-b0e5-e14c0c32147c",
        "cursor": {
          "ref": "898712fd-cd3b-4711-a1c1-6dddd8223cb0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8bc0a4d2-a4fa-4d3c-8216-45a71d647f5b"
        },
        "item": {
          "id": "ab242200-16c9-4c4c-b0e5-e14c0c32147c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "038f6113-6700-4ed3-bc5a-5f8e34364c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9989ce-7318-4bfe-866c-01510bc69260",
        "cursor": {
          "ref": "e52b4496-f7b8-4d95-b9bf-5859de8a0433",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0a78d8e8-173b-49ee-a445-f2a876541d37"
        },
        "item": {
          "id": "9f9989ce-7318-4bfe-866c-01510bc69260",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f66fc30a-bda2-4ab2-a7b0-c0d14a9db4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d3e743-ff03-462b-b2c7-11ac18efd542",
        "cursor": {
          "ref": "d534e7f7-0a01-4784-83ec-6004c4899458",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c8835f8c-6e05-4506-b0cf-d45b1570f6fe"
        },
        "item": {
          "id": "12d3e743-ff03-462b-b2c7-11ac18efd542",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c224b632-7c0d-4db2-ad73-6e48f013f132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d725dd3-6063-4575-820f-7d779c12e3a4",
        "cursor": {
          "ref": "f704df0c-de4e-4f08-9b24-564e093f3832",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "85505a54-7672-4674-87a4-7630a45ea020"
        },
        "item": {
          "id": "0d725dd3-6063-4575-820f-7d779c12e3a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a3e932cd-5b1b-483a-99e0-3c946632c0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bf2855-24af-4b87-b3bc-2924f5891877",
        "cursor": {
          "ref": "c1a9de98-5d22-4095-950d-88b42a53a3a2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bf4f29fa-6f3c-42b8-a680-13952ce74ef0"
        },
        "item": {
          "id": "e5bf2855-24af-4b87-b3bc-2924f5891877",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f5f0f8c0-c06d-4f3a-8b52-fdefb71ec5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73502381-b1b7-472b-ba26-3ea606b9f1a9",
        "cursor": {
          "ref": "34487ea8-22fe-4a49-b525-7bc467f0c262",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ce412c62-acd0-44f7-b7eb-b6bdb3648ab5"
        },
        "item": {
          "id": "73502381-b1b7-472b-ba26-3ea606b9f1a9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "54aa859e-ecca-4575-b534-7f37eebc9099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626a8fa5-8ed6-4b86-bcd4-204588c7642d",
        "cursor": {
          "ref": "4746e922-6297-44d1-a500-63b962b7e104",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b5a7602c-6ccc-435e-ab39-0454550fa20f"
        },
        "item": {
          "id": "626a8fa5-8ed6-4b86-bcd4-204588c7642d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "96d29144-0e2a-4cc7-a728-6856d04fd055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6389a1d7-4791-46ba-b844-d1247a65b857",
        "cursor": {
          "ref": "9e480d6a-e7c6-458d-9d30-34df9e94f732",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f6279c44-7320-4b14-98ce-19f9e15e6020"
        },
        "item": {
          "id": "6389a1d7-4791-46ba-b844-d1247a65b857",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "db017457-80cf-4433-b057-99f890613d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145739f9-83ed-4f33-900c-f741537c86ca",
        "cursor": {
          "ref": "3fc8080a-c324-447b-a1e7-a4fbc2a76f39",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e51da4ec-b691-4fa3-861b-61e0afa13e70"
        },
        "item": {
          "id": "145739f9-83ed-4f33-900c-f741537c86ca",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "026cbf38-73c7-4540-9c92-dad6760c17d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4453083e-1b2a-4979-b5f0-ac591243fbd3",
        "cursor": {
          "ref": "6a0c5f0c-9103-4ee6-81b2-78af2e1522cd",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9fcae4ce-fb5f-40f3-b5df-17a8ea303bf8"
        },
        "item": {
          "id": "4453083e-1b2a-4979-b5f0-ac591243fbd3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7390a688-fcd3-4267-8889-b26bd4cd91cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5ad2e1-dc98-4874-b41b-f9be78346058",
        "cursor": {
          "ref": "f578cc42-22e6-4f7a-bd26-535264a198e9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02d57487-d45d-4aa2-8539-dc25a3c5baca"
        },
        "item": {
          "id": "7b5ad2e1-dc98-4874-b41b-f9be78346058",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "85758054-aaf8-40f1-a5c4-3b45e827a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a444a4-5ac9-436e-8015-6165b7fae19b",
        "cursor": {
          "ref": "7c45b16c-5a36-4ebb-9dc4-4cdbc792a176",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a212ae3b-a42e-4140-91c0-e66e9b3e771f"
        },
        "item": {
          "id": "09a444a4-5ac9-436e-8015-6165b7fae19b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6c029119-3098-406f-a22b-6afee6ba45d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffeec6a-6536-474e-9e1a-f22ab36bd050",
        "cursor": {
          "ref": "87b75b66-affb-4581-ab6a-6f44014d5397",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7d362558-9a5c-4e6a-aac8-2d6184460e84"
        },
        "item": {
          "id": "cffeec6a-6536-474e-9e1a-f22ab36bd050",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dbafa287-ed8f-41eb-bd5c-2bd2a7706a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9029f7d-d131-4438-a1d7-7f1bb9471020",
        "cursor": {
          "ref": "66f83968-d721-4f18-9fca-e92cd358d7f4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b4187079-d39e-4b70-b4b0-ea7b3fa4c42c"
        },
        "item": {
          "id": "d9029f7d-d131-4438-a1d7-7f1bb9471020",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b619017c-fe37-4828-ac4d-908cf030ab1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2163d8-6f08-4ed3-b90a-c55c070bc232",
        "cursor": {
          "ref": "48f24221-aef6-4268-a8f8-14b0dfb8f096",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d8a20bde-8a15-4c40-816f-01af7121bd85"
        },
        "item": {
          "id": "1f2163d8-6f08-4ed3-b90a-c55c070bc232",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cff34906-2ffe-42a5-9576-36564ea5e4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba405b7-caca-47c8-82ab-96032e3658f8",
        "cursor": {
          "ref": "b3771889-7828-4c5f-982c-47f4a5a912fa",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82a7d7f5-aa74-430b-9d93-a244eba45df6"
        },
        "item": {
          "id": "6ba405b7-caca-47c8-82ab-96032e3658f8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4540c59c-3135-472b-9f4e-40bf4fafb449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99095f0d-92e7-4792-956f-261291f9d550",
        "cursor": {
          "ref": "a0c630c8-8528-45ec-8075-136b9ff667b3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "69b5cf09-6d5d-4642-bdf9-bfa1fc150501"
        },
        "item": {
          "id": "99095f0d-92e7-4792-956f-261291f9d550",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a4d1dfb6-3c2e-4a23-a1ad-218987fb311e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384362e2-21ed-493c-b586-33cd4f96f29c",
        "cursor": {
          "ref": "f0939cb3-0b87-4903-8c9a-883cef4849ed",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "be401e40-ae5e-4070-b3dc-635ecc7dfb04"
        },
        "item": {
          "id": "384362e2-21ed-493c-b586-33cd4f96f29c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c6783591-66da-4273-ad2d-0f4782dba676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3c1de8-d3b8-4455-abb2-5fc3f642bc06",
        "cursor": {
          "ref": "66449138-3030-4382-80cb-902f3508cf93",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b75ea5e-b2b6-46bd-97f5-277ed732bbf0"
        },
        "item": {
          "id": "ad3c1de8-d3b8-4455-abb2-5fc3f642bc06",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6fdbe3ba-3b05-4be4-81ae-56ab346a42d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479b8112-d971-47fa-8d72-f5724841290d",
        "cursor": {
          "ref": "89cabfcc-9de3-4eac-aad1-b2c06b2ea748",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fd7fb6c8-edd4-4cf0-bc01-5a5e84ae3fc4"
        },
        "item": {
          "id": "479b8112-d971-47fa-8d72-f5724841290d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3ceac2b7-b3c4-4c62-8c36-b3c5633e77e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3234d0e9-714a-456a-8788-438fc07fd483",
        "cursor": {
          "ref": "c23bde0d-48f5-4c02-91fa-7c33e4a42d54",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d57f537b-059f-44fc-a322-2e8c3606330d"
        },
        "item": {
          "id": "3234d0e9-714a-456a-8788-438fc07fd483",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e171025e-a7e3-477c-997c-a2f3129ea73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fe875c-df1c-4d1a-98ea-926068e5b5fb",
        "cursor": {
          "ref": "0cef6457-030a-4e21-abc9-15baa19dfb07",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5f6cdd8b-98f3-4e98-9cb2-548085646788"
        },
        "item": {
          "id": "f2fe875c-df1c-4d1a-98ea-926068e5b5fb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ce02a5dd-a6e0-47ab-8ca0-935dba0c2d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18efb100-b3a7-4552-8eca-338c30cbfd09",
        "cursor": {
          "ref": "a8047644-f4d7-4116-961a-cfbd07921a30",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e618635-f1fe-412e-afe7-0dd5ad187d1a"
        },
        "item": {
          "id": "18efb100-b3a7-4552-8eca-338c30cbfd09",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "af1ab03a-524f-40e1-9165-724abe6d01eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2768c8a2-43cc-4b11-9c28-6dd942f6eeee",
        "cursor": {
          "ref": "99954c57-b80f-43a0-8719-4cac5af0def6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "280773ae-e5c2-4eaa-8795-0b49c6807f9b"
        },
        "item": {
          "id": "2768c8a2-43cc-4b11-9c28-6dd942f6eeee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "176659b3-2ae0-4f0c-902e-f29e83118736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a272d85a-2755-48d6-a723-cf61f44b0385",
        "cursor": {
          "ref": "0bb92320-9b8c-4271-8724-19570ca3d9e4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b089effb-f1c0-4ef3-b061-1db46042886a"
        },
        "item": {
          "id": "a272d85a-2755-48d6-a723-cf61f44b0385",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "01098e7f-a252-4213-a195-c61e8cc84f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f3c445-8aaa-4d3c-a32c-7ee3d04e7f4e",
        "cursor": {
          "ref": "0a17d504-8498-489a-95a7-a6d5c599dd48",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eff8561b-a444-4192-ae47-f1c1b186e7cd"
        },
        "item": {
          "id": "68f3c445-8aaa-4d3c-a32c-7ee3d04e7f4e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8e340be9-5352-4a81-bd96-7b4fbbf8e2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17956b6-b24d-4863-8fe8-7f6f3cd287f0",
        "cursor": {
          "ref": "7765e959-4ebf-4bf7-99ca-d3378a09a105",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "141a6b07-914b-4aec-8a57-de56558d860d"
        },
        "item": {
          "id": "f17956b6-b24d-4863-8fe8-7f6f3cd287f0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d03d5ee5-c9eb-4dbe-a12e-ad8ab45cc1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e7d99f-b184-4ff1-988a-535919c362c0",
        "cursor": {
          "ref": "5eed8f60-f5ce-4f0b-8374-ecf0cf1da44a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0ef04e97-6845-4a1f-80b4-a8964de7be8a"
        },
        "item": {
          "id": "34e7d99f-b184-4ff1-988a-535919c362c0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "248b8db7-2ff5-439e-a6f7-b3f45ee9bbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02bb6a0-1262-458a-951b-89875febba7e",
        "cursor": {
          "ref": "522ec4c8-56d5-48fe-8421-94eb22bc5d7f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "71b78f6f-af3e-4553-abc0-b9fdce897cc6"
        },
        "item": {
          "id": "c02bb6a0-1262-458a-951b-89875febba7e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2157d0e4-dc61-47e6-8064-cf8c8c9fbf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9d1393-ecaf-4093-bd26-63b943d5ffb4",
        "cursor": {
          "ref": "9a1f9966-c6e4-4abd-ba1f-ed4ed0d2d912",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4eb4bb10-d60b-4940-9744-a6107cb59d7c"
        },
        "item": {
          "id": "bf9d1393-ecaf-4093-bd26-63b943d5ffb4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "396ce232-0a75-49c5-bd89-a9738e5689d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0501d55-8c8c-4f3a-9f09-edb2ed9ddb1e",
        "cursor": {
          "ref": "6d104948-1fd8-4c8d-a606-51a9e5026b97",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9ced3704-0e4f-450b-b4b7-4d71a63d5299"
        },
        "item": {
          "id": "e0501d55-8c8c-4f3a-9f09-edb2ed9ddb1e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "89269d63-85ed-4db3-9be9-bb1f517d1f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc5757b-e0f5-49fb-965f-aae67b1c4c41",
        "cursor": {
          "ref": "d17d5c4f-2df4-494a-a7ff-f0dad3ed1559",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f9786217-4845-47b6-bd9c-87464c501dc9"
        },
        "item": {
          "id": "1dc5757b-e0f5-49fb-965f-aae67b1c4c41",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f91d4354-8190-45ae-aad0-a2a61a74f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce507b73-6c68-487e-8aef-281667e59519",
        "cursor": {
          "ref": "4570a495-05f5-451d-ac38-ec22b5465cf4",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d3bc46a2-55d3-4766-8bf9-8e231d58b320"
        },
        "item": {
          "id": "ce507b73-6c68-487e-8aef-281667e59519",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "53781e82-9f15-4ead-9d7c-e4ca9dd5c205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd86f06e-2d15-4971-bcef-b18236ac1e4e",
        "cursor": {
          "ref": "99d0756f-7fa1-45c3-b669-93f8f77fbd73",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d76a0ec-b54e-4833-a89e-2b7f24ab8713"
        },
        "item": {
          "id": "bd86f06e-2d15-4971-bcef-b18236ac1e4e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a66f5f65-c4cf-4401-95ac-9bef229f19bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079b5e88-6d38-4ac2-83d3-31d9d0cceb5a",
        "cursor": {
          "ref": "9df04e4f-e015-46df-99be-b53f1e984022",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f48d7a6a-d69d-4f25-aa0b-ada5f0dbd00a"
        },
        "item": {
          "id": "079b5e88-6d38-4ac2-83d3-31d9d0cceb5a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "af9ba92f-3dc7-4ab9-8092-a842c4324d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748e81db-3d6c-4884-915a-9c08d2cfd067",
        "cursor": {
          "ref": "dd9e0c31-c1ab-4214-8aef-2db4dde80935",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6b82dbc4-a732-4f9f-8301-df6cc2d4a040"
        },
        "item": {
          "id": "748e81db-3d6c-4884-915a-9c08d2cfd067",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "19a698ed-a274-4343-843d-20e91dcd6915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ecdefc-fbbc-4481-b66d-09ee745c79b7",
        "cursor": {
          "ref": "81d45c87-44eb-4bf8-9a75-5d7560a2d3f7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d04ef519-b112-42d3-a490-f3cd3f4f7406"
        },
        "item": {
          "id": "76ecdefc-fbbc-4481-b66d-09ee745c79b7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "64929b4a-1090-4bf9-9d6b-a9996e7a2f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a0469-1511-411e-a888-284332e28da4",
        "cursor": {
          "ref": "ee26a1a0-22fe-4289-b30c-80993f58f2b8",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5038058d-1fcb-4c11-9eeb-816fe38c19d4"
        },
        "item": {
          "id": "404a0469-1511-411e-a888-284332e28da4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e2f36f86-769e-4c28-8f38-ff78e7931f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c8d5e1-6e0e-45d1-b784-571ebed72d35",
        "cursor": {
          "ref": "e682b05c-f146-4cd6-a56b-c6ea6c980fd7",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c43879e9-9665-488e-8dd5-b488df31de19"
        },
        "item": {
          "id": "08c8d5e1-6e0e-45d1-b784-571ebed72d35",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dfeb31fe-93fe-4612-a58c-69199f58996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0321d79b-1246-4a11-b065-e8432479fed9",
        "cursor": {
          "ref": "0b292d9c-1ee1-4ecf-86cd-4fa2e8fe5e75",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "277becab-5125-4f77-91bc-e84b4d0e3885"
        },
        "item": {
          "id": "0321d79b-1246-4a11-b065-e8432479fed9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f07e66b-0983-4c5f-b98a-a1608dc1c24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a029200-ccc7-4993-9b1b-8c9b1b12e843",
        "cursor": {
          "ref": "fbe09084-a9c9-495e-a065-a291cb02a593",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "33257d86-a3e0-4ab4-a2d1-96b221d732ad"
        },
        "item": {
          "id": "0a029200-ccc7-4993-9b1b-8c9b1b12e843",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e18194ad-06eb-4739-8ff9-834414167744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e87a41-bfa9-4447-b2a3-2ab96137de24",
        "cursor": {
          "ref": "47572160-b61e-4bc6-903d-a638ed26a86b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9df0fd46-d4ae-4360-80a6-b6f03eb30ce8"
        },
        "item": {
          "id": "83e87a41-bfa9-4447-b2a3-2ab96137de24",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94fa17c2-3b55-4d5e-8c4c-774eef64f0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2253517e-79a6-4664-aebd-dff175eb1c06",
        "cursor": {
          "ref": "4a282322-6418-4c74-b34b-8b20dce7b364",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b3ad6f2-4369-4073-aeb5-a2fc340c95a3"
        },
        "item": {
          "id": "2253517e-79a6-4664-aebd-dff175eb1c06",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8bf06020-6019-4008-93b4-39f6dc0c1347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80591016-8c2f-4cfb-8cd3-ed4fbc7f6254",
        "cursor": {
          "ref": "a38dfab5-36fb-4ae6-bf85-ac92ff0e7715",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3e5c80fb-e7c5-4fa4-b53a-b46a0d8cdd5f"
        },
        "item": {
          "id": "80591016-8c2f-4cfb-8cd3-ed4fbc7f6254",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eb68c33b-1769-4fbd-bdcb-de3811baaa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec1fdf5-a84d-44fe-9008-a5ca56be34e0",
        "cursor": {
          "ref": "89e4d8a5-7f76-453e-873f-627f40f7b7e0",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "43b19224-f8c5-4c4a-8c54-9a29e42c2081"
        },
        "item": {
          "id": "5ec1fdf5-a84d-44fe-9008-a5ca56be34e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df445262-387b-41c2-b758-9e4f35a3b44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b4e71-dd2e-4b9b-a6e5-a8597ea73444",
        "cursor": {
          "ref": "d3c5e1d1-c5aa-4103-9530-bf845db7975a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "671c4008-cb92-455e-adb0-285c86811c91"
        },
        "item": {
          "id": "441b4e71-dd2e-4b9b-a6e5-a8597ea73444",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "167fd2ac-a751-4a16-aa8e-8bce699751ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314ddf99-7954-4dfa-93b4-d4a87dea8c47",
        "cursor": {
          "ref": "f43f8186-676b-4b5c-ac27-99935b88d61c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4a09533e-41bb-4011-9543-c263fd67d1cd"
        },
        "item": {
          "id": "314ddf99-7954-4dfa-93b4-d4a87dea8c47",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "60354175-66e7-4b52-808e-409797e2fa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bcc74d-f8ec-43dd-88b4-022219ee6147",
        "cursor": {
          "ref": "a2cca6e4-838c-4b5b-ac25-45a4b99f0571",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bea7dbcc-674f-49b0-8f77-58a16b06ac5d"
        },
        "item": {
          "id": "e9bcc74d-f8ec-43dd-88b4-022219ee6147",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2e3b80a4-2c38-42c3-8583-e025c877e61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02846120-34c8-4f8e-a6fc-b1d27cbaec43",
        "cursor": {
          "ref": "b1f80a17-22ca-4920-a4c3-bed1ac0253a6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "df5983f8-7241-471a-8a06-cf38ad995686"
        },
        "item": {
          "id": "02846120-34c8-4f8e-a6fc-b1d27cbaec43",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c6d742af-0845-4f32-9edb-4fb350ccc8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ae34f8-49f5-4713-8d4f-b27080d9d975",
        "cursor": {
          "ref": "cd445244-6f77-48d3-90d2-cd37823ba49f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6044a2aa-8c9b-4b6f-8a2c-61a57fac0f10"
        },
        "item": {
          "id": "d6ae34f8-49f5-4713-8d4f-b27080d9d975",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "31b35621-17af-4626-93c9-7a77305cbb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5564858e-d9c0-4cbe-ac19-7dbbd8372994",
        "cursor": {
          "ref": "306336b3-5d27-46ea-aa76-f42ea409a255",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d7bdb5cf-dbff-4907-924e-555824aa5c70"
        },
        "item": {
          "id": "5564858e-d9c0-4cbe-ac19-7dbbd8372994",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e3ed8613-ac2e-45de-8156-dadb14c421e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00185a2f-a3bc-44e9-86f9-6b52c167fe42",
        "cursor": {
          "ref": "7083489f-3b79-4c70-a67d-108401d953d0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3affd5e8-085a-4ef9-b3ac-d33d9b2225e0"
        },
        "item": {
          "id": "00185a2f-a3bc-44e9-86f9-6b52c167fe42",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e90bcf66-59b4-4d4a-b10e-a6d8c018f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6b45f7-f1ae-4d9f-b47e-61de21620837",
        "cursor": {
          "ref": "91afb82b-0087-4558-bbd6-994ffe640f75",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2ce90203-64fb-4763-a7e4-0b01005f8152"
        },
        "item": {
          "id": "6e6b45f7-f1ae-4d9f-b47e-61de21620837",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6d3a58b1-44f4-4b13-a045-078455b51100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb0773a-8140-41c1-948e-43af5b618a0f",
        "cursor": {
          "ref": "ed9da7fc-29e2-4ec9-b61e-4ab382815a4c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f98cb8fa-404a-44fd-9d67-6c4c61d3b703"
        },
        "item": {
          "id": "adb0773a-8140-41c1-948e-43af5b618a0f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cedbce4d-75c3-4817-bbc9-5791518c662d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c950a260-6418-4f0c-bde9-bf049eaba1a7",
        "cursor": {
          "ref": "1cd6405c-0873-4127-b697-8a581985d43c",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8a59adb5-a607-455b-9a17-3a94d8bc339b"
        },
        "item": {
          "id": "c950a260-6418-4f0c-bde9-bf049eaba1a7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "69516e56-bbdc-4fbe-9597-35a753122961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435e934c-6f0d-4fb8-8f59-eda5e8fea1c5",
        "cursor": {
          "ref": "85d94d36-ead5-4366-b29f-0b780145d954",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7c4cbefb-8ad3-4143-9647-081a82f724b2"
        },
        "item": {
          "id": "435e934c-6f0d-4fb8-8f59-eda5e8fea1c5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "049dbcfc-d0bb-43d5-aad6-f7b1b3aa495a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac56a54-565a-4651-82e8-f2b455c51b76",
        "cursor": {
          "ref": "8aa286c3-6800-4d02-8489-83633d682f91",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7bbc4662-74fb-4b1a-a542-087d6076ef1e"
        },
        "item": {
          "id": "2ac56a54-565a-4651-82e8-f2b455c51b76",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b16f06f4-f50b-4b3e-ab7f-f41fadd7e771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9592aab-c3da-4f0d-9904-f8c24ef9dad9",
        "cursor": {
          "ref": "b3303aad-3b98-45ec-bcb8-eb370a529487",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ad1bc641-bbeb-48d8-9d68-fa01adcd9f6f"
        },
        "item": {
          "id": "b9592aab-c3da-4f0d-9904-f8c24ef9dad9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a5b04b67-f4bb-4949-851e-0d0afc5dccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342bad85-c6ab-48a7-9435-c59efbdf7b15",
        "cursor": {
          "ref": "6261cd1a-e559-435a-ab2b-11e7fe0e95f7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f2a77aa4-0b87-4420-8b85-29e19009b923"
        },
        "item": {
          "id": "342bad85-c6ab-48a7-9435-c59efbdf7b15",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f3efc599-79b0-4769-845a-1c43aa47db10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7a5903-1a10-4d4e-b5dd-98e723c10654",
        "cursor": {
          "ref": "3335bb63-bc53-41b1-81e7-7ffdc645f1fe",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e2d9b2fd-fbe3-4420-9639-b65ccd8541c5"
        },
        "item": {
          "id": "9b7a5903-1a10-4d4e-b5dd-98e723c10654",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d302c999-9953-4d0c-a277-d0ca7bb29912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9cbaae-65ac-4f9e-b7b6-65a4490da969",
        "cursor": {
          "ref": "e3aa9179-5b36-4f3b-871b-6c230059d028",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b8999a1f-3ba0-4f1c-b457-dd67243f6fb3"
        },
        "item": {
          "id": "dc9cbaae-65ac-4f9e-b7b6-65a4490da969",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "19f0409f-b6b8-4f52-ab4e-108d6268a9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b142453f-2f7b-420f-a8f5-142fd6d8f910",
        "cursor": {
          "ref": "941a234d-f519-490f-ac17-73334c22913a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9bb567d7-4da0-4f14-a7d7-f79eaa6d9da8"
        },
        "item": {
          "id": "b142453f-2f7b-420f-a8f5-142fd6d8f910",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "10327241-d86d-4fca-9716-bbb5f604fed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af80ece6-9204-46bc-a1a0-bc1ecafa2dd2",
        "cursor": {
          "ref": "dd3bcfc2-a91c-47bf-a13c-8d007dae7ebd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c1baabb1-5b9b-4a0c-8a60-cae1217ab4cd"
        },
        "item": {
          "id": "af80ece6-9204-46bc-a1a0-bc1ecafa2dd2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "da973186-5d90-4826-b3d7-630b9dac0149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce9c44e-f85d-4897-a525-d47bf70cc4a1",
        "cursor": {
          "ref": "2876d87b-c3a0-4d51-8b3e-875cb5b616f1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "93b0d4c4-9a83-4a24-96d8-2b4ce89a20e9"
        },
        "item": {
          "id": "fce9c44e-f85d-4897-a525-d47bf70cc4a1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "350ed422-18c3-402f-84db-3762bcb77e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4261efcb-ea36-4314-b907-858d559a8406",
        "cursor": {
          "ref": "9eb3bc2f-881b-4a5e-a20b-e8b5d54b95b9",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "37aeceb0-77f2-48aa-bcb2-eeb2cc2114f2"
        },
        "item": {
          "id": "4261efcb-ea36-4314-b907-858d559a8406",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "37254a07-48b8-476a-ad48-95844df6debe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9b1fdb-5eee-428d-88ec-d1854ff5e60e",
        "cursor": {
          "ref": "841765e7-33ec-4bbb-9ff5-c5a2bb5d7517",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a88f6b19-5740-4d8d-8682-2ef6d72c3645"
        },
        "item": {
          "id": "ab9b1fdb-5eee-428d-88ec-d1854ff5e60e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5eecf338-c866-4ce0-ab91-302147266bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716a2934-29a4-4533-ad40-cef8362c9997",
        "cursor": {
          "ref": "f10ca71c-6222-4d10-8710-369d9db1f08b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "af9f4408-eab6-4de7-985d-233c7d540007"
        },
        "item": {
          "id": "716a2934-29a4-4533-ad40-cef8362c9997",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f93cdad1-3fe2-4e95-8351-253c2a854a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c34c0b9-874e-4a43-aa98-e99243fa29e9",
        "cursor": {
          "ref": "b1c1ba13-081f-431a-a4ad-946cbfcd866f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "813c4134-a3a2-41e0-bba6-aec67e8e5447"
        },
        "item": {
          "id": "8c34c0b9-874e-4a43-aa98-e99243fa29e9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f089a4b-00e3-4b84-8678-1685024bf264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4a8a3b-fc8a-4106-9337-e74706c272ac",
        "cursor": {
          "ref": "d629d96a-272a-466c-8760-331ddc3e65d1",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3e02f36d-57e3-4d00-82b9-b33e659c4186"
        },
        "item": {
          "id": "9d4a8a3b-fc8a-4106-9337-e74706c272ac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5479503b-d605-4e3f-b5c6-c3b7ed81cf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6df4aea-7c8a-44f2-9963-3f8f35f3455c",
        "cursor": {
          "ref": "1536d37a-77c1-43b2-a3c9-f9b07293a018",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0c6051f0-7ad1-41ab-9187-85c187014d60"
        },
        "item": {
          "id": "d6df4aea-7c8a-44f2-9963-3f8f35f3455c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d2bee48f-e178-4acf-92b3-d585535a4bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61872630-f9d3-4858-8956-4e5e42742bb0",
        "cursor": {
          "ref": "01847a0c-2379-4807-90c7-9e95842d902a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3704a94c-92e7-4896-950b-93a2f1cce6ab"
        },
        "item": {
          "id": "61872630-f9d3-4858-8956-4e5e42742bb0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4c031913-ddb6-4eb3-bcf7-cc3643215176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1662b608-816f-4d44-909d-5448e4daaf11",
        "cursor": {
          "ref": "0062bc4a-a72b-4350-92b8-4a8c068d20f7",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f1388ce0-5615-4bee-be56-6a40f151fca8"
        },
        "item": {
          "id": "1662b608-816f-4d44-909d-5448e4daaf11",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "25c4de5f-7148-4c2d-8428-89f46e7e18fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad68ecd5-bb39-480c-a0b8-59e66ea02aa0",
        "cursor": {
          "ref": "fa4c8b92-075e-4449-af1e-84676963b56e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "01cdcc0c-1910-4408-9fba-ff3d5a46dc4b"
        },
        "item": {
          "id": "ad68ecd5-bb39-480c-a0b8-59e66ea02aa0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0b0e0853-dbe2-4cef-a38f-ccbd9256de13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c8631a-0eca-4d19-9442-f478e89e4bf2",
        "cursor": {
          "ref": "4edecfda-d28f-422f-bfaf-7d9f34f2b79a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c20e4700-3498-4c06-9510-255128d25eb9"
        },
        "item": {
          "id": "d9c8631a-0eca-4d19-9442-f478e89e4bf2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0168fced-7b18-4fea-b572-cd3d9f56fe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990dfb06-1b1f-47da-aad3-2a51ae20f085",
        "cursor": {
          "ref": "b4ec0954-ec88-4070-9fe6-fbe75d41bd2c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "831ff01e-7985-4a75-82c9-bc9eb754e7da"
        },
        "item": {
          "id": "990dfb06-1b1f-47da-aad3-2a51ae20f085",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "21706f98-75f8-4e0b-a3bb-d78e01ffed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4069007d-e6ba-49dd-84cb-2d112fbedd41",
        "cursor": {
          "ref": "956f1fd8-d624-47a1-8deb-07d21907d08c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "97922ed8-f39f-4a90-b8b8-8cd740933e18"
        },
        "item": {
          "id": "4069007d-e6ba-49dd-84cb-2d112fbedd41",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8b000bf7-8d47-425d-adae-571b39a8a880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b933308-ef02-4b7f-8ae7-6d2e73efe04b",
        "cursor": {
          "ref": "22e43196-1f7a-402a-94ad-1415e4522d2a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "14606941-98d0-49ad-977a-b757dba27842"
        },
        "item": {
          "id": "9b933308-ef02-4b7f-8ae7-6d2e73efe04b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "83d12f41-e6f8-46e5-b173-5854948e6e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9639d993-3e89-4da7-97c1-a02a58f05929",
        "cursor": {
          "ref": "aaf5b999-2494-44a6-98a0-e2e9b2d795ae",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "93784dd1-60c7-429e-9973-ddf77d670b85"
        },
        "item": {
          "id": "9639d993-3e89-4da7-97c1-a02a58f05929",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41fb324a-3c38-48e5-a544-62b689f08d0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441c9811-51d5-4f12-a35e-c26c4cbb2e90",
        "cursor": {
          "ref": "27ad2d1f-f7a0-4ebe-9666-da302153f80b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a955f95a-9fbf-49d3-9f06-cb340ed4fa0b"
        },
        "item": {
          "id": "441c9811-51d5-4f12-a35e-c26c4cbb2e90",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "99bd67e7-d80e-4256-85d1-378604c0ee02",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcd62e3-a1e1-46fb-bd91-eea53a58d9fd",
        "cursor": {
          "ref": "8a3f1a7e-bc04-4ae5-9e1f-92844dd2949b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5b1aa26d-c295-4147-a393-9d9a6fdd03c4"
        },
        "item": {
          "id": "9dcd62e3-a1e1-46fb-bd91-eea53a58d9fd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aed79a82-08b2-43ae-96c5-e2be5ba34306",
          "status": "OK",
          "code": 200,
          "responseTime": 1719,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cebd5e-2f78-47ec-8e67-af75e295efb0",
        "cursor": {
          "ref": "56f073db-f5f2-471f-bda2-3a3343c1d40c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9f9f7897-1f46-4d90-b6ae-2791f21e90af"
        },
        "item": {
          "id": "79cebd5e-2f78-47ec-8e67-af75e295efb0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b07b9b89-48aa-4afa-9597-c062db4214e2",
          "status": "OK",
          "code": 200,
          "responseTime": 1242,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e52143-be70-4d4e-9f62-d55e25434f5b",
        "cursor": {
          "ref": "a1fe1ba7-de10-4879-9416-df3247cf4018",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d8ba7a41-6877-459c-9472-1bff68a26f99"
        },
        "item": {
          "id": "92e52143-be70-4d4e-9f62-d55e25434f5b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d7cdfb5-ce3e-4507-b634-556ae461504b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e52143-be70-4d4e-9f62-d55e25434f5b",
        "cursor": {
          "ref": "a1fe1ba7-de10-4879-9416-df3247cf4018",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d8ba7a41-6877-459c-9472-1bff68a26f99"
        },
        "item": {
          "id": "92e52143-be70-4d4e-9f62-d55e25434f5b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d7cdfb5-ce3e-4507-b634-556ae461504b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676fbd31-5981-4575-9d04-ec5a7da2feae",
        "cursor": {
          "ref": "734f9a14-29c5-438e-981c-1b39ac52c081",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "11ca5e29-f59e-4a74-a640-b788c81da8ef"
        },
        "item": {
          "id": "676fbd31-5981-4575-9d04-ec5a7da2feae",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "39f710a2-4b3b-44a0-80d2-1c8866279691",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43236b93-c08a-4f6f-99c0-3fc26bbba12e",
        "cursor": {
          "ref": "c64c4fd4-aa7f-4afc-8858-133960e6f373",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0b3264fd-fd99-4b17-a684-98e5f39227b9"
        },
        "item": {
          "id": "43236b93-c08a-4f6f-99c0-3fc26bbba12e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8286e8ac-0bcd-4e41-af74-f2aa2f31fc73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}