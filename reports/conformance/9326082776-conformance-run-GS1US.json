{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "123aad9f-bd00-45bb-a82b-5e4aa4f57634",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b75c7291-b33c-4b44-900d-7d6603ead4dc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efbc19d9-4e0e-41c3-88c3-355de78a48a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1b9a0ac6-31a4-4118-8b63-8efb778614f2"
                }
              }
            ]
          },
          {
            "id": "d2eebf6e-4d8e-450f-9c46-b2d6c2c9dbb5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b40b6f53-a709-4999-be32-7cc8a2351d33",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "99b3a964-4cf5-4471-9965-6a4b8079c8b5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "afb94485-bc49-4571-8747-be4d1d513600",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ec035f18-be1c-4711-b0c5-f9a28f982a71",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4d3dbd3-7d4f-449d-9496-818d96777f00",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0434e447-4e50-4c30-ac40-a4b2a1182427",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e66cea1-5c90-4870-bbbc-d65e80077829"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0797e681-e9c2-4a29-baf9-9826537073e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6199907f-1f43-446c-9aef-c5fc469f295f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e51dd4e-6321-473f-a8ef-fc12ba72a3d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c6afd0f-1a81-42b7-ae7a-4b71e188f073"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77917082-3b9b-4b57-88c4-7a96e9170ec1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5e43b8e9-4f18-484b-ad28-b29d61b8350b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90a97b73-a39e-42c0-883d-fd4793afb355",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a4d01de-9516-4092-a142-6011ab3943e0"
            }
          }
        ]
      },
      {
        "id": "4298b46c-87f5-466d-ade2-67c99a594248",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aa7c67e8-9991-44cc-befe-3f20fce69680",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97eea980-480b-4694-ad32-386b3e1a422c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3eae0da1-50c7-45e6-b059-02f170ce9aec",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbd19f7-e28e-4106-a38e-b69bf2845c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3b8a424-a8fc-46c3-8e5f-a6baa837b85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5701ca6-8b79-4cef-9424-1690f07fe39c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d44d65-33d9-4d72-a91e-08323b2afaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5732b0f-ce92-49c5-90b0-6d6558dc792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffd2be4-d88e-43f7-a01c-27ebb9b7d146",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabf0c07-e33c-4d84-9523-505d3e13b4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be6bcb33-b027-4732-9e3b-d037712e13a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eae9b772-90eb-4d9c-b0e9-6152c2b0cd0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75e6c8cf-8916-48ca-b0cc-c716e756f9b6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3032c18-abcb-4c49-8535-2f1a53574fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b17684ae-4f9b-4860-ba56-470ab76d4a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19296814-d4c1-4bb7-a8a3-3c82ebd15887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6245050-0893-4c45-a3af-b6071b398be9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d9ee97e6-0002-45e5-8e79-ae2ba3e8b7a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "873b5edf-ef6a-4690-b148-7291b1d2b3a4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a7255d2-a46c-471f-9738-e02a010c5589",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dfeede36-ca00-4be6-8b65-0664cb2de12d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "611b4079-3fa2-4529-88b3-7040a254d462",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "eea0c377-7e33-4bfa-88c1-70817c5caea9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3db3e6d5-1270-4639-8e70-12052c6ba595",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fba10f9-91af-4a47-8d7b-8dc677acc23a"
            }
          }
        ]
      },
      {
        "id": "6a7f6f59-2d66-407c-97f8-3903950a82d8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6e1072ea-5b53-4a72-bd30-44079b8cdc1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d476705b-7f39-4428-b8ef-0e9258cad5fe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d43239b7-a9a6-437c-8949-f6841945b796",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b215679-c9c8-4c9d-aee2-29c773b2ee39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eef8cba-5f88-4fb9-932a-950b24f047f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f18292-11cb-4dd3-b133-3f8a2b94c739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c941fab-e2bd-4262-b537-d3c2ae3b5b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e0516b-7177-43cc-824f-c0cfa3c7a3c0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2edaac-c26a-4d36-a17e-4298e595d53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cbd54e-39ee-4041-a639-21943ec353d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d28a70f-54cc-4dc9-865c-f2f7641223e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb62657-af1b-484a-ad9b-29bfaec14658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6468016-1378-428c-b92d-b094fbdd7108",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34386fb8-fba4-436e-bcba-f6c956ebcddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68841fdb-5960-4364-8570-7ca4089498a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4e3e18-af71-4fdf-95c0-8f942fbaacc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7d4011e-10a3-4fb9-aac0-c7d295872ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eb46cf-34f2-462d-95d2-c73090d621bd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389694c7-1c9a-4ea5-9cac-75e6641303b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30cf838-0f2e-4b2d-9432-294ccd476971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdded70e-c67e-447b-9f67-3e15f0551810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59883850-8be8-4a12-a406-cf54d1a771b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d551c4ea-65bd-4593-8817-ad726f29e452",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f59df05-1cb6-41ac-8027-390d916ae3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5610853-0eb5-4274-bcaf-4843eda7df3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cdcbf6-d9de-4d69-8e8d-19c2e7288be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf34d8fe-8914-496f-8a7b-15852e671109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890f6ba7-6e84-4d03-bade-43757f09d820",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca77191-0449-4688-bf48-bf542e5224de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b6b71e-15a7-45b6-a841-5f95f769f429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6dfbd5-70e4-43e8-bcc5-2ee7f2a466f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b4a4489-1cdd-4417-9870-8598b036a761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c49751e-43f7-4d38-ae4b-bac3edcdb2c9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1505087b-c3b2-4b31-8485-601dead19815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf0ba3f-2fac-4467-b0be-a27768ed97d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d7be38-3092-4199-a782-497801a38597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a1a3f95-a309-4a18-834e-d5de103d0aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aabaa83-437c-461e-82bf-146e62741abe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fe5955-2d3a-4efd-9bc5-9b7b58be5250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0570e8bc-bc9e-450a-9986-37cd4b05e28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e40723e-5c46-49a0-91eb-b0457499898a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d16cbdb3-b68b-4f2c-96f0-5bbb218cfb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867d4829-6229-4812-8759-31adc8ea75a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e947368-4889-40a9-85f5-a87444d0a1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161ea0a9-e56d-495f-8784-8d765b1bf20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455ef53d-0c59-4591-8d95-89100a0f89b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0390fdd4-6f9f-476a-ae27-4913f598ffbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4f8ff1-7bf3-4aea-aa1d-c9b6899049bc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5755e3-247c-47a0-80c7-e79fcc89c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef02ae6-5579-49dc-bf2c-f63830d95261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3646e94-c5b3-403b-ae1a-f254095bb493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a44971-7b52-4e6d-a0ef-085c85a6c248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b82145e-6306-499d-9ea9-6fdae0e2bd97",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0ee707-c8fb-47a2-9f93-ec98c0fa7d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e43040c-ccf9-418a-9a1e-131cf524cf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766976bc-495e-4eb0-9387-981c31c2e4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eec328fa-e9d7-4d00-941f-1a25222e831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ff900f-e747-4c30-b4ee-6258db82f003",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f31e5c-5696-4379-b372-fede3b11bb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f86195-da8a-48b7-9b63-3397e2e17be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c9dced-cc75-4435-b5bd-f9442cd05e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e083d06a-dcb9-4846-8139-d8ea797b5fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d6fe98-16ed-4247-ae6a-bc666adb7732",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0157694b-b05a-406e-af44-8b533b30a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5177f1df-42be-49fe-80dc-8efd00ef7988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11da8754-cc1f-4667-bbdc-c7d10ea8f47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2294c73-60e0-41a0-8aa5-b4d1792b414d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ece8c-81b7-4aba-bca7-6ab5daa3ecd3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f9536a-ade4-4716-b65d-22d8b7f80b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4a3a02-a5c9-4717-a727-0975f8956874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849778c0-9ef8-4f54-8b90-5de2f280cf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ba3dd36-c5c7-4e22-bc03-97bb4012d708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef019bd8-3ec0-4c7f-b93e-c5789f54ad8d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d92e533-c542-41e1-88a2-df53264a0b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f661b3-d8e0-4663-8f90-62c4f6cba727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcce6af9-9062-4f91-b5c3-513dcd20ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ef8ff9f-a6e3-4ffe-ae5c-cc0e5e51af5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce710bc-fc37-484e-9aca-07a6f1adee6a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c95a2a-c956-499b-a1b2-82d8057f2723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8812904f-41c0-4105-aecb-2e25d7873318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59a3ff1-28be-4a91-8887-4f9f0013e605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ab3513a-fde2-4061-91de-cee7f005ed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789a6c2f-4199-4294-bd02-ffaa4aeab865",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4923575-e208-4125-9c1d-413ab97acf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4704063-a3e7-4bd8-888f-34fa49e7cc57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bbe91b-7862-494d-88f4-236bde001201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43e07dc8-7b36-4b8d-ae07-ab1c9c8bee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa9f94e-9323-4b2d-abdb-dc5399d507c8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7646325e-8dd7-4df9-b90e-4fd1762b86a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa6a872-7efc-4241-831b-1fe825e58e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5601af70-ce32-43a6-b23b-bf0ec2793b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae43ef2-400b-4678-aa69-5966764c0a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e193012-6d75-4e13-b1f6-612aaccc57c2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee8766b-958b-4d9b-9668-b1578f111761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e3157f-c54a-4bbd-8b31-fa1c947c05a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ff99ea-6ddd-4d9a-925c-9f351b18ca00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "159babb7-1a8b-4974-9d7e-86b9148fff2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d93fdc-899e-45d5-8916-37eed58cb65b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2477fb-0dc6-43d5-950b-fbc3fc8c1535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9787377d-8862-45a4-bb3e-a83776e0d726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e47aef5-e11f-4dea-9394-1c6c76db9393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0cacd96-fb2b-432a-bb3f-e2f95d868115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de42ab59-7a4b-4fa3-882e-b05ef5f4a0b2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3594cb-459a-4e86-972c-0ad727ea2063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a73734-b545-4425-b6bd-622fa25e35b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c42b6a6-b18d-4d82-b5c5-1638163844a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "645ac1b6-baae-4746-be30-e095c96e8ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476261f9-4549-415d-93c0-70c13e426640",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a4c748-8fdc-48a4-be1f-a4091811ec55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486b8639-6cce-4512-a98c-47f7f25c7401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c89fc9-c4e7-48c5-89d8-6510d0048501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40026600-6459-4bd5-b899-965821a99021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cf7a94-e5ba-4dd1-9b63-702bc5582542",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afacc8c-bae9-4244-8c47-b2f8944bcf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661f9876-cb6c-4996-a2e3-4f3905c65328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b59e0e-a187-48c0-8391-96b204d7ce47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48fdf9f4-3db0-4b13-9503-a4e9c06da985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febff284-6933-4b78-9305-66b4256ac4a8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517e370f-7625-47b5-ad60-57b127ed4264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200118ee-8f5b-4aa1-8dfa-05898281f14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc06a0c7-691f-40c1-9b25-8a395114feaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d40b9d97-a836-48a5-b120-ddde33ad42cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e73cfbd-8749-45c8-b9f2-355c2c1b6a66",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e8d412-1ef4-4941-a74b-5a613b81c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dcb0c9-f68b-47b4-aa3a-6aac7f6b182c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf46da8-b006-44f6-badb-fb85ca7cdf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "001d53cf-8289-448f-af87-1b0c8b4bdd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5bb64b-5b8e-4815-b8a3-2bd8964f2bb6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bff1f9-8ad2-42ff-bd5b-a54ee16fdf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a3b135-11f0-46ec-92a2-5c2fd55c5e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ca33db-e8fc-4b97-8e9a-80ffe6cea59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeae1620-faae-4b00-bee6-00393e94a373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623befd3-bc9e-4710-a7d0-a36d7af42a1a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027da43b-fa1a-449e-8f48-43d52b47556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9be8d8-0dda-4887-85ff-93549976da02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8ad58c-a2c9-45b0-9984-4b468807bcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ab9bde-af67-4a1c-80fa-2fdf09800bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3c287b-8d9b-4761-8b5a-b87f152b4cea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40467455-6e21-4b9a-98c7-77705978a630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e485c6b7-922d-4d53-b4e5-246a3d9f75ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da91350-f5f2-4a13-b1c0-b6dcb581e302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b918bf-1a92-49e9-bdb1-dd3dd44d7fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5d6797-53b8-4f5b-a132-7101b5b78afc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c07deb-6283-47bc-92e6-06942a797758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c4ef07-5422-4952-9bd6-518392044d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a64954-f45d-4e54-8603-37f96c4550ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce994655-74f0-43e3-a353-1d7f9045e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf6864e-6563-4f61-80cf-49a1e242227d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93e3b41-187e-409c-bb10-8e89e652a63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a416880-4c00-44fe-9c65-28d1e220fda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204387d0-ced1-42cf-a5fa-56e101ad1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "443b7115-723b-4cb3-b077-8c296a3f2121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0eb4cc-e663-4432-9c0f-a2e0fa46da5c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e7ea19-c300-40b5-8d4b-1e322d2bb9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8fff83-951f-4cba-9682-65488fc51717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd397a3f-3f77-40b2-9646-77b418148115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66eaaae3-e9f1-4718-a8a6-a45abf649ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbb8bf2-91ca-481d-9b99-f2afbce27f87",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d464c4-0da0-4945-9637-435ba7ee622d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b02e4f3-5d54-485b-bb7e-9acd8e7c1862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210803ab-0b20-4a47-b9b7-c7f251e985b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af12afb-c9bd-4e6d-813e-a1b0b8363fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dc3ad6-9ee8-4739-a72b-bdf0f2f2f89f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74747253-1c6f-4e5b-97d3-678fcc432499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3621c46a-3761-492b-9fe9-9a52f350c74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56584837-d242-4fc6-b8ab-7f0110b00160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd30494a-6e05-4735-a524-6639eeea6da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5ec073-ebb1-4206-88d7-e9392a0f88a5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc23cdc-f215-47da-92fe-dd327dff5481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14a24e2-5ead-4036-bea6-1b3523fe4272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d808fc-e9c4-426c-aa7b-adf6c7d441d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1f1a4c-567b-4d7d-9172-6987742843d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a10a344-3da5-43c8-992a-49e7e6927930",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294f88bb-38e8-4c18-b7d6-a1ef61b9d88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff0b4a9-c744-4a4e-a8e4-9513ce6ba334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a0d0fc-db23-4346-9a75-2e1a730ec973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5c4d45-a556-46d3-8aa0-f7a3fc93263e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e678f68b-dab1-4e0b-bd95-a9fd5de41deb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34230eea-6009-45a3-8f92-f9c918818d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6da3ef77-d01e-43ed-8fa4-3944ef10e053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff10dfe-63ad-4716-8e68-e00a7565c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd690e5-3e9e-4fdb-8e9a-fa028235b133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e68e01c-a498-4a70-be41-7d5a4abe42f0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6de051-fb3c-4f96-bc2a-3f477b5ee244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81132918-99a3-47cd-a1f1-abb8ac66cb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b677f3d6-3d38-4e1a-93b2-4230f05b9615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f01029b-abfa-43fd-afd4-4fc375047805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b881bea6-db4e-417f-8acf-14bcac02fb16",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4393f96-f457-4ee0-8483-52d596f37bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf398b0-d598-465f-8be2-0465216d5d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf2664d-f67c-4bea-9927-af143ec570cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "977a3447-6169-4133-986d-e7b9d188b1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e56ad-7a5f-4846-91bb-eabbe506b897",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b22e67c-d2f5-4f36-9b31-58029679dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7569f2df-5d7e-44c8-9803-f8c217abac37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5739f6a4-8301-44bf-8196-68314830a63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee99aeb1-2a8f-4bf1-a917-ef08ff8bb539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670a4355-cd53-41c5-8765-6f9b86a73021",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4231bb-c461-4129-95f1-2926e90819a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d7957c-fb63-4fcc-8b53-5d3677df9ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ae173f-1de8-439f-8780-229b59d68838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f83e162-8cc2-4f76-a74e-0f4efae3ab01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6e1196-3824-4f4f-8eda-032a5c24a4e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880328ee-940f-4c47-8d90-50b0d9db42ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ce2831-bece-44c4-9a6c-287247acf9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a7aba6-45cb-415c-94c0-8e3def9f0eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83671c55-ccdd-4259-85c0-53f741547bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e117cef2-7aed-4451-a00c-9a2595de31d4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6942b6fd-dfbc-407e-ad3f-6ffaca66a9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1f9716-fdd0-42e4-8bf0-5874ff8d3699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7a1a58-5e68-4d1a-b904-23c79fccdc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "47a8473d-b206-412e-aee0-944a4620ea52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e9f157-6974-4f80-a254-65ee49d8f2e7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0010e8f1-19e6-4aeb-b2a1-f02ffb98e149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b461c1f-212c-4e21-8d72-d31c1e03fec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e20cf-ce10-4e31-b352-05e68e063f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9795e4b7-64c4-42aa-bb7a-d177028a615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c40d8e6-cfba-4915-8f58-9f1a53f41170",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8068641b-1b48-4467-80d7-ac726c4d3839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1c7d95-d1df-4b3f-a929-472997dbaa62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b972e504-0181-49bd-bbf8-a1f4b775158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f51228e2-3c29-412b-9e37-0ab8b8fac113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d12974-9181-4a28-94d1-ef4cf3528f68",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd6aee0-55a3-404c-8a3e-06d27adee1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f309bd-0d84-42d4-b1af-50ed1447a698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe5ea7a-b831-4a60-b78a-95a520cd7a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca24ab9b-d928-457f-88d1-a5171441b705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d027d83-8528-4f9f-a02a-ac85f21ba7d7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962c7bbe-688b-48b6-ad6a-cfe3f048697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fde4851-b5c2-4bd3-bad7-f86cbf775e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3151a607-58f6-4bc1-8d70-aeedc862acf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "827ca4f3-996d-4a57-84d8-1e7c8f2ea641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0e7021-049d-4163-8a21-3f9da3f291b1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328ab001-aaae-43e0-8443-12c7cf768c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411b5d9b-a963-4170-824f-197c3837032e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23c7251-992c-4612-bcb2-4f6cc8ce3adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e24baa-b020-4120-aab5-0e69a77f9fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72525262-9169-4bc3-bcc3-71ba1250503c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33132c4-edc3-4e1a-adea-49dd4c0a1ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9904d2f9-7a3a-4f2d-b398-44988b104b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43530f4-a2aa-44c7-98d4-1be1552d4a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc2d29c-2338-478c-8bb6-bf54a4239833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154ef8ce-22ff-4137-87e1-41ba44ac8896",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d02e2a-b765-4352-9c10-53bca003de95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91fb444-980f-4c59-8485-60baf28f7e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5993a2-ba46-479a-99d6-0ed8f5b8481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba0c3fa-5534-4353-83f0-029a64b54eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aa162c-9ab4-408a-9b43-d09e6528353d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9017b417-aa8f-419e-ac3d-270f3c649312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052c1336-673b-44b1-a1d5-e4a757061b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72ab40-3c51-450e-a2b0-648f303c6a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbc047e-9e69-4694-ac16-c95690f602ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69ee3a1-1404-438a-87ea-9e7179144d76",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f7d729-36ad-4029-81aa-02f3be79d77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d8a9e7-5dc8-4fb6-bd0d-8b08c020869a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e0c302-757f-4078-a981-1a9cb68e1cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e59b8f-56dd-41f6-84be-17fe10b464ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c700ac6-0374-40c1-bfe1-0307fca276a7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658865a8-04c6-4041-ad32-6500507ac586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0c5a48-754a-4edd-a0a2-f35244488ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3473405f-a1fe-4db2-9971-dc577430391b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9425aa60-e617-4239-8bc3-543786ece0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234b7bd5-b319-4e65-8d79-e65ee7865bf8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e5356c-59fa-4efc-a7b1-e08142decee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a4ed36-1231-4e92-b047-0c540eac7ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc779d0a-0c57-4907-b0e8-bb92f4f7d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebd8283-9e91-4c9b-8950-fe6f6f5e296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaa117f-4363-4f4b-b436-30b8554b9a64",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7d9d7a-a892-4308-90b6-1bb42446ac29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa946cbe-fae3-433c-94c0-70b4dba2d1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf856c6-9fff-461e-8c55-930e8653ea50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "534381ef-23b1-41dc-a495-f86461b7fce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c9af8b-8712-471d-959c-84ebb45738ab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ef7ecd-d2cb-4581-910c-ac675ebd5b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20694e51-1a40-4fab-a886-d1582dc54a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560ba3a8-4f9e-459a-ad12-04bd647ce901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3884bcb6-cada-40cc-b66e-7cc39b657145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fbb0cf-d317-4f26-8a44-5f334f628bd3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8085003f-4621-42de-b65f-9edb77b49016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab7520d-02a7-40d3-8e29-1a79fa7d4a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb42d30e-0735-4a2f-8d5d-55b45ed87f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0d914079-611e-497c-980d-5e05fefe7bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3c28c8-dc7f-4a91-a175-c542ae2670f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7f0f32-17a7-4ac9-9f97-024f90ee191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b637efac-c2d2-44d5-8b01-e7e9f1393027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b80094-162d-403d-b135-950f3907935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5e92ce-6d59-456e-b6af-77ce3acc0f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c883bd96-1f94-4e6b-9811-b8618b16cc32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aa1bc5-bee1-4123-a045-e64be33791ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6972501-9242-44fc-8533-6ddbcf405847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714b7c3c-3ff6-4878-aa21-3fd489d0a335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e23adb3-9462-46c1-a60c-9db7080efcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1691f02-b2f0-41f4-9822-707f30b184af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c333c7-fe4a-48fd-a4c4-d0d4a515dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349e4cfc-7c39-433c-8b21-47d9f8e20e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbf378d-eb69-453d-92b6-a9ae062d41d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0045731-793a-4a5f-9e9f-a9525412fc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93fcba2-ec26-4201-9c7b-5eccca2df56d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a78e7b8-82fc-41fe-97ff-73f8263eadc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb5c351-4478-4491-8388-5a6354532532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b094bc-0c18-4dd6-ae94-177b2def6ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00dab51d-47f1-4cc4-a13c-8be953f50c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d10bd3-1c18-460c-b424-e7f63536ed02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0883d2fa-dc17-4ffe-9eb5-21261cfc2c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b073d129-0e31-4aab-897d-f1c6330f7b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d37313e-fad3-477c-9d21-37ca78baf813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3958ce48-e973-4cf6-81de-940c90c53474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b2e60c-aebc-40fe-820a-5ca2d3758982",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3232fd9c-e314-4c21-9327-7a63626fdba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fbc159-562b-4e8a-b4df-e2dbb801b505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb487eb-fd53-459c-8f11-d642207095af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "68783ec8-1db4-4a63-9650-566202b92c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59048d96-f213-49aa-ae80-c89e7d16700a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1e2c12-ec8e-42d9-b43d-6d7056b42071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cb8dfa-d69c-4ea5-a45e-a9b77a798d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c9e83a-5e82-4951-b250-bb12c9be67bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5026cb44-3b8d-4d18-9814-2789b032c0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e4a62f-68ba-475b-a177-4799a22733de",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcc0277-441a-4bc2-ad81-d2037b58154a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5acbf57-4410-45fb-8d46-a55c94077064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5b1fae-c093-4ccb-9e3a-5f65ec1c8e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "594f1433-4fab-4487-bb54-7bea051e109c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2583efec-6a3f-4473-94e3-63746f4f645b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a907d45-bdc6-47b6-84c6-2171b0685f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33dfccf-0d44-41f4-adcf-922420cb8485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d16cd5f-0a1d-40ed-a58f-60345dc07376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6b2d02-3c07-44ca-b402-03950f4fbffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194c6fb0-c181-41a8-942c-ffa2b008b40f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af55bec9-ec0f-4dfb-a20b-8d20ef82a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd64ca19-db6c-4b8a-a187-f09c787003ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd2513-aeb8-4c87-bd78-c58c4dba0139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f438d27-a2c4-465f-a615-16f04b45de50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da9da0b-f2fe-4fe6-a1f7-65b01c1f599d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88db7563-2d7a-437c-9aad-676116748167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25546de-435c-479e-8832-152245f57a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4858a02-f0f3-4bf0-844e-d8afffb14406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "877734c8-25cd-47d2-811e-9329a91832c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cea29ac-22b9-4927-8792-b343f88cea4d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b2ff61-f474-4fa9-942d-569424bcce96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fe259f-c490-4402-878e-dc9e87b310da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6784144e-5588-429e-a089-9c69e0ea4b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d814926-fd27-448c-b761-ab7e1360d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de57e40-1c27-40d0-893e-200669ca0eb0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484897f4-3fc8-4980-8f57-70c42943aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd3a005-e9a4-46db-a5b0-c2b5f15bb03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e185bc10-cff2-41f9-a933-855dbbf88665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdac9e6-b812-4d8c-aff3-4f0dca158fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f8dcb4-e495-4fb3-8553-db4d9509d05d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e90334-d736-4ed1-8467-048844437e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a7de1e-3e16-4463-9942-0f3651012e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426df2b0-f067-4d64-9581-27fbaa5ad63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "015f0816-817a-4eeb-8bd2-0f5052a51132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc44674a-0879-497b-aefe-4ac7f6552e7a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549639c6-1ade-4473-a4c5-48586e32a6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f87fb1-3824-497f-9557-1c81baaf5bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cde78d-3e1e-475a-9679-1acaee741e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6a8fa6-7c70-4c07-9c8d-897ae157c1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc19492-ca4f-4b53-acd5-c56f1438047a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa71774-4a39-4bae-b27e-b76d68c26f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b710b61d-7874-496b-bb65-7c52c9bda640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218c75cd-4eff-4c02-b121-0a1ffbae19f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21fe72ba-6a2d-48bf-9e77-9f49322d5573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373b40e9-8f97-4603-abc0-f26f5dc7b6ea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879ac644-cfdb-45c4-adce-1cffcb452f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377796b4-223d-49a8-8f13-bcc1e5ca0f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a2a4e3-ecdd-41de-9218-048d7871e508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dfea7f-db1f-43b7-98f4-036c5541b9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab40f97d-0e9b-4a0d-ace8-83d5ae884a36",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884f1857-121e-483a-8c37-d59a2eb7698c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f2c957-45ff-4c49-a757-5248f3578d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4df8c18-f063-45f5-906c-d16b1cc33dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05ce9c1b-01b2-45c5-b551-532fd9d162a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6e639d-215a-414e-a414-3c93b764885b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7546b0f0-a014-4676-886c-dbbf1988803d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481c4c64-f83e-4baa-af0b-ba9c6efa4178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e21e183-85df-49a2-b0a6-eb53e96f75f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47062ac8-9ef3-490b-805d-df852fa3b74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e4b2cd-65f9-4806-b062-04648562e9a1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14036e2c-f2ad-4e00-ad36-2f5e7246344a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335d8373-97a8-4950-8fb4-cc50e1298b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5543a8-5b52-41b8-89ab-c7321eb8e9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9bcd04-dd72-449b-b096-8438dac6b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf11f9a-118f-46b7-af3e-035f65f7a7ec",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946e882d-4fc3-4cf5-964e-bec0ec09077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c359989-a50f-44d7-a4e2-98d157974364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28203ddd-31ec-43da-b8dc-2649438c2a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b177ac0-397e-42bb-9652-ee863445d699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5d5f69-6348-4b70-9464-edaf72e9dd2d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174bcdb4-39ef-42b3-a2f9-55381e190d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e526a844-8cf1-43f0-82f5-d51d8da0dcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f22c19-0dc7-484e-a596-8c3099f2e822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc22ef5-e7b8-47a1-b2c9-5bdf1924b54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7369f79-75f7-4d1d-b735-da13c31551d3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea96a877-201a-4f2c-8c92-0e7e42d287f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d2ee08-0521-479b-87a4-ed256f645694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e00361a-5df9-44a3-97ec-71dada76eae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af66c79-7fda-40e1-bf7b-de91f1fac1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6632a2ff-611a-494d-9871-ac5f757586f5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b304a7d5-f9cc-443b-a160-44776cfe29d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2375f13a-b98e-43ab-a44c-45c2c179f41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb04b1e-7be6-40d0-aeef-e3bd750933ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0762f20-ebad-4d97-b33b-c1ca1555aa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6383ab4-e8ff-4edb-a0f6-ea624d367dd8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d925a96-ec06-4d49-8f26-1822cb1c6f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e73467c-b866-450c-a113-3027acf6a486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90281995-9531-47c8-808e-6d117fd4503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44bf0bb5-f316-4e6a-9504-c9d49b211049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2a75a0-2a7e-48c3-a450-b00d41327f32",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f31bb1a-3445-4cf6-a240-f2f813994ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09103cf-0c88-4e79-898e-4492f716014a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58039730-4175-4fdd-8052-e46a657f8213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab4898a-64d5-4c36-8e69-e98cefdddb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330dab02-c543-4a99-b048-cee8f75bd22a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea0df1c-e0d4-4bc9-a84a-84efa2668fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b66839-602f-4506-88e2-fdae252b540d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c39b053-1138-4d8d-8e54-811600d714cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84f58f2d-c75a-4ed9-bd55-80f47d7026f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6220440b-89bb-4152-8b4e-ed72430780aa",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef30ab06-c560-4575-a776-c14d253f420d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3826038a-74a2-42dd-a95d-fae35ade4149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408ada6a-87e2-4a48-b83f-06ec4ed75f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18170764-392f-4d81-b66d-803728e14288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34af1adc-4a80-407f-8447-db3280b3cb4e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a580ddcf-2688-4f56-89c0-f0d67b4ed6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358ff43d-e9d9-4324-9451-3cea14736acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d478c44-d1d9-4c15-9c13-290d11d72a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4686b410-4801-487f-97ee-be59e1bc6ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cc4698-9c82-4bee-b8c5-3f390bfa2eaf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83c9e50-4fe3-46d3-99db-0f664cb770bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf218a06-3c9e-4a89-a7ed-bd7a309b369c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320f28b1-e962-49e0-ba3b-9b12d3f75550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "098a2405-c7b8-4f5b-a136-6574afd178ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d038c0-8bf1-479c-8e91-d5ccc3bd8c4a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a8dc95-471e-49c4-9afe-3b9fd992abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee24bc4-02eb-4991-941d-8e9d0163c30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d04e4b7-7bb1-4d13-b096-e66bc76feed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0131200a-77dc-4fce-8921-f949bacd2263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a93f2b-7832-4302-af99-ffaea5927b49",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a1a33c-4a67-41bd-a854-e70d682bf8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522ca989-61bd-4092-9a6a-940e2861ad88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7df0d0-96a5-49a6-acb4-482a522f2437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a13df49-b4c5-473f-a7a1-4912738ca609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff70452-dfe7-4d82-8083-5d114cd85dc8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4204ba2f-db9d-431d-b239-ea19553132cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b47882-4bea-41e4-9dcf-745591df4ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d748aa77-d83c-4b38-a05c-4a2e094ccc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81b07c61-d22b-4fc7-871a-d42a43fb7a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673ab5c6-1af0-45d3-90d3-1eaed9804251",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f890805-0465-4283-907b-1cad22ee6e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1260499-ef7d-4b72-80a6-28016d4b8f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1c1b61-52a2-4211-a6ee-abfd373f5030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8658fc29-97a8-41f2-ba3c-370701ce8b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009ee85d-46f0-4d36-8f69-b81464f8af9a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c59ec27-3006-4994-83d9-c3adb59e5fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fef2d4d-6972-4c4b-a6d9-92927d2b4bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e242bfb1-ad05-41d4-8d0d-0c8b7356f1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21e9d873-dde6-41db-86c9-fa79029555fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0db4c5-d08c-4ce5-abfe-3091090b7ad9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18951927-647f-43c3-8814-96e70cbdf637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d52dcb29-9cb3-4c91-ba37-736778b4e6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcac65e7-966d-48d7-bf2b-b9c59ede431e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "10b96222-4f0f-461b-bc8a-586ab4b4e931"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc8a4860-bba6-4e58-ad7d-8fd061a35d0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c85e989-c181-4d01-8690-9181bfe6e14d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e362ad4b-5833-4895-9a9b-c4de33dd29b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "445f46fd-a80a-4a78-8acb-69d124777301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d33bb0-1a4f-4742-82ed-91a4b82c1ee2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c29d6a05-d38e-447e-a5f5-d200d958aa71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff4bc81e-2a0f-4ff2-98bf-ff0761ea9adc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b57eecc-d294-4e47-bb05-c85750fcbd8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "652fd92d-fdf9-4049-9730-8595410cfaa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9b02907-bde7-4006-a668-9c33ab3ec9ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36e43364-eec1-45bf-9aff-55a2d3a8e456",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23d358b6-63b5-4f30-8c51-a7b1da24c760"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "811ac25a-1301-4ca9-8375-6382ec083827",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0760e54-fb1d-4e2f-9d4b-368e3784c9b6"
                }
              }
            ]
          },
          {
            "id": "1b480a24-92df-40fe-bd58-867cf6197a20",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b88878d6-2e75-475b-b441-f5d4f72c9122",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "358a0775-597a-4d9b-ad77-9df959bf1bb7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbceada2-8691-485d-b621-c02cd1fab42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "46cb4d99-b8a4-4fbd-8cfd-8aca71ed8cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9c4ea8-e7bc-41f7-8a51-2b74130f3142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1714573-c85c-4718-8d38-7deabc1e9582"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c23d5c29-aa55-4326-b392-dfa99dd7c9ee",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b81fafc5-9f93-4d51-ab9f-82c5afc444fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "225e9846-4f29-4aec-9bdb-98116e989f2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb2563c9-a1a4-4d0b-aa9c-4157a4eac15b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab604583-f701-4ac2-855d-da0f7205e515"
                    }
                  }
                ]
              },
              {
                "id": "9470cb83-fb74-4337-8927-b7c628e3175d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56ff365d-3d2b-4c8f-acc5-eccbab2cfc58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00e9a762-4df4-4577-a2fd-16cedbd5ca22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92e1c7c9-402d-4fb8-9119-ee9d48a1b9d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b76e8fc-e516-4591-90a8-c1c7aafc77a9"
                    }
                  }
                ]
              },
              {
                "id": "fd7e03c6-5f3d-47d2-9cf2-6be229fb96fd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d04fbcf0-1b47-4e40-b069-612a0535778d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ceda96a-2ce0-4cb7-958e-c7b51eb3542e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "663e7a90-53a7-4e1d-a9f6-47311373197f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7609eb21-8cfd-4553-9e2f-ac667a003639"
                    }
                  }
                ]
              },
              {
                "id": "229bec73-eecb-4e17-a957-e7f65fdfa11c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bac731b4-5b93-42b9-a9bd-966bd56cf3db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8eea317b-4f68-4822-807b-8e78a572c67f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6f29e72-ccb3-483e-b219-3d5062a75c68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "38ef0da7-ac81-473e-85d6-6456e87bcf04"
                    }
                  }
                ]
              },
              {
                "id": "533d9e56-20d1-4711-9d02-0ce1a1b2634d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ae6a4fd-a30c-4224-9ac5-86cd266c9c72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff7890b2-107b-4ea7-9d20-21c08512b477"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9b1c14d-fe21-4b50-b7a6-c962920526f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5863b8ae-889b-4141-aebd-eaebb390bab4"
                    }
                  }
                ]
              },
              {
                "id": "2fa5629b-bc77-44e3-8a23-982290634939",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d21f6772-cf21-426e-9048-279e04fc41bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "caa72eb0-b2f7-4687-a16a-b6ea7a1cb9b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "012ff691-9a56-4b6c-8f71-33242f75cadc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "563acc1b-e2ae-4be9-8bd1-57474f865be5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "637cbf29-52ce-487a-8db4-1a900cbf003d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "accb9a1e-209d-409f-8306-65bce124d490"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "929ef7d6-4b0c-4e98-b373-792a6eff9511",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e95a5fc-d6dc-4695-9bfe-27a3b57cb050"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e23f2d2-e94d-4290-81dd-515ce62afb92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8dda9615-dbcf-4914-983d-4ebfb255a1f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b933ee8f-01ac-4253-9801-d86e56bcc082",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ec6dfdf-db97-4b95-9771-fbcaf68ba0c2"
            }
          }
        ]
      },
      {
        "id": "08973d0b-d04b-495e-8d69-86e349713b71",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d47875a5-a44b-4e49-8e1b-0f23c1809c8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b38acb4-f1c8-4129-9793-183cf1c328be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01cabc33-88f0-4860-96b1-370d940e3b4b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1fc2d7-05c3-4ded-9287-54c14d6ae700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbaaa729-c3e0-4fc6-856e-a60a7046d212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45806b9a-74bb-4896-9352-4e7d115fb169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "136082e7-888b-43d2-a37a-66ecbbbd7a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc8c9f8-4ec3-4e66-9a6b-489f14b45989",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dcc649-45ac-45a2-9a62-0a439c61df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4e2a4e-b9c2-432f-ab34-dae5a0d1d2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0373d30d-8927-4251-8924-b87e5eaf87a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9b1aae-c4c1-4ff7-857b-2cd7fd2977f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2b8258-5c44-48ef-9b2e-4f49d6fc91fb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1288ef-b6a5-4e7d-a379-dcb6e619fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e469ba15-cbd9-4f4d-8e99-ce409a9a17d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6875516d-e5c6-468a-a6e0-247dd94b7261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f63c07-8bad-4a8f-ae95-4fb51ac2c1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a5ef1-268d-4001-8cd0-5e9f71e3ac01",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eceb8ed-df13-44af-989f-2bc3d7fd9c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9437c255-6674-49b5-bcf8-538daf5c0a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aabf2a-3987-423c-9de0-7f2ed98672cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3ba1c6-2554-40df-989f-92a8343be26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1bc83c-8c31-46f6-8923-b4670618df31",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a57f73-4384-409a-9cc5-41b9a70f8fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6c021c-dde3-47a3-9d9f-91afecbed84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f032cec-0200-4e0a-87ea-f2e3060b3984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b062a2-8c79-47f4-9394-e6ea81886b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d379802-489d-4e16-ab1f-78e89ec3928c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b535404a-aeb0-4544-8c37-c9126159b681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e0268e-f005-4a59-bf0d-2bcd059f270c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8018267e-d208-4ffd-b69f-2426d78ad59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2330c8-aa09-4911-abc3-2592a0a79b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c7e1f7-7600-4d8a-97c4-438ae4837223",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c09f425-b34d-4875-9859-b027f98aff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8de5ecf-e0a7-4bfa-a0a1-88ce6914530f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad1f2e-bee9-448b-ac53-c7ba90d993db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4f5e57-7c8e-4c16-b341-6f30c8d3cca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94976a6e-ae1e-4ee1-9c96-498f3b85d6cf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6089a11b-1189-4a8f-bd0a-27be0450757d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9436b5e3-1b2e-4ed6-af2a-e1c1ff706054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ee3ae1-a14f-4429-ba8f-7362f01b244f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8c61b4-902a-40eb-9da2-96f08facb33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ceb34f-ac4c-47db-962c-b9fb735b2c19",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9316609-b066-498c-8cc5-b8d2ebfeda2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb627523-bfad-484b-a7fd-fe50a8c5ea07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570e181d-8073-408a-9105-c7d944bc84dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b338bc42-de04-4d96-9e3c-70d80b46b894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd88f23d-da67-4c9c-bea5-5d70fe817e31",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a0286b-ffc8-4a66-8f00-33aba395f16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1bb53b-1fdb-4a3d-880c-878c687abae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00be92bb-21f3-4671-8674-dfa169cf4da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95780ad-9563-42c9-be0f-bc359a2e0d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d12d269-24d1-47e1-903d-78a24daecd52",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f13e91-3882-4c2d-864e-6b638e19e3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55604990-d32c-4d6f-97cd-07e2a05a88d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764e824b-5271-445d-9505-ef83aaee94b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3739b8af-3aae-4b01-9b7f-066cfd2439d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471c1858-6b69-4a0c-96e4-46f9400e6fc3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efbe4fb-4ca4-4388-b14c-9821ce54886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71224be-cba5-4bae-bea2-4892aa5b463e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26586031-860f-4a33-aaae-39f90c666117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54b6c68f-d90e-48e2-bfa9-3691dd52ca4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e80e53d-9434-46bb-82a0-83b110926f72",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce155d8-fabf-49b4-b115-f6624b858e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dc1640-04dc-4dd2-bd1b-b6077f2a76dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f6274f-d610-43d6-8f16-e7fbc4b74415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "725c4ccb-a3b4-4cd6-bb20-d1d3d78bd104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7b8784-7473-4200-90de-10cd205a89e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62b9a77-6b2b-45ce-8a1b-a5a4fb886074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdbb143-bbff-4ab7-83df-41d70dfc8953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45be25bf-e888-4057-9168-4a012dac1b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a99f94-ca0e-4bfb-abeb-c591feb83aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307424e7-45bb-4967-a054-177b92adf929",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb7302d-32c5-4f01-8e87-762f6c6da0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d12eaa-0809-4133-8b54-cb5a5621ad66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eee0f9b-dbbf-4b0c-8a02-172e8b2d5eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd4a2e8-2b63-42fa-8b8e-d9f99a71ecbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b94243c-1ad2-431b-8762-3d804baa08b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced0632b-8b0b-4c42-b20d-40a234c5ede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8315c2f-b652-46a4-a6f0-0dcc7a9c35b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb541197-9258-4b1e-acc7-50c3cc1dd7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "193e0c42-6936-450d-88bd-3bb5092c9123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c116f898-ec5c-4d6a-8b7c-30bc502ebcd2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d972dd5-d6b4-417c-b2af-7d9cf2555f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db53e0a6-772d-4b00-84c3-5991d0ff67c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d437e83-f78c-49b8-91cb-78d87e09c6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d39d84e-e6a4-483b-8020-f3996136d9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f168fb67-3169-4ec7-be2d-191082662e7f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e364307-48cf-4569-a765-a0c5e2e5fbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea445bb-9ae0-4f32-8f99-d24fa09fb6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bda7ba-74e6-45d4-89fd-6eae13e9e5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3109296-7530-4606-a541-69f3daa8258a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f03f675-4104-4887-90ec-32e9346fcc08",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbc8a32-208b-4f09-994c-5f210241fb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069ba1d6-dd73-4a9f-bc31-2d1bc3647574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00cb35c-d792-46a2-b0a2-5b2a84971ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ceec80-7b1a-441a-9c8f-04b886297e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa18870-b2f5-4286-8260-e3b60233cc2d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d407a8-c807-4c21-8cd7-bd3d0dab9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cff5f69-f28b-4be7-b581-eaa19c9dac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f847840-47fc-4435-a3ac-63bcbeac9a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6072ed27-bd6d-4358-9257-2b826b024b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7d69b8-12b8-434f-8b43-7236b0828bb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcb66c9-2145-49c4-9ef5-e954cac36d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a49dbb7-d466-4f98-8f87-0cd7d3bea775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb884fab-6cc2-4a05-bd8a-d61e0f53f429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba5bc50-3860-486e-9d0b-9934a7cf1cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e148c55-7c78-49e3-b55f-232c4ffd01d3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e530526-070c-41ed-af29-2687eefd1eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f61c14-c5a3-4c18-992d-e4d84d4f9e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8d0341-f816-47d7-9ee1-77175741c1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "301688b8-b977-40b7-bf17-3ebbd7adb333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fe8b52-b48c-4e4a-8ca5-152e23b44cab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3a6aca-dc9b-4019-8423-1ed75fd01349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c35f082-33de-4858-ab7f-f94d694beb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f22e24-42c9-4bd5-a7a3-a96cb54dac09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007e910f-ecd2-4be4-bc11-7cefecc8f72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c15a0f-3cb8-42d4-a518-161f74d7341a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e602508-346a-466b-a461-a0dbcacb387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07733ab6-b688-4b86-bf5a-4744bf86281c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c6d625-527b-47c2-9c1a-fa7049f930f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea822c6-1f19-4832-bf61-98221e97e199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155b973d-6d3c-4bd0-84c5-38192c08a213",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40de6fbb-5ec5-40db-9e03-577cebafedd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73b90dd-1d15-4c04-b358-051c6246616b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d333af8-872f-4a20-87a8-22827428b259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce5f20a-964c-4c39-9352-b13a9f6b7a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98a30f8-be72-4467-82be-4a99d677d874",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74b26d1-75e8-4bc9-a6bc-03921bde21a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2639d842-13b3-4ded-a6c8-ad6fc2da9a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8249cc9-4b6a-4347-91ae-27a0e4e8010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0398e1a6-9494-4cd0-b606-4169b56cd9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba96926-07db-4e7a-a06d-13f9ac78e72b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282e9016-6564-4dc2-83f7-5b3f372f3208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988ab7e4-c912-483a-81cd-94b55d64dd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4317287b-3f5c-4498-831b-27d4aa978c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4efee98-268d-4904-9ea4-fa612dad3c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2680787-bdb0-48fc-ad70-165a51d821a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c36c902-886d-4e1e-b6b7-5a29d7daa14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfc39f3-5141-4ad9-bfd8-d973be875545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fce4c3-5463-4147-a26b-3d3fa74ea8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef51dd2-e7ef-4853-a4cf-56cfb6686b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59c92c9-1c76-47b9-b94f-e997cfff0016",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea0b005-6396-4bd4-bb76-66c8eafe4801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f875a196-39c6-4bf1-94b9-a191b0757cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71620ff-b749-4512-afde-6382614369ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5191ef-9332-477a-8aea-be235d4edef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a8c4f8-bd69-4ca1-aecf-0e1da6bded26",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc66c5f9-de93-4837-bd1f-ce00d9b99e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d598f3-01d1-4d99-87b9-494f82e3b0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e441883-aaa7-40f6-ad9e-1c0e097b38ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b152a08-63d6-48ce-a772-c08e275ec8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd87ac94-8e7e-4c3b-872e-1354c72e30e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bfac53-2b73-4c6a-bd60-653215ca485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d274611-b4ae-4319-821e-6e096166169e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bae659-fbba-4bf0-9985-21ce27cd3eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d3a33d-2178-4b5f-ae6e-357f373ff731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84af2c7-d15a-4396-8eda-36606770bd14",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b3ec4-4d44-4162-9789-e6974004ee4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a6a06a-050e-4243-99d0-00251255c178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76719879-756b-49df-a60f-17836606c798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cefee908-0c25-4761-8dc7-868f0929371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c1bbe0-8c21-4156-a621-1cb800c231ef",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b8196d-0c17-4cd7-9f3f-0cbcdc8c7605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b77b51-7b01-4c99-80b1-a8f53359bd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f60346-a2a6-4e7c-b896-501bea210f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54710115-406d-431d-b41a-01fe215d18bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68454650-1faf-4eb7-abfe-b1c8f3c6f3ce",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b4b39c-657f-457c-bd62-0288783d313e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b631afe-7b67-4d5f-9963-3a3efdee38e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d07e205-befc-40cb-b579-a8d41a9c5524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf52302-ee00-4a15-84e3-70f2ef366d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d45a341-a591-445c-ad67-3d5d04769b60",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062afe80-6ad5-4b29-9cd2-737d4fdaef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615e7e16-054a-4cab-a586-94de5ce6f108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8538cd5e-55f4-420f-a394-58c0cd1e6083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efac1a27-35b5-473e-86db-8bfc1604e609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ec7135-6b04-429f-b58a-3b449110fea6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243dca8f-8633-4767-afeb-e6b9fb30acf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130a4829-c2e2-4ebc-bde4-3ba531e90375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b280acf7-2e77-401f-8a23-2418c93062d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d52f0f7-11d2-47b5-94c1-1279763d36b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff43b1e4-3c0f-43d5-b62e-d599b9fd9cb5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d548c75-e016-4e52-a148-6a558fc42aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6784a8-1a4d-40f8-bd23-2b50bff5b655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7256d1a8-5046-41f4-a896-f9c7f48efd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46cbf0d-69c4-4d12-b749-c437700b002a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75affef3-1b81-41f6-862b-44f0d7261304",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01a58c64-09b7-47aa-8224-e60a38e30a38",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000e9d54-32fe-4db5-a67c-3df780d7426f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4e9613-b0c1-4f5c-84cc-4a95996763c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddfe5af-649e-4dff-b01b-cd6ca50dc113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce321832-4615-4598-b755-a95476297367"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57307c66-80f1-4d83-9e64-27373b12e01e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed36b378-cbb9-4b7b-b4b6-a90efb2de86e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "622af38d-2bfe-4ca8-b78a-306c9cdb1f30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcd2b2d9-5264-46ad-b44d-24975f4f805f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85a94dc7-5a4e-49c8-8d30-18d2fd00fc82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "600085d4-8455-414e-8e30-c2f6bf31be71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e514c2b0-d295-48b1-996d-a1705874280b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "171ed21d-14a3-44b2-9173-47eb20c27fb6"
            }
          }
        ]
      },
      {
        "id": "2f9356bb-c5f5-4e2f-93f5-c32dbb03c58c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "95b2b558-a9bd-41b7-9a2a-d95a5c1c2bbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ec469ea-23b8-4181-9115-b59849df2e78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1de3b1c-bffe-4944-a39d-d4f5adcedacb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d44428-c94a-43f7-ba08-a6d44c2a0511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6218f735-3398-4cbb-8719-1e271d525e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eb9b87-a386-4faf-82e8-73cff93308d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbae6bf-d844-4314-9418-714765fb983d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b2d5c2-cd62-4932-a36e-8db43878e7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbeb701-602f-4639-a540-443c651a4477",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a06cf-73b7-40f0-aa3f-18a5edcca498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def2a493-9a0e-41f0-bf58-b0d68bd7760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c70ef4c-25b8-4323-8715-20b3f7fdb2a7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f80ff1-dd29-46bc-8b5c-669f989e52a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9bd9e4-9c0a-468e-b1d4-1b353056a692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ff76cf-27c0-40e6-bfa7-3bcd62e91926",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4ae559-1ad2-4771-ab04-5e8d8aeb37c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782e1fd0-cce7-402b-becc-4454ea0452ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9c0371-1b37-47ad-8cef-d27e3eafbb71",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1883d9eb-4801-4843-bbfe-8d82d6839a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c96803e-fa3c-4b04-9c8a-ab90b02a3d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6da6b7-ecf1-489f-a359-7c6a150aa81b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c01dc0-f1dc-41d5-b43a-571755133b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c3aab0-63c0-47a3-83c1-3fae9835135e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780f7a6e-106c-4033-956a-dc17f3b43093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af1c555-2ab3-4f3b-9b49-51b6c19fe4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525919ef-9866-4ddd-a6e1-c8f7252e6bea",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5277cac5-c3ca-426f-b984-3158047909c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d0402c-005b-4020-b9a2-b52b37b42b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dafdb6-65be-4a49-baf3-4f770ad8ed0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3eb2a8-3a0e-4f77-947d-a2086c1514b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f16600b-32fc-41a7-afec-44817244576d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd3f528-27f4-4d9c-9539-9637a90e50ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d210fff2-736d-4de5-9574-b2ad7c9017b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d6b25f-7d6b-4770-8f15-350cee856469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e014a2c2-aa40-462e-a179-28a13f936037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e0a9b6-1c34-4d68-ae26-913a01c66b24",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2219ed12-377b-4a1a-95b9-7dc8d3605190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78996b8f-a09a-418e-ae86-fd224ac00994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d609602-b62b-4b25-b450-e6fd2b361bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1da0726-0686-407a-9ea3-e00a469c4050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1802fbfc-e413-4d03-8d50-c823799b01c0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733ff83e-325e-42bf-a07e-51ecea772dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5202ce72-c6b1-46cf-999b-b46b192e4296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833e1369-9f8a-408d-be9d-b624de8218c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f895e3e6-1f15-4473-9f82-f2f309a3d3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fb9fb4-15df-4c8e-9567-d73db51b4366",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3bbe2a-d8b5-46c2-b1ea-94121594ceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a720cb0-65df-4ec8-91a7-c7fc8fe21c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f537b65a-3403-4442-9c13-7db00da2e097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c63bec-9fb6-4882-8909-11e0533764c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31ec47b-9a71-4697-ac2d-13026dd4a63b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44b8a8-7093-4ede-ab5f-1aa71fcdf8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3c915e-fa52-4f96-b811-d583a31e00a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95916fa-312b-4037-9786-361a6439fb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e151da9-21bc-44a4-8d2a-9b123f2f2476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d281fcef-b0c3-46ea-8696-c66b9a78c050",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a481675-b804-43a4-bb5f-fc90ae679e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2c16ab-efab-4f94-bcaa-e31a2817d926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bfd421-e847-4662-85e4-3066cc7ba9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fd2c9d-3617-4d57-9df0-fe981dd88ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33af4548-c90a-4a5e-ab35-8bf57b89cb57",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b48b83-3e91-4e84-aeee-39d900b7f24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f335b1a-9dbc-40da-bfd4-ce070ce9a86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e9bc75-7411-4ab0-9623-efd97f165cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414eb874-0060-40f4-a13f-c5bf82e00913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a897417c-8fb9-4708-878c-790d88e91480",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fb5769-6b4e-4122-a4f2-2827d5c5d87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de9b523-5195-448f-95de-09548c4ad779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91085dc2-4718-40d9-9234-09e5683885f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3980e541-6f7f-43be-8a4d-366960e90ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8ec0d6-177e-4287-ae0c-3b75999787f4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46527729-6b7c-4d93-a443-18afdd5a9885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a425d14-538a-4f6e-a27d-7ab4137056e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174a44f5-840f-4f29-bbd0-734f416f6d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab7c4c1-99e6-42d2-8b7c-2226590ae527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd141a4d-ae6b-4ee2-8944-71bac83512f7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa72b52-4579-4d04-aa0a-0dfb988ed911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe26f590-60a3-4a5c-8c70-a0fbcae0d504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b485e46f-48c2-4734-ba4a-51c98aa76c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2b4000-daf2-4eaa-a91e-41ad182da9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce18341-a7b8-4d25-9272-f0db09da6fc2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33945a3c-9390-4d9d-8007-2c56f3bd430e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8297e8bd-b64c-44c7-8f5c-a19306c4ecd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4aee1c-6058-45ed-b82c-0083d204265d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128476c9-2419-4814-8d56-1e76c6a6b029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4f8315-ab8b-4297-b821-cb3db5ea3b16",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49edc637-30e7-4734-b10e-2e2b8784a21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6898bed-e917-4dcd-bfda-6c43d413c6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56ecc1d-2312-4412-b361-3ec7a1a8d018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bf9ccd-c05e-43f6-964e-691d0684452d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8f7d05-357a-4378-95bc-1dcdce1d7a02",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68ad804-4626-4d15-b55d-a0902e0aeb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bfec98-fc59-4f40-a37b-a0160907eae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9e60fd-b8c2-4189-85a4-7c2c3cfe8f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae38ead-9c06-4c38-ab47-a487ca08eef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7dc12a-58d4-4486-b3af-2854c4100e0f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa93258-fa66-43c8-b02e-849f04282b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5184b96-0f8c-4f61-ba17-12660425d3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf1b67d-fec2-42be-a930-0f327d59e517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75be1597-e3d4-4abc-82e2-26a48343ae26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4fbca5-8b6a-4b01-96fb-ece28ac105d5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab89b41-ce30-4a1a-8c3b-b5600ae10b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5f892c-996d-4697-8227-d4bdbadc4bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9895269-30e9-45a1-a78e-fbe55e950b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6617c20-f1d5-49ce-a6d7-c507f4ad744b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a981606-a563-41f3-95f0-17cce4f2e1ec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a180affb-94b4-4d36-b773-8d5568ebe589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c86608a3-618b-4086-87dc-0e6eb6e46b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7e497c-359c-4415-90be-d9521ec31551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73734c9-48e0-4b97-a13c-f8951d92386f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c8ddce-db83-4674-9c08-903d87629b25",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5831d75f-0981-4cd1-8695-219fcc2d3b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e987a663-410e-4924-b0be-38c8bd393d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a11ec46-96c9-48e1-9ec8-2e07a5749fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06aba1ef-0bef-4bbb-9ff8-429bc6f096db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c3635-b49c-4109-8124-49d28f5e6ec9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36463b84-a6f9-468c-a09d-5e3172df1977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad0d7d3-ef80-4061-aad9-49fe8ecde614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42717022-d10c-49f7-b110-51b67e6a50c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac593dc-8d21-4bc7-a6e3-42ea3154a3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfc4d23-a92d-4d5b-8288-5f00bde492b4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a198ce53-05b7-4829-b882-9173178e64c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563b4dc7-1c94-4cc1-aa81-6d9f1e00bc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e143e6-9bd3-49aa-8770-c02fc3ff0fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c70b9f-bb6c-422b-b055-0eb8d6b70fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b36e53-c4e6-4541-bb64-7f92c2360b7c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0620fe1a-847a-4713-a523-b3e6b8b2f0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8360ba-7bc8-4645-a45e-6133d637b958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5685bb49-8110-42c8-95c1-f461e5e0683d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697b0372-bf21-4adb-8380-2af535cd3073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c23747-70c3-496e-9bfe-72a42b3e66d0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2b91b7-1fb2-4290-b8ca-d6ae1a819886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "627c2ec6-6ec2-4cf0-96eb-ceb4d2582c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509e1fb-2ab1-4a10-a76e-b9a5be1b3648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b84e55-d5f2-4ef6-b1c5-7bd7da0d88ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999c9a93-1772-4a09-8cdf-cdc7779bb4a1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fd8ce1-c307-4b6e-a705-091ca4b7578b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4792263b-cd0d-4605-b396-3a170604f3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeebaf3-be44-4037-bb72-6310d3246116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38549c10-6594-47d8-ad6b-967b3346c178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369b73a4-6da7-4135-8a09-8abda43c0da7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b7c092-286f-463c-8b1a-0bb21f3f3fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16cf2519-c11e-4dff-8888-81c51121e7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fff9089-5cd8-4392-bfc6-d72a6c0aa2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f83b44-e2d0-46f5-b259-a9ac85890980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec94362-d150-4b26-97be-249ce125572e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b4f57e-903a-43d4-8ce5-0c32a26d50c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c02c847-86f1-4a5a-81f9-499a3d6b257f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b565e7a3-813a-4580-aee9-0d867fc7cd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95575db7-cb7e-4b91-b792-ec0e92591f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada505f1-f8ca-4d6f-99de-f67da05a2e52",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8638c0fa-58cf-4526-81ac-0be97646ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d1366d-6234-4662-8db8-9f385ef52620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fe299a-740c-472e-9031-53bfa5331108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8907d5af-7799-48d7-bbf5-f3e3991947d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af78bbb-60ca-4805-8114-313dcdd2b27c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d914f02-1d4d-4886-8a75-6a71d6f330b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73fd6fe6-4e04-42dd-8a06-303531e3f6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e451ba12-d39f-4ebf-88be-a289b8c3b680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c271fa35-725e-4739-9ea9-a0afa597808c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d2746a-60df-4e5d-8da3-40976d124ff7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cb610b-8baa-4c50-81ce-303212d84543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713ab1de-4d34-44a6-89e4-5e7b61f062cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac4fed5-c3de-4ac1-a178-98640b6400ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5332aa9-8654-465e-b126-b89285fb7006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7835276-08f4-4dcd-8e9b-c09648acf43e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b3581b-4cdf-484a-b4f3-7843c7fa87fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ce7cae-3f91-4c76-866f-44ce23cbb018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc348db-4a20-4670-8d48-3185a0a72fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17bb576-18e8-43f0-a56f-b434609af33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d9f5eb-08ad-40ed-a732-c84682005742",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f143fb-649c-4e03-bcdb-7e1ebff8230a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c19e6df-cb90-4fb6-9fd7-7e91e8158f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae2fc7e-e9d9-4d92-8ef7-ebdeca3f5c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4b5eec-245d-4d3a-b27e-9eee2d4c085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd44b7b5-8a24-4f29-9798-1eeffe2415eb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2899c6f-c369-4a58-a272-b4e515458346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ae7693-1481-428d-a592-bedcd2e47a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49737177-fdf1-4684-9843-3748e300989f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faecfd3-5a04-4627-a601-2dcdc3648e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd092740-537e-4fb5-80c7-fbdf8b25164f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9363e3-3101-4323-8964-fbdba39cb010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49997346-0c90-4822-b377-f3a59c78a0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e629458f-ef99-4e14-9d59-1c6cf26abbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa173bc-4879-4b37-8e8a-fbb4eee22c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59d0d03-7225-4f79-a640-1e4a20acd7cd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510ffbdd-68f0-4a47-b414-57d198ad0b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50b4b13-1c5f-4621-aa3b-c32bf0e317e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e480af6-f272-49ed-a0bd-05183967df83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904baca5-acd6-4870-b020-1948236a9568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283d0aab-b964-4712-8c3f-b859424b6cb7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59563a58-723d-4549-a9a5-b3b31666b8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fcee16-4799-4093-8aa1-e7133a5d1e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448dafd0-d0ba-45bf-a0be-09a4284ac71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fe3ba1-bea7-4762-b657-6b19105dbf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9980ea4-bf05-4462-984b-1899f1e0dcbe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507e2971-eb39-4f86-9922-05608dd1e8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac9cfd4-0a3f-46b4-8825-09493ece405b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c56f1c6-fa01-4191-8faf-1752ae8670ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598b067b-8b36-4bb2-8908-b80c7c8a2410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d13ad0-fe91-4042-9fe4-1be4e494ad03",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f79f22-abc6-476f-b661-ea471469b1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f96dfe-7d06-4d25-9339-b2400bc6b985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87aec3b-db48-4696-b146-97893401e349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6172d0-5760-40cd-87ee-a66b22b2433b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a489c28-a72d-48f2-b68e-fa55583325cd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3263924-deaa-4dc7-b9db-0ddb81e5c302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82598903-1b6c-4b2d-9a7c-5a2069ef2b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c430ea-23d8-41cb-bee6-00816fc3558d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111dc7c8-54e2-495b-b40e-6ebb9ce9e61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfdd79d-4750-4319-ac85-ac1ddcaae4af",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bee3dc-a912-4fb1-b470-e59877489488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2454636e-67e9-4a30-aac8-22ca026f98c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7d8e8d-4861-4714-b1b2-2507a9933b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccaf733-2af4-4c6d-89c4-b270e5c97c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253217c3-e4e9-4aa2-bfe2-3f7f93dc3ccc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999de79b-e356-4b79-8597-8e5c84c1e404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83265b02-e23e-4865-b633-dba506c6579c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca427801-fdbc-4f9f-a146-930d9c1db9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f3b607-fc74-4f89-96bf-00a4da40a7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1805ed58-0bc2-466e-a004-ea9a221d1dcd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808435ce-5d8a-46c8-b389-a6d718edea8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26e18b0-363b-4754-b0fe-930b97c4a7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe0c334-7a8a-49f2-ae79-0f9f43d7780a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41aed0f-6d5d-42e7-9e53-74a5f292319f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e42553-211b-4841-90ef-9fb63514ff1b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c930c-9ff2-40d9-8725-cdb7260b83da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11293d1-67c3-4c40-998c-9f05c7c9d59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ec0214-132c-44a0-95b5-4be76d5d2855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7c6afd-0a83-4e67-8700-099f9eb10d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6397d554-4d4c-4421-bbe8-224d9b6f6a24",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27afcc4b-ea92-4b3f-a8fe-f150eb18e4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acabfd44-e759-40ff-ad41-a90a6b7c2d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf7d80c-3322-414c-a872-7df24c35a402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ecf502-554b-4e3b-adad-233d7e1d1296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55098e2-9129-4060-b8c8-c8f33304aaa1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4e72b2-53f5-4b1e-9574-3c5439a1c03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5089e3-2b85-4c2b-805b-eafb7bbfec51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f334c8-2942-47b9-bf1c-f27f769ea204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e635aa59-8298-435d-84a9-93d121fd718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614b21e4-3c51-4db9-98e3-0854653d158d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e43fce1-928f-4798-b392-a3c5461d5a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0ed6bb-b5ab-42b6-a965-3a19b9d405d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da039669-c235-491e-8543-9b1b5c0f2542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ce9bdf-f004-449f-bb77-ac323f332dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d95147-5971-4c03-b3f5-1631554362ad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0f77b9-3918-43b5-a137-dedc091631ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703a7dfe-bcca-435b-acaa-98ace97e59f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92fd7e7-db04-480e-a656-48aef3454978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd9b80a-c291-4bf1-a91c-c61eedfcccea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21d79c6-27c6-4159-8d73-c3d6e6189371",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9830c66a-2609-4ad9-8068-e11ace9231ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61e8907-2973-4ff4-9c28-d8e5ff11a8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed90d4d-689f-476c-a338-9194c6bf0241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8827acf6-315d-4329-a6e0-fa6f92a64fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9d785e-5b8f-4353-8d2a-6e200ae3d776",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c187c1a6-5c01-4117-88f1-4772957906a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0295bf-e69a-417f-8a1e-30005cb6d62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f9f97a-6c60-4a33-baff-9959d6a35f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179b15c6-7f14-4b10-80fb-a412d7fcad8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45c89e7-9a28-43ce-bdc1-52a27180b6af",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b830da0-86bf-4df5-a663-800014d1c9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0899cc50-5603-4df0-a331-74adbb698ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84842f3-6957-4d23-b831-2da47b2314f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c15558-d783-4fff-b56a-660433a87939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902b85ac-34d1-4b9c-a484-1182cbcab2ae",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f000eace-acaf-4b05-95c8-6e887e0fbc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6544a993-a995-4f45-a826-0d4cb90f659c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fbe8f3-26cd-41e9-835f-dd530c1f2041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e652b193-bbf1-4490-9c5d-cda4ca1959c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b30a7fa-9092-47d5-bcc3-e00ba9bc1be7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e171fb-0f58-4435-a9f8-150e6ca0de4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39762467-ff5a-4ed1-92cb-3e835671fb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a6d568-4e1e-4dd7-ae9e-9b49018bb6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113fd38f-9540-4567-91da-cebbe0dc41b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0d0c02-4359-489f-86a5-7dc6df3eb916",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfdcef0-290d-4124-9757-35462cb4889f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215ac389-6e44-4751-ba10-745c02f615cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad2e00a-0acf-45a7-a7f3-f7c417a1b725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32209349-11de-4bd5-94d6-bb7d3daa3e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44375d3-4b03-4a1f-b989-466763505bba",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980a1d5-b9d1-4ead-8aa1-215c7bc2a997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dc9432-74ac-4402-9215-1a123c64fd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aba79e6-3bf1-423b-adb2-969a596b62fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7005c4-14ee-4712-ac3f-ac85c130a41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2880ff-72a8-45dc-a1a3-8b0da136c11e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cfbdd0-387f-4d49-84c9-9d668210057d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d387a9-ca52-42b3-852c-2810e98d3921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f8aa30-a99e-4efe-aa0d-f6a4a816736f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1859882-05d1-4788-9327-efb03f4bf301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689ff596-9f09-452e-a97e-ec0c6c304863",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55299618-b36c-4ce6-9b74-8b6a79b2990d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7a6acf-2230-4ca4-8cc4-45fec305e06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4a1b78-55c8-472b-93b8-1c9be235509a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556fa94d-a900-41d5-be61-e0e178e2934e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d268a9-5f04-4aae-b0da-7bb2af8ed0b6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4027d6-cb13-4641-bba8-5321be27049e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a77c6bc-90d0-4399-9ab0-4c39a08a15e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b29f83-6813-4115-941b-a9c417d2d39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebeaf340-1779-4a97-a1bb-c73bed5b84cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f42dffb-ad99-46b0-9afc-eeb78b572649",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8312a901-5c5a-4cca-a1cf-2f42e4cef0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3d513b-1621-4bb8-b3b7-e8dd993377c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fcaaa9-a4e6-43ff-93fd-f0345d71b351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeb22ed-f93e-43cf-884a-1095e359ce3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8232d53f-7386-45a6-9e03-866a39097a37",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1217437-a992-42aa-9f96-0227a38e4fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbeef82d-b8a4-4340-8eb6-7b7ada776acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72b9950-75b4-496f-a1b9-63cfb2842172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07636a9f-593f-4a9e-b454-70d473893a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9611d1-d9a6-4ff6-97ca-c3e657253689",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b721f0-4ec8-4b86-98fb-68c40c316fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d4c816-312f-4e8c-8569-ab62ca48c864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeb27d5-84d9-4c4a-8218-79fdd1a3478d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9e1990-5e20-40e5-b385-0fb7aa87dce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb0367d-7d12-48fb-a398-8ed36c273b73",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe6f86c-d4ee-4cd0-b932-14e260fcc97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f58c455e-7055-456b-a87d-0ae02a81b39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053630d1-4aad-4537-a0cc-ce31d6d73d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc484229-1355-4850-b3e0-a6d4ffa33425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b524b4ff-edf3-42d1-8b8f-62a2c18f74b4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061859c8-d392-4a4d-a113-9b766f67010d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be65c5c-c46d-43c4-8476-e05595a34b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807b5df1-100f-442d-9f66-bb1cb6183245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f0d22c-1094-49fa-9640-4c3aa7063932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed2c993-a7e2-433a-9c4c-5aaa7d23f657",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c53773-f542-4e5d-8ec2-1fed427829c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f70aad36-5b25-4e72-bb73-942200f594c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9989fc08-371d-4ffe-b8aa-0a45b7563dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4a8171-b814-45fb-a2e0-9b1366a04d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cc693c-00f9-4218-afe3-6da8735932a9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f8be66-e15f-4e2f-8791-89889b777f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b874d676-62a2-43f6-bfcf-62408eae2b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f0da9b-3ded-4b22-96b2-2c016e1d936e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b17bcd-cab0-4bbe-a28a-c92eb2879128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95b2dd2-4695-449f-91e9-9991664cb4cb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6830c0-a8e6-4538-95dc-162e8ce4e237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4e69dc-ab11-4c3e-bab5-5b423e5d0081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0838fa50-d10f-4162-83f4-bb0dd1c58247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a878dd-2ce7-4f28-a53d-9948957f0f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a601207b-91b5-476f-8f36-1ca6a8762a44",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c071a101-9992-47c6-9ed1-a8fea8e7052d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ae7e22-ccc0-482f-b299-ff8974662de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03070c79-333a-4c22-9796-06b196ea2b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f518a368-91d2-4738-893a-d2ba9b824916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e26d2b-6d9e-4928-910d-4962bf0380d3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f05ec66-e8e8-4e30-bb16-9c8c6eaf58ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37fe40b-1663-4106-a4db-81daf87bf12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1ef1a4-2ffc-46ae-8049-27e6f206a616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccf08d6-8b40-490f-b216-174b161c6621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7c4ca4-3dd1-4981-a0fb-6f1de5b4340c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe13ba3-8ace-4641-87eb-15dc4b994707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef58354-9b29-4c92-90fc-e5245db3fead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2226e9-65c2-4534-9a68-053fbdae27fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77005da-0350-476b-8113-8910c26fbbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf36993-9672-401c-a1e4-7c282efdcf7a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bea3876-69d0-4285-b649-4dbf58d2a239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be9987d5-ef73-437e-9ffa-4aed241664b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764d46fa-d6c8-48b4-b2a7-b6bb04bebe73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffdcc10-5b7c-4675-8cb7-227bea6ad4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a29b35-a9cf-4d94-a85c-3a9d98540555",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44eaa85-25c0-4a82-8076-68713d0a86e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "960498d9-462a-44f2-aeb0-69deb03f38c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5684e858-5e47-4d1b-b710-cfd63bad24b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3305d047-bf6c-48dd-812a-52562b8b00f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375633ae-f954-4bc3-abd1-dc5530d0d678",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0617b7-8716-4ac9-afbe-23fc6c9ac06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24338f32-2304-4b19-9c54-ecac16f64d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21231d12-46d5-473d-87ea-6c3c3a2c75d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d42d18-fd1b-4daf-9542-1edb34c3d7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea384d99-3b21-42af-a556-4ae5cc532069",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328f66b8-eda6-43eb-abd5-c8be7416b0cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f125bc9b-2376-4ef5-92aa-7076a9dfcbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c8a160-8fa6-4511-a18c-4f2979508bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b283c2-dc0d-4c1c-96c7-952884b48c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ac07c5-2885-4a0e-adb3-6265322376c6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba091e3-8c95-456c-a405-a921c454072d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e124f79-e890-4d5c-94be-f427b52ae7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729c9c76-2f87-4285-b24e-a70d8313a9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb195504-d315-4896-ae0d-29a731a2099b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c5bec8-9bb5-42e2-9da2-9d4e99b6f37e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c51ccfb-7089-442e-bf9f-bd9b831c40a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90057ff5-1b71-4e47-8ff4-27f61ed167ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5757c70f-10fe-4668-aad6-b0f83d1bdf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628c9ab2-0c5c-4113-98e7-0b8d446b7e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd71e6f0-c707-4f1e-8911-2662632b353b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a58627-ec37-424d-a065-891422975c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d6de30-8104-4997-9a74-6273d136e0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71591e18-a234-461a-80f9-2fb8a06c0326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19078e06-4639-462e-a840-dfe1c796d9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdb5bbc-aa2e-4a1d-884b-3ee54793c78a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a53bf19-e807-454e-b754-fe03a5e9a8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2cd80e2-f1da-407a-9b47-7480eff6de14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5667534-45d3-4673-8e7b-bf6016b4b7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee16220-586a-427b-9b22-f19e85a4a9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0725d0-eea4-41d3-b620-9effb1340e44",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b504a6e6-0414-4e59-9391-1a6cb9332805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12dca46d-b01d-4ee4-a6ae-2ef16afaa022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef054e0d-7fbb-4e66-b674-11fb79a9ddeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf95650a-8b37-4606-9a11-b762d62fb4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5f65e3-f00b-4a1b-acf4-f671b77c526c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961090ea-9c6d-467f-91db-bb3ac4c00a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074c1357-ebc5-4d46-ae15-77e3adf53f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb860cb-1e60-4385-b109-40a20ccb3bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0008ab9a-a4ed-458d-9dfd-0dd247705d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c02ae8d-3082-4f86-b057-db2fa9616f5d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7525006-1ad1-4c9c-916a-6e39455e23db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada10d77-96dc-420d-b798-0abeef41ec22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15e1fae-cf3c-4e6a-9914-7e6f6887263d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589820a1-e686-4fe5-9f04-008e65d00390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831be03d-365a-4114-9032-87352ff44505",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6782e4bf-e96e-400c-b620-56f0be2bd44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db59e4b7-a3e0-48f9-93e9-48f4382c51e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba7bdff-4595-4a22-9cd8-2f6d84aa9cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809f8b43-ba0c-4ccf-8c5c-b3c5341872cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea46b407-6e16-4786-a9a4-ac4a5da46fa6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d423df35-ff3d-4009-b1e4-a3b5fe3cc535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b994db87-d8ae-4c4c-9853-6c4cac16de89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3c6d71-f4e2-4bde-b0e9-938a34b9b2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e5208a-199b-41ac-bdf5-0656bb7bb164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134ccca9-9db5-4de9-8341-1ca7dce53dd7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df528ed1-74c4-4ffb-8b15-215167540a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0afcc446-4e04-4e97-9542-773616cfc9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d23e4ef-bcfd-4f76-a983-5af724e34b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2565de-188c-414f-a1f7-a7d20a80610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d96c77-d493-4e00-a8bb-0121b9b5f153",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336e985f-e010-469f-b690-3ea7ee06b9da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d438bf-2873-4be8-8039-44875426fedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49af1e1-121a-47f4-bfdb-1b8533e414a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34015d9b-922b-4f2b-ab6b-827e9613b962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90e5896-dfcc-4bcf-ba27-443ae47c9793",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cc67cd-909b-4670-b18a-2ffc910af480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a5b16c-272a-4905-88d7-bd54cb333d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea26775-22a3-418d-bec6-a446e19028f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a985de-b2a2-47a0-a703-308b440476b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f43bcf4-2264-4a98-add9-0759777ac915",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a634e96-0ad2-4009-b454-59855d207868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f81109-6321-4407-a892-29766a60c00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c390d3-ba2d-4732-b33c-caee8e70322a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae8325e-3983-4ead-b18b-53aeee310b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb69e282-5bc3-4f07-8a87-bff248da4ec5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16352a93-57ca-4376-b0be-ac677684d8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72803751-ecf1-4c34-b516-fea1d228607d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e975f462-8fd5-4f92-8f6a-ccceefbc44f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a9edfd-cfbb-4924-9d58-39b8a5d668bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db457757-5a3d-4547-b00e-147157fe9be6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784eedd9-04ed-4db0-8711-5a1ad2d06b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec192a47-5e74-4632-88b9-893829559bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3fdc3f-45f2-4567-9daf-d3d8198e4311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e3db66-cd60-492f-b85c-51609962ea8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47b1ce6-9862-437d-bfef-6591a34bcf9a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f0b017-9d72-4f9f-b5cd-61f3e2d2fe12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107fae28-ac6b-4e37-a493-758d5bc65f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64509848-498d-48ed-a930-8dc2d7eb6f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91a4799-9039-4935-8c59-f63b6745199a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3be866-e9ac-4c5b-86fe-ea3e976768e0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce5d5a7-b8bd-4824-956f-6584b7bfa62f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830f7fa6-c7d9-42f5-ab4d-98ddd8bfcbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5acc689-95c6-443b-959c-f21bab63f0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640aabb2-3e55-4999-9a39-8a8dc728108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164707e1-4848-407d-a03d-5611fb300c49",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661365a4-b51e-4481-8468-e1ab90c724c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42b9a6a-4fe4-4e09-a57d-8086d761bca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78382d49-38e5-465e-8ac1-2a66ddc3d627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e55576-93da-4e32-9880-b2cd7693135f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65db1857-fae4-4db7-b44a-3ea0116d7fe8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04218f99-99b3-4837-baf0-88712960daf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c9e7d0-c271-4289-b095-316cfd567c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b844aad1-f006-442e-9e7c-d71a59c24557",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b360b0be-f66a-43d4-9cfc-2a182ceccac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8999e6-d9c3-4ad9-820b-d07e2de8a0d4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e430486-8505-45fb-a97e-ef4b33a107fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "339bb98c-5c4d-4633-9213-90b828528c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541d30a7-6bf5-4515-91e9-a94f67d9f686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2e0e83-d7ff-4d55-b7f6-cfeca4fa2ef8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e108224-31d3-47c3-b4b6-36906e632638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1402963-b72a-4a59-831b-1d89a68de2c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f203fda-5a56-48c0-a49b-d49cece5ae3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae7f0b09-b573-4fca-b630-cc10de272ac0"
                    }
                  }
                ]
              },
              {
                "id": "4c26f7c6-ae09-4694-8ef8-76f469d3c6e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "526a007d-1c5b-4b36-9f46-e298b92b4add",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84687ee3-a913-46fb-acf4-56be71bb07cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7a549871-62f8-45f0-b081-dd1d7dcb0a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bb01bc-5af6-40e0-afaa-a20928c3772d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6da798e9-8ea6-4a11-8fdd-bfd6e3b91f17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4351b6fb-0946-4272-8ba9-d85f19b2e0f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a148140d-4cb4-4ade-8aeb-d464e3801d7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8c2fcf3-f23a-45a7-807d-baa840816cec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbf7f201-3316-472e-b142-d3ae65887f75"
                    }
                  }
                ]
              },
              {
                "id": "333469f5-fe1a-45e2-81fb-bc9c69d44e35",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f62639e5-c000-47e2-9f3d-291caf633d3d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9183f1e-449d-4306-9fa8-2a64fd0a1d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "26f12f5d-9444-48f2-8099-66098621dd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea4a2c-e6d9-465b-b7da-db405c516510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c120f6-f473-4480-949e-925a5fcbfa91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35f0406e-e436-4e4f-b2e4-47a923adc0aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c621b5f6-b772-4679-89e5-cb41303cc1a2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "122c8a98-3f02-45e8-8a9b-399fe7dcfe8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5a4e417f-6f76-4b9a-8527-6c9485066048"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e839060b-270a-4167-a73c-7c018a8078ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d88a648-b68a-43c6-888f-1479f4f93d14"
                    }
                  }
                ]
              },
              {
                "id": "1c2022a5-381a-41b9-a80b-9b631358e348",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a0f9b87-bf86-405b-8794-d696204b1930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "18d76cea-a3b4-4b68-aaf2-76d8b750ecd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d50c192-6cfc-4376-91e6-ff60393c45f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9fa9a38-63eb-4290-b293-d5fd7815220d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e918e26b-b942-4caf-a0b3-05a7680321e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "59c3e7e9-8af7-4e3d-aedd-1f09c36dd152"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4fd41e1-a601-4ac1-9c97-2c01f45ab6a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a50c031a-4d10-4298-b04b-42c0f536a037"
            }
          }
        ]
      },
      {
        "id": "22ff755e-3c07-45ab-84ec-3af74a41fcff",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a0b7f32e-8bdb-4301-9ff9-2ca825f2d506",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e3f33f7-ba0f-4208-938d-49d89f328270",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e166aca9-a723-4e95-b5f7-9d776d1eb600",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd49b50f-4afb-43b4-a349-125c42270f10",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfa4e46e-ec99-453e-b8f9-fcce0c2275e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d20600f-c49b-4935-b515-c37236b51775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b91d3d3-b6bb-48e9-a2a5-d7c1e748b306"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38a9b671-cf8c-4b44-abbf-b848ff97d6db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c343bb6b-1a87-4f5a-8d43-24eb6ea233bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fad7f61-52b2-46a8-8b38-bbf01075fb02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c763c53-0792-452f-b6e6-3bf2a4f0912d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7daf85d5-c41c-4c7a-a56c-048e0e9a8f0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c28065f4-5627-4d87-b3c4-a9598585f0fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41eb3671-7c6a-4396-8f79-9f96ab27330b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df1c354c-d892-493e-bf3a-2bb42a173bbc"
            }
          }
        ]
      },
      {
        "id": "d05cba7a-3024-4a73-96b1-35ab56601223",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5f9fbd54-ae1a-4124-adf7-14d2c3aa3ba0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36341d44-bafe-43b9-ba22-225dd5a09216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15ba71fa-8822-4cda-ba12-9f695fb12ce3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c028209-0696-4d66-b307-59b691196b35",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "652336e3-f529-4326-bb90-d85347d25f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a05dac-a293-4198-a24d-68315131ca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b65984c-ab39-4ab3-bd84-2e9d67e81e10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c236bde-81f3-4adf-b98d-2a4a56b3fef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0995082-cf3a-46eb-ad7e-35918982a5ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b08a951c-43e6-46b1-9189-7145ab740959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a52b246-a1c5-47b4-896d-dd8f9c2c3fb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "997a2eb8-089d-4ee5-90a9-c67984ee3757",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "84a192ba-c37a-4b91-a403-5a148bfd8386"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "535d61b9-9f6f-4d79-bbd8-33750ae00b00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "393d65d1-2527-48a6-8265-d5cb4f54b4ac"
            }
          }
        ]
      },
      {
        "id": "c7861db7-4bfd-4da9-8f24-80f49ff6c3fb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8bf2d977-cbbd-4698-be0b-3c1cce212934",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e65ef91-d2f4-4025-ad41-1573b6ef21c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39ed5e13-18c9-4043-96c3-0ccdd3269cf6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb83f9a-1404-4670-8a31-068c375f2c69",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "febe7694-499d-4d03-848e-e6d50fe0a8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63ff6a5-b12a-4200-9758-597fbdc3083f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c208f165-f893-4374-a5a1-7ccdc311e6ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfe05d3f-7d4f-4a91-a6b1-7cdab2f236aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a6d5a35-a0bc-44d0-a4f6-53b0e234d5d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "003c6134-47ec-4592-8015-2aca62d572e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67c86207-dc79-4aca-b591-2b6c55dfd7f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ab9daaf-bc99-465f-a49c-90f49f0b91f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2071a8ca-eea8-45e4-b2d3-edcf2b0064a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad3e66d9-f2a3-4d19-8730-5bc82458d9a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67b9443c-3179-4093-aa93-09d88e83f15c"
            }
          }
        ]
      },
      {
        "id": "95d302de-7552-49cb-82e4-5f99a8dd0deb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15285a47-2dee-46fa-b59d-50453b60e0cc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c53cec3-87aa-4d71-a3b3-9a5cae027585",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8fd2459a-ff6f-4a37-96b9-70d1373c20e4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d114224f-b040-4b60-9266-6385fc44ecb4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ef6528f-14b1-4866-9f0f-a3be8e1736e7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 155.86507936507937,
      "responseMin": 18,
      "responseMax": 8473,
      "responseSd": 780.2621136024783,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717202401277,
      "completed": 1717202448793
    },
    "executions": [
      {
        "id": "b75c7291-b33c-4b44-900d-7d6603ead4dc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ecce3576-65a3-47ca-b17b-81ec4ddb6c45",
          "httpRequestId": "9586c0fb-77e9-48dc-b13f-dc5e2acb0fa7"
        },
        "item": {
          "id": "b75c7291-b33c-4b44-900d-7d6603ead4dc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "32d92791-a7b0-4e57-8fb9-158bcdead71b",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "d2eebf6e-4d8e-450f-9c46-b2d6c2c9dbb5",
        "cursor": {
          "ref": "9319d7bf-9cae-4730-b9de-6e38f9432435",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9c139d36-249c-44a3-a9b8-26c2df9e76ec"
        },
        "item": {
          "id": "d2eebf6e-4d8e-450f-9c46-b2d6c2c9dbb5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "777604bb-1f52-4864-a8a8-1a3a3a55a0c7",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "b4d3dbd3-7d4f-449d-9496-818d96777f00",
        "cursor": {
          "ref": "4c9491e7-aa8b-45ab-856a-37b4911080c7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "938be9b0-cb52-4806-9e42-f5ca2a687a69"
        },
        "item": {
          "id": "b4d3dbd3-7d4f-449d-9496-818d96777f00",
          "name": "did_json"
        },
        "response": {
          "id": "2dc5dc96-8d3d-4cbf-b016-aff613ddea2f",
          "status": "OK",
          "code": 200,
          "responseTime": 513,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eae0da1-50c7-45e6-b059-02f170ce9aec",
        "cursor": {
          "ref": "a4caf60a-5028-4cf4-8f9c-1d491b791c16",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5433243f-d702-4b6b-b7d6-ea4b621572d0"
        },
        "item": {
          "id": "3eae0da1-50c7-45e6-b059-02f170ce9aec",
          "name": "did:invalid"
        },
        "response": {
          "id": "b953168d-863d-48be-947f-01f53143bb36",
          "status": "Not Found",
          "code": 404,
          "responseTime": 474,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eae0da1-50c7-45e6-b059-02f170ce9aec",
        "cursor": {
          "ref": "a4caf60a-5028-4cf4-8f9c-1d491b791c16",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5433243f-d702-4b6b-b7d6-ea4b621572d0"
        },
        "item": {
          "id": "3eae0da1-50c7-45e6-b059-02f170ce9aec",
          "name": "did:invalid"
        },
        "response": {
          "id": "b953168d-863d-48be-947f-01f53143bb36",
          "status": "Not Found",
          "code": 404,
          "responseTime": 474,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5701ca6-8b79-4cef-9424-1690f07fe39c",
        "cursor": {
          "ref": "00bc1ec0-d944-4447-8a19-9b99404742c0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bc1eade6-5173-47b6-9f00-9328cf8fe26c"
        },
        "item": {
          "id": "d5701ca6-8b79-4cef-9424-1690f07fe39c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d8500b85-711b-4be7-a812-78fc2504d6b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffd2be4-d88e-43f7-a01c-27ebb9b7d146",
        "cursor": {
          "ref": "db9acf50-e9a4-415b-83eb-e62f4cfa443d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fa8b80f7-237f-4ede-a06a-6eed9e2a0aaf"
        },
        "item": {
          "id": "7ffd2be4-d88e-43f7-a01c-27ebb9b7d146",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4efb5412-da87-4b16-b3e9-90e354c03e86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e6c8cf-8916-48ca-b0cc-c716e756f9b6",
        "cursor": {
          "ref": "3490d238-6261-4a2b-903b-4d399ddd9fe9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "347b948b-5ab7-4096-ae6b-266ab6cea6ef"
        },
        "item": {
          "id": "75e6c8cf-8916-48ca-b0cc-c716e756f9b6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6127d61d-8656-49ce-a1c8-d33bb2e26b9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873b5edf-ef6a-4690-b148-7291b1d2b3a4",
        "cursor": {
          "ref": "13e73f98-8051-4d50-b6b1-81629a398d2e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "584abff5-b6bd-4526-8638-aa2e01c7bdfe"
        },
        "item": {
          "id": "873b5edf-ef6a-4690-b148-7291b1d2b3a4",
          "name": "identifiers"
        },
        "response": {
          "id": "62246600-60c0-41b2-a25f-26cc7b255f4e",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43239b7-a9a6-437c-8949-f6841945b796",
        "cursor": {
          "ref": "7ba54e97-6207-4e9d-853a-20c614a8d598",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3cd6504f-8867-4640-9609-dce1821eeb0b"
        },
        "item": {
          "id": "d43239b7-a9a6-437c-8949-f6841945b796",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "56e3bb18-06ce-4c8f-843c-065acf43cb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e0516b-7177-43cc-824f-c0cfa3c7a3c0",
        "cursor": {
          "ref": "5dc2f032-483d-4022-bd81-220da70f5ddd",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0fd99a77-1149-4484-9fc0-d198697b6e90"
        },
        "item": {
          "id": "86e0516b-7177-43cc-824f-c0cfa3c7a3c0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "44fab0db-1b73-46cd-952f-877d2c34aba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6468016-1378-428c-b92d-b094fbdd7108",
        "cursor": {
          "ref": "8fda24a7-1c04-4e9c-8ac2-8dc42f41bd0c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "39653d13-5e02-4311-b599-14b1be9cdccb"
        },
        "item": {
          "id": "b6468016-1378-428c-b92d-b094fbdd7108",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8717ff12-9087-4284-b2dd-f3e7f3c2f175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eb46cf-34f2-462d-95d2-c73090d621bd",
        "cursor": {
          "ref": "d5013483-a52f-4926-abd5-a4d2dead647b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a8bed828-8e16-41b5-9910-9f41e92e00c5"
        },
        "item": {
          "id": "92eb46cf-34f2-462d-95d2-c73090d621bd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "11ac3d6c-7b38-421f-919e-730814250005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d551c4ea-65bd-4593-8817-ad726f29e452",
        "cursor": {
          "ref": "b4fff933-4844-498e-84d7-9700b5862611",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "896fd341-f258-4e0c-87a1-f0f8ff5704a7"
        },
        "item": {
          "id": "d551c4ea-65bd-4593-8817-ad726f29e452",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b767ef0c-55b1-4750-9611-5c5fade9cdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890f6ba7-6e84-4d03-bade-43757f09d820",
        "cursor": {
          "ref": "7bc496ee-cb7a-4afb-bd7d-3dc36deec842",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c74dd941-131a-49d3-9868-d17786d9919e"
        },
        "item": {
          "id": "890f6ba7-6e84-4d03-bade-43757f09d820",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9883b564-25e3-495d-a310-3701de55db7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c49751e-43f7-4d38-ae4b-bac3edcdb2c9",
        "cursor": {
          "ref": "54c755b8-d7e5-4828-8d13-3a504867ba17",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "809c47e0-68b0-4e68-a2d3-697fe80c8491"
        },
        "item": {
          "id": "0c49751e-43f7-4d38-ae4b-bac3edcdb2c9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e0dd0ae2-8e5d-4aaf-952f-9868681eafc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aabaa83-437c-461e-82bf-146e62741abe",
        "cursor": {
          "ref": "61f177be-02ad-40f6-b6ec-deea9b7e11b9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7ff66735-16dc-44b9-803e-c14ce04dff89"
        },
        "item": {
          "id": "1aabaa83-437c-461e-82bf-146e62741abe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "63433a0a-40e5-4f24-8f59-a8378e88cbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867d4829-6229-4812-8759-31adc8ea75a0",
        "cursor": {
          "ref": "b62655c0-b17f-4954-9c72-5b0f52372693",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dca4a997-ddff-48b6-aa1c-667e0ae7e896"
        },
        "item": {
          "id": "867d4829-6229-4812-8759-31adc8ea75a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cfb878f2-4e97-4967-ae71-d6c022b6001b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4f8ff1-7bf3-4aea-aa1d-c9b6899049bc",
        "cursor": {
          "ref": "b2653e70-4abd-44b6-83aa-dfa12b0f76a8",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0de77f64-ae43-4987-9dd1-7cae83cf903a"
        },
        "item": {
          "id": "5c4f8ff1-7bf3-4aea-aa1d-c9b6899049bc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "facbe347-df4e-4e0b-acdd-ff8464a5de2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b82145e-6306-499d-9ea9-6fdae0e2bd97",
        "cursor": {
          "ref": "e6d05219-5c6f-477a-ae2e-77b2fc01f8c0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6745e71e-df11-4b6f-a127-743ecd328d37"
        },
        "item": {
          "id": "9b82145e-6306-499d-9ea9-6fdae0e2bd97",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c2970311-047b-42b9-873f-4121eb22f965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ff900f-e747-4c30-b4ee-6258db82f003",
        "cursor": {
          "ref": "ec322c11-2c2c-4ca0-9e7d-cf0b6d470286",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "55e1ce07-04d3-4b46-8148-a9168b6e577d"
        },
        "item": {
          "id": "24ff900f-e747-4c30-b4ee-6258db82f003",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e4bcb292-19cb-45b7-9ced-8255b0c4adab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d6fe98-16ed-4247-ae6a-bc666adb7732",
        "cursor": {
          "ref": "4c35e14a-2a57-416a-a6ec-c6c8c7d4f61e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8b0d46d0-9c85-4215-8851-3aa4a1f59878"
        },
        "item": {
          "id": "19d6fe98-16ed-4247-ae6a-bc666adb7732",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "55f47347-6eee-4caa-b03a-ecea78032106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ece8c-81b7-4aba-bca7-6ab5daa3ecd3",
        "cursor": {
          "ref": "1af56b66-bb40-49ea-863b-e115b02b375f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "54107907-e681-461a-95bf-6d2449b720e4"
        },
        "item": {
          "id": "372ece8c-81b7-4aba-bca7-6ab5daa3ecd3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3dbe8109-57cc-418b-b7f1-b3c69aa97797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef019bd8-3ec0-4c7f-b93e-c5789f54ad8d",
        "cursor": {
          "ref": "83a7c77d-e06d-4fb5-b2f4-7afd49f3300e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4b153aab-c1a5-475c-9a7d-d003992beb7d"
        },
        "item": {
          "id": "ef019bd8-3ec0-4c7f-b93e-c5789f54ad8d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b56bfa6f-c925-40f8-880e-372f6dd0f7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce710bc-fc37-484e-9aca-07a6f1adee6a",
        "cursor": {
          "ref": "6f820c1f-d02b-4301-8721-80a67468843b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f2e4b5c0-d0df-4bf3-b10c-b9a1c5a21b5d"
        },
        "item": {
          "id": "dce710bc-fc37-484e-9aca-07a6f1adee6a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9967648f-25bf-4b02-ab4f-187cfde7cbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789a6c2f-4199-4294-bd02-ffaa4aeab865",
        "cursor": {
          "ref": "ffd2a284-530f-4ceb-bbf2-fa963f0698ea",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6a7ea4ba-d177-44c7-9e6a-10f80b2cf6ab"
        },
        "item": {
          "id": "789a6c2f-4199-4294-bd02-ffaa4aeab865",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "208c2a1f-1fb1-4897-925d-95e43fe11877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa9f94e-9323-4b2d-abdb-dc5399d507c8",
        "cursor": {
          "ref": "8cab54ba-6288-4ffd-88a5-45b1ac4c135d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4c81c8b0-ca53-46a9-bcb4-3daa82b1c993"
        },
        "item": {
          "id": "caa9f94e-9323-4b2d-abdb-dc5399d507c8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "887efcfe-3461-4001-89e0-149a902e2629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e193012-6d75-4e13-b1f6-612aaccc57c2",
        "cursor": {
          "ref": "8df48310-f8c4-450e-a8c0-8e9aa9e9a949",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5461e85b-7611-41bf-95ec-d3047c3946b3"
        },
        "item": {
          "id": "9e193012-6d75-4e13-b1f6-612aaccc57c2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "47b1ba7c-6fae-4be3-a450-20ce6a2ab9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d93fdc-899e-45d5-8916-37eed58cb65b",
        "cursor": {
          "ref": "406f3829-5407-4aa7-90de-b08faead8659",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ba4607b3-ad20-43df-a435-dc6e0496b54c"
        },
        "item": {
          "id": "90d93fdc-899e-45d5-8916-37eed58cb65b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5ba0a921-f538-4ad6-b42a-24ee5bb2353d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de42ab59-7a4b-4fa3-882e-b05ef5f4a0b2",
        "cursor": {
          "ref": "46a82edc-f39a-437b-9ef2-342b6d271ac8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eeb74bcd-d809-46af-bc6c-6be915c1e932"
        },
        "item": {
          "id": "de42ab59-7a4b-4fa3-882e-b05ef5f4a0b2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "45c05a7c-f163-41ae-84a5-6c8ed3a51f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476261f9-4549-415d-93c0-70c13e426640",
        "cursor": {
          "ref": "e64e07c7-ad31-456e-bb41-13b5a974faae",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "49d288bf-dec1-423a-888f-a3ceebad03ad"
        },
        "item": {
          "id": "476261f9-4549-415d-93c0-70c13e426640",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "200b2510-47a7-42e7-b082-8afcc5b18734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cf7a94-e5ba-4dd1-9b63-702bc5582542",
        "cursor": {
          "ref": "c9531609-acf5-4dd2-a752-2744e472c7a0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "eae4ec3b-5a74-479b-9e07-213f0c4a09bb"
        },
        "item": {
          "id": "57cf7a94-e5ba-4dd1-9b63-702bc5582542",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6a5f8ee5-044e-4604-bb74-d005fb143bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febff284-6933-4b78-9305-66b4256ac4a8",
        "cursor": {
          "ref": "90308656-c79a-4602-88b7-29639074b5b8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "acc86ef9-ff14-4706-86a6-8621d12eb278"
        },
        "item": {
          "id": "febff284-6933-4b78-9305-66b4256ac4a8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3a575297-6c14-4315-baf1-14a2f65449dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e73cfbd-8749-45c8-b9f2-355c2c1b6a66",
        "cursor": {
          "ref": "6c312f2a-65b3-45bb-83e0-d391c5222d54",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bda5ee42-d67f-44ce-aba3-d21cc8ce9242"
        },
        "item": {
          "id": "1e73cfbd-8749-45c8-b9f2-355c2c1b6a66",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6c62e7a6-bfa7-470c-a669-9c40c4eea097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5bb64b-5b8e-4815-b8a3-2bd8964f2bb6",
        "cursor": {
          "ref": "6148572e-c516-47d5-a28a-5e2b9899a76c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "14e9105f-f176-42f0-8c75-7bcb5d38c0de"
        },
        "item": {
          "id": "ef5bb64b-5b8e-4815-b8a3-2bd8964f2bb6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6db48fdd-6b6e-4cb8-8e64-610c5c7f4e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623befd3-bc9e-4710-a7d0-a36d7af42a1a",
        "cursor": {
          "ref": "50b8972e-dce1-4e62-8a28-04f7e3184383",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6f9f58bc-1287-4b17-a210-d87a06ecde50"
        },
        "item": {
          "id": "623befd3-bc9e-4710-a7d0-a36d7af42a1a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "51dc7cb0-2aa0-40a2-825f-30e0a387e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3c287b-8d9b-4761-8b5a-b87f152b4cea",
        "cursor": {
          "ref": "37e417ae-8e66-4ee7-b35e-433150280a4f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "486bf912-77d5-45f9-b863-e6f6e10bb1e3"
        },
        "item": {
          "id": "ee3c287b-8d9b-4761-8b5a-b87f152b4cea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4c442002-21bd-4587-bf04-b7e426cc5c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5d6797-53b8-4f5b-a132-7101b5b78afc",
        "cursor": {
          "ref": "577cf4f6-5484-4421-9142-92b1fb3c206e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0b098497-8c5f-4c63-bcc1-2297c6deaa11"
        },
        "item": {
          "id": "bf5d6797-53b8-4f5b-a132-7101b5b78afc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c97e89ea-06cd-430a-ab4e-6ad8f4b2af2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf6864e-6563-4f61-80cf-49a1e242227d",
        "cursor": {
          "ref": "c8b4b210-f88a-42cb-ad68-3b0ace2f35b5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "45454d20-71d4-4b83-81b6-8cf9a18aebec"
        },
        "item": {
          "id": "2bf6864e-6563-4f61-80cf-49a1e242227d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bb1a435c-35cd-43db-9fd7-2d5db0e2c956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0eb4cc-e663-4432-9c0f-a2e0fa46da5c",
        "cursor": {
          "ref": "59aaa058-a9ff-4ef9-8315-a0a042653fbb",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "85bc7621-1adf-43a3-a87d-53638f1c080b"
        },
        "item": {
          "id": "3e0eb4cc-e663-4432-9c0f-a2e0fa46da5c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "93f3099a-3f59-4ef7-8a1a-0065fd009ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbb8bf2-91ca-481d-9b99-f2afbce27f87",
        "cursor": {
          "ref": "98c09d15-6432-435c-a5a5-f49457d7abc3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "18bd830d-3cd0-466b-864b-ea202a5e6df8"
        },
        "item": {
          "id": "dcbb8bf2-91ca-481d-9b99-f2afbce27f87",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3bc7afb3-71ed-4749-822e-bf0ad3ea9d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dc3ad6-9ee8-4739-a72b-bdf0f2f2f89f",
        "cursor": {
          "ref": "a5dcb86b-7ac6-40b6-8344-62e62b214be6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "88083339-f419-4733-baa7-33320943f04b"
        },
        "item": {
          "id": "e8dc3ad6-9ee8-4739-a72b-bdf0f2f2f89f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dce74bf9-1fb3-405e-a518-e5ac948fe26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5ec073-ebb1-4206-88d7-e9392a0f88a5",
        "cursor": {
          "ref": "2cbee426-637b-47c1-a128-70a6c05e4eb2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cbb88420-147b-4df9-ab85-da99093a426a"
        },
        "item": {
          "id": "6e5ec073-ebb1-4206-88d7-e9392a0f88a5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa5c0ff7-4de3-48e6-bc0a-09c2bdc470de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a10a344-3da5-43c8-992a-49e7e6927930",
        "cursor": {
          "ref": "6e105ede-bb9f-460d-bf8e-b256553b39f8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c5d8e537-ddad-4c1f-93ba-72e3b6389735"
        },
        "item": {
          "id": "1a10a344-3da5-43c8-992a-49e7e6927930",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "33d6e1f8-69f2-462a-b863-6f49ac185a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e678f68b-dab1-4e0b-bd95-a9fd5de41deb",
        "cursor": {
          "ref": "9710e488-9fd6-4fa3-9672-fe74dfaa0685",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "43f0058b-6f15-49e0-b434-6c28310aa6e5"
        },
        "item": {
          "id": "e678f68b-dab1-4e0b-bd95-a9fd5de41deb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "24b62860-595e-4fcf-a082-61915d51b34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e68e01c-a498-4a70-be41-7d5a4abe42f0",
        "cursor": {
          "ref": "b212a15a-2a63-4f63-81c3-d9315e4f1143",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f71ded79-e821-454f-b22b-de38b1a7a8f6"
        },
        "item": {
          "id": "3e68e01c-a498-4a70-be41-7d5a4abe42f0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c9c948b-9ebb-4be9-bdb8-f2876a544a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b881bea6-db4e-417f-8acf-14bcac02fb16",
        "cursor": {
          "ref": "62b0e39a-2a3e-4e13-8318-81c38bbc3ef8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "be251c18-89cb-47e1-8561-7f89cdd06463"
        },
        "item": {
          "id": "b881bea6-db4e-417f-8acf-14bcac02fb16",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "65f67027-f9a4-43ea-9c2a-ef9dcac1fb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e56ad-7a5f-4846-91bb-eabbe506b897",
        "cursor": {
          "ref": "277e9db5-3c27-4620-9d59-536447a03e77",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "82e58ee4-6f4c-4096-bbb1-3d3a6c6630df"
        },
        "item": {
          "id": "c75e56ad-7a5f-4846-91bb-eabbe506b897",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2d3ebf4e-0e40-4231-a41d-8da8971537bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670a4355-cd53-41c5-8765-6f9b86a73021",
        "cursor": {
          "ref": "06f32bbd-25fc-47c3-b365-feab23648df6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0abeb75f-e569-4534-870d-f54a48ae9aea"
        },
        "item": {
          "id": "670a4355-cd53-41c5-8765-6f9b86a73021",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "53279d93-83a4-4a14-b132-4f64d8a6dfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6e1196-3824-4f4f-8eda-032a5c24a4e9",
        "cursor": {
          "ref": "9e3fbe2d-92eb-4d70-af8a-7c08da7493ef",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "390b4b4d-6278-49f6-b5e9-25ba113d5072"
        },
        "item": {
          "id": "9e6e1196-3824-4f4f-8eda-032a5c24a4e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "215b539f-d85a-425a-8e82-f06f2ddecfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e117cef2-7aed-4451-a00c-9a2595de31d4",
        "cursor": {
          "ref": "89ba123d-21d0-4afb-ac85-3ff3f66957ee",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e7ea6cee-6534-4a56-aea4-23c896714dd0"
        },
        "item": {
          "id": "e117cef2-7aed-4451-a00c-9a2595de31d4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9e77db87-d6e5-4665-886f-d667b5139698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e9f157-6974-4f80-a254-65ee49d8f2e7",
        "cursor": {
          "ref": "4f75b7de-40e3-450e-a7ee-4169f078b738",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d25dbbb6-69ea-4679-8c9f-8122c219743c"
        },
        "item": {
          "id": "b3e9f157-6974-4f80-a254-65ee49d8f2e7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a93969b5-9efa-41ba-8630-58cb036ba210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c40d8e6-cfba-4915-8f58-9f1a53f41170",
        "cursor": {
          "ref": "aa253b1d-d0f5-4c71-80e0-b9a56c871234",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2b97a42c-d527-4332-87d8-a42b8654550c"
        },
        "item": {
          "id": "9c40d8e6-cfba-4915-8f58-9f1a53f41170",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a8384487-f4d8-4f6d-8bb8-ef5cc1237cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d12974-9181-4a28-94d1-ef4cf3528f68",
        "cursor": {
          "ref": "2e727fd6-781f-42a3-9304-218c6416a7fc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "aa214eca-98e4-4415-b4d6-0e3fbc59d030"
        },
        "item": {
          "id": "66d12974-9181-4a28-94d1-ef4cf3528f68",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8a700e8f-c27a-4567-a42b-14601952ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d027d83-8528-4f9f-a02a-ac85f21ba7d7",
        "cursor": {
          "ref": "0a3122e0-7c22-4086-8a41-4bbd378ce5ae",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3ec140f9-ded5-46aa-99f6-182d542fcce3"
        },
        "item": {
          "id": "5d027d83-8528-4f9f-a02a-ac85f21ba7d7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "012b895b-6294-4569-bac2-5bc6059cd454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0e7021-049d-4163-8a21-3f9da3f291b1",
        "cursor": {
          "ref": "3c39318f-0626-4e0a-b1e7-a1738eb648a2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "80cd03da-9162-499a-a563-cb4f8ff2afe0"
        },
        "item": {
          "id": "8e0e7021-049d-4163-8a21-3f9da3f291b1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a6158ca-1b70-4072-bd17-64e9e5b38b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72525262-9169-4bc3-bcc3-71ba1250503c",
        "cursor": {
          "ref": "b749a319-cabd-455f-992f-da894a80e6d6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5b3ecc66-0d3c-4334-b9a6-beefdf8c7917"
        },
        "item": {
          "id": "72525262-9169-4bc3-bcc3-71ba1250503c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c6bd5d6c-95a9-4487-8102-d65bea28e3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154ef8ce-22ff-4137-87e1-41ba44ac8896",
        "cursor": {
          "ref": "b0e7703e-3b75-4d94-aade-5df3b8182173",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "61c661d6-73bf-41a1-902a-85c5ab01a52b"
        },
        "item": {
          "id": "154ef8ce-22ff-4137-87e1-41ba44ac8896",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "06da124f-7ff7-4152-8610-9660293cca23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aa162c-9ab4-408a-9b43-d09e6528353d",
        "cursor": {
          "ref": "8fb9256c-46ab-4155-8123-2b70a7885fae",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c247fde7-5c7e-4622-9f7f-103d4b9ab7d3"
        },
        "item": {
          "id": "25aa162c-9ab4-408a-9b43-d09e6528353d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e36cd4a-65f9-4824-bdc8-ba7e613cce14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69ee3a1-1404-438a-87ea-9e7179144d76",
        "cursor": {
          "ref": "cde710fd-50eb-4870-9963-d1e3181fb641",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2277f3fc-dce2-42da-972b-69a651896ea6"
        },
        "item": {
          "id": "a69ee3a1-1404-438a-87ea-9e7179144d76",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4f48a71f-0213-487c-b48d-78192308022d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c700ac6-0374-40c1-bfe1-0307fca276a7",
        "cursor": {
          "ref": "eadaade0-25da-44c8-85dc-f4a433a3789a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fb66d489-51ea-4515-9093-2ce6d34c9f72"
        },
        "item": {
          "id": "0c700ac6-0374-40c1-bfe1-0307fca276a7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "487611de-2fcf-462e-b885-866d11467e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234b7bd5-b319-4e65-8d79-e65ee7865bf8",
        "cursor": {
          "ref": "608e7692-bdfc-4ac3-9e75-636bfbf6e6df",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ad1afa5-1309-47eb-a2fa-183c2eca09d0"
        },
        "item": {
          "id": "234b7bd5-b319-4e65-8d79-e65ee7865bf8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "19a0a304-2b32-4276-a92f-e5d1e9368f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaa117f-4363-4f4b-b436-30b8554b9a64",
        "cursor": {
          "ref": "f4349229-50c8-43c6-a2a5-8902dd7cd9e1",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6f525355-8c6c-447d-a209-1cc019b5811c"
        },
        "item": {
          "id": "4aaa117f-4363-4f4b-b436-30b8554b9a64",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "31bc4916-1abc-4edc-a6d5-46d2434fe1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c9af8b-8712-471d-959c-84ebb45738ab",
        "cursor": {
          "ref": "3e9929d5-8772-46a1-a9b0-68f997700fe2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b4cdfab7-2712-408b-ad5d-4ec905be8940"
        },
        "item": {
          "id": "f6c9af8b-8712-471d-959c-84ebb45738ab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e08c7ada-44e9-4ada-bbdc-aaf607ce0a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fbb0cf-d317-4f26-8a44-5f334f628bd3",
        "cursor": {
          "ref": "64dd8486-fbc9-4379-a76a-c00e8e0b5647",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6eda0186-5213-48d1-b208-78e82508e7ad"
        },
        "item": {
          "id": "e8fbb0cf-d317-4f26-8a44-5f334f628bd3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e672f4c0-0b6d-4e83-95f9-bf1f1a0cb7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3c28c8-dc7f-4a91-a175-c542ae2670f1",
        "cursor": {
          "ref": "b5bbd82b-7045-4781-884f-4343428674e4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "051ab5f8-1f5c-4121-a9d6-dbfa415465fb"
        },
        "item": {
          "id": "1e3c28c8-dc7f-4a91-a175-c542ae2670f1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "10b50ef3-0199-4f1a-8608-b89d492d28ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883bd96-1f94-4e6b-9811-b8618b16cc32",
        "cursor": {
          "ref": "b7474a30-4b77-47c6-93fb-cfe1a81b6bf5",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ce7df766-d98e-438e-ad51-b868569ba4c7"
        },
        "item": {
          "id": "c883bd96-1f94-4e6b-9811-b8618b16cc32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0c629ce0-7717-45e3-a5ff-56f4929b70e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1691f02-b2f0-41f4-9822-707f30b184af",
        "cursor": {
          "ref": "99799f88-b672-4602-88ca-23ef883d2ca6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c6476879-ed8a-456e-b9d3-cd8eea4e31ae"
        },
        "item": {
          "id": "e1691f02-b2f0-41f4-9822-707f30b184af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "029cf37d-fba8-4fb7-a5e8-204ab5b700bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93fcba2-ec26-4201-9c7b-5eccca2df56d",
        "cursor": {
          "ref": "36c5ce51-b347-449d-8975-d5c4486170ce",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3584eb36-d7b5-4d1a-b341-e283e6d1f6b6"
        },
        "item": {
          "id": "a93fcba2-ec26-4201-9c7b-5eccca2df56d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1680eeea-47ff-4959-8bf3-bca5d364ce76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d10bd3-1c18-460c-b424-e7f63536ed02",
        "cursor": {
          "ref": "02024ba1-1511-41de-aa96-1b9ad727e0fa",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df3d9717-c102-4d64-821a-9b59884393c8"
        },
        "item": {
          "id": "26d10bd3-1c18-460c-b424-e7f63536ed02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2a376ce0-7a6f-4724-bdbf-cbea32995e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b2e60c-aebc-40fe-820a-5ca2d3758982",
        "cursor": {
          "ref": "83813e1e-b7be-4ea5-9608-9947a551ce41",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26f2e8c9-c97a-4b35-b0f4-106b9fba3e6a"
        },
        "item": {
          "id": "27b2e60c-aebc-40fe-820a-5ca2d3758982",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0c39a818-aa75-4c19-b55e-a907873c812e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59048d96-f213-49aa-ae80-c89e7d16700a",
        "cursor": {
          "ref": "7ef40cf7-4468-4aef-aad2-07583499f86c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c54d1e4e-4d3f-434e-b983-45ff282bc2e5"
        },
        "item": {
          "id": "59048d96-f213-49aa-ae80-c89e7d16700a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "04a4378f-1f06-4669-8ae0-f70831349e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e4a62f-68ba-475b-a177-4799a22733de",
        "cursor": {
          "ref": "bef37e84-79bd-4d0c-ab93-b0696d116001",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "207d413a-d76d-490f-b7d4-03677242627c"
        },
        "item": {
          "id": "e5e4a62f-68ba-475b-a177-4799a22733de",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4b3abfab-82c8-4d9e-b42e-bc4c8cc98904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2583efec-6a3f-4473-94e3-63746f4f645b",
        "cursor": {
          "ref": "ce4886e7-d07e-41d7-8611-60f819fc5700",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2417770f-f2a3-44af-a74c-c72090691c17"
        },
        "item": {
          "id": "2583efec-6a3f-4473-94e3-63746f4f645b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "49e9b493-87d4-4fc3-a721-3e2149fc56e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194c6fb0-c181-41a8-942c-ffa2b008b40f",
        "cursor": {
          "ref": "7153e117-df03-41df-933a-f86f0f221187",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1b0ef30c-4bfa-4ac1-bd4d-c476f594c09b"
        },
        "item": {
          "id": "194c6fb0-c181-41a8-942c-ffa2b008b40f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e43e250a-3050-40e3-9897-90407697919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da9da0b-f2fe-4fe6-a1f7-65b01c1f599d",
        "cursor": {
          "ref": "67c565df-e784-46e9-8d5a-d87810ff31f6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8ceb29c9-a905-4906-8356-6a4e2d551331"
        },
        "item": {
          "id": "5da9da0b-f2fe-4fe6-a1f7-65b01c1f599d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f1271b10-bcbb-4950-a30c-5e5cb03bf21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cea29ac-22b9-4927-8792-b343f88cea4d",
        "cursor": {
          "ref": "816c4b3c-5ad8-46b4-b8ff-45265acfb9af",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "82b834f5-0957-44d7-80aa-da31c6ebfef2"
        },
        "item": {
          "id": "4cea29ac-22b9-4927-8792-b343f88cea4d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4c35ec0e-6a7a-4866-ae49-0f1645670a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de57e40-1c27-40d0-893e-200669ca0eb0",
        "cursor": {
          "ref": "b4ed9621-cc9b-45ba-af27-5613e1332b8f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a6381d18-482f-4410-99ba-687c44c2529f"
        },
        "item": {
          "id": "7de57e40-1c27-40d0-893e-200669ca0eb0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7d524580-865a-44f5-8949-7f74b992f029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f8dcb4-e495-4fb3-8553-db4d9509d05d",
        "cursor": {
          "ref": "5bf9d2ac-08b3-466f-9b01-e71ea4d9e618",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5b9de6b5-8a1c-48a8-88e4-11d29245182b"
        },
        "item": {
          "id": "73f8dcb4-e495-4fb3-8553-db4d9509d05d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ffe77a82-36ac-4544-8ea3-bdd9ac946ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc44674a-0879-497b-aefe-4ac7f6552e7a",
        "cursor": {
          "ref": "4ff3feda-d12c-419c-a2f4-5cd0014db15a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ebb1b2d5-faab-43bf-9dcc-3a01f8a7ee00"
        },
        "item": {
          "id": "bc44674a-0879-497b-aefe-4ac7f6552e7a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99e6c5fb-aaef-4798-af4f-28c70b729ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc19492-ca4f-4b53-acd5-c56f1438047a",
        "cursor": {
          "ref": "68221ef1-f236-4109-8d5a-edce802e0f5b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a889f1ba-23b5-461a-a19a-88c8dc5546b9"
        },
        "item": {
          "id": "5dc19492-ca4f-4b53-acd5-c56f1438047a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ebf22b42-3cbd-44e0-9b51-037cfd4e7879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373b40e9-8f97-4603-abc0-f26f5dc7b6ea",
        "cursor": {
          "ref": "26c7f654-5766-4b74-a586-ae5dc6de03a7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "95affe3c-9d34-452a-a763-b7436c8a9bc4"
        },
        "item": {
          "id": "373b40e9-8f97-4603-abc0-f26f5dc7b6ea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "79cfdf07-8d50-4fcb-a4c2-70729cf44671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab40f97d-0e9b-4a0d-ace8-83d5ae884a36",
        "cursor": {
          "ref": "d10ced33-4cec-4cee-986f-b594b189ad76",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "88e76d26-32ba-4580-b16d-c92296eb98c5"
        },
        "item": {
          "id": "ab40f97d-0e9b-4a0d-ace8-83d5ae884a36",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e2c8ea0a-f4d6-4ced-8183-f43cd98dd917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6e639d-215a-414e-a414-3c93b764885b",
        "cursor": {
          "ref": "9cf24597-7633-4384-8d0e-8f65e64c2661",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3093a074-8bd0-4457-bff7-d4cc62a05796"
        },
        "item": {
          "id": "3a6e639d-215a-414e-a414-3c93b764885b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0f57ebbf-07a2-46ec-bf7b-d24c4eeb37b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e4b2cd-65f9-4806-b062-04648562e9a1",
        "cursor": {
          "ref": "a3b921c4-7edf-48d4-b7f8-9910873c6082",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "df42c51f-2b08-4f56-86a5-56fa3305852a"
        },
        "item": {
          "id": "e3e4b2cd-65f9-4806-b062-04648562e9a1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1b67f249-be5b-4b83-8c45-8a7488fe9e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf11f9a-118f-46b7-af3e-035f65f7a7ec",
        "cursor": {
          "ref": "ddbe3abd-cc0d-4ebd-a44f-e9c84129d426",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5bebbdf7-2c34-4568-a7e3-d41e8d6cd655"
        },
        "item": {
          "id": "abf11f9a-118f-46b7-af3e-035f65f7a7ec",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c3becbce-9597-4259-9a73-8ae9bad5d0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5d5f69-6348-4b70-9464-edaf72e9dd2d",
        "cursor": {
          "ref": "05ea1f1f-2d90-4c5e-9bd4-1c9644b9672b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "70a027f0-eb61-4766-aa5f-1d186efc358d"
        },
        "item": {
          "id": "4c5d5f69-6348-4b70-9464-edaf72e9dd2d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9ab2ebed-b764-4e16-88df-b6111c005b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7369f79-75f7-4d1d-b735-da13c31551d3",
        "cursor": {
          "ref": "24338095-7058-4bc5-bf29-a0fdefeba34a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8d42d044-9944-4a68-ab95-974576164405"
        },
        "item": {
          "id": "e7369f79-75f7-4d1d-b735-da13c31551d3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c6f691d1-938a-451e-a48f-3f7679200cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6632a2ff-611a-494d-9871-ac5f757586f5",
        "cursor": {
          "ref": "5e8edb6c-3022-4656-9dd3-d65d83d9d1bf",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b66fd4a0-6f0e-4f83-833d-ead2bf204885"
        },
        "item": {
          "id": "6632a2ff-611a-494d-9871-ac5f757586f5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b457443e-8116-4291-bba2-2ce60c2e8549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6383ab4-e8ff-4edb-a0f6-ea624d367dd8",
        "cursor": {
          "ref": "311bfaef-21dd-4196-9957-907176d2e009",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "12121e67-77a6-4d8b-a71a-b6e9346acc29"
        },
        "item": {
          "id": "c6383ab4-e8ff-4edb-a0f6-ea624d367dd8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1b37f32b-d80d-4d8f-9778-53e9aa2ed63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2a75a0-2a7e-48c3-a450-b00d41327f32",
        "cursor": {
          "ref": "98e8170c-edb9-48b4-9683-7af43efc7eec",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "84325e94-b1f5-4eef-9895-260dadc54a0a"
        },
        "item": {
          "id": "2a2a75a0-2a7e-48c3-a450-b00d41327f32",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fec8b72e-41a5-4973-90cd-0bb58dbf8c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330dab02-c543-4a99-b048-cee8f75bd22a",
        "cursor": {
          "ref": "f87f741c-2efb-4d9e-bb90-f463baa3cf1f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d908f425-9466-4c0c-95cc-11295c943b57"
        },
        "item": {
          "id": "330dab02-c543-4a99-b048-cee8f75bd22a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "edf75b6c-0170-41df-a2e9-9a1c787c5aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6220440b-89bb-4152-8b4e-ed72430780aa",
        "cursor": {
          "ref": "7dd2ff13-7a6a-4c09-9061-c6f08c6e1f52",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "12b713d8-e09d-42e7-a7f9-0627b31fb63a"
        },
        "item": {
          "id": "6220440b-89bb-4152-8b4e-ed72430780aa",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "af294c9f-8c60-4631-8c2a-c14098efb348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34af1adc-4a80-407f-8447-db3280b3cb4e",
        "cursor": {
          "ref": "2b2aaedd-3195-4d72-8292-d028e9e2f17a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e01f1d44-fdf3-40d3-b764-5498496af538"
        },
        "item": {
          "id": "34af1adc-4a80-407f-8447-db3280b3cb4e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9c6c36fc-aa05-4814-a871-9609c2d3a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cc4698-9c82-4bee-b8c5-3f390bfa2eaf",
        "cursor": {
          "ref": "266809f3-db9b-4180-b7bc-b98717e90ccb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "30cb176d-861c-46cc-8133-3d9f91bf3ab2"
        },
        "item": {
          "id": "88cc4698-9c82-4bee-b8c5-3f390bfa2eaf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7e0d9064-f2ce-4c46-87cc-62df258dc435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d038c0-8bf1-479c-8e91-d5ccc3bd8c4a",
        "cursor": {
          "ref": "3911afe0-e150-425b-9453-977eac6e1fb7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fffccc58-16d7-4d97-83fa-c730f9c67162"
        },
        "item": {
          "id": "a5d038c0-8bf1-479c-8e91-d5ccc3bd8c4a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b7f0e44f-9b1d-4674-8478-2c17c85375ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a93f2b-7832-4302-af99-ffaea5927b49",
        "cursor": {
          "ref": "7723f28f-3bea-4599-a7d5-430fe7b63edc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2524fbb0-2cbf-47d5-82e3-13b39e480f69"
        },
        "item": {
          "id": "91a93f2b-7832-4302-af99-ffaea5927b49",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a7000eb3-0cf0-4f75-a67a-06fd7fc0b354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff70452-dfe7-4d82-8083-5d114cd85dc8",
        "cursor": {
          "ref": "452dbe09-e3e1-4326-abf5-0def65b772bb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e507ad2a-8aa3-4877-81df-cfa991183881"
        },
        "item": {
          "id": "2ff70452-dfe7-4d82-8083-5d114cd85dc8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "95704dcc-8197-42a3-a77e-703606dbd773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673ab5c6-1af0-45d3-90d3-1eaed9804251",
        "cursor": {
          "ref": "2cc278d6-975d-405c-a732-a86e06c50048",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "198ab69e-9f5a-49b1-ab78-5690f95d8f3e"
        },
        "item": {
          "id": "673ab5c6-1af0-45d3-90d3-1eaed9804251",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "049acf30-4a2b-4ac5-8652-c9573c209df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009ee85d-46f0-4d36-8f69-b81464f8af9a",
        "cursor": {
          "ref": "5e5594d2-2a31-45e6-8407-bc1ae2063410",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3832b0fe-56e6-46f3-a9ec-d2f8d47f73f3"
        },
        "item": {
          "id": "009ee85d-46f0-4d36-8f69-b81464f8af9a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "498a66ea-f55a-46cd-a101-c1058fbf98f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0db4c5-d08c-4ce5-abfe-3091090b7ad9",
        "cursor": {
          "ref": "624fa822-f9bf-4898-a65b-1eea5c249c87",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5abd2502-47f5-4a2c-983f-9f3efef25beb"
        },
        "item": {
          "id": "0d0db4c5-d08c-4ce5-abfe-3091090b7ad9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7997f124-e356-4d5a-b8cc-da8ce3364ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c85e989-c181-4d01-8690-9181bfe6e14d",
        "cursor": {
          "ref": "7cfe2112-e107-4db2-85ad-f0906953a75b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "951cc8bf-923d-4777-9f39-b8255f9b0df2"
        },
        "item": {
          "id": "8c85e989-c181-4d01-8690-9181bfe6e14d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7be6b2b7-6363-42d5-ba0a-d14a7c77ad23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358a0775-597a-4d9b-ad77-9df959bf1bb7",
        "cursor": {
          "ref": "05e79c0a-7b31-4c44-ae84-c13f1559ede5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2a3994e-5d84-4218-8455-cfe59f601e27"
        },
        "item": {
          "id": "358a0775-597a-4d9b-ad77-9df959bf1bb7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5b59d916-339e-4493-a40e-7b2f25430ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c23d5c29-aa55-4326-b392-dfa99dd7c9ee",
        "cursor": {
          "ref": "df4555b2-6015-47a4-a7f0-c1f321263581",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e455861d-b4d0-4bae-843d-c2ac62a67466"
        },
        "item": {
          "id": "c23d5c29-aa55-4326-b392-dfa99dd7c9ee",
          "name": "credentials_issue"
        },
        "response": {
          "id": "146ef914-d362-4a00-9c3b-e028ad92a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9470cb83-fb74-4337-8927-b7c628e3175d",
        "cursor": {
          "ref": "7c06574b-3cb4-485a-b2ef-430c51a96d53",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ad9537aa-0bd9-4f9c-97e9-5136c75226f2"
        },
        "item": {
          "id": "9470cb83-fb74-4337-8927-b7c628e3175d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4a8b3653-29b2-4cc9-89b5-a73f48a99370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fd7e03c6-5f3d-47d2-9cf2-6be229fb96fd",
        "cursor": {
          "ref": "7f1cfc0c-d8d5-441b-8de7-568788bedda2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "86e7290d-36e5-4eb7-a875-244a783ad220"
        },
        "item": {
          "id": "fd7e03c6-5f3d-47d2-9cf2-6be229fb96fd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f12f3f97-bae9-4380-b985-d724cfd390cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "229bec73-eecb-4e17-a957-e7f65fdfa11c",
        "cursor": {
          "ref": "1dbdc1b7-9fdc-4b96-b2f2-4d1b6fed8007",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "57d6ad31-d16d-4f95-8399-f3cb4b0dab1f"
        },
        "item": {
          "id": "229bec73-eecb-4e17-a957-e7f65fdfa11c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a2226cdd-f66f-4df9-b04d-c96dbe0b17bf",
          "status": "Created",
          "code": 201,
          "responseTime": 8473,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "533d9e56-20d1-4711-9d02-0ce1a1b2634d",
        "cursor": {
          "ref": "3e4260c5-4c29-4600-9085-3c0146d0751a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "84eca12a-f41d-4bea-9709-1a3cfe45ffae"
        },
        "item": {
          "id": "533d9e56-20d1-4711-9d02-0ce1a1b2634d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "91240bea-5884-4a77-964d-60ea442d380f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2fa5629b-bc77-44e3-8a23-982290634939",
        "cursor": {
          "ref": "66298277-2fa0-4e3a-bbd0-849cfa52a160",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "39b8ca43-27a8-436f-8456-41d94ffc7da1"
        },
        "item": {
          "id": "2fa5629b-bc77-44e3-8a23-982290634939",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "758648c2-c90a-4244-b3d0-f8003538505f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "01cabc33-88f0-4860-96b1-370d940e3b4b",
        "cursor": {
          "ref": "3dbd4ab6-174f-4870-bc11-725f50462463",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4c25daad-37c0-4230-833f-bf5df1ba1a87"
        },
        "item": {
          "id": "01cabc33-88f0-4860-96b1-370d940e3b4b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4a6f539d-af32-48b1-b702-154d626e2878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc8c9f8-4ec3-4e66-9a6b-489f14b45989",
        "cursor": {
          "ref": "ae0ee23d-8440-48b9-b397-b73f3a5e3f33",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "39abfc56-8817-4b63-b720-c3f0047f00e6"
        },
        "item": {
          "id": "4dc8c9f8-4ec3-4e66-9a6b-489f14b45989",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e164293f-6a2f-40c5-92fe-a1a46d25e7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2b8258-5c44-48ef-9b2e-4f49d6fc91fb",
        "cursor": {
          "ref": "353e13f8-c973-4a6b-bb57-5c660f2695d0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "330c1267-00ad-4a87-a74d-629c05f0db02"
        },
        "item": {
          "id": "2d2b8258-5c44-48ef-9b2e-4f49d6fc91fb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ff57454-f49f-4c14-b88b-3e254a17605a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a5ef1-268d-4001-8cd0-5e9f71e3ac01",
        "cursor": {
          "ref": "2ddf88b7-6cd4-4c5e-8b9c-ded6ff3d3800",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d13a8107-7601-4afc-859d-a6a7b5e161cb"
        },
        "item": {
          "id": "b05a5ef1-268d-4001-8cd0-5e9f71e3ac01",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6aec7c01-4def-469f-8b3a-f75ada0cbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1bc83c-8c31-46f6-8923-b4670618df31",
        "cursor": {
          "ref": "fd1752d8-598c-4a4a-8dbb-52ac62272dc5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "61efbae0-58c8-4a28-91a4-d4f1494b76d8"
        },
        "item": {
          "id": "6c1bc83c-8c31-46f6-8923-b4670618df31",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4fa15a0b-5c8a-4f29-82aa-0007fe8d8f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d379802-489d-4e16-ab1f-78e89ec3928c",
        "cursor": {
          "ref": "2bede1f3-ec37-4bcd-bf87-dcd5618485d1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8ea085f4-bb67-4842-ab24-118b0491eab9"
        },
        "item": {
          "id": "1d379802-489d-4e16-ab1f-78e89ec3928c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f9e88de8-e541-4bb3-8648-130e21f9a96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c7e1f7-7600-4d8a-97c4-438ae4837223",
        "cursor": {
          "ref": "406915ab-c0aa-4ad9-9b94-e53c1ad7256a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "77921d3c-e18a-4221-8dff-bf8599f8050f"
        },
        "item": {
          "id": "84c7e1f7-7600-4d8a-97c4-438ae4837223",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d1103589-1ba7-4660-a4c0-93f3d0e3214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94976a6e-ae1e-4ee1-9c96-498f3b85d6cf",
        "cursor": {
          "ref": "09901339-b23b-4b85-a91e-21dd25f24be9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2fec3c15-b028-4441-bda1-4aad66057c5b"
        },
        "item": {
          "id": "94976a6e-ae1e-4ee1-9c96-498f3b85d6cf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "29500f2f-d94d-4470-ac6e-0c0167cd1539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ceb34f-ac4c-47db-962c-b9fb735b2c19",
        "cursor": {
          "ref": "856fa2a3-a791-42dd-9672-f0260a38540e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d5bbf7ee-697f-4265-a882-9bbfa96ad93e"
        },
        "item": {
          "id": "37ceb34f-ac4c-47db-962c-b9fb735b2c19",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b218190d-728a-4c35-8d47-7c6530f10752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd88f23d-da67-4c9c-bea5-5d70fe817e31",
        "cursor": {
          "ref": "c5f18122-d077-4e4a-8f8c-701351d16295",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1a070e1a-12e7-4d77-8044-dc832cd79bee"
        },
        "item": {
          "id": "cd88f23d-da67-4c9c-bea5-5d70fe817e31",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62c71350-3814-4e3c-89ee-34511f7dd626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d12d269-24d1-47e1-903d-78a24daecd52",
        "cursor": {
          "ref": "bcebab0a-6e49-4fbc-b2b9-c90923201197",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6c8afd2b-2358-4889-a859-665fe9cf9265"
        },
        "item": {
          "id": "4d12d269-24d1-47e1-903d-78a24daecd52",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cdbf3185-216f-4c3c-a8ea-d9ce0adb8f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471c1858-6b69-4a0c-96e4-46f9400e6fc3",
        "cursor": {
          "ref": "17654ca6-711e-4391-890d-dae3e172d264",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "203f38da-690e-4b6b-ad9d-a7878df72e67"
        },
        "item": {
          "id": "471c1858-6b69-4a0c-96e4-46f9400e6fc3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bb340444-791c-429c-bd7d-a2d6ebe36b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e80e53d-9434-46bb-82a0-83b110926f72",
        "cursor": {
          "ref": "a5f86a5c-b7ca-47df-965d-80cafc2ef590",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "05dbe609-e3c0-461d-b45d-2b4d9a80b236"
        },
        "item": {
          "id": "3e80e53d-9434-46bb-82a0-83b110926f72",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd524345-07c2-4d44-aca5-fb2f9ac8d943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7b8784-7473-4200-90de-10cd205a89e8",
        "cursor": {
          "ref": "9d969376-0ad6-412e-9ae2-cd63b2a6db27",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4d005cd9-e438-4191-b98c-e3ef556a2883"
        },
        "item": {
          "id": "4a7b8784-7473-4200-90de-10cd205a89e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "057320a5-4f4a-4ead-b32b-9d89150f7e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307424e7-45bb-4967-a054-177b92adf929",
        "cursor": {
          "ref": "440fbf09-71c2-4667-be13-f62c04d7d737",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0cfb930d-6def-4df9-afb5-0940c4b21e38"
        },
        "item": {
          "id": "307424e7-45bb-4967-a054-177b92adf929",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52a19019-0f9c-4c17-9d4a-a3e36f398498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b94243c-1ad2-431b-8762-3d804baa08b8",
        "cursor": {
          "ref": "ca323944-037a-47b7-8213-790d1d6f6088",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c9f3b750-83f9-4c9d-89da-080ebbb85cff"
        },
        "item": {
          "id": "5b94243c-1ad2-431b-8762-3d804baa08b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7f5b6d36-3c8d-4a90-bed5-cad2b339bab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c116f898-ec5c-4d6a-8b7c-30bc502ebcd2",
        "cursor": {
          "ref": "a051a04a-72c3-4a56-a920-9603e8b0b941",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2122c0ec-8f5e-49dd-b514-ccfd46f8b5f0"
        },
        "item": {
          "id": "c116f898-ec5c-4d6a-8b7c-30bc502ebcd2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6bbc0732-4c31-469c-8a94-22d5c038690c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f168fb67-3169-4ec7-be2d-191082662e7f",
        "cursor": {
          "ref": "6a2d0db0-f720-47c5-b401-c7f831afbbd2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b39ecf3c-fe81-4dcc-ac37-74dc0c524639"
        },
        "item": {
          "id": "f168fb67-3169-4ec7-be2d-191082662e7f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "93ac4e10-89f7-40c4-ba38-9f5824c083d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f03f675-4104-4887-90ec-32e9346fcc08",
        "cursor": {
          "ref": "6bb69bd5-25a5-4f31-b130-91705c87b0da",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "78fede51-5592-4068-ba9a-b348119c7244"
        },
        "item": {
          "id": "3f03f675-4104-4887-90ec-32e9346fcc08",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d35d4641-6b24-4ed2-add0-08ea9aa71881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa18870-b2f5-4286-8260-e3b60233cc2d",
        "cursor": {
          "ref": "91288b59-d0ae-4963-b63e-f00154b5714b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "935769d0-8dd8-487e-98dc-fc4cbd48638c"
        },
        "item": {
          "id": "aaa18870-b2f5-4286-8260-e3b60233cc2d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "252cd333-c084-454f-af0c-a220998cbc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7d69b8-12b8-434f-8b43-7236b0828bb2",
        "cursor": {
          "ref": "1a0ad290-c79e-4c24-9778-19e6f5767dec",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "42254173-2730-4131-83cf-8f309736bb33"
        },
        "item": {
          "id": "7f7d69b8-12b8-434f-8b43-7236b0828bb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "30bb73c3-4676-4e23-964a-15c1385fe609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e148c55-7c78-49e3-b55f-232c4ffd01d3",
        "cursor": {
          "ref": "5ca23d7d-53c6-4182-b595-799622e26bc5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "72757bcd-fd25-40d9-bee1-c5056866d5c7"
        },
        "item": {
          "id": "5e148c55-7c78-49e3-b55f-232c4ffd01d3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "988e5ab3-3afd-43f6-b92e-d3e3fa931219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fe8b52-b48c-4e4a-8ca5-152e23b44cab",
        "cursor": {
          "ref": "770d44af-a47c-4ec0-9a9c-b0848eb1afcc",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2593e403-55be-4fbe-8440-cc1f3e136326"
        },
        "item": {
          "id": "97fe8b52-b48c-4e4a-8ca5-152e23b44cab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e3dbc05b-aed3-4a4c-ac20-fb0e0a28f697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c15a0f-3cb8-42d4-a518-161f74d7341a",
        "cursor": {
          "ref": "b22debcb-c7cc-4fac-b155-a285dfe5909a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "59093fb0-f4cb-4dcf-ae57-cba513367f44"
        },
        "item": {
          "id": "f4c15a0f-3cb8-42d4-a518-161f74d7341a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e864e228-d7c9-4f8b-8aea-ad4b9aa68f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155b973d-6d3c-4bd0-84c5-38192c08a213",
        "cursor": {
          "ref": "557f76e6-7cea-4e6c-9be0-41bd9b12a633",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7858b0b-0207-4800-99c3-3ebe3f671088"
        },
        "item": {
          "id": "155b973d-6d3c-4bd0-84c5-38192c08a213",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eacd4c0f-a879-46b9-bf3f-1cff3f95e5f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b98a30f8-be72-4467-82be-4a99d677d874",
        "cursor": {
          "ref": "dff5e427-78f8-44f0-9604-e0ccc8be282f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0c568cf7-733b-4526-86cf-1f200e2091b0"
        },
        "item": {
          "id": "b98a30f8-be72-4467-82be-4a99d677d874",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a7b6a435-1044-413e-8da3-05a326f6b5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba96926-07db-4e7a-a06d-13f9ac78e72b",
        "cursor": {
          "ref": "d7d6cc8b-0a2b-44bd-8d4d-d73a3c9aa5d9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ec8ecd20-0000-4296-b7fd-de3a39da5060"
        },
        "item": {
          "id": "9ba96926-07db-4e7a-a06d-13f9ac78e72b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4f74c79b-0bb6-4d86-8d87-a07be5851b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2680787-bdb0-48fc-ad70-165a51d821a0",
        "cursor": {
          "ref": "dcfd95d5-02ff-4c9a-a517-62db21fa0c10",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e9966afb-6e81-40b8-a644-f830aef9320e"
        },
        "item": {
          "id": "d2680787-bdb0-48fc-ad70-165a51d821a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "841b4291-56ba-4d6b-9873-dcd68dadc5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59c92c9-1c76-47b9-b94f-e997cfff0016",
        "cursor": {
          "ref": "3874ca9d-7dfc-4cfe-972c-53c4ffb7bd01",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7dec3016-1f25-45be-9f47-ed5faa877ef5"
        },
        "item": {
          "id": "d59c92c9-1c76-47b9-b94f-e997cfff0016",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fd411e44-a85d-4c42-b7a6-70aa011112db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a8c4f8-bd69-4ca1-aecf-0e1da6bded26",
        "cursor": {
          "ref": "0ea2e56c-4d39-406e-a45c-8c99572faf59",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "46f1c987-325d-43e6-a8ee-5f9296c8e36d"
        },
        "item": {
          "id": "a4a8c4f8-bd69-4ca1-aecf-0e1da6bded26",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4222a529-8e7c-427b-9ec0-5db98e1f75fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd87ac94-8e7e-4c3b-872e-1354c72e30e3",
        "cursor": {
          "ref": "aab22326-f49b-4757-b999-acc82706a215",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f192a0e4-6939-4646-8836-22c99b699912"
        },
        "item": {
          "id": "dd87ac94-8e7e-4c3b-872e-1354c72e30e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "04ba7e3d-77de-4471-8f28-d541d22f6fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84af2c7-d15a-4396-8eda-36606770bd14",
        "cursor": {
          "ref": "0a0f1567-bf46-41d3-8aed-653af308ac6d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8748d2b0-c74c-4b93-ba37-4d2602bf0713"
        },
        "item": {
          "id": "a84af2c7-d15a-4396-8eda-36606770bd14",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "72b031df-6b19-4d4f-b153-0ffc80b01333",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "68c1bbe0-8c21-4156-a621-1cb800c231ef",
        "cursor": {
          "ref": "120429e8-8d33-4a86-a902-b4ca665fc829",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "887a6c35-4f41-40db-9376-2920093931a9"
        },
        "item": {
          "id": "68c1bbe0-8c21-4156-a621-1cb800c231ef",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d4309e69-47ca-4de2-9b7f-53585d192dad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "68454650-1faf-4eb7-abfe-b1c8f3c6f3ce",
        "cursor": {
          "ref": "de6f5482-6e16-4483-b2a6-820e135ec223",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "71daf06f-f47a-4cf5-92ff-3a78af8eacca"
        },
        "item": {
          "id": "68454650-1faf-4eb7-abfe-b1c8f3c6f3ce",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "04e03454-1ba0-450b-98d0-c94ce569a4c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7d45a341-a591-445c-ad67-3d5d04769b60",
        "cursor": {
          "ref": "f7764969-2acd-4aa4-9425-2f8b618b6779",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f1450165-e2c4-4a3f-b49b-47c7e06d56ce"
        },
        "item": {
          "id": "7d45a341-a591-445c-ad67-3d5d04769b60",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "13269c63-a8e0-4307-bede-b16a27e22636",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "42ec7135-6b04-429f-b58a-3b449110fea6",
        "cursor": {
          "ref": "704521b1-9961-4398-9379-dcc5a9c5560b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d92d60c6-24ea-487a-a96f-9fb70961e638"
        },
        "item": {
          "id": "42ec7135-6b04-429f-b58a-3b449110fea6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3f37ec31-f036-4227-8d9b-1f4033f84052",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ff43b1e4-3c0f-43d5-b62e-d599b9fd9cb5",
        "cursor": {
          "ref": "7f42b366-a655-463e-b645-b7fc19df81c4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b6deef91-e47c-4252-b455-1adbf6bf7ffc"
        },
        "item": {
          "id": "ff43b1e4-3c0f-43d5-b62e-d599b9fd9cb5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f6d59db5-09e3-4d26-800f-b8eefcb4ab65",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "01a58c64-09b7-47aa-8224-e60a38e30a38",
        "cursor": {
          "ref": "50bfb6b0-09ac-4640-bb87-eefba80b1284",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ff63fd0b-bbe3-4921-a206-2c9e7a532654"
        },
        "item": {
          "id": "01a58c64-09b7-47aa-8224-e60a38e30a38",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a0b173da-557c-41d8-8090-747b253e5bab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1de3b1c-bffe-4944-a39d-d4f5adcedacb",
        "cursor": {
          "ref": "6c5958eb-0bdb-463e-bfe8-d63af54523b6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9ef8690b-25a3-45db-8785-594c2597c4c4"
        },
        "item": {
          "id": "f1de3b1c-bffe-4944-a39d-d4f5adcedacb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6e2f258f-0506-402d-a5e6-f17a0b41d64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eb9b87-a386-4faf-82e8-73cff93308d9",
        "cursor": {
          "ref": "e8db6376-0f46-4688-b892-b52575e80df4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dff792af-a0c7-4fbe-af85-b57e1e7c4183"
        },
        "item": {
          "id": "45eb9b87-a386-4faf-82e8-73cff93308d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd0e88d0-bafe-4c41-a56a-164ff4e10ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbeb701-602f-4639-a540-443c651a4477",
        "cursor": {
          "ref": "de0a9270-89d9-4082-805b-d59a8869995e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "164be7a6-cb66-4787-917f-74df21194500"
        },
        "item": {
          "id": "7bbeb701-602f-4639-a540-443c651a4477",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "24002d5e-dd0d-4ff8-8795-9f985a8ea487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c70ef4c-25b8-4323-8715-20b3f7fdb2a7",
        "cursor": {
          "ref": "ac5a5c87-2910-422c-bc67-f32dd5211fe9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "83172acc-92db-419c-b8ce-e8ed11ec5448"
        },
        "item": {
          "id": "0c70ef4c-25b8-4323-8715-20b3f7fdb2a7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "07398504-f0f2-4fb5-8b03-647ab70bb5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ff76cf-27c0-40e6-bfa7-3bcd62e91926",
        "cursor": {
          "ref": "488c7dc6-cc7d-4f45-9ed2-23baef589029",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "63cbfa3c-0341-4147-a5c4-6d14fd4627de"
        },
        "item": {
          "id": "00ff76cf-27c0-40e6-bfa7-3bcd62e91926",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f4e4f5fb-1bdd-4c12-b282-71c6defa6c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9c0371-1b37-47ad-8cef-d27e3eafbb71",
        "cursor": {
          "ref": "354f267f-e9a6-4480-9984-dde7f78044ce",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9a0704d9-b13d-43ef-b1e7-c322bae0a09e"
        },
        "item": {
          "id": "bc9c0371-1b37-47ad-8cef-d27e3eafbb71",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a21e7bbf-0d70-43a2-9b1b-07140d56a68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6da6b7-ecf1-489f-a359-7c6a150aa81b",
        "cursor": {
          "ref": "665c9322-16a1-415f-959f-2ed71ec7233f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6e51b07d-923f-40bb-98e7-5d621815c51d"
        },
        "item": {
          "id": "7b6da6b7-ecf1-489f-a359-7c6a150aa81b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c7a6851d-6be6-4db5-9d81-6bbd2913eebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525919ef-9866-4ddd-a6e1-c8f7252e6bea",
        "cursor": {
          "ref": "3680f443-7319-4f75-91ee-d91f20369a70",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "be18d6c8-3d47-4f59-8634-3c81fa9b9dd9"
        },
        "item": {
          "id": "525919ef-9866-4ddd-a6e1-c8f7252e6bea",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cd6346a2-2e77-4fa7-9681-8b9d6c27412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f16600b-32fc-41a7-afec-44817244576d",
        "cursor": {
          "ref": "56fe43f2-87f8-4f91-8d15-43cf5c5e7ff6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8c06d516-2fad-4689-b05a-a96267fdd3fc"
        },
        "item": {
          "id": "5f16600b-32fc-41a7-afec-44817244576d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6e87236a-d192-494c-bd8b-7bd397f74020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e0a9b6-1c34-4d68-ae26-913a01c66b24",
        "cursor": {
          "ref": "52383e41-5a2c-4c50-8b1f-c6a57ac68277",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2601a91f-7e0d-4a6b-8c8e-474f1e56c75d"
        },
        "item": {
          "id": "33e0a9b6-1c34-4d68-ae26-913a01c66b24",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d7d2a2ac-b000-4b79-99e0-5e1b2e061cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1802fbfc-e413-4d03-8d50-c823799b01c0",
        "cursor": {
          "ref": "8823d6c0-6a1f-4098-b8f7-3d27ce28ce49",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "171342c1-e9fd-480d-bd00-df8fb6f8ba72"
        },
        "item": {
          "id": "1802fbfc-e413-4d03-8d50-c823799b01c0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "94018d62-8720-4b84-814f-14aff89192d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fb9fb4-15df-4c8e-9567-d73db51b4366",
        "cursor": {
          "ref": "fe82ee1a-23cb-4c28-9485-e27a8c385c11",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f219e665-d59c-4e67-b5e5-e648f952dbb5"
        },
        "item": {
          "id": "85fb9fb4-15df-4c8e-9567-d73db51b4366",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ebb3ea50-84c7-4d40-8637-6941540601fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31ec47b-9a71-4697-ac2d-13026dd4a63b",
        "cursor": {
          "ref": "73dda40a-fe63-4f3b-aad8-f77cbf7abd67",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "64e5181b-ba73-429c-b57e-c4436776591c"
        },
        "item": {
          "id": "b31ec47b-9a71-4697-ac2d-13026dd4a63b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7d8ee5a2-1ef0-42a5-a1b5-40ecd691b580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d281fcef-b0c3-46ea-8696-c66b9a78c050",
        "cursor": {
          "ref": "6550d05f-a82e-4412-8a83-b08229872488",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "145ac797-722d-4941-bd97-6bd7ee16dcb4"
        },
        "item": {
          "id": "d281fcef-b0c3-46ea-8696-c66b9a78c050",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c11b41b7-aa39-4646-b8ba-0a5e378df83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33af4548-c90a-4a5e-ab35-8bf57b89cb57",
        "cursor": {
          "ref": "a09003d7-17b1-4a6f-9077-3f307a78ecbf",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d5f9cca0-f9fe-4cd1-9bb5-f301caad70a2"
        },
        "item": {
          "id": "33af4548-c90a-4a5e-ab35-8bf57b89cb57",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2da1ca27-717a-44da-a136-7bdda0a41358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a897417c-8fb9-4708-878c-790d88e91480",
        "cursor": {
          "ref": "8cc20ec0-7fcb-42f1-80e5-cf5de74098af",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1de6e616-6352-4aa7-917f-4f74ad204fc5"
        },
        "item": {
          "id": "a897417c-8fb9-4708-878c-790d88e91480",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ccefb595-ce1f-4ad3-aa6e-71f56defaf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8ec0d6-177e-4287-ae0c-3b75999787f4",
        "cursor": {
          "ref": "d10eb84b-ef62-4b1e-b64d-01e3e9c8ea33",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e90b0f98-456a-48ed-8362-1891e7c15691"
        },
        "item": {
          "id": "2b8ec0d6-177e-4287-ae0c-3b75999787f4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "65858b75-591e-4cb2-a5c0-cc0aca0046b1",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "bd141a4d-ae6b-4ee2-8944-71bac83512f7",
        "cursor": {
          "ref": "bb8f2471-c1e0-426b-9a50-9388a060c7b0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "248fe955-339d-4fc9-88e4-0cfa5b671eb3"
        },
        "item": {
          "id": "bd141a4d-ae6b-4ee2-8944-71bac83512f7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4587f692-b59c-4ff0-8dbb-beb43524d254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce18341-a7b8-4d25-9272-f0db09da6fc2",
        "cursor": {
          "ref": "9c0f8c14-b3c1-4602-a954-f666abe4069e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4e6d9f23-5eaa-4702-ba2a-5c37f94a1156"
        },
        "item": {
          "id": "3ce18341-a7b8-4d25-9272-f0db09da6fc2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8e447bed-156b-47a1-9649-c3fe3d9ef356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4f8315-ab8b-4297-b821-cb3db5ea3b16",
        "cursor": {
          "ref": "fae8cce6-e1f6-47c9-9850-1f2b44f0c8ce",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a80943c3-5492-48fb-9bd3-ee6f44d932e5"
        },
        "item": {
          "id": "fd4f8315-ab8b-4297-b821-cb3db5ea3b16",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8e12f167-4d69-460a-9c39-9da9a1671474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8f7d05-357a-4378-95bc-1dcdce1d7a02",
        "cursor": {
          "ref": "5cd10571-82d2-410b-8e08-fa92bf57cfe0",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d9ea5943-ce9d-4069-91d0-e0ac60fe21ee"
        },
        "item": {
          "id": "0a8f7d05-357a-4378-95bc-1dcdce1d7a02",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "30571af2-966f-4144-8894-61a2f06cc473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7dc12a-58d4-4486-b3af-2854c4100e0f",
        "cursor": {
          "ref": "13f31a3f-19bb-4941-893e-21e6bedcd03e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a3beb02c-e48e-4999-85d7-a38f6dadff07"
        },
        "item": {
          "id": "eb7dc12a-58d4-4486-b3af-2854c4100e0f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3ca2a9c5-4579-478b-b7af-503de2ea16df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4fbca5-8b6a-4b01-96fb-ece28ac105d5",
        "cursor": {
          "ref": "9c10d6c6-162f-4184-889c-95fbc1e72ecb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "281df297-dc44-46a0-8533-b30a109f9804"
        },
        "item": {
          "id": "4a4fbca5-8b6a-4b01-96fb-ece28ac105d5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "258001c8-3f9a-4543-a433-6342a211cdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a981606-a563-41f3-95f0-17cce4f2e1ec",
        "cursor": {
          "ref": "84d3eab7-e38a-46c9-8bf0-d3bff539fed6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7c700dff-8d30-4bac-bc92-bba7f5aacb04"
        },
        "item": {
          "id": "9a981606-a563-41f3-95f0-17cce4f2e1ec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "18d9bb37-12dd-45ad-829e-919fef7a60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c8ddce-db83-4674-9c08-903d87629b25",
        "cursor": {
          "ref": "5a627ba9-fc3a-4b08-82c4-f989854dc3c3",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "78eef913-74ae-4acb-8e8f-f2a7d9e52b23"
        },
        "item": {
          "id": "39c8ddce-db83-4674-9c08-903d87629b25",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0bfe0646-cf64-44b2-bce8-397e053f4187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c3635-b49c-4109-8124-49d28f5e6ec9",
        "cursor": {
          "ref": "cfda582e-ff35-4aa8-bc35-863d9e4ea14e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "04d08bca-7321-47fa-a8b7-723c0e704c4d"
        },
        "item": {
          "id": "3d3c3635-b49c-4109-8124-49d28f5e6ec9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9f49e228-f6de-4048-a1b7-7ae98ca8bf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfc4d23-a92d-4d5b-8288-5f00bde492b4",
        "cursor": {
          "ref": "ee1d91f9-26b8-4dc4-ac1b-377628f9be64",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "518c4573-263c-4bf5-8f41-5cd83a2f950c"
        },
        "item": {
          "id": "6bfc4d23-a92d-4d5b-8288-5f00bde492b4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "19540414-d03a-4c99-99bb-9f76eb03e04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b36e53-c4e6-4541-bb64-7f92c2360b7c",
        "cursor": {
          "ref": "24b9f94c-1dd5-4b0a-89ff-3dffcbdfb7f6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "de37234f-f2ee-426d-a569-97463e3aeb8a"
        },
        "item": {
          "id": "c8b36e53-c4e6-4541-bb64-7f92c2360b7c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1efadf7f-689f-4341-9fbe-7495d4b3107e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c23747-70c3-496e-9bfe-72a42b3e66d0",
        "cursor": {
          "ref": "a55c700b-c0f3-4ce0-abe3-b1832800d53a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f955fecb-ff8e-4151-bc94-2e8fb6a8a5ee"
        },
        "item": {
          "id": "a8c23747-70c3-496e-9bfe-72a42b3e66d0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f5114069-8294-4a59-820f-91c5c15fd51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999c9a93-1772-4a09-8cdf-cdc7779bb4a1",
        "cursor": {
          "ref": "e13ddcdc-76b5-4060-8258-50404d25b775",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8a5c85fe-211f-4a77-b65e-6f53d2013123"
        },
        "item": {
          "id": "999c9a93-1772-4a09-8cdf-cdc7779bb4a1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cb9bfc9d-d1f0-4ca0-917f-349787b704ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369b73a4-6da7-4135-8a09-8abda43c0da7",
        "cursor": {
          "ref": "d3227c71-8dab-477c-81ba-4c260c980e61",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "da4589c4-fba7-48f9-b7d6-06094e45f869"
        },
        "item": {
          "id": "369b73a4-6da7-4135-8a09-8abda43c0da7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "74ee6d77-c68f-4af6-b52f-f67a3c1d36bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec94362-d150-4b26-97be-249ce125572e",
        "cursor": {
          "ref": "c801c199-e616-451a-b214-4752d4783ceb",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2915b57e-ecde-416b-b8f6-0b115c9914d3"
        },
        "item": {
          "id": "4ec94362-d150-4b26-97be-249ce125572e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a8ae8616-ce13-4725-822d-b928f7c28608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada505f1-f8ca-4d6f-99de-f67da05a2e52",
        "cursor": {
          "ref": "d9e4900a-5bd8-4b5d-be87-c92139897fb6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "deec3a49-b741-4484-8865-26cd8e80b458"
        },
        "item": {
          "id": "ada505f1-f8ca-4d6f-99de-f67da05a2e52",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "14b78234-f992-4680-8b9a-60dabc6f5333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af78bbb-60ca-4805-8114-313dcdd2b27c",
        "cursor": {
          "ref": "55741a9e-3c35-4254-a2ab-e3f19a58b36e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "254104c0-f668-4253-955b-2518b924c342"
        },
        "item": {
          "id": "4af78bbb-60ca-4805-8114-313dcdd2b27c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f7108430-f717-4049-80f7-b46162d72e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d2746a-60df-4e5d-8da3-40976d124ff7",
        "cursor": {
          "ref": "175f9aa8-0fd8-4d8f-922e-c87048f738f6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8ae8912b-a208-41ba-a34a-ccdc5add80b3"
        },
        "item": {
          "id": "66d2746a-60df-4e5d-8da3-40976d124ff7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c8078464-657b-4835-9a60-15ea02de0b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7835276-08f4-4dcd-8e9b-c09648acf43e",
        "cursor": {
          "ref": "a9245042-6909-46c0-a8da-c3a1a32352d0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d568b5c8-24f9-4da8-956e-234e2975c738"
        },
        "item": {
          "id": "e7835276-08f4-4dcd-8e9b-c09648acf43e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4b18bac1-3c0a-4a09-9004-c77ad5bbcf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d9f5eb-08ad-40ed-a732-c84682005742",
        "cursor": {
          "ref": "b7e7f401-f224-4dad-af72-3d1bf27a5553",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "411d46c2-f2dd-40d5-8392-8faa4035cd84"
        },
        "item": {
          "id": "44d9f5eb-08ad-40ed-a732-c84682005742",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cb12d321-fd08-40c0-a3fe-b227f726b822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd44b7b5-8a24-4f29-9798-1eeffe2415eb",
        "cursor": {
          "ref": "8367e976-1f91-49f0-8bf9-b98ebaef2e31",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c7861c47-3f28-474d-b99a-8aab6809efdb"
        },
        "item": {
          "id": "dd44b7b5-8a24-4f29-9798-1eeffe2415eb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "61168a6a-b8c9-43ea-a120-46cbd525d3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd092740-537e-4fb5-80c7-fbdf8b25164f",
        "cursor": {
          "ref": "3fe10793-3cb4-4775-a2ea-6438a359ef72",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6b5a3eb0-95d9-44d6-a57b-99dba8e02f08"
        },
        "item": {
          "id": "fd092740-537e-4fb5-80c7-fbdf8b25164f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7ea1bdf3-4cbe-452b-80b6-794be600b1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59d0d03-7225-4f79-a640-1e4a20acd7cd",
        "cursor": {
          "ref": "39d4c3dd-adaa-4ceb-addd-7d0f23b0be74",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f021b87f-aa34-4795-9039-346814126eb9"
        },
        "item": {
          "id": "b59d0d03-7225-4f79-a640-1e4a20acd7cd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e3ba4a9d-ce62-4540-ab09-0008f0616282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283d0aab-b964-4712-8c3f-b859424b6cb7",
        "cursor": {
          "ref": "4d6564b4-ac05-4ec8-bae8-14a417418a1f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d1626a1e-cda9-48a3-8ca3-b2a9de829339"
        },
        "item": {
          "id": "283d0aab-b964-4712-8c3f-b859424b6cb7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "372b1a0b-cf6f-4c53-8aa6-5fe7d0869482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9980ea4-bf05-4462-984b-1899f1e0dcbe",
        "cursor": {
          "ref": "c8d62a38-bb4e-4468-b454-5e80827dbb95",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "27e3e88e-97ff-41f1-8889-a6c829d60d54"
        },
        "item": {
          "id": "a9980ea4-bf05-4462-984b-1899f1e0dcbe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "87fcee67-c02c-4e54-8c70-a8cbb0897095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d13ad0-fe91-4042-9fe4-1be4e494ad03",
        "cursor": {
          "ref": "63166a5a-fbb8-465b-b76b-d1d015900310",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6eede259-4988-404b-a8ce-2be351ce73a4"
        },
        "item": {
          "id": "00d13ad0-fe91-4042-9fe4-1be4e494ad03",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1dc95389-cc23-41aa-a6bd-c234a0481080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a489c28-a72d-48f2-b68e-fa55583325cd",
        "cursor": {
          "ref": "15d742d9-1b68-4ef2-95dd-767cfa40e172",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "75d0e474-1673-496a-a637-1f6752908ba2"
        },
        "item": {
          "id": "6a489c28-a72d-48f2-b68e-fa55583325cd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f2208a2d-9d06-4022-b55e-725544709cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfdd79d-4750-4319-ac85-ac1ddcaae4af",
        "cursor": {
          "ref": "da984c71-257a-48c4-9830-9b7fd759c881",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e3982e6e-a964-42fb-9ca7-17a347262ce0"
        },
        "item": {
          "id": "3dfdd79d-4750-4319-ac85-ac1ddcaae4af",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8b6b986a-4d33-4328-a467-37355cc9356e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253217c3-e4e9-4aa2-bfe2-3f7f93dc3ccc",
        "cursor": {
          "ref": "27373a1b-583c-4aae-8022-3c78bd8f070a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c6747812-ae49-43d1-b511-a171642c82fc"
        },
        "item": {
          "id": "253217c3-e4e9-4aa2-bfe2-3f7f93dc3ccc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8c8522a6-c796-4488-90a3-8e90257d2dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1805ed58-0bc2-466e-a004-ea9a221d1dcd",
        "cursor": {
          "ref": "29304977-595a-4fe4-855e-399fd03e3ff3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "edf71ccc-d05e-4fb2-b7f2-747d6d05b7e7"
        },
        "item": {
          "id": "1805ed58-0bc2-466e-a004-ea9a221d1dcd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "63cec9df-a5ad-4e67-a248-db51a43593e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e42553-211b-4841-90ef-9fb63514ff1b",
        "cursor": {
          "ref": "5b97d27d-6023-4795-b4bc-2d57c1451864",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1592bab9-9c56-491d-ace8-f4af48d042b9"
        },
        "item": {
          "id": "73e42553-211b-4841-90ef-9fb63514ff1b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6516a9a9-5e77-4b4b-9bea-37f2e6370b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6397d554-4d4c-4421-bbe8-224d9b6f6a24",
        "cursor": {
          "ref": "21cc7bf9-f61c-4162-b216-33db22e585d1",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7ba09d83-3a6a-4c17-8a44-ff8168c3926e"
        },
        "item": {
          "id": "6397d554-4d4c-4421-bbe8-224d9b6f6a24",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "49493840-c070-40da-b7d0-e4bb24b19295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55098e2-9129-4060-b8c8-c8f33304aaa1",
        "cursor": {
          "ref": "dd2ec113-eefb-416a-80eb-e6ce94029256",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eaa50969-c881-44e1-b0c5-792f840fcade"
        },
        "item": {
          "id": "c55098e2-9129-4060-b8c8-c8f33304aaa1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ff6e1d6c-9c26-47ac-815a-a5d419846ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614b21e4-3c51-4db9-98e3-0854653d158d",
        "cursor": {
          "ref": "33462dc4-74a7-45fc-b93e-119caa96620f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df508473-3d80-4b7d-91c2-d5114e260725"
        },
        "item": {
          "id": "614b21e4-3c51-4db9-98e3-0854653d158d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4fb1edf7-bad9-49ce-81af-2e617cb0233e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d95147-5971-4c03-b3f5-1631554362ad",
        "cursor": {
          "ref": "d6c9caf5-1abf-4252-980f-e17e958b9b31",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e50ab8d2-b085-4197-b60d-0e415159697e"
        },
        "item": {
          "id": "68d95147-5971-4c03-b3f5-1631554362ad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a9ae72d9-f5c4-4014-9db4-9859ee50fd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21d79c6-27c6-4159-8d73-c3d6e6189371",
        "cursor": {
          "ref": "53f7e27a-7162-41a7-9cfe-72d6d5309ebb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f4c7675f-ebdb-4649-a39d-e42bbbaea228"
        },
        "item": {
          "id": "d21d79c6-27c6-4159-8d73-c3d6e6189371",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8fc25616-fffa-4c6b-8b7e-0dd8a96012fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9d785e-5b8f-4353-8d2a-6e200ae3d776",
        "cursor": {
          "ref": "91fded72-eea9-4546-9f5a-c1378b3cf9fb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27bef139-33e7-4bc0-9a64-7f931fc324c6"
        },
        "item": {
          "id": "8d9d785e-5b8f-4353-8d2a-6e200ae3d776",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0feb308f-fb3f-47e2-9600-730f4838bd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45c89e7-9a28-43ce-bdc1-52a27180b6af",
        "cursor": {
          "ref": "c391fa08-95b8-4b77-ab7d-55453ac7a38b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f8e93e01-93d4-4735-a940-dd5e3f72299b"
        },
        "item": {
          "id": "f45c89e7-9a28-43ce-bdc1-52a27180b6af",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a9f849e4-e26a-46d3-9394-32e52ec8ac23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902b85ac-34d1-4b9c-a484-1182cbcab2ae",
        "cursor": {
          "ref": "41586f63-b274-4c9f-a59b-41d7cb463a18",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "237b7480-0d64-421b-87ba-76c798e4f10c"
        },
        "item": {
          "id": "902b85ac-34d1-4b9c-a484-1182cbcab2ae",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "913858c4-a330-40db-a93b-a72bbd356d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b30a7fa-9092-47d5-bcc3-e00ba9bc1be7",
        "cursor": {
          "ref": "3fe2ace3-50db-406a-8525-598f2537b5c9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "59fac627-4071-43cc-81d4-372c125c5b76"
        },
        "item": {
          "id": "3b30a7fa-9092-47d5-bcc3-e00ba9bc1be7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aaf7e01c-52f5-40e5-8336-53c2c4b35759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0d0c02-4359-489f-86a5-7dc6df3eb916",
        "cursor": {
          "ref": "2c318a58-423e-4fc8-b52d-b7de37af5962",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5e46e4de-8579-4dae-9e56-dd10693b6995"
        },
        "item": {
          "id": "2a0d0c02-4359-489f-86a5-7dc6df3eb916",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f4a4a5d2-9d0d-445b-9526-a4e88b4103e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44375d3-4b03-4a1f-b989-466763505bba",
        "cursor": {
          "ref": "2b327b19-a92e-49ca-b689-92eda654b308",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6b73280d-b931-4bff-bf9e-63f52bbca5e4"
        },
        "item": {
          "id": "c44375d3-4b03-4a1f-b989-466763505bba",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "17e038bf-20e2-403f-b47f-8f440c830f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2880ff-72a8-45dc-a1a3-8b0da136c11e",
        "cursor": {
          "ref": "4d4df191-7ebf-4e29-a4ce-aab70c1ff26c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4775dc08-c291-4027-8612-68a9d1c73189"
        },
        "item": {
          "id": "6c2880ff-72a8-45dc-a1a3-8b0da136c11e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cf380de9-ebae-4512-b4ae-17ff7d8cc9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689ff596-9f09-452e-a97e-ec0c6c304863",
        "cursor": {
          "ref": "16611238-bb17-4383-a665-5eeac263e1b4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a06a3c18-ff06-438e-8a24-a8ba0828bdbf"
        },
        "item": {
          "id": "689ff596-9f09-452e-a97e-ec0c6c304863",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9f6b2a04-2fb6-4f72-825e-8f2fa9e58886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d268a9-5f04-4aae-b0da-7bb2af8ed0b6",
        "cursor": {
          "ref": "757f69f3-0095-4cb2-a238-23c34a1f3249",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9f5d4c7d-11f8-483d-8032-addd2c32080a"
        },
        "item": {
          "id": "e8d268a9-5f04-4aae-b0da-7bb2af8ed0b6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "76407475-24d8-4570-b7f7-f67791476610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f42dffb-ad99-46b0-9afc-eeb78b572649",
        "cursor": {
          "ref": "a1bc7eb5-bad4-4dde-8073-be7582bbf765",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ab44b2ac-6ba2-4768-9817-184b8e371750"
        },
        "item": {
          "id": "6f42dffb-ad99-46b0-9afc-eeb78b572649",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "da85a9fc-3020-4ee4-b585-d2a826fb90a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8232d53f-7386-45a6-9e03-866a39097a37",
        "cursor": {
          "ref": "418c87c8-bcf2-4399-92e7-b4ee9a5028e0",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "10827fdf-c85e-4e1e-86be-20ce40eb8bc7"
        },
        "item": {
          "id": "8232d53f-7386-45a6-9e03-866a39097a37",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b81dbf07-bdd4-46ef-9e6a-cbe0245a9bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9611d1-d9a6-4ff6-97ca-c3e657253689",
        "cursor": {
          "ref": "2f0f7a90-ddff-4e65-8873-c3f000c6d2d8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a2c955fc-af5a-4f7a-aa13-36eb8a370452"
        },
        "item": {
          "id": "3f9611d1-d9a6-4ff6-97ca-c3e657253689",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "721dae8e-0093-44db-b059-88994b5ea3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb0367d-7d12-48fb-a398-8ed36c273b73",
        "cursor": {
          "ref": "4e9c77b5-c36e-4e7b-9015-863c7a0c2c5b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "35a1145a-63a4-4694-89ef-4b1c78244d5d"
        },
        "item": {
          "id": "5fb0367d-7d12-48fb-a398-8ed36c273b73",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f663649c-102e-4ff5-9272-9302b161d58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b524b4ff-edf3-42d1-8b8f-62a2c18f74b4",
        "cursor": {
          "ref": "c65e3ac6-8476-48bc-9d36-66e18306e501",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4f7d2031-4646-46c8-b522-29fa2a408f24"
        },
        "item": {
          "id": "b524b4ff-edf3-42d1-8b8f-62a2c18f74b4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a68406fd-5ec2-4d50-a830-0826a1693517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed2c993-a7e2-433a-9c4c-5aaa7d23f657",
        "cursor": {
          "ref": "2ec90a58-66dc-497f-bfac-cfdc87fea9ac",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e637269b-afba-4d15-8d81-0217a3140b97"
        },
        "item": {
          "id": "7ed2c993-a7e2-433a-9c4c-5aaa7d23f657",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "761a777e-8426-4d3f-bba4-367dce453778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cc693c-00f9-4218-afe3-6da8735932a9",
        "cursor": {
          "ref": "03a4cfc1-b065-4237-8a9f-de3d3825e088",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c9865e7f-29e8-4453-b2ef-02f038fa766a"
        },
        "item": {
          "id": "74cc693c-00f9-4218-afe3-6da8735932a9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "37792593-51ed-4076-8e3b-286fe0a92556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95b2dd2-4695-449f-91e9-9991664cb4cb",
        "cursor": {
          "ref": "7c581a8c-30a4-4619-9212-308e63c0ca2e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b2d30151-7679-4b39-98e9-12943173ad50"
        },
        "item": {
          "id": "e95b2dd2-4695-449f-91e9-9991664cb4cb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "99eadba9-d113-4785-97b9-0e35396eaa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a601207b-91b5-476f-8f36-1ca6a8762a44",
        "cursor": {
          "ref": "bb867d31-a8f2-4228-99b6-fb73ca080ab3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c7e22bdb-476a-47e3-8907-6fb58cc610f7"
        },
        "item": {
          "id": "a601207b-91b5-476f-8f36-1ca6a8762a44",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d94af3e2-6c1b-44b7-8c20-9e01d6972bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e26d2b-6d9e-4928-910d-4962bf0380d3",
        "cursor": {
          "ref": "3d27c329-1422-42fb-8695-648e776b02ea",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cafc6ca0-7050-4f7d-91e3-cd154a6a880b"
        },
        "item": {
          "id": "98e26d2b-6d9e-4928-910d-4962bf0380d3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0b9835a5-da7d-4d94-b014-0de192e899dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7c4ca4-3dd1-4981-a0fb-6f1de5b4340c",
        "cursor": {
          "ref": "425cf403-6d96-42d7-8dc4-f5354c8f19c5",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "40adcdf4-40f5-467a-bf8c-0d61263220da"
        },
        "item": {
          "id": "ff7c4ca4-3dd1-4981-a0fb-6f1de5b4340c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9fb1be76-ab0f-492c-be00-16473fd420dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf36993-9672-401c-a1e4-7c282efdcf7a",
        "cursor": {
          "ref": "8c9bb1a2-96c4-4c74-99ed-82920f71dc06",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3aa936e9-04af-4b47-ba72-99f9776d0ddb"
        },
        "item": {
          "id": "bdf36993-9672-401c-a1e4-7c282efdcf7a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9d05e49d-e66c-40e9-a3c8-c0512af6db7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a29b35-a9cf-4d94-a85c-3a9d98540555",
        "cursor": {
          "ref": "fde9c216-f28c-4dc4-b018-3d0b675a4fd8",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d470ddbe-28f2-4de5-a032-644e459fc301"
        },
        "item": {
          "id": "64a29b35-a9cf-4d94-a85c-3a9d98540555",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ba008dd1-1ece-4b47-b876-896d20241fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375633ae-f954-4bc3-abd1-dc5530d0d678",
        "cursor": {
          "ref": "46ab2d9c-74fc-454d-bd92-b71c1875326e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5164c5d8-5583-4c68-9529-aadcbfe5b269"
        },
        "item": {
          "id": "375633ae-f954-4bc3-abd1-dc5530d0d678",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a8b2507e-c187-4190-9cd0-740985018824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea384d99-3b21-42af-a556-4ae5cc532069",
        "cursor": {
          "ref": "54d6d934-bdb6-4af0-9702-c7c5783d77e3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c3a6c703-ddbc-4182-b361-e694b7ebcdad"
        },
        "item": {
          "id": "ea384d99-3b21-42af-a556-4ae5cc532069",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "11e46218-6749-4959-b080-2f36033a41c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ac07c5-2885-4a0e-adb3-6265322376c6",
        "cursor": {
          "ref": "a41ce802-1d04-455d-a8e0-14ed0fb6c5f2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ed8598d7-eaf5-4669-9821-5c320d0d080e"
        },
        "item": {
          "id": "b1ac07c5-2885-4a0e-adb3-6265322376c6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0d5bd60b-ac1a-4be9-81be-c0bd60a61514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c5bec8-9bb5-42e2-9da2-9d4e99b6f37e",
        "cursor": {
          "ref": "5bef705c-7df4-4cd5-b0db-13925e739cbf",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c5deb70a-1d30-4da7-b53e-db63779ef008"
        },
        "item": {
          "id": "e0c5bec8-9bb5-42e2-9da2-9d4e99b6f37e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b54ea393-26dd-47f9-97b7-0af8c1dc1994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd71e6f0-c707-4f1e-8911-2662632b353b",
        "cursor": {
          "ref": "f3309c32-5012-4d5b-bd54-7c85639ec4ef",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "24ed788e-14ed-4557-a608-b45893bd2378"
        },
        "item": {
          "id": "dd71e6f0-c707-4f1e-8911-2662632b353b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5416cb2c-b770-4b75-9475-fd4a009e9bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdb5bbc-aa2e-4a1d-884b-3ee54793c78a",
        "cursor": {
          "ref": "8b85158e-36d8-498a-a54d-02f73f8dfb88",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "229f1e9b-fabb-4ee7-8258-a3474c61213d"
        },
        "item": {
          "id": "bbdb5bbc-aa2e-4a1d-884b-3ee54793c78a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f38632ac-94d5-4bce-b458-f7b006a3c16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0725d0-eea4-41d3-b620-9effb1340e44",
        "cursor": {
          "ref": "5be62252-69b0-41c5-b4fb-fa6a2083bfb9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "70625a67-01b3-4ccc-9535-6ea2a1f0de97"
        },
        "item": {
          "id": "8b0725d0-eea4-41d3-b620-9effb1340e44",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1de216b9-63ea-42a7-9f87-fb8b446e8a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5f65e3-f00b-4a1b-acf4-f671b77c526c",
        "cursor": {
          "ref": "d5c4bc69-3cf6-493c-ad56-af6ae662120e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c7382482-33ee-4422-8584-1ad3ec362e8c"
        },
        "item": {
          "id": "fb5f65e3-f00b-4a1b-acf4-f671b77c526c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f06a8931-339e-4b6a-b4b4-a4cf32a7af14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c02ae8d-3082-4f86-b057-db2fa9616f5d",
        "cursor": {
          "ref": "5d311054-9e24-4c45-a19d-2df95a948f0e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "179f4df9-05c3-4f32-b597-77d665ce2005"
        },
        "item": {
          "id": "4c02ae8d-3082-4f86-b057-db2fa9616f5d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "961186f5-cd73-45bf-a49f-d380ca70ebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831be03d-365a-4114-9032-87352ff44505",
        "cursor": {
          "ref": "dc0e9c8e-bc41-4d77-94ba-8ca9bda4009a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "94e632be-b588-492e-982e-29dcedccfddf"
        },
        "item": {
          "id": "831be03d-365a-4114-9032-87352ff44505",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "635f0664-31bc-4a4c-be92-4cc716102ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea46b407-6e16-4786-a9a4-ac4a5da46fa6",
        "cursor": {
          "ref": "70d7de54-792f-4610-a841-edb92b57d18a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dc5f242e-02ed-4837-b3f1-7db3f4a48efe"
        },
        "item": {
          "id": "ea46b407-6e16-4786-a9a4-ac4a5da46fa6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "20201786-5dd6-44bd-9a6f-d1c7d6bf59b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134ccca9-9db5-4de9-8341-1ca7dce53dd7",
        "cursor": {
          "ref": "485092c1-28f4-407a-a997-df5b1d4032cf",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4ebbff69-14f4-49b8-8a6a-fa8b4fe1727b"
        },
        "item": {
          "id": "134ccca9-9db5-4de9-8341-1ca7dce53dd7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4af50b41-ddce-43cb-97e8-5283fff681dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d96c77-d493-4e00-a8bb-0121b9b5f153",
        "cursor": {
          "ref": "f69158d2-a65e-4a5b-a991-d320a7b066b7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6b445359-1746-41e3-9e53-3aeb7aa5b6db"
        },
        "item": {
          "id": "98d96c77-d493-4e00-a8bb-0121b9b5f153",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ef8fdbfb-30fb-400e-9471-577b988007b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90e5896-dfcc-4bcf-ba27-443ae47c9793",
        "cursor": {
          "ref": "4fbed8a2-8622-4831-8896-6dfcb8c6e424",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f7f896a2-0757-46b0-8f18-bd01b15bbf85"
        },
        "item": {
          "id": "b90e5896-dfcc-4bcf-ba27-443ae47c9793",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b197a534-ceda-4825-bdeb-bc2f1da13ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f43bcf4-2264-4a98-add9-0759777ac915",
        "cursor": {
          "ref": "05532bcb-7f71-42d9-aa50-0acf5cc22631",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8f8eefb-aada-4629-985b-51ffec3097ee"
        },
        "item": {
          "id": "9f43bcf4-2264-4a98-add9-0759777ac915",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "85015084-dd2d-4283-af77-936703c476a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb69e282-5bc3-4f07-8a87-bff248da4ec5",
        "cursor": {
          "ref": "4279a138-6c64-4ba9-a0f6-3ea050ce6596",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8cfced3d-2252-4a3e-92af-77b4c882de3b"
        },
        "item": {
          "id": "eb69e282-5bc3-4f07-8a87-bff248da4ec5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7a53e622-5a5b-45ba-9a01-036afb73b608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db457757-5a3d-4547-b00e-147157fe9be6",
        "cursor": {
          "ref": "b37a88af-0551-49fb-9dcf-b994783cbfce",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "57779d26-bc42-43fb-ae9b-51c4f2a3b2c6"
        },
        "item": {
          "id": "db457757-5a3d-4547-b00e-147157fe9be6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b05e9465-fcdf-4e2d-a7b0-8179c40c6c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47b1ce6-9862-437d-bfef-6591a34bcf9a",
        "cursor": {
          "ref": "264a516b-8f54-42fa-807b-5061a0dddf7a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "37235cfd-adb6-4ec7-ac6d-2df65e2c9c83"
        },
        "item": {
          "id": "c47b1ce6-9862-437d-bfef-6591a34bcf9a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ff5120ab-3948-4360-80d0-104c6fdfafe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3be866-e9ac-4c5b-86fe-ea3e976768e0",
        "cursor": {
          "ref": "9b9c91f1-10ca-4b37-a4f9-eb629524bc05",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "03b5cd64-8b2e-4c63-a2d9-6334a0cc0679"
        },
        "item": {
          "id": "7b3be866-e9ac-4c5b-86fe-ea3e976768e0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2c8242dc-ef75-4e71-b698-1736c4a8fd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164707e1-4848-407d-a03d-5611fb300c49",
        "cursor": {
          "ref": "dad78f29-a1f2-4557-a75f-ebbe80ecae4d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d6d95850-764f-40df-928c-4db7dbc05e49"
        },
        "item": {
          "id": "164707e1-4848-407d-a03d-5611fb300c49",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "96fd1d54-81d8-4f5d-bda9-b3178e29d84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65db1857-fae4-4db7-b44a-3ea0116d7fe8",
        "cursor": {
          "ref": "96fc32b0-72ee-4ed7-b46a-d2b4a7c5ed52",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a15955b4-1bf9-4d2b-9326-6fa31ab51d03"
        },
        "item": {
          "id": "65db1857-fae4-4db7-b44a-3ea0116d7fe8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3919795b-581a-461d-9ee7-4f49f20a907d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8999e6-d9c3-4ad9-820b-d07e2de8a0d4",
        "cursor": {
          "ref": "9391209d-9cb9-4087-ab47-01a627eb3459",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9e59d5a4-0433-4a31-afdf-a99380488024"
        },
        "item": {
          "id": "df8999e6-d9c3-4ad9-820b-d07e2de8a0d4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8ccc7cc4-9d13-4e71-a9df-69c0a05f4f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526a007d-1c5b-4b36-9f46-e298b92b4add",
        "cursor": {
          "ref": "e21f6dd1-1b87-4c2c-b2e9-6aed2d6a9f4d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "273b90ab-4393-4474-ae96-e3453cc08bd2"
        },
        "item": {
          "id": "526a007d-1c5b-4b36-9f46-e298b92b4add",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4ec5703e-8e0a-4703-92e9-1faf38b398d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62639e5-c000-47e2-9f3d-291caf633d3d",
        "cursor": {
          "ref": "186223a5-6623-4f1c-bad6-4d85ef07b052",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3158fb62-684c-4d51-923e-465823b3637f"
        },
        "item": {
          "id": "f62639e5-c000-47e2-9f3d-291caf633d3d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0cf2eda5-3fcf-44c4-9944-7a5e00260fc9",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c621b5f6-b772-4679-89e5-cb41303cc1a2",
        "cursor": {
          "ref": "3f131959-2ba9-4076-b526-682a570eb926",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e570e69d-a07e-4407-81e6-7932ce2ea02b"
        },
        "item": {
          "id": "c621b5f6-b772-4679-89e5-cb41303cc1a2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "83f2a079-c1b1-436e-8c00-2e91b760617a",
          "status": "OK",
          "code": 200,
          "responseTime": 8007,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2022a5-381a-41b9-a80b-9b631358e348",
        "cursor": {
          "ref": "6edcf9b7-d83e-4169-b4b1-190bb3499518",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2c63aa67-6985-4a54-b86b-57cb0bea5e83"
        },
        "item": {
          "id": "1c2022a5-381a-41b9-a80b-9b631358e348",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "655d4e55-a79a-49f4-b86e-741a5619b00b",
          "status": "OK",
          "code": 200,
          "responseTime": 4112,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e166aca9-a723-4e95-b5f7-9d776d1eb600",
        "cursor": {
          "ref": "5aa17f03-cbd6-4eb0-9c77-c98a7dcf380a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9ece2cea-a9fc-4667-80ec-3d2f7a5baff2"
        },
        "item": {
          "id": "e166aca9-a723-4e95-b5f7-9d776d1eb600",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c5282047-37a5-4c59-9c53-a199e773b701",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e166aca9-a723-4e95-b5f7-9d776d1eb600",
        "cursor": {
          "ref": "5aa17f03-cbd6-4eb0-9c77-c98a7dcf380a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9ece2cea-a9fc-4667-80ec-3d2f7a5baff2"
        },
        "item": {
          "id": "e166aca9-a723-4e95-b5f7-9d776d1eb600",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c5282047-37a5-4c59-9c53-a199e773b701",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ba71fa-8822-4cda-ba12-9f695fb12ce3",
        "cursor": {
          "ref": "1f2396aa-6836-4910-bb22-e7725ac52fe8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b9bfc5a0-3cc2-4dfc-a54b-189f404d435c"
        },
        "item": {
          "id": "15ba71fa-8822-4cda-ba12-9f695fb12ce3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d7e93997-a9ef-4613-8527-094a62a29619",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ed5e13-18c9-4043-96c3-0ccdd3269cf6",
        "cursor": {
          "ref": "be219708-0046-4a1f-87d8-02b93603e668",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4c076069-3124-497d-9da9-60b8e1e97d5c"
        },
        "item": {
          "id": "39ed5e13-18c9-4043-96c3-0ccdd3269cf6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d33749df-f237-402b-aaf7-d9098c1731ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}