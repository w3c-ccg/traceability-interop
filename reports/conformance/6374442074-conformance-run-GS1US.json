{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e893130a-4fab-4bf9-bc11-b47ea4d349b5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e8d18c3a-e50c-464a-8d21-a8af5482cd3f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75311aba-3aad-45eb-9fec-d0bb5166a73b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "34a28527-2c80-49d4-9c64-c82d292251fb"
                }
              }
            ]
          },
          {
            "id": "27e150fc-4a3f-42e2-97a6-dfacb06a4178",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55afb959-d22e-4364-b9a6-7c80098ce1de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7444af77-890d-45b1-8544-d55878e31d74"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "53e4887f-5454-4d25-a5a8-b120c18ba0c2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f2f8eb66-b71d-4f2c-9b85-a2f0ad666b99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "caba80b8-c6cd-47cd-b382-fcb2dd8b7bb9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d9a435e-3041-47ef-a706-5623017f1998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ba8e638-6184-41ba-a045-e036b8cfb57d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ceb1425-aac1-4150-b962-0f256a4f1a7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2c31a5a-32d1-4733-9359-2791d7b852c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c8953bd-5411-4a9c-8188-d91993b81521",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d19dc84e-4fac-4a5f-a484-9c912778770a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1557f96f-6de8-4117-a143-71c0fb67ec6b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "55bddc5a-d90d-476f-9ff7-a3e512f2db34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db219d58-62d0-4f2c-86da-cff9e08bb344",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf2d0982-fb57-4ba6-afc1-108f673e0d42"
            }
          }
        ]
      },
      {
        "id": "4cdfe76f-1679-4203-8a84-9b2ad7063299",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "19df2053-9c51-43b3-84b2-9df566ea0630",
            "name": "Negative Testing",
            "item": [
              {
                "id": "598ac965-8864-4038-a2b4-1cd639cd7478",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dede4fa0-f18e-4f5c-9c25-bbb4119f5be7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6435e5ae-7276-474d-a2cc-822676108967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f55c96ca-30de-4311-972c-9687453ad138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b32c29-222c-4230-aaeb-5fed1379b432",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f04a41a-0cbd-4236-87de-3c83e8db1e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0efe2f84-9d85-4ad5-989c-5e90d4224d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f132f033-60ce-4c3a-8dcf-7da86a502534",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0013b11d-f265-4a7f-855d-c9de0f835f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cf497d4-c657-4314-9b1f-20d19a7fcc61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b69fa325-20da-4001-aec5-535a9c050d16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9ab5257-bbdf-4199-b658-41cbd701deed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ff1dc5-e7a8-4416-b328-382afcf0fe18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ddfe94b-b77f-48fc-8cd7-da2b451f292f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6232f40f-7512-4bd5-a64b-076c1e6431c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7976cd15-8369-4f11-ae68-39b697407641"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04071ce8-e853-47c9-bdd5-a3bf64b2109f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99b26323-2afd-43b0-8c2b-35951a8595cd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e34ab34-b243-46c2-b668-1ee67cfff7b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9354bb00-7061-498d-821a-cfd45aa0ed15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f231251f-eb93-4e0a-bffc-8785baf463bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d891f2a3-21c4-4e7d-b952-da3f97ef1637"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c75fe3f6-01e2-4d6c-8b31-a3f8316b6626",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffd45050-9361-475c-a529-17decbf883bc"
            }
          }
        ]
      },
      {
        "id": "29746fff-aca2-4e70-ba04-938b83813430",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7536228f-1b34-4d5d-bc23-bf58ffa016fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "788d51e6-59cb-4840-bbec-5caab3e734ef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cc42e46e-42b0-47e4-a0e0-51a529d239bd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc6918e-a5a3-4e1a-9f23-9bb41fb2bf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71541869-ff05-49bc-a74d-a708cd15f3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e0bb91-7347-4459-9a17-9def726a46a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3d0a58f-e36b-4302-8653-66fb4dcb1b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ddba3c-379f-45cb-a163-700cca39d3f5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43501021-a533-46b6-8d9c-604faafed3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d87f6cf-dc6d-4a8b-8615-787d51227d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d85c288-090f-45d6-9b27-0aa09e4a3063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b589f42b-943f-498f-bcc0-d7453ff1ad36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c664c957-2cb2-4a66-bb19-a4f7ff421849",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d299ddb7-fdd8-46c5-90c6-1b029e12f083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed7a456-bc57-4bae-8c0b-1c4895799b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8040dbc-bb36-448d-97b6-5d1dc20b5c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecde03d2-56b7-4c1e-9563-5b60c6874b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e16280-5886-415a-a1dc-b8d65bc7c350",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d25f85-096e-423a-abf7-7ca862b99484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b11154-6126-4ba4-9af4-924d37374370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371837c4-4a4d-4ad2-8575-c6b94fa76981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5be9b464-e7df-41d5-9baf-b745326bc843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acb215d-75e6-4853-a357-9b7dab281969",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88726b77-7a47-4dc0-ba70-741666508667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a05be54-097e-4063-adfa-3200862dc200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdceb02-cd8d-41a4-8856-16861763caff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6da2657a-f1f6-47ac-9502-3b8ac27dbdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff52a96-4ef9-484a-963b-2c64a63a3149",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cb0ff5-6896-4fce-9bda-c6c0f8f5c744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f944d7f-946c-4647-9d23-48a5d9f2bcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f66f717-e8dd-4aa4-8551-1ffb9de78631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2588ffd6-3fd2-4cbd-b5c0-6c241930cbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e4a42e-fbbc-4c55-a6a1-ec78d972ab07",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92863007-9f1c-4a54-b5e3-7c1ff1f2ff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35106133-7dd8-4b5b-9258-52a20978e680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13755202-271a-4a4d-a8b8-30232e6997ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cb02fcc-20e2-4ad3-a211-10aaedfc9b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa032b5-542d-4288-9422-8873fbe20c38",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2357cd7-a018-423a-9a4b-916f24a592fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6488feb-3c23-4ba6-af5c-acdcd690da0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6e2dc-b898-4e43-b6d4-4fae3cdc94bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aa5aa56-d58d-456c-a927-2716b48a5ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696b6b3a-1de5-4ad0-96e5-f28e6669fbbb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a11fd58-f89d-4dc9-b1d3-f28492c5f107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01272955-859f-4008-a84d-ef19eb483597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc872875-7ee3-41de-9fef-43759cc6e6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a426f9f-5d6f-484e-96d8-b766a60460d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4602ac8a-2d87-424f-b2af-16c0bf212f37",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305f63d1-1e60-409b-b856-6a9ae1db72ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf7f132-9667-487e-a157-a4446c57419f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ae17b6-a50f-4d60-92dc-77ee60ddf388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0b597b5-b687-47e6-9761-ad93be8404ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac35e1a4-df71-4fe3-80c8-e53e3fbcc0fd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0236ad0-eb58-420b-8617-a3b56d683157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fbbcd2-ee9a-404d-98e7-66e605542f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122fca23-aada-4f39-abbf-f183ba0fd515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "009a75ae-510a-4c92-8883-e434728ec8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea80dba-4c49-4651-81ad-87f72ef2e411",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767ec1f9-60c1-4f4e-9d1d-2b56508fd43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476485f4-1740-4eb2-9f4a-9cfae54366e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59397971-49b1-4f49-be42-bebe961ba728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dda5144-241b-428c-8d40-92eadb6288f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c5323a-9781-494c-b185-e51a97654bbc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0e1887-fe85-4b40-81a5-54da0c640045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e678e-ad94-488a-8a9f-81962133280e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486c5f6b-9798-4e74-afae-2fcfd953b64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f98068b2-0771-49a3-a392-21931418089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbc7bf9-021d-44cd-a84a-cc23b4f15246",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04de5f4d-8eae-4d0a-b48e-52f4dc13c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bfcd14-7424-4ac1-94f7-da9463618849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73a8cb5-b72a-4172-8c35-0bc7b3fcec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc58f577-9feb-46ff-990d-4bfff16db9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38eadb5a-e200-4933-a56a-d6226c10f638",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a778d220-dfb3-4621-a205-35fdd9ae6fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f755f9f7-94c9-4597-a615-4479b0332624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37b4451-8764-4a45-b12b-61f50b7f975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30532268-3b8f-4473-83bb-643f0c89f084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7494507e-b92c-4978-bb1b-198976d90948",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce60fd11-2952-4f03-ae87-5ed79d79ef3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4f42ba-0e38-4eea-a87b-31c950345ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0680f93b-4f75-4f3b-b1cc-02d2caa77662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ec59b6c-4b51-4137-931f-4de1409c705a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523a26bf-c31d-48a4-b3f4-7347a82ac7a7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc1da31-8cf9-4754-9a51-fbacb31c2380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e732ee11-ac91-4370-9a95-b11f9289abf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfa6015-714d-4cc3-9fa6-d37755c3dbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "210c4d96-4c43-4426-93ab-674f4d6b2038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959303cc-ab01-4362-892b-d25e81b6961e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0add69d-df9d-4a23-ac55-4f50be7452ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eedbf32-d1ea-4980-8fff-2d735a193e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a35de1-c074-443f-8477-0f2d4be4557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0966f7-2289-43cd-9053-e81f62977ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb38e992-4e75-4753-91b3-0a3b6a868f64",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6933f5b-6d64-4d87-9382-32a5912cfe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b42978-5818-4b0d-8273-a7bd3a549345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1cf7e9-e8c1-47df-ade7-e4c642fd0b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed13c260-5e68-4c61-b464-79ed8737a174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3831045d-109d-43a1-a666-b9619c7fbec2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cb5c2d-00ef-40e9-91fe-1bfbff8b1849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5b374d-bb6d-453d-b8fb-db7d18252112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4673f9db-6488-4fa7-94ee-8b558b39a3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78107ef9-5e65-4c8b-a09c-f472bdd7819a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a60bba-3182-43ee-8e0d-4dc376a20834",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d156c08d-efc1-4a77-86fb-83e2a2c7c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3c188b-b6a2-46cc-af1a-b7f4e9f65707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c60b0db-7dbf-40ef-a48a-abfe43ad5a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a20c1f-3a36-49ad-abf3-61f5497d79a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854d537a-8daf-42d6-8d3f-5e182e8f702a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b6be21-5d74-4d31-8f4d-fedecb2a45d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00c52f7-8002-4605-8d88-62ebdbfc0766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af370dd-4d20-45bd-8721-91ca9cfa4562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a10984a3-3b63-47e4-88d2-6931261f23ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dac52b7-b001-444b-bc15-8b25f50b9a1e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4485c96d-b30f-4f94-894d-9ac8c5bbc6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d80b905-955f-40f9-94c9-6d0f668c5d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921fb2bd-9f48-41ee-8dde-00db4e01fcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad3d92d-741d-40cb-ae7c-5b17266028d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26bc430-77c6-45c9-bdc1-a8b448c279dd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738ab700-d32d-4fad-b7fe-4a4e4caaed12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df96f346-d54b-4066-ac02-e072007d5551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a9b4ba-d415-424f-87f1-93acdcab011f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c15b72-9896-432f-b9a9-7973a8998df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1775f2-5cf9-4d01-b9d9-b6752212c8dc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220a3527-d741-4073-aff3-44952c7141d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce15828d-c8e2-4ca0-b2e8-356a6303009b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db31d653-28d7-4ed3-b0b3-a3058cd8a940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e471fbd-73ad-4442-92c4-398fac4907ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcec2027-aa9e-4822-ab10-c5dfe781aa38",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9ec57c-fee6-4677-99c2-1c7f13d6bfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0678307b-a4e9-4350-a302-fd2869cfff4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed232a6e-d5cc-446b-8a66-f7994a7eb5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05402cb-6450-4b56-8211-76983924868c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f656936e-856b-4623-bb11-c9acabb3a7b3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df12d934-2f05-4bb1-b973-13a164b0c248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b11bc7-a888-4685-aa49-7ffaeebd4682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f0b6b-4054-44f9-a7dd-9529d4f3b615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "755f44d1-f319-4d15-a06a-82ddf1aed86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f32cee-a78e-4b9c-b127-0ad465abd2ab",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b993d2de-19e7-457e-a0b0-cc4e2605e247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3924780a-c5b9-4946-b5cf-14ac2cc2d134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4f9458-ed28-4e54-8d9d-0384fa24b161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "767b10bf-b88b-4562-a5f1-be106b5cf8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2e133-9738-4036-8abb-1f6923cafde8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8394571-5c9a-4bd9-a5f0-ef9a697d8c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f38eda9-7aca-4e78-b37b-ebb2bf1380ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4848ec4-982a-4e77-8933-c50d19955a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f16a7b-2d16-40a1-adb7-8cecf58faef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e863a83-d115-4a7e-aded-651b96e157eb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6264c1-e133-4139-8fed-0653e9f2454b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea66dcc-00f4-4946-aa27-c1e6e1d30b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc94b4c4-1302-400a-bd24-27ba55631c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a92a95-394a-439b-b073-5519191204e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73841d00-dcb6-4c86-8be8-9a658321e189",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c3d32a-7f88-4ee7-8300-c7f07d128f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e107b847-57c9-43c3-a6c8-6f1728b467c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9103450-c1fa-45f9-ac00-f355b8fffe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85dd4081-79ee-46bd-82b6-1d8e8eb2de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65236bce-27f3-4a79-a209-76a7e61f06b5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64d8a2a-b2d0-4171-b753-734cdd5579e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834a763b-3dd0-4c43-9835-86e7f56bc186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eaeb9b-a71c-47ce-91b0-5ff4b8daf668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb485ee-d819-486e-838a-908a9c19a7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c7cdb-6a44-4c12-8141-406e79937e2f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d089ac-06a6-4ff8-b704-d6da6f9cc7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bf64d6-85e9-45ee-990f-6dfce310ab31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e48433-a183-41e8-9897-ac24fd889827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d5494a-9ad3-4cf2-8bce-464912d9b2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db23267-1315-469d-b7c3-086eea6646f6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ae9296-5528-4af8-95ad-2ccba6f1550b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e665f40-0367-40b4-8626-1dd9d699aa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2282cee7-3b41-4712-8409-a94f21e25452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcfe41e-e28e-47f7-8916-08b281dff725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ba3076-5247-4f51-928c-e9d1efaaefb4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e3932f-46ec-448e-83a1-4772045abebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d22149-3ba3-43d8-853e-73976a01a420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f687da-0419-4521-b46c-bc607a9a2b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "06073c73-07db-47df-9383-466d2288dc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452f7c0e-ffad-424f-93aa-60e39187705e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aa1e29-4a43-4b80-9a77-141f4c174bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbdf79f9-0f28-4c16-bf74-0fa5f9c60105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df410565-d1ca-4326-a3e6-be68fd7b2ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6eae8df-822e-4576-b8de-8b20a20c5acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7908e49-5901-4a74-8b3a-bb8e49f79783",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537843f3-4265-477e-9e2a-c4137aca30b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab516d8-758e-49c3-a27f-8f5a4ee82a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119ab2c2-3243-4eec-aa3d-58a2c7929e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34ba7eec-15e3-430b-82a7-633e6f7d6174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616e379a-6675-45b1-a9f4-d7db54a94aa1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a3734b-db63-4b15-a961-416cb42ced3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc740411-003d-4b45-bf30-ab93b9e5e1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4723f799-1b6e-4758-afe7-98d6a0561a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e7d045-4a84-404b-8acb-ad3488083d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d2f3c3-1c06-4f62-9ff7-f201e047bc3f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40013bdb-8c3c-4f32-8e9e-8b1b8294cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a490d032-29d1-479b-86f3-624ce64ebaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cecade6-a24b-405c-9157-12107cc84aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43b11c25-3799-47d9-913c-4a3610ad28d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef5eecc-15b5-4ff2-92c5-3bd2ac780de3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0fb048-966f-417f-97fc-3cf69c1e0cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cb406a-bf06-47be-972a-b0917ad932e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694f158-6bc3-4625-bc8c-910c81ba9c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "39debb8d-a4bd-4ef2-8658-ab5392fc6e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff19e0d5-b437-4a3d-a19d-9f39b07e6e91",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9334b6-666c-42bb-a25d-4ce6eb2d8a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774b7b51-9324-414e-aa3e-62cf3f823f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f9fb82-053a-4b00-930f-bfc186c277f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57f225bd-f93e-4d1c-ade4-905f6c4652d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5c73d8-4743-485d-8e84-c47be4457e1a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c61256-665f-467b-881c-a23226cd57f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79d7ff7-0f98-4802-911a-c0ddd79436aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4213542a-da5f-4a45-a3ab-ae6d6237d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "565a95c2-747f-46cf-a9a4-599df4149dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba1ed47-7ec0-4da2-b951-d46467539792",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687e6bd5-980b-42f3-b459-ae9eeb14f20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc7a74b-ec21-42c9-811c-62ba2370c0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8443ea-cd35-4cf6-8f5d-3bc81234d2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f612bdd-1d1c-4258-b0f1-676b955eea20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd922ec9-51d7-4a1b-bc63-b886fc758d8b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac85dd78-54df-4bb7-af89-49fd94bec1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac733e14-dfa3-417c-9037-9422432439dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1aad31-d474-4b7e-b58e-cd1f7c508f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ed0296-af32-49b2-984c-c901afb260fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0111c02-316c-4255-8b33-4ae973f663be",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2865bca8-576f-4c42-a2cc-941014993d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea033151-2676-44a5-8d0b-f695322a1a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed8e193-6f43-4a75-b75f-5671a50e1f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe46dab9-916f-48c5-8b97-dbe0583dfacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea32a89-d536-4f5d-a106-dad0dffd2c93",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb12ccd5-7fd2-4a5c-850d-ba0bc44d749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848e2d2b-8989-4d05-9ee3-aa1dc08de079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f65646d-1178-4740-9b0c-7d78fafe1b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "366c1725-c9e0-435f-bfc7-c93f9d851a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e4430a-8e7d-45ae-bee2-ede95d204ceb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebe3b40-c04d-4cc4-9f0b-0779bcdd9046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b879f93-0d62-4531-80cd-2d0b61868a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bc9fe8-2fb0-442a-94d5-47d7e32d2a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa4dff7-d280-4cd3-a2b3-baec70bdb1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5745ec78-c1ba-46db-8ffc-4fae7382970f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a90b86b-a504-48f5-a9d9-3a91165af75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ee4f69-d0ef-494d-9433-9b8132ac422e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a00f22-8f6d-47a7-af9a-5e026be63377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f4b8a3-4ba4-4e69-9db0-9c337683cd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b38c8f-fcda-4306-9dba-89cce4ead8dc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113e177d-9c02-40e9-8d98-5f4a04b848ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a96257-5f81-4fdd-90c5-7aaedfefcbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772c0c63-f51b-480a-904d-58b61313070f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0676622f-4407-493e-bcbe-e5416362de45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfd0fbb-35b3-49c2-b093-a9395ac44240",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1b4fb0-7666-4041-a45f-ada089a8289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0a5177-0c2a-49f2-9bf7-a0a5958563cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5a7f2b-7aab-4598-bf45-0834f8fd4e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff4f91d-d828-4488-ba3b-3d17b5add742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82639af4-cd7c-4153-9852-538aab62c064",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc435e25-d65d-4b75-8d77-e64025ba0302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad65bbd0-a6b5-4bd8-b2b2-0300b88d0105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4610f1-871f-4e12-a1aa-2e117a2b942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18f324f-9dbf-4fcc-9563-ed6b4a14128a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c67382-cede-45f1-b347-a453f5c52337",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aac003-7073-40d1-9fa3-8a6f56ec0d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2135c7-7041-4b28-9f1d-3476f675aedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac756f9-37bd-4997-b1ad-91d02245a24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd68c90d-2dd2-4e89-b9a4-dc5ee513302e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe56706-783d-49e1-9cc9-3daee4ae04d4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cabf1f5-4bdd-4e96-9599-a5256d16d757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8075103-bf30-4185-aa2a-46bebef008c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9d3de7-44bb-45a1-8e2d-a20c75891ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c0a8fe-8cb5-4b5b-970e-e57798c98645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1950c923-4335-42f9-8242-fe53745fb3f4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa4b82-757b-4de6-9baf-34ada551c402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47711277-92f0-4b25-a755-d97ac69bbb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07448db6-74b5-4ace-8a87-66f474d2cbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d31187c-d645-4613-a68f-1b90ef8bbc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad0f970-620d-4682-84dc-061b888ceb58",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbba84d-bece-43d9-a2ac-19999fbaf451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482af9ac-5746-460e-b0f9-fc9c951e77a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732c472b-7a56-4afa-bdba-85d799699546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "756ca1ad-65f0-4e9e-8f5b-96c5f62dca4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a693769-f3f0-47ad-876f-25569ab3a561",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3634187-b3db-4589-bc71-4f275b81521f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf1797f-14b8-4caa-ab1f-fe35962f7085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1889d0-1cf5-4ece-9f8a-2d2506a781e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "78efda80-b590-484d-a4e6-66cbf2bb145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9396ad69-55bd-4115-945a-e9c109baf67d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279e4d8b-05c0-4d8c-8e4b-b6cc49858e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaacbcf7-ec4f-410e-b167-158e1244108f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d10d62-f2b4-4e53-acb2-63e4d98b4043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbba3ea6-b955-43f7-87b2-27288636c9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78939413-3ba6-41c3-af0a-5913636c58bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949fd7a1-ab7e-40ad-b5ba-52dbd71a5d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a287c69a-f894-4f05-8779-1abf7c9bb98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdd4f08-a8b0-424d-b4ef-bc44c1f6e6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59646d1b-aed1-42c3-be95-44bf2902ccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b420eb6-41e5-4035-9875-36b3f038539b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f4809-a9a6-4aec-b575-2d5037f21399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6e69a2-43f6-4cca-9b69-c9400ae6b28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bed435-bbb7-4835-a2e6-1b42eb792e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2fe863-1f06-4299-84d2-3f8466feae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f18cbbc-0711-4916-8005-017b91767df8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb69a35-38be-4397-99c7-682100c5d66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e87f5f-1e03-4feb-993e-bfb7aa3e5c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8d9852-13c0-4700-a835-f38074361a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de2ff8dc-b594-4585-95b2-6c5d122f242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deee2eb-9366-4d65-8c3f-198c0e0bfd8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bc590f-f9a6-4ceb-b66c-e51480e29bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a098efb7-5ae8-4945-85d4-339d8989bea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a92b95-65e3-42d1-8713-9f9a872dc44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df2f85c-6a4b-4b61-bca6-4d8f71aa2bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0b7cb1-9a9d-4742-9625-5fa60a5d6c2b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4f89fe-0be0-4b6a-848d-33c8cac64acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1379d3be-3a89-4e57-b3bc-98960d1e9783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9d900a-e9d3-4923-9efa-e760cef52db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1698fc-502f-48e5-87dc-178230e804f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89e0160-b004-4ec2-aeb7-a06cc938be16",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbfa844-b899-40f9-8ce9-073908eb7868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098be488-526d-4aed-997b-69e9b19e092d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7201a519-cccd-45d5-a4c3-5a698abbef62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d2aa93-2187-4d28-953c-24fdc36d3594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a859f2e3-a9f9-4fa6-b2bc-92a0452c6105",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25566398-4c38-4a77-a92a-e9854d939800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdaefd64-37fb-4f39-bdbb-0dc28b3f9727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85abd427-31a0-467b-8f8a-b1f37252a163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb59d38-488b-4cb6-8f92-74021a3c8055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98529ab-118b-4043-a1d1-0ef4f003785f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82254bb9-bb0f-46bf-8943-ad8d9eb0a7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daee8f89-ffd0-4b32-93ff-69f011243d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2025ce5-48ad-4da6-9c8e-115ec0613441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78aebb78-1079-444a-9c80-69ebe323aa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a7584a-e462-4fca-adc8-5888ab81bd9b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef79d897-3d55-4004-b030-299d736f505d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b593a0a-b42c-4cc6-a7a8-be501651e419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7daf01a-d8e3-47c0-97ab-d02609eb76b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "734b5935-1321-4fb9-bf82-6d5b0f85e7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efab54b2-4a28-4a9b-8097-ddb8b2c0cd42",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f56a189-721f-4dd2-bcfc-3520af886a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4977e698-3e7d-4c82-b8ab-90595c6cc16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d80e83b-1d2f-41cb-a54a-708da695ee9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c62feda1-6566-41a6-9adb-c9440b330602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff10fbd-1b4b-4a3c-9eb3-3cccde21a8d0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd646f3-ccd8-4ed2-affd-b09b5e8822df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915b92d8-c9a3-4cee-b1c8-3cca16dd3ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302535e0-f2f2-4a44-9ad4-2ce4617c8abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c451e47-5a08-4604-b06c-b7d2106568ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab5e54e-7dc7-4b6d-8b43-fdaf18d8c0d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa500d6a-a238-4d81-b02e-58a19b601e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18de2aee-b0c5-45d8-96e5-40d81ba4b166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000e51e5-a00b-43e4-a104-e9766d30dce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "592a91cc-3e24-40e2-a1e5-20efa8468d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919582db-6455-4e5a-b76d-f9c184227f0d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ba8431-eda4-428f-a179-7cd4dc54e5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e7fd92-5a0a-4c86-bf49-07a2c9bc9bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a00b0-85eb-4aa5-ae88-70debb169254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e995dd20-4149-4366-a1df-abe5867fa195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a92fa6-5f0b-4371-9251-1e31ef5f6c93",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bc859a-3d99-4d45-9aaa-cf4107fbddb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adf65e7-bda7-4d04-b995-c6595380c397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285c10af-ded2-4910-b945-288981254c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4134dee6-9e02-4c89-b3f6-cff282200779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67453961-35db-44ea-8b4e-5defd0d3caf9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5124358-8926-4e71-8d99-f7b725818dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742df114-e281-4cdd-bdce-7e9b60c873c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2449e59-5cfe-4edd-8e86-5bdd583a2b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23001050-856e-41fc-af32-85e76b7546c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23de643-489c-4450-9516-9277b87bee14",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1580f2-dee3-4116-b5d1-5b669ef633d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5300c0b6-90f9-4fa5-97c9-6c28a3c938cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311d7891-be48-4653-9fad-1360498161d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65a9d62b-c423-4434-b273-bac6c464509a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38117d0b-e73b-48b2-953f-fade1a9e762c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efe72e4-cd5e-4d22-97f6-ae0c7cb282ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7ffd21-3999-45fc-8a55-06e1192f414d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b17748-92af-4bf0-a620-78e676d9273a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df064a89-4908-4d20-b364-e6a8983aebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599d177c-1ae4-49f5-b6eb-fdeaf2f9f92a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a29e724-7211-423d-a3a7-191c7396e831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b373f3d5-8d28-41f0-b7ea-76f749ad9062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1393e28-7cb7-4046-a8f4-36ba419e4afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6565cad-c24a-4cc2-8418-073d9a54112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b213d6-4b34-4272-8e11-2fe1658fc15e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fa5c69-3b93-4a3e-a8ad-45a6cdbd07f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d84c83c-6dfc-479a-9672-2d69e9f36ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694deee6-b031-4473-99dd-59a01bfc248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ffd88b-71ca-45db-9621-bd797cd87bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2f405-c70e-4305-acbf-e33ea264426e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ebaee2-cc5a-4ce9-8819-e835fa533973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876ea89e-9dbf-469a-885c-cd1834703885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e594461-a331-4ffc-944f-c2f578acb431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "235669fe-5c62-4895-9fcb-a61630879717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f214ecf-c03f-4766-9576-df8e675056d1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ff9c78-df3f-4c3a-aedd-f23d7e86ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9bd36a-092c-40b2-be99-b9e3185b8141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3e51a5-730a-45b8-b0b8-c04f7c6cfa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e5324e-37f9-4166-a461-e01b6a23e25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c5b6f9-4547-4d89-8f79-77bc492b4674",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7216ad50-b226-48ad-bcc8-d0d5e63d9eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a4c823-5aac-45ed-a45a-49bcb7d19754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfdac35-0042-46ff-82c0-2d3a8649c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "148413f4-64cb-41fc-a00f-70a2000254e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2a3e99-3469-4951-830b-f9ba4169e400",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c015cf0-1a1d-4041-bbe8-08a9a05d1357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3aca332-0ab5-4630-a9b7-71ef3771fa4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5fb1ad-6cd5-4324-b1d4-2e56a3fffe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0453a332-dff4-456b-b09b-498e5e02e2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90328baf-2e9b-42fd-a330-cfbf01cb6479",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e6d0e0-6e2d-4f6d-8da5-3b6fe48e9b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defe7a37-35be-4d86-893e-cfbe13373c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34b85c6-cb88-4492-a626-e7410b8c378e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ff132a-6cb1-44d8-b303-5bd77d24e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfcea69-69bb-4c62-981a-27fd2e6e342b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8176beb0-fc73-496a-975d-5cc48d7ef417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148cacd0-6b64-465a-af50-384f0998ff5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b853ea83-8acf-4f92-8daa-1db2d919a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e37bdc6-093a-454a-82fb-71cc45ab3b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01f1422-3bae-4d9e-9cd6-30321bd62e8b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5762868-8047-4caf-af0d-1b49b60b07bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7cd240-e3ac-4b62-be7b-f8e79b451fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5303ff2a-8d55-46e1-80d3-74434aa509f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17b8f2cf-0bbb-43a9-91dd-2848e72783d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f877d4-22d8-4cbe-857a-ae19055b3d56",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc32ca5-9e05-4d57-a87c-da01874da8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96026db9-8a17-44e0-be16-a5d669a33ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5462eddb-a536-4244-bdef-70e88b4c3a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd90491-1670-432f-b7c2-b82116f1991f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9367ef8c-3f67-491b-b52c-08511f21ab7a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64701ab5-091e-4fed-af37-7d6cbbbd04a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff41d086-93ce-4b9d-b546-e7e7193af415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06072133-5848-43cd-adeb-2ad22c63ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f02ca5-5237-48cd-beb4-732e047ffd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a5e4e4-8ead-41ce-a665-8eb4188c9811",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb56e1af-16ed-4c15-a593-e33b7249e340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01c009e-aea3-4853-b453-f585a9e50765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc5307c-9efc-4c71-9e38-c8ff5d3c187f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cfe01e-5434-477a-aa9f-72c7cdca8926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a67f93e-afd1-492f-9c72-b59a7196524a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c497178-8230-41b4-85e2-cd2f068b128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b84dbb2-ae66-41c2-a64a-3cf7643b78d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73660483-8814-4e8d-afdb-b778eda32103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c207a0-485b-45b2-8cc5-08d3e809672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d039f28d-2c16-4cf5-9a37-7f54914d6dc9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc957d9-ee29-4a03-a5de-3ad322393800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddd9ac1-19e8-4920-85f3-91f3f524dd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5928798b-1566-4dda-ab43-0d8c9d5195ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d461dd6-2dd1-4386-a510-d1def333573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698526c2-f0e5-4f56-a4ea-d980dc0a6faf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4fb9b3-ba4f-48d9-af19-f1dd91698bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ae0d36-d635-48d2-8c36-cedd30ecb9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474fae5a-066a-44b8-8cf0-9f8dc408d00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b87c8eb-c53a-4501-bd3d-03f959afde95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81e2a50-d17f-4e0d-8e50-678fe99d956a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9226ef-5bb9-4cfa-ac4c-d6a5505b54ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccccf6e-0848-4a53-a29b-746416fbd3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcd16f2-ee68-4a8d-8f52-eac9213679d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce68732f-c6bd-4432-83c1-a69e1818921b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62af14ce-054d-48ed-8559-ec5fbe9f824c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bec586-1528-40b1-b98c-ff4bb218ed1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb857b9-8f66-492c-87ed-0816a0ed133a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159e0c2d-4fc2-42eb-8af3-fad5b9834dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4a3d38-9bb4-4dfb-be85-71ba9fdcda96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41548635-899b-4e43-b55f-f7e671e12ea1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97309de-351a-4de5-a814-00ff6296c650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d51bf0f8-6fb9-42a3-9d04-5b35e7ceb320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d82b60-48bb-4881-bf26-5c43ec9b8c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "67068363-4260-4504-86f3-9a468a5c3866"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f41b7d6e-9574-489f-b477-cb8abec0da7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c9bfb82-4745-4b3a-9105-c4bf77544078",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a1d35c-eed5-4d6a-8945-237152b796e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d8c8fa7-f5ba-4956-9472-1adce9ed24e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90e8517-7889-4614-802a-02cc03a193cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d5313a7-3abb-4446-b258-0a9cf1529e04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "191c3e92-8a93-44a3-a48d-7d54c8e726a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82c9e501-c8c5-498d-a5ab-c95b626dde53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ca7c434-756f-43d0-ba4e-d89df90e4d47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b748819d-b903-4886-b10a-9194ee2dc59d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4298438-d6fc-48ea-8c54-c52dbbe059d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24c8c78f-601f-42a7-a165-facd421c04c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71dbb634-834a-4d65-b802-ad426e91a123",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3f8a1b3-872d-4a46-90e6-3b65eaadc0e5"
                }
              }
            ]
          },
          {
            "id": "1eee847b-3dca-43ef-a8ff-40d6f9f8a0b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfadbbd3-2ac0-4f7a-917a-15c171da0ba5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "379d166b-4c43-4d20-8799-8122c5ec530d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91eae011-76db-46f6-b96e-e0a47826569d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5661607c-3a78-4544-82f9-da531750782b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9447f585-2662-43fa-8690-3b0a33e75fb0"
                    }
                  }
                ]
              },
              {
                "id": "e02a56b6-fc10-458f-aabb-431aea1fa905",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70d3d1a5-c411-4eaa-b29f-40e58d284ca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b60eece8-28f2-4d0e-b374-278dbbc5fae6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b403b22c-9d8d-4d6e-8ffb-ba0d218fc176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "02390d73-322e-45d0-8b2b-925ffb9c9593"
                    }
                  }
                ]
              },
              {
                "id": "21426dc1-701b-4b1b-96bb-d01529155ab1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d07e3ea5-f44c-44b3-89e7-3d8b6d0a83ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8464d5fb-4ff0-430d-8dbc-def5ecb84889"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7acddc1b-de42-49dd-a044-1102e1f02b97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "998b8f28-3cbf-4247-9d8f-9cdb78bdc1f5"
                    }
                  }
                ]
              },
              {
                "id": "d2e423a5-f503-4719-912c-aa9ca6c815cc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6192b13e-c178-4ca9-91ec-0e94f0410e99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35ba42ca-5b01-40d0-b493-4b9024dffef0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "336ddb7b-44e0-4539-826b-95d835131f24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0ab06cb-83d2-470a-b868-90905964ffc9"
                    }
                  }
                ]
              },
              {
                "id": "a7995d3e-1045-4716-b748-947a3102ad6d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffa312a6-7225-418c-9bb9-131f9d7cb1f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23daaa3f-55ed-4e89-bc2d-33973b66689e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "331f6f31-b4aa-41ae-ab7b-8c0c565435fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d9ab123c-5109-4662-9f66-40628e79edec"
                    }
                  }
                ]
              },
              {
                "id": "4fcfb7c2-20cc-4881-8ea8-3d99d0a65618",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffccc55f-c49c-4f3c-9368-f1a716885840",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22382082-dcef-4720-9427-d4e6c0192490"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac69a17-eafa-45c2-a970-a2f90a9d3e47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f3f3179-f03f-4aca-964c-ff5b89fc11ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c82f9abd-25c0-4254-aa63-ad27866e49c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f4a851e-05a3-4417-ab8f-6843c531af98"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02382c51-6cf9-4af5-983d-2aacf0d92a8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "925e1d0c-db54-4a04-965f-57fbfb096cd3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e73e9f75-e474-4a7d-b527-d07cb076d5b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4670bab0-e0a2-4900-8c0c-ba4a3f2ee8e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d8d697c-d90f-48a7-9f71-4317069856c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2cd549a-ddb4-43f0-8ebc-90285e01a5d1"
            }
          }
        ]
      },
      {
        "id": "59c34fe1-9f7e-4edd-bb5e-daf01209a84d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2e54f6c7-2308-4c40-97d9-415c41610aff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57fd6d55-4bfc-416b-aea6-d6f357c62b13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7c560de-e5dd-4bec-85e1-bcd48f70d7f3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae51e16c-d39b-4fac-b0b6-b7946485ee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d1fde1-02cd-4371-bdf1-b15659629923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8818ed62-fd80-4250-a550-53149a6b436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "59177d51-8635-4730-b018-92ab8199b8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89156d5-94a5-4d13-ae3b-36136728c09c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7107de4f-383b-47c7-88d6-99857f5cd6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bb1740-d821-4ab6-a75c-05c197bae6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27f2f27-19af-41e3-b912-2f28a5238226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cf3282-5383-4f09-a0d4-c7439093ed40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7919ec-a3ce-49d3-a7a9-28f5721cc3d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed68d28-aed9-450a-a871-465d9f08c3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3821fb71-6219-4c6a-8621-5e6d914cbd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee89e03e-ab17-4768-b305-8fae60c45c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d5f4bf-676c-4b90-ace6-7803f13413cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b82c6ef-df9d-452a-a9b3-9891f1e8b6b8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d46c39-c67d-4bfc-9d94-0cb25127211f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582f9aaf-e371-4bb8-93c8-f4dac8551587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6743abd-c463-43de-b0b4-91b9ad1a4d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba0eaad-9651-4ff4-8986-c160d48cccc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd691cd-26ac-42dc-b8c1-ecf1af6613ef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daad7a05-cf0f-4f88-a251-0e2a42283b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856c8af7-88cf-4265-9d90-f4c5523455ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d8a8d2-8bbd-45bc-8624-bf05a944f63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66612e86-8576-4186-a5f7-8e4f24a3fd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a758d6-f9b0-4d71-b0a5-fbb436aeebcc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9438a1c6-63e8-4919-ae39-3e7ead7bd36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45be7df-f7a3-43bd-9c9d-0f09ec396222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1b0c6f-3f97-407a-8364-449d838a1e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90ffdcf-4465-438d-bf2b-ba4337d23589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8f186a-477f-4d81-b895-920e7946d772",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7152d68b-697c-42d8-9312-3df0df81f4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ad828c-f4ec-45e5-93ec-db317e3edafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6f440b-b4c0-4369-b9d6-aa87eebbf079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a0c8c8-45ee-4912-8522-42b56bb40856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2db2ad-c290-4ffc-9fa8-8becb5d5a9ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cc144b-0179-44e0-b71e-322bfcdf3898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8541dad8-33c5-4750-be62-04caad45fcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ed4f64-14e1-4703-aa40-81dd0f5955f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad4dbfc-d72e-459c-902c-bb31e70a5643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28678c9e-d8d4-46f2-b359-4b338b834e81",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e069d8f2-9f8c-462e-aa0f-45e2ad662911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a4aa24-eda0-4fa5-815b-1073738d71e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5950f132-0d31-4fda-b1ee-d5a03b31a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7f62f1-70d6-4bdd-8fb5-7112e2c40914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06a52c2-76e4-4248-8d07-2b0d9b4a3ade",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf55631-eab7-4f9b-8a11-6bb8993472c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebccff1-e309-49c4-85e1-72623f1d9e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdbc3e5-bf1b-4471-a255-cb0326aa8aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46915ed9-85ba-4fa1-88d7-545098c850f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f8c898-ad67-4659-a66a-05a62e780260",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f8f389-17a1-49a6-a6d5-93c04a48f1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c40f6db-5e1b-45dd-b357-90e96752ba91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24908b92-99b8-4e6f-9249-e35e6e1f9ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "21605508-45c5-4e2b-922d-156a99a8d60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf33d6fe-78c8-49bf-bc70-b58eb4529e93",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95671e5-0c45-4b34-a51b-2a666887d208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b52f77e-db71-455f-ac9f-df437dba2869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5623e17-22cd-47ce-90f3-4a7f9c2b8705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23cab00c-b990-4b00-a329-5f7903f4d248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d75b59-a761-43e0-aa59-6056ac419378",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1820f98f-1c88-43e6-891d-01cebfb0bfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdeedb7f-598e-4f8d-9594-2474db39b8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21224e55-4c2f-4128-bb8b-b78b2d4b9fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c4c6ba-239c-4344-b871-244e71a39917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffdebbe-7e3a-4b45-a559-391207e4a506",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9fbc2f-4b5f-4217-b55c-847f84f974b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c525e642-6926-4140-939c-9318bf07fe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26655377-ca0e-420e-b115-72671b5fdd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ad1a59-526a-4f14-9880-8273a711a857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733eba85-be66-420b-97e3-e89af3966b55",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1381023-3e98-4556-8310-38b94a9d4b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bc1ffe-1497-4d93-b3b3-b13e55eb98ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e3d7e0-0b66-46ed-879a-099f665c9ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "28303b0d-a207-4fcf-b6cd-0d9759ede798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd78a88-2cf8-4aee-bd79-4e7bfa5c66c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6841678-2c32-400c-b011-f2d842e97ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4272d06c-6c1b-4455-8c56-56fe7ed5fbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da309281-051f-4cab-86a4-a1e5cd2f0a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd28add-638c-44ff-8e39-d09268f5fdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97d2899-26fd-4b1c-b75f-a81a5705bf09",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539de73f-78e2-42c0-87e0-fda8b85d1a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0ab7b5-a1a9-4e18-938b-41ead88cab66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d51449-0506-4f10-a69c-2842e3dbf698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f26579d-00ad-4f2e-bd0d-b0b8028fd37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52719d1-36be-48f7-9696-343a0127e9c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7f221a-d3cd-4b5f-9afa-076c56d9425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7715027-a4c3-4141-87d6-38f8ada4b6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6654aa30-0d89-423d-afb4-4114661e0e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78772a83-ce8b-4de8-9f93-80c3e1171dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38212657-1dfe-4df6-aa68-bf216cb4ad96",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162888cb-b89e-46dd-9faa-401fe718d0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac29367-d48a-45f7-8c9f-0f5beab64e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352039a7-3a4b-443a-adcd-5b143aa17507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5828e23e-b483-4ab5-81ab-8dbf27b055d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b8076c-5614-4dfb-8a3a-b9a846c8b89c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cefd1b-41c2-4f46-a132-2b12764e03af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c021f75-bfa8-419f-90b8-18290872ea49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42992e7d-b99b-4dac-9f5f-a9121616c90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c948a0-bd6f-401f-8716-5c9b6ed40ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27655df9-2663-40ff-a4e1-d6a0e1268e5f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af445333-7716-4a6b-8990-6f3e800dd43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf91071-be44-4835-b62e-bc40ff3efc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda329b1-93fa-4467-ad9b-a6b3735d9a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f5afbb-3339-412d-858f-75f440871222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68855c6-9fe2-405e-95ae-1696d22c01e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe58184-34f1-4615-bed1-c7c2b386b107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbb32a8-f482-4567-855d-b91207d9dfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957e95ce-d58a-4613-9f15-4254ebe83fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "784c17f9-c0e3-4409-b1c1-657bdb106de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb12ebe7-ffc1-4ddf-911a-ef03974e92ce",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3564a780-4123-4f93-bdcb-a85c3dd0cff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0eda9b-1aaa-46c9-8416-ee1e7ad556d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf75da7-f443-4c3b-a3a6-a76fb5929279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c1126a-ac5a-48c7-9374-2c64b783281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eec9086-e136-4944-bef6-e93a54a0f067",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81f9f52-fb33-4aa6-9428-c1531b9b5aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0aa15ae-a731-430a-99bb-c53d9c4235e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fa3fa6-b7e1-41e7-bc49-bdaeebbf81fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9077ca9e-53fa-4984-a5a3-0e9a92560874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c638ae9-68a9-4e41-be01-2f6415e16855",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f435a3-9038-40af-8882-b097991979de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31da4627-8d2a-485d-894e-b63b896ea4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bfe739-2dbc-4078-b065-00fb9cf21f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6673d884-22f7-460a-b15d-7a719a181a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95cdec0-7dd4-450c-9c65-87b25ee7940f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5cf66b-965e-4618-8e80-100a082b97b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a5fce5-df94-4370-8ca0-f51de2c21c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26349928-190d-44bd-91db-1c0e8a6b7ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91cef127-a20e-4fdd-9eaa-eb68a0475a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411788f0-f5d1-495f-b9b9-03913b862dda",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a5393d-3914-4988-b13b-e5546a284cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c123297-fec5-4004-9289-ba0af6d162c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a020de8-c241-486c-8b9b-4600160d82c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d558fa0b-85e5-478e-9d9a-ac97f632e6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4657424-45b0-40a8-aca0-f83821226543",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d258f2-37d7-4fb5-a30c-d760dccf9b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2ba0ab-b20b-40aa-bea9-9bb4130f36e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b644e2e8-65c2-48ef-8f3c-d20133ccfb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2cceb9-4c2d-4f12-ba1e-2a75403188dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7a1cce-fd13-4438-a608-bd97d0c1843f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb4359-504e-45e4-b8ca-e3d30394d9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b0455b-abb4-4fbe-bc5c-f17a71b511e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b4288f-3583-4f31-becc-d7600cb50111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a9162b-af65-4bc7-b257-1af941951567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c094501b-9c1c-44bc-b88e-c488a18d43f2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78806b47-4ba4-49c0-a57d-2dbb27534a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea6279f-b111-41a6-ae58-e6a80961923d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1badd8c8-9f1f-4e05-b5dc-a5016db51a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab75bd7d-35d1-4370-8038-56b72a4e1d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd8ad3a-30fb-44bc-ac22-a902cf784ad1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba6f77-3933-4f4b-93a2-0b4132f658cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98580551-efea-4aa6-a623-8c7d2d9f8a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3915db3b-391e-4694-8f3f-fc6aa564b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db927375-d8ca-4c56-9cf1-cee5279d51a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf1e5f4-5779-49db-813a-21ed407068ee",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8daf68-b4e6-4baf-bf98-f13535567a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969bd68c-e59c-49db-ad94-922496c34e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f13bfc4-a1a8-4a86-a7d4-22c1b1365155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b5eb4f-baf7-461a-8064-6b6cd9234c7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dd60d71-2635-47d6-9ec4-51587ff554a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f8115a8-3bde-49f3-829f-fb8c97de2950",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62be070-03ff-4c24-8b2d-7bf7a7bbafd3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76b633e5-dd79-41d7-9109-ca4273b0afdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dbcdfa-0c73-4808-a893-67a7a0804937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b9f7572-3571-4812-b179-2cdcece31825"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17c50d68-7e95-4183-b1c5-7b2acb674e86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41191ef1-6226-47ea-9cfc-dcc6e9d28195"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc8a3c5a-5f94-4b9e-9643-6c2a7d6b9dca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37d93752-c188-4d1a-bcf8-7731603eea05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a29e1c87-3024-4fd6-a0ad-ff6e0773cc50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e70589f-436d-45ea-a0f2-3ca5e253e986"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14fae89c-b7d6-4491-a64c-d507d3095380",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4123778-154f-4aa8-94e9-510248ea69fc"
            }
          }
        ]
      },
      {
        "id": "21de4e7d-0a50-4d0a-81df-28bcb433222f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bbfdcfb6-03b6-4270-b15d-874e1f83a04e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14bd1efe-d91b-43d7-ba91-1784cb163b21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "064c4c01-ef70-4f27-9d56-2069a2b00a19",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab1013-3994-4451-ba21-eaa239d15c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016861bb-d635-4350-b8e2-25f13adde0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94532470-5c64-4d44-8c09-366b1d9f05a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "592f48f9-bd46-4cee-9884-4e5780eba548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e987f8b-17fd-49ce-a4c8-02e4f64004d8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044337fd-4c3d-4683-8695-155dc23b279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89495e8a-68c9-4dee-bf69-a5ca97739cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1991ffda-bd51-4fa1-aaab-f15381ce9fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "388972f7-75a4-4e0e-a578-79db46e25e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741e2612-1018-4f95-ac1d-96c93cae8d84",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb263e30-bf71-494e-b325-9cb11d219480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e468135-8588-4232-a70c-0593f06d2767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b7cc02-c1c1-4594-94d4-537e47cb8775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ef5387-6ee4-4880-a7e7-23ff3c48df12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4126685-1cb3-4c6c-ad3d-b98a5b5401de",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc008e80-83d8-45ae-b6e5-bedf4e0fec67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2558ca3-df99-4e79-8fe6-0aa16009299e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c253f39-2f61-42a0-a7d2-88bcb1235f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da7b591-5d41-400a-87e3-cb18cf51a3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9f0940-de26-4194-bd6e-28e45eaf8fc5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236ec17-7b74-40a3-90ac-bc50373721f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46801df7-22a6-49c1-81c7-b32a8f6c30db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547866d3-a14a-4dd3-87ad-f3528343fdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6abcb977-a777-49da-8074-fb384da994ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66847547-d3ca-42f3-b0fe-2bf438ab62b4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565ceb1d-9b5c-4587-85b0-06500e570f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53da4bf4-5ff8-4901-bd6b-58adffb5659e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef76ce77-f429-4586-bbcf-c10888058a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6531dd-fbe0-40ec-bddd-70df14803ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4268849b-3f13-46cd-865d-870fa090ddc5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4478cde-8b42-4b49-91d8-06517bc2d780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b069040-f733-479f-b40a-78e600a0563d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2286a649-2347-4107-ba77-7edc64821f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "99d0f2a1-9256-48c2-8eae-92512d6b7189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf9c36a-79ab-4f2c-b623-b1f809f6c5f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f9d510-a39b-491c-9dce-d9cfa9f95390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4770f6a5-d5ef-4465-8aef-4d792cc07a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a299e4ae-341a-4cae-a6e0-17032b6dcc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8c57c1-c740-4f78-99cf-bf8c567ef784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168de3d8-4fcd-4ffa-94e4-c3237299bcf1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5794c4c5-0534-4d32-ba4c-5769db42cead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9889b5f7-04ee-4aa0-adbb-18d6edd91a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0db666-fb74-48ab-9be3-0a0091ac3203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb4129c-9399-4739-a7e3-88e39646efc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d5ea6d-9d2f-40fe-a6f5-33aaa04b5787",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f81596-d55d-48d0-b283-392b45b25f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdd6117-3491-4e1e-ab5b-d0a96a5dd71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c094efe-1722-400d-b0db-8eefb6452f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7133938-f81e-43d6-a0bb-eaa720459d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bc5f84-aa04-4836-91da-1f6b82c1b08a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8c2a7d-9e45-4039-9b0c-a47a49579f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e025c7-3608-4089-ba0c-091f99b23632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e13e32-f398-435e-8d68-42de30cabe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "be280c20-0f92-4115-a708-07fdd7c16145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885ee8a5-4b92-4bab-9447-544e295bfd8f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44942ef-99eb-4511-8cf5-fe1317de4947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c9ef8f-6d71-47db-9915-ae23a687f004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983078ea-7256-4cbd-b485-26dc4cbae45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a393ba1f-79fd-4062-9777-ace63d740d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597dfb00-1d18-473e-ba3a-2d7007ec3e1f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78703ec-792b-43ed-a8b6-5a32cda1cfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0429027-a9cc-4491-9ffc-49a426d49ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f3223c-4c72-42e1-8729-359ca007e6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11927734-bdf6-4e25-8fbf-693f70a2e48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bffc65-4ef4-4085-9f8e-dd1b586c6e6f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bf4403-dad7-4090-90be-323c567c88a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bde9f8d-4f73-4e6a-b28a-b66eb066b9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfee71f2-f8e9-4ba2-9e8e-8405fd475367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "073cf22d-e330-4ae8-825d-728a00a86cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec8e207-b5cf-41a9-8fc7-ad62c89a2497",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5321ce1-6b85-42a7-a543-197da9516c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b61e451-444e-4b76-9c36-b85c21e48e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3690cf3d-fd6f-4076-94c4-de766e8a7078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf2768a-c373-4afe-98f1-c09979676ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea248b5-b8e0-4796-a766-307d94ee1de7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fec7e9f-4816-4184-8a0a-6949a7add1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10f4605-c17b-4e07-bd14-43c9877653be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e42f7aa-18e0-4285-90d4-0f11878c7e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04b01af-a156-44e6-b4c3-532773f47bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2d5384-28ab-4c70-b989-6bf62b30a352",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d498c0b4-87eb-428c-b815-685807f99e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d2be92-d05c-48ed-8f9b-af01e3d955c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75146f08-3c15-42b9-a483-0893b98c9954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c19291-249c-4157-af60-96306f63504d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432f79fe-cd37-4c93-ab01-bb9eb495895c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5499d8-0400-4b13-ac79-95ae26a78a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a66916-da28-4d44-8347-58169a7db24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e5b212-31dc-46f8-9879-78beea216abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a555c0ea-a4dc-4fbe-9a46-50f4fae740a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb23a622-3ec1-4665-9603-51721a393d60",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b65959-04d4-4af7-8f78-de63f3be34a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953f488d-5501-48c9-b87e-fc2d9417ccea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc7815c-f81e-43c4-8a04-cf59428d8539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e190533e-8a25-4690-bd2d-1768e7c5105f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3978be-7367-4a44-99ae-030d3bb593bc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9361201-c531-474d-8163-6a4f865b7877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894c7407-63ef-4d2d-a3f2-d7720989bdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773ba5db-13d1-43ae-b001-5ab7132ad9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d415fa46-abcd-4d8c-8ffc-e20f758768a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cfd0c0-fe32-4f78-851d-b961ad21e92b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c392e3c-b18c-4b5a-bf58-01410101f77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b0c843-2ed2-4dda-ad55-470e83461e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43824e38-60be-4d91-b433-d0e536acb008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f68da8-ef44-4c2e-ae10-7fc8c04bbcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2da629-89fe-4880-a1f2-479ebe24d65a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e157d5-48da-46cb-b4d1-020724fcbe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6c88ab-3f63-4962-87b1-5e8a7fe31fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970be633-c703-4019-bf7a-2f20b13c8328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c59350-1d7d-4c36-8c1f-78cb719d3545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52855deb-89c5-4fe7-8dd1-253cda6fca33",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43fc195-e7fa-42d7-bfcd-8d910f0a6f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191cf6fb-b78d-450c-b14d-e39a547df4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bd2c23-9f10-46ee-8154-c9f7f3a5b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c880afab-4c7b-48d3-bad3-119233f43362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434379d4-f8c3-4380-8942-7725c814f913",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f928626-1898-4e8f-a752-dc800c7d7cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54602d8a-13e6-45de-8934-885322112871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d204a77f-ae02-476a-8edd-d1203237a6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca0e085-3aea-4c62-80dd-f03be8b0c749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ab2c35-6077-4003-86a8-032dad87e3d8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb850284-72b3-4733-954c-4aa00a21d725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dc60bc-5082-44b3-82b6-2d871145db55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6904f540-aabe-4fd7-8fc9-c5cb65c57199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb10c50a-5187-4a53-b907-ea7381bd93b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522dfeae-20da-48ab-9b9d-2c208c73730c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53eb9a4-03c3-4258-be54-0c2a0e03e1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5f4c61-f0ac-443a-9c23-6accea58ce2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d77f274-e63c-4566-a405-3f805ff2b08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "668ed28a-310e-4f81-b00a-e37058af426d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f39c8f2-53f7-4863-9e69-e5a012902272",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c45729d-14fa-4c05-97f9-5c5fe2f762e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f601a3a7-b869-4501-b9f3-0fdaa7bcd644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43015f62-fef5-4a4a-b97b-e17a7d966e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcc2b3f-5640-4266-a95c-a3c424a3a069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e78b34-c079-4281-8353-26c22c400921",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740f91b6-e1e4-442e-81f1-d1e391da5737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9923d8c7-510f-4e0f-a8b6-bc09e37661c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7919fa-9e70-4225-8eb3-e094bd3955ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "134424bf-4220-4bb9-bfe5-5f69d40ae517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3495d9c4-8638-4abe-a25c-2f5accbb43ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf7b1d2-67ed-4e2e-a702-37a1e2bb3855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465cd3d4-cbae-48aa-9dc9-b6d19d5a6cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70783c28-cdf0-4b19-ab4f-314547bc414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2851f4-8b17-4c17-8eba-d94f93e75e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab07f38-e451-4e39-b2ee-9f070b6504f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc409b5-2246-42f6-84d8-0999c6180d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df3071e-cab2-45b8-ae57-758ea619b8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e4155b-fe91-41a1-b9cb-722a2d20b97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4c6a1d-cd32-4a77-bc8d-379e72495064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e57f87-bf95-4b5d-bf13-f870c7ef0f78",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e853067-d294-4f21-8cbc-7d175ab381d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438750e5-92c0-4081-a72c-2f2440ecbf71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fbbf6c-9386-4ab1-b47a-5096c6655a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ec4d3a-a858-462f-ac87-fdd535f6d08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd64a77e-d65f-4e9c-bf91-d074d571ec52",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aac0e7-da04-45db-b723-00d9e0d19870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022e58f3-664c-4144-ace4-f3ae99412a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3fb26b-dc39-4e2c-b95c-6743b276fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c58f58e-509d-4baf-8226-298b07e62069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00987c96-bcc3-4bbc-9808-1d2709cc05f9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bcb000-0257-47f3-980a-472a6a00da7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2677b9f-f491-4296-ba82-9c072c64816e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bc444e-57fb-4225-8426-b071b73b9488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e5ada5-b779-4ead-9eaa-a0b5329ffe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2a1877-5285-4af0-a513-855b3c374fb8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a856cb3-fd7f-45ea-87e9-14bfaed4bde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d891ae3-f2ca-4971-bc01-51a7d9bdeb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cf793d-d5aa-4bb8-ad48-cb1950b48dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a1a8b3-c808-42ba-ac2c-15a297f361a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5589c0-b09e-4a1a-b6ea-d5f4c5d1667b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c774364-2a1c-4e71-879e-b60252c3e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8230dfcf-768f-4d71-8ac3-8ecd8e22d7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbb3793-0e82-42b8-9731-85cce79a3f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "373e089e-a848-448b-a7c0-5836c33701db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd9c38c-77fa-49f9-9b6d-b39f6be96314",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7837f2ad-e6c6-41d2-9328-3eb50124c259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9917b93f-3590-4471-8b8c-10b79028ca95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a783c32d-282e-40a5-a066-3bb64e87f511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9384e4-7786-401c-9187-1fd905667988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f30c7c-d982-4f6e-a419-cc58e62ff181",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faf9c1e-c092-484b-a966-ffec5aeba5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee11cc8d-9b4a-4bba-9368-6b0e8a369f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5aac4ad-8192-4953-995b-8440858f82e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35a6ae5-c1f9-44c0-bc98-beefac6e2928"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd7c1c8b-72f8-4283-9515-a4eed933df5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2ee6c63-52f2-49c5-945c-46ba4cd91641",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b8fd6d-0539-4d73-90a5-b92e4ed395c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc113c77-0814-459b-abcc-86c46ef87859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71813823-1c66-4d46-ae5c-76c1f9dbbe1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46ad7e8b-e73d-4299-a0b5-0639bfdf9c84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f36286ef-986b-4fb1-94ee-e19bd7deec07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11f76dd5-f877-43f2-bd5b-4c28607c13b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d03785ae-2bed-4a4b-87ce-187998ded142",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc27a09a-8d12-4861-9145-d19a6ec3397f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c377a21a-cbe0-46ca-9544-5f3ada6821c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "32b39142-b6a2-4a19-be32-3ceadb4fd49a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74f17510-b2ae-40ad-9af7-d724d21e2786",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "586349e8-40ac-4f18-8d32-846701ef7b15"
            }
          }
        ]
      },
      {
        "id": "99504ee3-44ec-4c69-b7d3-316b2eb427d8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "76da4442-5162-46f5-9aca-cde78985fae8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9ecd4b1-a789-4799-adb9-e478f0f01f29",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77616993-fc60-4c1e-8e64-23f41ec21767",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e40bb8-c6da-4e84-8af8-e72908e932e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8748f9-6834-490e-b26b-81fff6abf807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af990b9-4a07-4979-966c-c999e5ed70ce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c060ea7-7c72-46e4-8daa-c339bbff1672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4482c6d-acf4-4a13-b4c0-afe41dd17812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773d6c00-26f3-4fda-ba2d-74ff3fdf1402",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e410bab-ca60-4807-ab23-e160edb3c56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8f2c5c-6f0c-4a70-8af2-7c3064cc01e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f6eb8c-1acd-499b-a9c6-51f292cf9a83",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82e28b0-4132-41a2-9faa-12f3cf050016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4ad38a-53e5-48c3-b7c8-930f5550ebac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da83350f-c615-464e-8296-e047d6bfdac5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e73cdc-cb4e-4c60-a9bd-b3c99410b68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88225051-20fc-4eb1-8da7-e22b98f467e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285acbce-3358-4d2a-bb6b-6374efb300dc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c5a80c-96a6-4fe4-9548-5bd3dc30af34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08ff497-2022-40db-a382-2f1b1cd79ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b137817-e675-44ec-8847-53345d2ee109",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5495f203-a785-4152-b97d-5208b4034f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bc22d6-78b8-4e62-bb23-8f09cecef922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41f2894-c663-4c17-a9b9-b2c36ba38108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba17476-87c1-40b3-9694-d17f09ce7ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e97074-3a61-4ab4-bc68-2940fdb05388",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687dab9e-2362-464f-a7db-ab1efddac91e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd7eda5-e8c1-4d1d-847f-3fdc7e766eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974602e0-9a33-4b1b-b0f9-bdee02616593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b59b705-70d9-4f07-b4e8-dadcc66a9028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da50317-16bb-4a1a-923e-c80a6e30ffae",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d224b3-57b6-4db1-a59f-e9e3e88fba2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a1a2222-437c-48f6-adbc-d127532afc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c29471-7442-4089-b8e2-217049e5aa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17455aee-fbf6-4c64-a512-afaf5b04faba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24763e28-2abb-468b-adc9-d36906eabc83",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ef5d24-5205-4839-a1bc-d64853383a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156a7e97-74db-456d-855c-932d155c7ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a0faa1-c698-4b85-8e6a-737a5ab4a738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0040b1dc-1061-4f39-b161-5c528d1e3d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4123c3dc-f8bb-4122-a724-7de8d3848463",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b043a84d-a878-46ec-ab5d-0a36872b1052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c046cc74-879c-4696-9de5-2ee746214a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ef1b42-ae17-48e5-997b-64781c62f10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4136885-8e57-441c-8264-2a9ec2c8d4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87992a5a-e973-44a7-ae80-0bf4d7a0df89",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bb1ec2-c67e-460b-938a-76adaeb35504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9a3a99-8e3d-445d-a3de-e5ee67c78f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7da509f-c9a3-4bdc-8221-92aca0047f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79847ee7-f77d-49d7-8ac7-037a092ee496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12931182-a741-4e11-b0c4-9e24a1d7a9a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c99878c-670b-4556-874e-6956da306ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd09767-ae5b-47bb-b6e9-28c59cdb6a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ba66b3-1b54-46a0-81aa-fae7be0474ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c9dc2e-ffe8-4ee9-a0ee-e45a69f7d8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dff331-59d1-4b35-9095-ae86bdbe2417",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01fea2f-eaa5-4385-a41a-16d79c6b33eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a14ae6-d9db-4a19-8069-f15b65fb19a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af559e64-d668-4349-9e10-947183068d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a879f5ff-37aa-464d-a375-e24237f29390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21694b30-c699-4940-a3af-98a8aa53f5c4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c309a4-5a39-4f4c-92f2-cef995a5b6eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a730a1c5-d884-47f2-9290-b4a3e123f426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cb712e-640d-4c79-b6f3-a07a01137fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e395862f-de8c-4044-b397-e37b7cd77879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e87abe-7fbe-461f-b673-e01c73736c2f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60398c7-9f4d-4828-9055-eba15334e15e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cbc2bb5-d628-4d8e-8b9f-1f847b46a4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b4ea1-b438-4ff7-a227-e9fad019ccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489bdf7c-c3d5-4c0e-926b-8840404bfccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87988871-9007-48eb-89ac-9afcd7c5e5be",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcad7c7c-f0d1-49a5-bda7-d9bd78cb0253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee521e04-21a5-4096-91e4-e3936d50d05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3b66c3-a373-4edc-8917-6bf765bbf273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf2714b-7e2a-4ba1-b9d9-8b15b178cc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9dfff6-bf95-4e49-aecf-96543e42401d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c144e5-0e4f-4cc3-b3fd-a22e8b18fa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632ee1bb-8303-4740-9237-356eb2763d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881160c3-a9fc-4f42-b357-abe570064016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ca4ce2-2b2d-431b-96e5-f8860ae9b699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a34de4-38c6-4a83-82a9-b51058ea2cf7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d070be5-5ae6-4133-b630-0164c4bfbb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1aa477-e807-41b8-9024-60e641f6e3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83b18fa-fc62-4cef-86ae-73db272862be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d586dd74-fd74-4d4e-b6a2-b485f0889657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9de0feb-17fc-4cb1-a16d-76852a618e40",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fe78a3-04f0-4300-8eba-7270e420f8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245e22fe-0ee3-4dce-9b77-ca0426a2c0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2667626b-3f16-41c4-ab4d-ee1ba66941e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9f5ddd-ffa6-449d-87a0-5c3c382058e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82d80b-3f1f-40f9-ae68-bb8f969e7f34",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a323355e-bebd-4290-b586-8ae736132728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02241114-7fe2-4e21-9346-a7e053bd3803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedb3dbb-ec99-4ffa-997a-09dff4bc0d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffa3edf-fb4f-4504-9d02-d80adab65e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fab0b2c-9cf4-4bf0-a93c-453759be8f90",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338b82d6-c504-4e28-bd11-8e1362b330aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567158cb-8494-46b8-adbe-1cff9e1c63cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69abe1d2-f91b-4c0e-9c58-92f70cdfcbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e785a6-18f3-4fd8-8da2-3e1bc50627f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7c192a-b440-418d-85c5-2b5d2433a70a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c4bc07-a0be-4fd9-8063-872790580809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47ac229-0b15-4a37-a18d-38ca75d4f06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0825f6-9f4d-4012-b5af-fd69e3b32d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd223f0d-889a-4089-b260-88516b2406c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbad1e87-0793-44d1-b531-5b3dd90ce88f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a769f3-820c-430d-a6c0-af5a5e7e13a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca4e972-9678-44d1-b349-82e4d85ee05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6e2427-b17a-48fa-a5c9-8e09b969a03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26f19f0-aefc-4221-83dd-54a3cc71136b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379058a6-e16c-40b5-b412-8f6a929471ba",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40e7d95-42c5-4dad-a41a-9f0d09810d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5773fe-e283-4a48-89a9-28201dcf48e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c273b38d-ed34-45b7-91ec-f2e92f16fbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fb3922-efc9-417a-b42c-26a4c901cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd68f388-f69c-4b41-8fa5-49796512edb6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1b0ddd-5c99-4681-bf92-19722bc4e24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec7e919-a33f-40a4-98b3-83eb9595a2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48d8659-e139-428d-a51f-5b293278247c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd59c0a-4561-4b61-8258-ffdd07340c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5a48ed-ed11-46ac-aff3-d055555158f4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b102f0-bec8-4b2a-8917-65e4da00f67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba78319-118b-4a00-8bb9-1ca67f90bc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06734623-838e-49da-81bd-95a81b998a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c9a980-9868-44e9-9043-568a2c4ffb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2764ab47-7396-4bec-bde3-121262a83efe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdf1050-5598-4979-abd4-df8456d97a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1815788b-0cf5-46d3-b536-bb3c024f2d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66921985-02c2-4898-aed6-5185f100dc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc28bb80-f29d-4b6b-9387-9b31a3bf566d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1549482e-087a-4b61-a242-983f79459b98",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524bfe9f-9a69-4976-8435-df53a452d8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4845976e-04b5-45b9-9529-61a03ac340a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e2a860-d12e-41ca-867e-a435aa5e8437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12168060-0c84-4061-a2b8-7421e456f901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fa42ff-974a-489e-affe-888bf603ea6c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68195da-0296-487f-b4d6-8a8d80836ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16235ec-aadb-4a28-83b6-03bb0786ef38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07461e5b-a003-439f-80ed-8823dfe68d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0809f8e0-e35a-4c2b-8c15-20c00dfb92db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e986f30-be33-45c1-95ef-a7638f339394",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8949f72d-7fa9-4baf-80dc-68f33a9ac6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "355b3274-d2a9-4cb1-8a44-af80e3fba9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43ffd9f-a323-447a-8721-8d79a9de5181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147fa13e-71d4-41b4-8dfd-26d3b70ae3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e9790e-b369-4ce3-b633-ec9e383e0a41",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6926681-9d79-40e6-b184-3f6efb856259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4e9acb-59d9-41fc-8960-2ba70ab9d43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b9432c-e3e9-4a92-82fa-911f094d15c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26c2a75-e453-4b38-806b-6e64b5295b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44157a1-0ff9-4ad2-92b7-da6444493158",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d3059-f632-4453-83ec-ad2e216154a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd2c1c5-fd42-48cd-b299-afca8d5caf40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0f4d2b-8f54-416d-9411-a2d574fe6ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd5affc-4533-41c8-8b81-2dc8674d2082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c15b5a-1036-4e47-a48b-b6beeff9343f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b08835b-4e48-4817-b2b7-cdb3604833b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379d1ab1-9113-4101-b9ab-fa3aed12c73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e60c36-2efc-4185-91d9-cfb776a1e2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d75828-2114-4c3b-b74a-9dd8794af054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03deef5-f36a-43be-8fa6-e19b88a1cc83",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635e6b28-8f49-4f50-bf51-5a377aabd8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923c798d-6a3e-4f60-be6b-9516eefa9f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e92b3ab-1f60-4f13-87a9-f81c506ccf23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd9a657-5dec-470f-86da-6a73326440a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e894b102-ec8e-4277-81f2-a6891be3177e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8de90c7-46de-44cf-bab7-81399bb56d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f7070c-c736-4f47-9519-72de2b016908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497900ce-cda2-418b-8706-a61f5394c6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df07593-25dd-418c-a559-a849c1c30a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3842ac33-9027-405e-8d27-f53c3f84eaf5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67094cb-fae2-4ae7-9d02-e7f5d8a73cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc912b2f-6957-4c62-bc81-6fa0ef8363f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12860a2f-0f4f-404b-b7d4-54875ef2a15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1418ccd-5b7b-43d1-afeb-4ce82f4f230a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7b46d7-b43f-4be3-82bc-e3c4eda89a29",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c52b52-6adb-4f10-983c-f417265e511e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d258bb-1ba3-4b05-b847-f30a936bfcca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148fee0a-17a4-47e0-a264-6c75f9d68821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d7dd79-4b83-4fcf-9a5a-1b7e44ad3c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07dc8d5-7d85-4e3a-8cc0-9f99c0482dc0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2136d6c2-39c4-48a3-886e-1c0d28f73143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4047d6-3dc0-43b4-bd7d-74d7d84809a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4984cdb6-0de8-4eb0-8a02-38d943506d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bad96a-b438-4c9f-873a-6450943ac40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e26aec7-6898-4818-be8b-53ebc0ac4088",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8200b059-bf32-4253-8f6c-59f9625ca9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea42db1f-f151-4824-b9a3-579286069a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b1ffc7-9bb9-4ff2-bb90-426fc251fc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa26b24-c31c-4595-a4aa-f5db60232380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333f3e8c-245f-4386-9f06-0ab72f758ee0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5029da-21c8-4287-85c3-eb01efd4f1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aea4a4d-e992-46b0-9139-869567cc14ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d848920-473b-48cb-a256-9e06b93cbca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac1cbae-224d-4f7c-b8e3-3da8fe847856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5bceea-cfa4-47c6-b6a9-ed523ad42678",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f46e5d-6127-43a3-8f2c-5d1b86b802af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24128515-eed9-4b9c-8f79-3594a7fbeae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e6f7a8-94f8-4d15-b5a1-84dc40dd4fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510e21e2-244c-4c66-b3fd-ad4951586f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebd2884-b007-4774-af31-b08a5c1fd80d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b603ec52-61d4-40b9-97b5-59c2c436c65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f656239c-a8de-4b27-b95b-fdae9c2b640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9038ed3c-49e1-41d5-866a-7c2856aa2ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d01c8bf-3401-4d23-9df3-846ccd0b514f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97e67f7-44f8-4d76-bf93-303753b38a3e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c52c6d1-ff5a-4005-a906-16aada83943e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323e5460-51ba-4a90-843f-3063c3dcb1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b92159-aa6c-44cb-abc2-e28bd303a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2572ca7-6e29-4d6b-919e-e84536f5fcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4657fce7-409b-4a78-b215-094bf38a9e56",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eae771e-131a-42de-b618-3e1eaeee310f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2752504-c31d-41d1-9ddc-b9ab0f4bd724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4e39df-e069-470a-b42c-f4b81b8ec3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b0ff0f-2c02-4352-8e31-b6a6879c01ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c06ced-1207-4ed8-b00d-3f4b9a6df17a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34929ca-dda4-4be0-a878-c5b1e0ebe626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606e9873-f21a-4d84-af02-ef74bcb05418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a592eaff-2ad7-479f-aef1-336a8a6cfb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0adea20-365d-42bc-8df6-fec9f6032b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ddf216-1e80-48d5-910f-4ecbecf5b660",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cdb242-2685-43bd-b20e-a4075e7832a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66576596-32c5-4c6d-9e4d-a4eafcda641d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1b7379-cacd-4301-81a8-43d0e67871e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b61cddf-2cb3-41bc-99a5-157ea8adf4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d15b13-9de5-4652-8260-c6e7d82e3bc6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043f043e-adaa-4768-be78-1cdcaf02ef89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a562550-6776-4722-8728-1f72d240138d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d289fc69-ddb7-4440-b18c-cf626ad5b3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa292ea-e40a-4909-8443-f04d8203cee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8e4fa8-b032-4758-b8ba-c922a3d44e22",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47687b7-294d-498d-a04d-b981022cb10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd381c2-9cc3-4c36-ae0d-c126d12ca103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14cf68d-2cc0-4a07-b4f6-9c385076ec66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e105099b-96ec-476b-a333-5cdd7be14c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b12fc2-403a-4b13-af5e-1548920ec1d9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa02306-b41f-44c4-89f4-ce8dd4bc0810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1cee7f-ca2e-4334-8690-e97501feed8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe56fcf-2913-49ce-88ba-08b8e1f4fa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ad7cc2-141c-47db-9198-6bad7a30d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e108f704-e0b3-4b88-9615-0e9e811097b0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1de6e7-71a7-4898-8999-eb86b0bfdb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49e6bd5-1b1b-4204-8760-c8e0c0b4270c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5e68a8-fc81-4220-870b-61c4aa7e4f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613c5268-30b0-422a-b9e0-1d1cc6f419ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dfd42c-8853-4a2b-a0e0-c1bd0feabc41",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743174e-8bc9-4872-b311-e23548cb58aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cb70c7-b915-41ba-b171-88f6da6dddee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9ab47e-c6ab-411b-9f5b-1a350d1bd685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb3c830-4ac6-41f8-ace2-c25afdfedc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4145a50-0d4e-4993-b5a6-f237c853c3f5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55c424b-5cda-4faa-96d6-f725b33f0d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7609f1-604e-4759-b806-6d09048af0ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e239ea3-173f-4626-88fc-2db6e0ab3861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b386f213-5f31-436d-a3e0-7b73cd3c99e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18277011-d4a8-43ee-a4d7-cb7ab7373b29",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d993cdd4-a50d-471a-97b8-4a7ba10868dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811f5659-0488-4de0-9292-d3dc15d0f84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edffd63-f977-4c7e-84eb-d5d3ddeecf7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de479eb-a13b-47be-8f93-a0dc30cfe012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e944b8a2-cbe5-4845-a1c8-94a7a0709540",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a22b1c-6eca-4e50-adfb-f871e5e23cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efcede7-7db3-47ad-a40c-72ba52db1d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f8e6e8-0261-4726-8f28-fe195378aff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccbda33-0bef-4921-9866-8ff93e6e0d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee9828-7bd6-4e55-9e96-2f54e55f4f28",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e822cfcf-037e-4a2b-bde7-c055921f6436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bee3bf-7770-405a-a4a1-97afb4976782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339a1823-10f0-4a5a-bccc-3fde8d9b15dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb4b149-d324-4a1d-86e9-eded60c299b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4116e16-6e32-464b-bc35-81311ab3acf8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9983e11-6786-4b79-ad0d-75ce793029b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28008651-e88e-4ae1-9b09-ebb8c4ae9de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dd14e1-d8b3-409c-8313-f47ab354d48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3028a3a-ca5c-49ed-b5e6-239537349549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbafad9-fdd4-42c4-9cab-a281fc41fb3e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e06ca0-02b9-4b80-b15b-e38cd2e8f121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfe95ee-bf02-423b-a7cf-152f73e91030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ade5a4-8725-4255-9a2b-4ea0f64f5b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dec9b22-e395-465a-b2c6-72adb1a8116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fe16b8-e056-4f86-b701-2a2f6da18786",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56b90ea-e3bc-44b4-aaf7-978a014155d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52057be2-6934-47dd-b5d5-70dd567af1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b801cd2e-6745-4467-b70d-af380e0d35c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b135ce2-d01f-4a1e-8d97-260620c5dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39f811c-b139-4fa7-929d-af387b13325b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3e2fe2-9584-4914-b9a3-1f4b62ffdf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0025613a-3f80-4cbf-8e6b-9cf1c92a23ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7765b0-d7f4-4130-b735-f1c911d528cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e616aca-db6e-4bcf-ab11-c9657b52dd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c2fd10-d438-4950-b3c3-c42b04d6c22c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d49e1a1-20e2-429b-b700-f0dd76a97958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c166498-26b6-442b-9963-5fa9a802c78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931d7441-23e4-4dd4-8c8a-f75089397175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34e65bf-c99a-4b1b-972e-80e55aa427f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b194bc-1785-49f8-bc17-2284530d135e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2596295f-7fc9-4479-88c1-252a0ebfd077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c094d39-1c41-42b4-9ec7-6440a35fe330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dc2d33-4c35-4cbf-b973-2df06c82dd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8145233b-7ae5-4536-afa6-19050ccdf9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27782514-8426-4ad9-8fef-1cd2dd85c0ec",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0525bda-b72c-404b-8f44-2fe9cdb98f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6f72c2-8441-43db-a7db-85a4da743b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fd7587-2621-4a4f-a501-e584825f828f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c4615a-8f41-4f36-afdb-5dddcad110bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ce483-4a74-4928-b306-c09dd884ce30",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b143e6c4-8976-4b0e-94d1-8568603cf41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e705e1-4ab6-4191-99e1-a0d889365dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c31b3ac-820d-4ca2-a09b-47e340a01159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e63354f-bec7-4b36-99b4-492e43544fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a648b5-f236-45ba-83c7-14f8f7c9b2c5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49def85-cc9c-49f4-a61f-346cf55d4b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40d5734-b58f-4533-a3ba-f7bae451a042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5e49d5-ecf3-45f5-9ee8-db5156698df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b0f0fa-f3c2-4986-8210-13dfa637ea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6a0c9d-d57e-472a-ae33-a67fa87c5614",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6cd398-6e86-4ca2-8cd9-70ec0450b25d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55df6c3-d930-478e-9833-f0ccde33a0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0e3f95-7d73-4092-81a4-7ff260f0bcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaede08-b03a-4362-9d95-f35400879926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff504fe5-8eba-4d0e-917a-9e1947247836",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c0a2b6-3fe6-46d0-8486-2e931debe719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8499252-5365-4e06-a8c0-41c6f5d267d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28b3b43-9e39-49b4-9514-849e4b7f98d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee1e5af-d5db-4411-ba7c-bcfdd4c4db86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d796f6-9cc8-41fb-9b4d-58177ea164a3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2500c6-82e1-4eeb-afb2-2ec07030c078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d69f9504-6ede-4fb2-b949-788854030171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c702ba9b-6bc2-474d-966b-d51a354a3e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf158c73-3d9a-4ffa-90f2-821a0ab7dcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40872bb-5814-4da8-ad9d-39f38b71b67f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70a134b-f2eb-40df-b0a4-f270bffaf452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f828157-045c-47db-b7af-b5256cdd5038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dc0c7e-0cfb-45ef-9fd8-59b5bc93601f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c1d0dc-32e8-4104-b44b-e81d9ca85332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c24c47-f1c3-488f-a60c-ddcd5ae8acf9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd43a4b-9a8e-44b6-bb94-470513629276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dff1f6f-65be-4241-94ef-bf9e1f37e0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde9e863-9f5c-4abc-9fdc-9323e3d5b355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ac89ad-7a91-4f27-8ef3-bd15096bb72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bde96c-1cd2-4f2e-b5ae-93823f3d48e9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e549333-775c-48d6-9641-d5b7cf32c378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d91b5f2-2f09-49b8-a80a-3bb1f314af8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c0ab57-75cd-4be7-8e6c-391d657c17ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01db54ee-ad18-4d34-a226-b7bddb82a2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280c2ebc-4b2b-4abf-946b-1b88f5ca66af",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4412083d-b655-4142-8d47-c980394996fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713e617c-b459-4ff2-9d66-aa63844cd789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c167be37-22fd-46d3-96d2-1796a41a5010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6683f0f-c265-4566-ae73-bf138edc5708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e18e3f-21a9-4f4e-be0c-b06be3dd85fe",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845d3761-6c26-4010-9918-31fb7c16c9e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca965cd-6d81-449b-bd79-53988656e106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafa8471-6311-412b-aeea-b3871cf531e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38e7e84-7ca0-403c-af68-491044abe853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71254171-e7d5-4831-a239-974542d52ebc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6802003d-29b1-4645-b25f-2c8510711f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0e0bce-c20e-4d76-970e-863b4bb24946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a6b997-247a-4dd3-8ace-5251377ca096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dd472f-9e06-45a1-8d58-c3ff5bbfaf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3217dc93-7906-45ba-9ad3-b8d25aed5626",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9ecb32-c544-4e9a-bec6-e58ce4ee5928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814870a5-95d8-46c1-8e0a-107cbc122fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61abc50-5b82-4201-8f1d-b2c5a0d96bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2483c5-3d5b-48ce-897f-27de9b73178c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414f39cd-bbe6-43cb-98d4-3fea70c6008f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9173bc-dbf4-4f0f-8fcb-eadff1b1db6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c173994-ec85-4bfa-9a6e-770170340c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adb658e-a983-429e-b902-49b343bba6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9288aa4e-aa42-4827-89d6-c3370f3e988b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8abac4-9592-4b75-9f79-2e80b5f61bd1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f92854-cecc-404b-a573-15b4fbb0baf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b418130e-9a98-4ba1-acfc-d63c4011357b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1733c2fc-670c-4029-bc16-924d9c707341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34407834-e242-4ac5-a9df-e5aff7e32d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39205a6a-7086-4b07-a490-3663da803160",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec84825-3d86-4d7b-ac66-c1523c6f286d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808776da-7883-448d-98a1-438e6f23edf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152cbf75-6f08-40c1-bfc5-20e47a6d9978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d9ddfb-e289-4e6c-8175-a617a9a489a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a0a1ba-4a85-4ea5-af73-a053d552a761",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5207f1ca-32a0-4f5a-8e3e-f5d419e01f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f484150c-6416-47c1-8261-ad18352ab212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362be9bf-e5fc-4e44-8d07-1fceace91607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e018914-f24f-439e-8489-69f41871cd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c1b7ed-0646-49af-b9c0-6f2178f77368",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c54bb1e-5a35-4b53-ad80-8ef1eedafe2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1176e918-ae93-4e03-a061-e31a103e8a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cf0c6a-9ec3-45e3-9b4b-1b74afb01ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b90124e-2476-42e2-8e0f-0761cc1eb768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0bbd49-50c1-432b-a3b0-50d7e327e4e3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d008774b-820a-4407-b8a6-3b26dfc17dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f747bc2b-4a9b-4482-beb3-c41eb066364e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56e3bc2-207b-4e18-aeeb-3826078a4b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c808e5-8ec8-4411-b0db-a164f68e546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb2a63c-c66b-43ff-9a44-74d1463611cb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a82139b-28cd-473f-a2ef-84d901c4fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd72484-0814-4da9-bb8c-3cd72e9eee79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f999d5c-14db-4ac0-b03f-1276f3e6369d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced30938-53f4-43de-bd52-5b30a9045da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1475dafc-06a4-48a6-b742-de8fed35ac91",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af71d3a-8256-43a8-a64e-ffce4976ca27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48a540c-6b0d-4d3b-97b9-409f81adb798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9829b89c-2311-4fa8-8844-014e904e1876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac6e291-69c5-43a4-8eaa-aab1c4abdae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53289eed-09d0-4f89-8f22-815b4421add0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d0dac9-3aa0-45c0-9411-4748df397c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52258a94-d619-4b8a-9ff0-3c577c99d6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35031a0-ec64-47d3-988a-ec66c8110008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d068289c-7997-4220-9d7e-c32a4db68230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228a698a-a76b-445c-a571-634ed504b6b5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1994e670-f758-4ddf-a3aa-7223f085c05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b2aefe-6563-42f3-9beb-f352cf7da9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1b8066-a1f4-4f92-918a-9fcd6d952769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3903b6c4-f43e-4283-a628-ed824ff5c7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9362a3-81fd-4418-b447-d96276bdd631",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61f71ab-03da-4de4-93b7-90aa25ea0f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f083e0f-69a7-4f41-9ce5-8d912b20309a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263df01b-3033-4aa4-b527-03ac9871676c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ab94d8-5280-46e8-a4c8-d59fffd41972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f95c49-57df-4ca9-bd78-97b4e640cfc0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8700fb5b-59e5-4ec3-9afb-f706acb8d623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434fe12e-d0e3-48ca-8a4e-80ddaf91d825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d81f1-92f3-474e-9875-0441a97e037f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d01c8f5-0143-4602-90e8-d13ecd4485c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b5c756-5735-4e63-91d9-58aba638895e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d71594-dc8d-41cf-89c7-3a9942c02168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6890554-3177-4af2-8e08-28aad41fd1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd40383-155b-4277-b9a3-e3ce3b0fc171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183ef0a2-a785-4e0e-bd43-404af481e7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d85b53-2d9c-4919-9369-14ead2df989f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707eef03-099f-4103-aa56-f0deb8b0ca99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40549a6c-4150-4aa0-a0cd-fd6d024c2e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523f45ba-333e-4bc6-ac5d-cf3f1ac91ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d34877-cb36-4f04-8412-c12a3150e3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da63fe13-b093-4976-bf71-d47a91a2dcdb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8755c765-7436-4e97-b1e8-0f60ecbe4ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66cc3b01-49da-4aea-a46f-26bc77b2a050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a45d63a-2a68-4659-86d5-ee454c5e84ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9798f33-315d-44e8-ad0b-c677617f0e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f465926f-0e7c-465e-a23d-832f113f2341",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddaa2f4-8e9e-42ad-94a6-dd470a2b0308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f0e202e-5e4c-432a-b021-a21e514b0530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098acd77-698f-4e22-871e-e221606405b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b3c4b7-0ae1-436a-97ea-ccbc4d1bc6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861a96ef-029f-49f0-bb90-16c1f6fdd261",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b331981-323e-40ec-88cc-60ce30d88215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6f4817-43f2-4d4f-a0c5-fb7f473b689d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6d8197-b3d5-47ea-bc30-348d92690edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466ba352-d04c-4114-980b-ec93820e272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae4d2b5-7e38-45c9-a21c-5f2bbe22613e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c046f29c-0944-4efa-b0dd-4d5772a0748f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9032d8-ed9d-41c3-9edb-c793edb7cf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65616145-83ea-460e-bb68-1e026f635b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec66b09-f2b1-4b19-b588-04938072ec4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3975f0-b982-4393-9940-61b9541fa3b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7481c7fa-8705-437f-a2cb-3bba9f58e044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35cf74d3-9fb4-4d3d-a9db-9e11dd98d934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5065af-142a-4a2f-943c-91ecc32bb1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f444573-6ae4-4c43-8ff3-16158c538f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4166a9dc-b6aa-4ccc-99df-922aea26849a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ca3a89-2dec-4db5-96e0-5d8ddcb003ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb7fcb44-6b4c-4c8c-a8de-8f1382ad2524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1659da4-86cf-4ec5-8ab8-380deed68621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83601444-872c-4e29-bd05-92814663b2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d034d2-5292-468e-8804-41b592928a6b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d374db43-7f7d-4578-9f11-14a420371e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "450d5578-19b9-4ae7-a334-585ba6c8fc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ac606f-0863-4b0b-93b9-3269073175c3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03676115-9352-43cc-a3b6-b723425633a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c67f59-bc36-4ca6-acd6-179a966829d6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05faa2f0-2749-495e-979b-c67fd0f0ee6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8583034-b035-48e7-9a19-05ea7a756fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fedf11-d053-4dcc-bcf4-9e565942e0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6191a012-565b-4490-a6d9-081c3a6339ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25ab91b9-6f4f-4b6b-83d6-580cbd8ac9b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d2dbd5-96cd-4c6f-9ceb-8f0c5ceb7087"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa0cfd5-fb90-47da-bc2d-0c16a1e41e8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8e27602-1002-4dc2-9b08-68bbd8ec88b0"
                    }
                  }
                ]
              },
              {
                "id": "fbe3dc5e-c9af-471f-a67c-ecde9f109e8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96ad99af-d558-41e6-930d-35e0951881a2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05a6fde-63bd-4c7c-825f-c80dbdfd064e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8ba67c94-5830-4191-bb3e-013aaae98212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f8d5e6-313c-4dca-8358-05cccbe9be1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1a23280-f8ff-45c9-a709-e02704d7d6bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "923f8e19-7ab7-4ab4-8887-4f57e879717a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a1cddd0-9f90-469c-b6fb-97d2f023554d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14b3acda-10ad-4215-b738-67ea04d2287c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b37fba1f-0ea3-4f62-a3b5-7514a806f706"
                    }
                  }
                ]
              },
              {
                "id": "9920e804-4943-494f-920c-f4afeeece756",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e47e16d2-d7ea-4fcb-9d63-b3844595b96d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e8be70-2b43-498f-ba4f-2a33530ba4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dac0bead-881f-4587-8107-eaf0e03a0851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645ebfee-a0c1-4513-a9e5-e955ba0a7e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13560674-8399-406f-8e7c-05234e890242"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82f89ed2-99b8-447f-9e0d-59d2e7d9f19c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bc17a4d-6425-4a88-98b3-3ef879c53bb9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf61c518-4177-43f7-a824-545d711cc1a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f491340c-fc0e-4f0d-b098-146ca35361f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50207d3c-3c21-4c3a-ad38-06d8272f5d9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc092cd0-881f-4a0d-ae96-241ab9aef738"
                    }
                  }
                ]
              },
              {
                "id": "2ace7d46-4bcd-4590-871b-0078892f1969",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dbfd066-c46e-4516-8c0a-fa6487aac532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c74b3d9-521c-4e29-ad14-2e8e32ef73f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ea92fc1-a867-4bec-9cb3-0317811a9602",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d8d1d93-7f28-4688-ba90-a691e2edc3e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b910869-9f1e-4886-9937-ec5a8a99cae0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3cfc72ef-6543-4ca0-85d8-c57ed14a2b47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d733ef1d-9519-472b-8284-1424c2f640c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a537e6c-5810-4082-a144-8ac376538929"
            }
          }
        ]
      },
      {
        "id": "e8802477-3597-47cd-8bc5-429d3508d886",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3a81f17e-bdba-4c53-ba98-da46a53d1d85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c355fd67-6dd7-4b92-8b55-1822733ab181",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "837456eb-12ab-46d3-b7c2-f1cc745edd33",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c04d09-1705-4699-b4de-ebe12e2b182f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "14e57bff-17b6-4075-abc0-4fd7c679d62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b9130-a4c1-4034-96a9-ccb1c910cda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e04f1e40-96dd-464d-abd5-5ca8b78bfb4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd6eb03a-cadc-424d-9ad6-e397926f4602",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0421382d-313f-48d5-81c6-961403017fec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2af3c398-a446-47a8-978e-077b69a7e680",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a661bb85-fc24-48f2-9ffe-dc222a9a13bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c72392a-470c-4e64-b4ee-c11da9e9dc29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2f3e6b4b-d045-4126-bb0f-ac356956fd29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9483a185-4aca-4935-8525-4c68833d62db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c0e36ae-2fb4-4453-9fea-91f6d3e13561"
            }
          }
        ]
      },
      {
        "id": "1350b399-848a-4d6f-b2f4-235c342bfbaf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9656be32-f8fc-4bcb-b639-94fb6c72d1ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fca94727-5eba-4cb8-8ebb-b5e97ba7e81d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1486816b-c38c-4484-90d8-23f62779bfe7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d6e1c3-3314-4a70-919b-fa3dc2bc5730",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f91e872-adf7-4177-93f8-41d9bea05fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd1f7aa-1330-4335-8258-6ff9dc55eb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84cfe395-edb2-4c79-b871-5bbcddd75705"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46aebfdf-2d35-4cd1-bb29-991ce3b65b68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5be770d-a985-4174-b562-362515592823"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4059ee28-e3c6-44c8-908b-d5481a6ae651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ddbdafb-48c5-4421-86ef-3fbce62e6748"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff098c4f-fee0-4366-b100-9f57ae0453fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd564263-2482-485d-a841-9295d159351c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ffa3b8d-d35f-4350-87f9-28bbf64ba1ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0925f55c-c769-4a47-b82d-6393863a3484"
            }
          }
        ]
      },
      {
        "id": "76c42bcb-c482-4ed4-bbea-e9640c8d8e1d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5ae17654-d9e7-4d90-b687-89c1ec30c86a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a5240b6-9430-42e6-bde1-1435c92b50c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b3b85bc-e6c5-4e71-81d5-2557b23eacc1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b016f69e-02b3-4a5c-8f65-4a520ab3552a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dfa89d1-1402-49e1-90bd-7b69a0655b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7384dd90-974f-4827-b409-a967919dee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1320096-0868-4583-8399-4cbbc3d8c459"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d34ba1fb-507f-41b6-a327-187f89650bb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4dad3d4-6f3d-4b68-9842-aad35279becf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d13a2fad-fba9-4d0c-a885-2e4a6711267e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac660a6a-26c2-4f24-a6d5-8b75bef96495"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b00df00-fbac-4591-baf7-3b992bb3a4be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7c5cb9b-4086-4e07-b6ee-7208710c7f64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5642a1d0-a458-458a-93cc-b1cc5dcea216",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8ec8b42-9996-437f-9c42-2b8eccde9ff0"
            }
          }
        ]
      },
      {
        "id": "900d9de3-503f-4067-8690-b12cd5faca19",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee38c0a1-5066-4036-b795-51810fb18dc1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10ab6517-245d-4411-93cd-2103993f886b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "47a2e3e6-9cfc-49a9-817d-cc556c26f144",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2d09904-2f7a-4d7f-8128-1c8bcd627e02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bb7cfc2-894e-44c2-8823-2c7012b13832",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 142.612676056338,
      "responseMin": 10,
      "responseMax": 6059,
      "responseSd": 498.2044499237483,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696206839750,
      "completed": 1696206891772
    },
    "executions": [
      {
        "id": "e8d18c3a-e50c-464a-8d21-a8af5482cd3f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e566eee3-6bba-48b9-a797-bff79610830f",
          "httpRequestId": "5b279847-e546-4864-9663-0e4d245c17dc"
        },
        "item": {
          "id": "e8d18c3a-e50c-464a-8d21-a8af5482cd3f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "56bf83c2-d5be-458d-bfb2-c6843119afd3",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "27e150fc-4a3f-42e2-97a6-dfacb06a4178",
        "cursor": {
          "ref": "caa8dc62-48e3-4849-bbc4-08feab98ca84",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7cbc7771-2b4a-406d-aa93-c1258a55b27f"
        },
        "item": {
          "id": "27e150fc-4a3f-42e2-97a6-dfacb06a4178",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "82202b2c-3703-48d1-a0b3-eb55a76374cf",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "caba80b8-c6cd-47cd-b382-fcb2dd8b7bb9",
        "cursor": {
          "ref": "43080c85-5149-4cdb-80df-6603684cdecf",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8b7913a0-a13a-49ac-b266-2a7e72b4966f"
        },
        "item": {
          "id": "caba80b8-c6cd-47cd-b382-fcb2dd8b7bb9",
          "name": "did_json"
        },
        "response": {
          "id": "09a93ee2-9546-47f5-bdc5-0eb71abccb1e",
          "status": "OK",
          "code": 200,
          "responseTime": 260,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dede4fa0-f18e-4f5c-9c25-bbb4119f5be7",
        "cursor": {
          "ref": "0a7f1dc9-1687-475f-95be-30e786b1b3c2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "61eb5eb9-68d6-46af-a4b6-d1808d25e3fe"
        },
        "item": {
          "id": "dede4fa0-f18e-4f5c-9c25-bbb4119f5be7",
          "name": "did:invalid"
        },
        "response": {
          "id": "90f42921-8e16-4b73-8b60-62063fa89cc8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1096,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dede4fa0-f18e-4f5c-9c25-bbb4119f5be7",
        "cursor": {
          "ref": "0a7f1dc9-1687-475f-95be-30e786b1b3c2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "61eb5eb9-68d6-46af-a4b6-d1808d25e3fe"
        },
        "item": {
          "id": "dede4fa0-f18e-4f5c-9c25-bbb4119f5be7",
          "name": "did:invalid"
        },
        "response": {
          "id": "90f42921-8e16-4b73-8b60-62063fa89cc8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1096,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b32c29-222c-4230-aaeb-5fed1379b432",
        "cursor": {
          "ref": "d7ca5196-848a-423d-b05f-11636628db79",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "398c5994-0633-4cec-8b5e-528648956f04"
        },
        "item": {
          "id": "b8b32c29-222c-4230-aaeb-5fed1379b432",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "86ae9806-1661-4150-9f94-ac88695755c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f132f033-60ce-4c3a-8dcf-7da86a502534",
        "cursor": {
          "ref": "6cc6f849-3385-47c8-8687-2e00f0a34df0",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4691ecc4-7096-4cc9-b61b-ebb184540258"
        },
        "item": {
          "id": "f132f033-60ce-4c3a-8dcf-7da86a502534",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8e3661f1-86f1-4c42-8eae-4625796812be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ab5257-bbdf-4199-b658-41cbd701deed",
        "cursor": {
          "ref": "18a9e1bd-3232-4f54-ad8f-14fe42fe8348",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4eb198c0-5a3e-4f9d-b705-2c70098f782b"
        },
        "item": {
          "id": "b9ab5257-bbdf-4199-b658-41cbd701deed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "148a4a2e-66d2-4b1f-bbd8-bb9b380a1626",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b26323-2afd-43b0-8c2b-35951a8595cd",
        "cursor": {
          "ref": "a571d86c-1104-460b-9d02-d426982a1b83",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4379bf44-227f-4cc3-a5a6-a2073fbca4e0"
        },
        "item": {
          "id": "99b26323-2afd-43b0-8c2b-35951a8595cd",
          "name": "identifiers"
        },
        "response": {
          "id": "a4826671-9d3d-49e5-a67a-1d1e0869e217",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc42e46e-42b0-47e4-a0e0-51a529d239bd",
        "cursor": {
          "ref": "e0faeb87-7651-41d3-8569-eb0d97c5ba29",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7e94c4fd-d460-4b87-8ffa-95f70d23d60d"
        },
        "item": {
          "id": "cc42e46e-42b0-47e4-a0e0-51a529d239bd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d37f217d-c410-4f91-ae3d-ca98a1c51726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ddba3c-379f-45cb-a163-700cca39d3f5",
        "cursor": {
          "ref": "0416a3f5-3084-44f5-9db8-c8a025f4928f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "15ade35b-86cf-4651-bc4f-4705428c0983"
        },
        "item": {
          "id": "83ddba3c-379f-45cb-a163-700cca39d3f5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8d02d0ee-c04c-4523-b701-eb1ecf75dd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c664c957-2cb2-4a66-bb19-a4f7ff421849",
        "cursor": {
          "ref": "b6d54f67-9d6c-40b8-a490-523924014d8d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "12439153-7884-413f-85dd-86e95419e1f4"
        },
        "item": {
          "id": "c664c957-2cb2-4a66-bb19-a4f7ff421849",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "339304bd-afa6-4033-94c1-e9aeae8f9b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e16280-5886-415a-a1dc-b8d65bc7c350",
        "cursor": {
          "ref": "37a56a52-c61e-4dc9-ab7b-9adb91dafaf1",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "60dbcb4e-8ba1-4475-991f-f2ad190da862"
        },
        "item": {
          "id": "36e16280-5886-415a-a1dc-b8d65bc7c350",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "60ec16da-535d-45c2-9404-d059ad31af3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acb215d-75e6-4853-a357-9b7dab281969",
        "cursor": {
          "ref": "ab8ad4bc-0103-4654-b2d8-8d90112da2e3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5ab5b336-3772-46dc-9064-5b7119c5aaf2"
        },
        "item": {
          "id": "4acb215d-75e6-4853-a357-9b7dab281969",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7b434cff-bdac-47c3-bce0-6c45a0015486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff52a96-4ef9-484a-963b-2c64a63a3149",
        "cursor": {
          "ref": "b8c5fa6c-3503-4f26-b4e5-a6333cca7b1c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f958b394-a052-4b21-aa9f-4097688f133e"
        },
        "item": {
          "id": "4ff52a96-4ef9-484a-963b-2c64a63a3149",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7813f7a6-73fd-4ebe-9f7a-530b09c0a62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e4a42e-fbbc-4c55-a6a1-ec78d972ab07",
        "cursor": {
          "ref": "819e765d-ab54-47c9-a28a-1f22f38918f5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a96cb9a2-23b1-48c6-b51e-fd7bdf53f21b"
        },
        "item": {
          "id": "26e4a42e-fbbc-4c55-a6a1-ec78d972ab07",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bec240ab-94d0-420d-9558-61be7b03ba6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa032b5-542d-4288-9422-8873fbe20c38",
        "cursor": {
          "ref": "ae068b61-81ff-46ec-a168-52a5d8276528",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7b645a69-db20-48fd-a11d-e38e8aa362ca"
        },
        "item": {
          "id": "2aa032b5-542d-4288-9422-8873fbe20c38",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0d71356f-ec23-4e1b-bf42-7fd82d0dd43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696b6b3a-1de5-4ad0-96e5-f28e6669fbbb",
        "cursor": {
          "ref": "8f9b9993-f516-4292-a879-1a391bf437a0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "923d09e4-62ea-40f9-8b92-562689e9bd9b"
        },
        "item": {
          "id": "696b6b3a-1de5-4ad0-96e5-f28e6669fbbb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b0ed338-13f0-47f8-a509-cd89da64bfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4602ac8a-2d87-424f-b2af-16c0bf212f37",
        "cursor": {
          "ref": "1c04ff15-999a-4cd1-b82e-b76de375fbf1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4d78a11c-6005-46ef-985d-59ff103a392d"
        },
        "item": {
          "id": "4602ac8a-2d87-424f-b2af-16c0bf212f37",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dea2ebd3-0a94-45b1-9584-1a8cd677958e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac35e1a4-df71-4fe3-80c8-e53e3fbcc0fd",
        "cursor": {
          "ref": "08123aa4-7d1b-408c-b429-91fdac4f4b70",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8061162d-37fb-43cb-8ec1-094d1a4db43a"
        },
        "item": {
          "id": "ac35e1a4-df71-4fe3-80c8-e53e3fbcc0fd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "24127ee7-4b32-4125-9a28-fedaccc5d53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea80dba-4c49-4651-81ad-87f72ef2e411",
        "cursor": {
          "ref": "513b92ac-33ff-494a-9f5a-545ceef535b3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "15fba979-e4ce-49ac-b3c6-68683676cf83"
        },
        "item": {
          "id": "7ea80dba-4c49-4651-81ad-87f72ef2e411",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2d0ce2dc-6e3c-458f-88fe-2f39f0d007a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c5323a-9781-494c-b185-e51a97654bbc",
        "cursor": {
          "ref": "b553e922-3281-4bf7-ae8d-d9edb1600889",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "39a3e461-439a-450c-9adb-0671fb806e46"
        },
        "item": {
          "id": "14c5323a-9781-494c-b185-e51a97654bbc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "32971c46-734b-4b0f-a672-5a289bfaa611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbc7bf9-021d-44cd-a84a-cc23b4f15246",
        "cursor": {
          "ref": "addb92d5-3061-4c6a-92e3-95ee59cb3bb8",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f3a6c28e-a7f9-48fd-899e-50dc36e2c743"
        },
        "item": {
          "id": "7fbc7bf9-021d-44cd-a84a-cc23b4f15246",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9cec8587-ea6f-4e33-b054-7a6d04fd45e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38eadb5a-e200-4933-a56a-d6226c10f638",
        "cursor": {
          "ref": "697a5b62-a6bb-45b6-9334-fcd7e7ede628",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "82f84e84-18dd-414f-814e-b47d480af01a"
        },
        "item": {
          "id": "38eadb5a-e200-4933-a56a-d6226c10f638",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aaa73e27-4de3-457c-8812-20f88c781256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7494507e-b92c-4978-bb1b-198976d90948",
        "cursor": {
          "ref": "c62a064c-a53a-46b6-b137-d858250445bc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "83a9565e-1d76-4a44-82ec-9888abc44fe2"
        },
        "item": {
          "id": "7494507e-b92c-4978-bb1b-198976d90948",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fa162adf-ea7f-4df3-a678-0f0837b37d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523a26bf-c31d-48a4-b3f4-7347a82ac7a7",
        "cursor": {
          "ref": "ddfc5a87-d1df-4eac-a706-1a6bd5cb2292",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "91238beb-f1bf-4474-aec3-0b186964accb"
        },
        "item": {
          "id": "523a26bf-c31d-48a4-b3f4-7347a82ac7a7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "506b33b9-677d-46be-bc67-6cacfea107a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959303cc-ab01-4362-892b-d25e81b6961e",
        "cursor": {
          "ref": "153bf9a8-a3f1-4efa-9fdc-73225cb3bbcf",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "72238fa4-1fd0-4e14-a003-e723f178f1d2"
        },
        "item": {
          "id": "959303cc-ab01-4362-892b-d25e81b6961e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ccecac95-11c8-49e6-b710-eeba5b846694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb38e992-4e75-4753-91b3-0a3b6a868f64",
        "cursor": {
          "ref": "d222cf35-6655-473d-a737-f635ba516da4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cb07358d-49e5-4ffb-8a72-a8d247a1d523"
        },
        "item": {
          "id": "eb38e992-4e75-4753-91b3-0a3b6a868f64",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "142610fe-b595-4ece-afae-96e6e18ebc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3831045d-109d-43a1-a666-b9619c7fbec2",
        "cursor": {
          "ref": "0c302e38-3e43-467e-a684-5c70be3f8ed4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "12bc79e0-eb2c-40c5-be43-4616fab70b52"
        },
        "item": {
          "id": "3831045d-109d-43a1-a666-b9619c7fbec2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a945e32d-a4a4-4d25-a322-98ef545f5385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a60bba-3182-43ee-8e0d-4dc376a20834",
        "cursor": {
          "ref": "cfd02e9c-022b-4e3d-8da2-01a89694fc1a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "66d599ee-87dc-4200-a208-36e11364a8eb"
        },
        "item": {
          "id": "47a60bba-3182-43ee-8e0d-4dc376a20834",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a374b36c-7095-40ae-8663-c2624836faa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854d537a-8daf-42d6-8d3f-5e182e8f702a",
        "cursor": {
          "ref": "e8f9e1e3-d594-4a30-9821-f4f4d718850b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97447e1b-e7ea-4397-98d2-426c4b35653c"
        },
        "item": {
          "id": "854d537a-8daf-42d6-8d3f-5e182e8f702a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0f5bded0-c20d-4014-a96e-af4bca19098b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dac52b7-b001-444b-bc15-8b25f50b9a1e",
        "cursor": {
          "ref": "bfa3d277-3f48-441b-86ec-9f827db57613",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "033abf76-b73b-4e09-ac32-3c13e6cdfbaf"
        },
        "item": {
          "id": "4dac52b7-b001-444b-bc15-8b25f50b9a1e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0ba7c1c0-6c87-4f4e-8093-4c45ba16cb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26bc430-77c6-45c9-bdc1-a8b448c279dd",
        "cursor": {
          "ref": "b7d323c0-21d8-4ec0-a695-a7cc12e368b6",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7e92bce9-3efc-4d69-88b6-eaa47e2a69ec"
        },
        "item": {
          "id": "c26bc430-77c6-45c9-bdc1-a8b448c279dd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c777cf1f-5a4d-4deb-a73d-d45405a061e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1775f2-5cf9-4d01-b9d9-b6752212c8dc",
        "cursor": {
          "ref": "e1f4afbd-fd89-4073-9be0-8d97d7b91e54",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5a9e7ae2-6af7-48c6-9e78-3835334cdeb9"
        },
        "item": {
          "id": "cf1775f2-5cf9-4d01-b9d9-b6752212c8dc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e8998d21-f1d7-49d1-a6eb-f2ae8796bf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcec2027-aa9e-4822-ab10-c5dfe781aa38",
        "cursor": {
          "ref": "8b147743-9c88-4725-9874-eb3b305b8881",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8eee147a-8fab-485f-8560-0abb79425349"
        },
        "item": {
          "id": "dcec2027-aa9e-4822-ab10-c5dfe781aa38",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "960608ac-7801-4729-ba1d-41d16c028716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f656936e-856b-4623-bb11-c9acabb3a7b3",
        "cursor": {
          "ref": "93b8c650-0220-4944-8e0d-18232a7066e4",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2af096bb-b85d-4fd5-9e5f-0ea82156c358"
        },
        "item": {
          "id": "f656936e-856b-4623-bb11-c9acabb3a7b3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "212868d3-24d3-4680-92e0-187d5f43f76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f32cee-a78e-4b9c-b127-0ad465abd2ab",
        "cursor": {
          "ref": "c3b02ff7-76a0-4e68-9089-9732009e23b4",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "50cc9dd7-d6bd-4a2c-8c79-ffb547db5e1e"
        },
        "item": {
          "id": "e6f32cee-a78e-4b9c-b127-0ad465abd2ab",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dff8a8ef-6976-48ce-866b-0d3b74986a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2e133-9738-4036-8abb-1f6923cafde8",
        "cursor": {
          "ref": "9b0b50a1-2ed5-4830-9e48-bb5593da0619",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d480ac26-e5a6-4b0f-8add-3d449aa88b57"
        },
        "item": {
          "id": "bea2e133-9738-4036-8abb-1f6923cafde8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bdd99737-2baf-4e28-a53b-0bbd5bda5429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e863a83-d115-4a7e-aded-651b96e157eb",
        "cursor": {
          "ref": "5b9e0d2e-2976-4e60-a9e8-41bb5abd8ec2",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "37bd5ebd-8b54-429d-bbda-492176312f08"
        },
        "item": {
          "id": "9e863a83-d115-4a7e-aded-651b96e157eb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5e88a639-234c-4798-8769-310917cf2c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73841d00-dcb6-4c86-8be8-9a658321e189",
        "cursor": {
          "ref": "1fb6c647-382f-49df-904f-6e607940655a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1ced62cb-3d0d-4eeb-9446-44f32c0f8869"
        },
        "item": {
          "id": "73841d00-dcb6-4c86-8be8-9a658321e189",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "34a3e331-2295-4c16-aeaf-2dfc21aaff97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65236bce-27f3-4a79-a209-76a7e61f06b5",
        "cursor": {
          "ref": "6cf12e3c-7dd3-473b-9974-83b8842fbbff",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1f95064b-3925-4343-bb94-ba02a7d6c6d5"
        },
        "item": {
          "id": "65236bce-27f3-4a79-a209-76a7e61f06b5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a55443fc-5292-4b86-a2ee-47593ff1c9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c7cdb-6a44-4c12-8141-406e79937e2f",
        "cursor": {
          "ref": "456f2ee8-04b9-464a-877e-5be4934ec94f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6cda2ef0-b168-49a0-bfbf-78f40b425040"
        },
        "item": {
          "id": "421c7cdb-6a44-4c12-8141-406e79937e2f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "99204e39-aab2-45af-9c84-b0492dbe9d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db23267-1315-469d-b7c3-086eea6646f6",
        "cursor": {
          "ref": "d8789e0d-a4cd-4e7a-8818-0106e1b407fb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "de6f5167-a585-42b9-9de1-3a38708a12bf"
        },
        "item": {
          "id": "3db23267-1315-469d-b7c3-086eea6646f6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fc2d3658-b397-48da-bee7-c3522013119d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ba3076-5247-4f51-928c-e9d1efaaefb4",
        "cursor": {
          "ref": "be5e20f9-1229-4c0e-87a0-8a185951a17b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6723497d-4fbe-4229-95d4-2208b1d28884"
        },
        "item": {
          "id": "02ba3076-5247-4f51-928c-e9d1efaaefb4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d9b350ae-b8cc-4a9c-8bb8-c0d5cf88f817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f7c0e-ffad-424f-93aa-60e39187705e",
        "cursor": {
          "ref": "f407ca7e-4f55-4b0f-be07-85eb4b5a603e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "698a99c5-3c07-4315-a381-a313a02aa195"
        },
        "item": {
          "id": "452f7c0e-ffad-424f-93aa-60e39187705e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b41dd29d-a4d5-4550-8cd8-fe2cf9476a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7908e49-5901-4a74-8b3a-bb8e49f79783",
        "cursor": {
          "ref": "67d425d6-282f-4b69-9ab9-c0e027c13d61",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "316a7d47-1c8d-444c-82c1-357c3ddf28a3"
        },
        "item": {
          "id": "f7908e49-5901-4a74-8b3a-bb8e49f79783",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f2cd7aec-ed97-4f7a-b6b0-6ebb8c0f3757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616e379a-6675-45b1-a9f4-d7db54a94aa1",
        "cursor": {
          "ref": "fe73058b-d2b2-4c09-82e1-27bbcb8ad5ae",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b9f60c70-d0fe-4454-b39f-a5409b1b758e"
        },
        "item": {
          "id": "616e379a-6675-45b1-a9f4-d7db54a94aa1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4a8751a4-b833-4668-8430-bb7922ad8483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d2f3c3-1c06-4f62-9ff7-f201e047bc3f",
        "cursor": {
          "ref": "b9182435-79e2-4882-b2a7-d4731c2eb80c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "204b1bef-f7bb-47d5-9fe6-2d3b72d8b325"
        },
        "item": {
          "id": "68d2f3c3-1c06-4f62-9ff7-f201e047bc3f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bb49c30b-8763-4e03-92e2-7c28b1f183c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef5eecc-15b5-4ff2-92c5-3bd2ac780de3",
        "cursor": {
          "ref": "dc9d91c9-6f16-4e9b-87fa-8fb6eaba06f1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d7fbfc50-bd23-4d1b-b54b-dcdedf3b0f34"
        },
        "item": {
          "id": "4ef5eecc-15b5-4ff2-92c5-3bd2ac780de3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9f99ffea-27ee-43b8-a368-341f98e34c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff19e0d5-b437-4a3d-a19d-9f39b07e6e91",
        "cursor": {
          "ref": "b53d278f-0454-4d1b-a040-3eb299f42714",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7a64abc2-b5e9-45e9-af83-e2849ab8840f"
        },
        "item": {
          "id": "ff19e0d5-b437-4a3d-a19d-9f39b07e6e91",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "db627ef2-a33d-417c-96db-25a245e4e457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c73d8-4743-485d-8e84-c47be4457e1a",
        "cursor": {
          "ref": "f8cdceb9-c6ba-4934-878a-0409ddf2e489",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "647085cc-0748-4635-84ee-6ddb090a1734"
        },
        "item": {
          "id": "6a5c73d8-4743-485d-8e84-c47be4457e1a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ff6da79e-a61c-4557-854a-fc57ae0b0553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba1ed47-7ec0-4da2-b951-d46467539792",
        "cursor": {
          "ref": "270102a5-3290-4ec3-b4f6-01ae1ea7f689",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f2f4bbc8-ba1d-49a5-8b64-6acdfcd00dab"
        },
        "item": {
          "id": "4ba1ed47-7ec0-4da2-b951-d46467539792",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3b17cf11-2566-4f6e-83e7-f41cc628be79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd922ec9-51d7-4a1b-bc63-b886fc758d8b",
        "cursor": {
          "ref": "c2acb674-c839-4c16-bd1c-90576bda2969",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c6be901f-21b6-40a8-9df5-3e1ef2a4bb38"
        },
        "item": {
          "id": "cd922ec9-51d7-4a1b-bc63-b886fc758d8b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ae28e3a7-cd86-4e13-8784-bb76093f9d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0111c02-316c-4255-8b33-4ae973f663be",
        "cursor": {
          "ref": "5a54d584-6390-4e64-983f-802dbe76e823",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "89a0a3ee-dbdd-4d15-95ef-5234d32835b3"
        },
        "item": {
          "id": "f0111c02-316c-4255-8b33-4ae973f663be",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7f6b6eb0-e461-489f-8140-0147dbd5757b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea32a89-d536-4f5d-a106-dad0dffd2c93",
        "cursor": {
          "ref": "95dce915-36b8-45d0-b81b-b59a082390c0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7cd6b2c8-1b3e-4ede-82e9-b95d86d4597a"
        },
        "item": {
          "id": "4ea32a89-d536-4f5d-a106-dad0dffd2c93",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f277860d-6bd4-4692-ad43-5f50e6d1b75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e4430a-8e7d-45ae-bee2-ede95d204ceb",
        "cursor": {
          "ref": "5aea8680-525d-430e-8f35-567d8f66c1bb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "026be5ef-875f-4fd7-8064-fb72f82aa640"
        },
        "item": {
          "id": "d7e4430a-8e7d-45ae-bee2-ede95d204ceb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f9c67ffa-0418-4771-859d-428f91c97191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5745ec78-c1ba-46db-8ffc-4fae7382970f",
        "cursor": {
          "ref": "a7872f35-ad46-4540-937c-795a539a04cd",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f2108f0c-bbca-4b1e-9da4-9747f59ce359"
        },
        "item": {
          "id": "5745ec78-c1ba-46db-8ffc-4fae7382970f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "34ef1949-8bab-41ec-8ca4-0716ecbde46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b38c8f-fcda-4306-9dba-89cce4ead8dc",
        "cursor": {
          "ref": "8c52c0c1-4690-4dff-93f1-987f60c63f5a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a9e4ddc2-a2ca-44f4-b19f-e55192d0d445"
        },
        "item": {
          "id": "27b38c8f-fcda-4306-9dba-89cce4ead8dc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2b0251d4-76fc-4d99-a72b-59e7ff1596ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfd0fbb-35b3-49c2-b093-a9395ac44240",
        "cursor": {
          "ref": "b62e7607-653e-4395-b5cf-1bd95e2d3464",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2dcdf3fe-5106-40cd-a515-a13ee0b6349c"
        },
        "item": {
          "id": "2bfd0fbb-35b3-49c2-b093-a9395ac44240",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a44f7f13-421b-4c76-a529-01d060269a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82639af4-cd7c-4153-9852-538aab62c064",
        "cursor": {
          "ref": "d1bdbd28-c542-4210-99ad-97874eb81950",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "56a59d90-5fad-417f-8ea0-bdf71cf3f39b"
        },
        "item": {
          "id": "82639af4-cd7c-4153-9852-538aab62c064",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a9572803-bfc9-4dd1-820e-7aca93b2c4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c67382-cede-45f1-b347-a453f5c52337",
        "cursor": {
          "ref": "709ccfca-47a0-43fd-94ed-a7d1e3d68ce2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c85084df-51ce-42c6-9729-19adfdbeeea4"
        },
        "item": {
          "id": "32c67382-cede-45f1-b347-a453f5c52337",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4c55fd3c-62c9-4259-8ba8-d4f833942d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe56706-783d-49e1-9cc9-3daee4ae04d4",
        "cursor": {
          "ref": "70efa85d-a7fd-4e88-b17c-527e438e939b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fc888211-6ef4-4f6e-8fdc-e6f4ff4c3b33"
        },
        "item": {
          "id": "dfe56706-783d-49e1-9cc9-3daee4ae04d4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9fd79061-e8dc-446c-8fd7-fcd721158f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1950c923-4335-42f9-8242-fe53745fb3f4",
        "cursor": {
          "ref": "e28aa255-2624-4f4d-8d01-9104272dd07a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a5ac29ed-722e-4b84-8417-acde472106c4"
        },
        "item": {
          "id": "1950c923-4335-42f9-8242-fe53745fb3f4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a391b52-236c-4bf8-a439-5a6be378ce0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad0f970-620d-4682-84dc-061b888ceb58",
        "cursor": {
          "ref": "1618cbab-9512-4a77-b32f-b19955f7aaaf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4eb309e0-3fea-4c8c-9d5e-6e827259f18b"
        },
        "item": {
          "id": "3ad0f970-620d-4682-84dc-061b888ceb58",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ded12a63-dcfe-4370-89b5-9ebeee183f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a693769-f3f0-47ad-876f-25569ab3a561",
        "cursor": {
          "ref": "7e8c52f5-ae6d-4fcd-b777-2267dcc57fb7",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "38cc97aa-4c59-4188-8c9c-375c2d3f08e7"
        },
        "item": {
          "id": "3a693769-f3f0-47ad-876f-25569ab3a561",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e642ef98-f293-442c-a918-f69195e235e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9396ad69-55bd-4115-945a-e9c109baf67d",
        "cursor": {
          "ref": "f53f8157-f7a9-4c37-b2da-fc350e8b8f3f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "06213e21-b00f-4e10-9cdd-a9fe9704a365"
        },
        "item": {
          "id": "9396ad69-55bd-4115-945a-e9c109baf67d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "82039a57-a86c-43d0-b509-20ec81be8359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78939413-3ba6-41c3-af0a-5913636c58bb",
        "cursor": {
          "ref": "3e9a3e77-6fbd-43ad-b0a8-51b1b8cadddc",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4a4fd24d-831f-4651-8af6-587393e39275"
        },
        "item": {
          "id": "78939413-3ba6-41c3-af0a-5913636c58bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "41ab8a6f-416d-4af4-89ac-63ff7f4efb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b420eb6-41e5-4035-9875-36b3f038539b",
        "cursor": {
          "ref": "5e1b78ac-3fd0-4917-a65d-e591dc9dca45",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0375b5b9-2a6f-49e6-8c95-9d66bcf867ac"
        },
        "item": {
          "id": "1b420eb6-41e5-4035-9875-36b3f038539b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c5bcb866-810e-4a58-824f-24134bd426a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f18cbbc-0711-4916-8005-017b91767df8",
        "cursor": {
          "ref": "ee4961df-9f61-4014-afdf-8b23c7027200",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5212c8c7-83fd-4c55-ae3e-af73246c7532"
        },
        "item": {
          "id": "7f18cbbc-0711-4916-8005-017b91767df8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e918f97d-62fa-4c0e-9c77-0dda6373883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deee2eb-9366-4d65-8c3f-198c0e0bfd8a",
        "cursor": {
          "ref": "cfc879e1-4caa-49ff-8629-b086efd8b1a9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bf3e0685-6f48-46dc-802f-085aaee05fdd"
        },
        "item": {
          "id": "5deee2eb-9366-4d65-8c3f-198c0e0bfd8a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1e04209a-4a7c-4e68-9be2-94383e43910c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0b7cb1-9a9d-4742-9625-5fa60a5d6c2b",
        "cursor": {
          "ref": "68a2deda-fdb5-4d68-8a1d-657f27b9a84e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d22e92c8-f7c3-4a34-9ad6-e8ea641130b6"
        },
        "item": {
          "id": "7d0b7cb1-9a9d-4742-9625-5fa60a5d6c2b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fd63e9d1-cc4e-4bf8-9321-07bce4913601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89e0160-b004-4ec2-aeb7-a06cc938be16",
        "cursor": {
          "ref": "1f8cac29-0e2e-49ce-bca9-6cb889f35eb3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c0458a39-cca9-4456-945a-230824603fbc"
        },
        "item": {
          "id": "b89e0160-b004-4ec2-aeb7-a06cc938be16",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9cd33e93-9ea5-48bd-afe5-8d04cebfb63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a859f2e3-a9f9-4fa6-b2bc-92a0452c6105",
        "cursor": {
          "ref": "67c7d567-e397-47ed-9b77-f972530a49be",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "33560d73-69be-4c6c-aeef-222c899e0a84"
        },
        "item": {
          "id": "a859f2e3-a9f9-4fa6-b2bc-92a0452c6105",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "131c4891-18ca-4109-a467-8a19a50f9674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98529ab-118b-4043-a1d1-0ef4f003785f",
        "cursor": {
          "ref": "84b6129a-8554-4517-9b8d-f8fe148d04ce",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "47457613-f432-43ac-bf4c-9494cd69af07"
        },
        "item": {
          "id": "e98529ab-118b-4043-a1d1-0ef4f003785f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0c0144d4-ae7a-4956-9493-d62adc4d5aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a7584a-e462-4fca-adc8-5888ab81bd9b",
        "cursor": {
          "ref": "24a41000-9307-4cea-a8b1-9068d9d1e176",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "449f538b-ce19-44c7-81ff-d636f2a9d80d"
        },
        "item": {
          "id": "89a7584a-e462-4fca-adc8-5888ab81bd9b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0dce35e7-7a0a-4d69-a6d2-a27a48d5d5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efab54b2-4a28-4a9b-8097-ddb8b2c0cd42",
        "cursor": {
          "ref": "569b04a9-ff59-4282-b75c-d9d782f2ca4b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4a90c201-c4d9-40db-adfe-4a0126978075"
        },
        "item": {
          "id": "efab54b2-4a28-4a9b-8097-ddb8b2c0cd42",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "703619b2-2ffd-4392-b5c9-f1cbb402ab23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff10fbd-1b4b-4a3c-9eb3-3cccde21a8d0",
        "cursor": {
          "ref": "326128f1-762d-4ba6-bb11-8c3419698902",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "203ab0ed-8e0d-4714-9fba-82c9e0bc2f9e"
        },
        "item": {
          "id": "fff10fbd-1b4b-4a3c-9eb3-3cccde21a8d0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "63e0a334-9277-4ce8-880e-9f812add5dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab5e54e-7dc7-4b6d-8b43-fdaf18d8c0d4",
        "cursor": {
          "ref": "aa274535-91f2-40b0-8390-bccabd671992",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9be01bb0-25b9-43d9-ba51-a1c61d39e74f"
        },
        "item": {
          "id": "5ab5e54e-7dc7-4b6d-8b43-fdaf18d8c0d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7ae6940e-8cae-4018-98e2-731dc9dd8bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919582db-6455-4e5a-b76d-f9c184227f0d",
        "cursor": {
          "ref": "210ef2fe-c964-4d3f-bd42-42b519c92d2a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "14da5f1e-a96e-430a-b696-90a5be4c68e6"
        },
        "item": {
          "id": "919582db-6455-4e5a-b76d-f9c184227f0d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "339cf383-d265-44ae-b6a1-a755d5804aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a92fa6-5f0b-4371-9251-1e31ef5f6c93",
        "cursor": {
          "ref": "b5edda5c-1718-4fc3-986e-9d145af47ae1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "886ec561-84f8-4322-93dc-7a282fb13aa4"
        },
        "item": {
          "id": "85a92fa6-5f0b-4371-9251-1e31ef5f6c93",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d86774bb-81a8-4d61-bdca-d14a934c2367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67453961-35db-44ea-8b4e-5defd0d3caf9",
        "cursor": {
          "ref": "69d2e87e-8aa1-417f-a5d1-c1958f4a66a9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f12ec28e-7e64-494d-9d9d-b78548756319"
        },
        "item": {
          "id": "67453961-35db-44ea-8b4e-5defd0d3caf9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "74f161bb-9637-479b-93b1-4b71b6a3d05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23de643-489c-4450-9516-9277b87bee14",
        "cursor": {
          "ref": "fe8bd9f9-b0c1-4943-8979-8fe6e311d949",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2bdeec9e-00f2-4059-ade6-dc1709ec362e"
        },
        "item": {
          "id": "b23de643-489c-4450-9516-9277b87bee14",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5fd21b3c-7078-4a4a-aa7d-49303ed88144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38117d0b-e73b-48b2-953f-fade1a9e762c",
        "cursor": {
          "ref": "92dd9caf-0bb9-4ef1-9fcc-04bd820dd0d5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "467352f7-fba3-40d5-a1d0-49193d94f0e8"
        },
        "item": {
          "id": "38117d0b-e73b-48b2-953f-fade1a9e762c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3e928d2e-4e85-4217-9ee7-f48e78867bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599d177c-1ae4-49f5-b6eb-fdeaf2f9f92a",
        "cursor": {
          "ref": "174100d1-e697-4463-a508-ec0d12e84e92",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "08f94822-f42b-479e-9bcd-f0c1e49c21c4"
        },
        "item": {
          "id": "599d177c-1ae4-49f5-b6eb-fdeaf2f9f92a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0c875e48-4468-4091-a89a-ed2e88f29dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b213d6-4b34-4272-8e11-2fe1658fc15e",
        "cursor": {
          "ref": "1966742f-fa10-4452-a0b1-54ad47f9f15f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c3e4937b-ac41-4f4e-b17d-8118d1c0f55f"
        },
        "item": {
          "id": "f3b213d6-4b34-4272-8e11-2fe1658fc15e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "efabf39e-1e5a-4e24-9740-688d1755e525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2f405-c70e-4305-acbf-e33ea264426e",
        "cursor": {
          "ref": "10fe9e66-949e-427d-869c-166e802c5915",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4421b846-ed54-4c80-86f4-a7473e0e9515"
        },
        "item": {
          "id": "09c2f405-c70e-4305-acbf-e33ea264426e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3d5eb0f7-64a6-4218-abd6-b4f2d27794c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f214ecf-c03f-4766-9576-df8e675056d1",
        "cursor": {
          "ref": "c9c02f5f-0fda-4517-91c1-84d6790ecd39",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5a300432-a5e5-4d79-bb28-7c6120c6eb37"
        },
        "item": {
          "id": "8f214ecf-c03f-4766-9576-df8e675056d1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "76e192dc-0900-45fd-81f3-21e54665bde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c5b6f9-4547-4d89-8f79-77bc492b4674",
        "cursor": {
          "ref": "95b7450c-04b5-4375-bdc3-62b4db789c4e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7c3920d5-18d1-4f09-8740-e4ef1dbac028"
        },
        "item": {
          "id": "69c5b6f9-4547-4d89-8f79-77bc492b4674",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e907267-a986-4ec5-a606-48cfbc37dfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2a3e99-3469-4951-830b-f9ba4169e400",
        "cursor": {
          "ref": "ac5ba642-1606-4c08-b6c4-0da8057b47bc",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ec01f17-4c21-4392-8395-923fd8e09746"
        },
        "item": {
          "id": "9c2a3e99-3469-4951-830b-f9ba4169e400",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "db576a8f-cbeb-4891-b1b4-a46153c9de01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90328baf-2e9b-42fd-a330-cfbf01cb6479",
        "cursor": {
          "ref": "463c943a-f2b5-43f4-b2ae-41212155a1e5",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5c311e38-e4a0-4047-820e-69b0eb87e1ee"
        },
        "item": {
          "id": "90328baf-2e9b-42fd-a330-cfbf01cb6479",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "efca71eb-5006-4b5f-ae48-73df5a284fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfcea69-69bb-4c62-981a-27fd2e6e342b",
        "cursor": {
          "ref": "bd602581-cad7-4795-9e61-8af9b013cd9a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fc372a7e-50f0-4d7f-8b17-3bc7cd04cf87"
        },
        "item": {
          "id": "bdfcea69-69bb-4c62-981a-27fd2e6e342b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f5221d50-cf11-4c77-a951-dab44f603a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01f1422-3bae-4d9e-9cd6-30321bd62e8b",
        "cursor": {
          "ref": "efa17050-606d-4151-a481-c188a7a39096",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "080fe525-e48f-4627-905e-7b99b986edcd"
        },
        "item": {
          "id": "d01f1422-3bae-4d9e-9cd6-30321bd62e8b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "988e795e-231c-40e9-835f-ce26056fe3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f877d4-22d8-4cbe-857a-ae19055b3d56",
        "cursor": {
          "ref": "3fc4fd36-197a-4ee1-ba8f-a1a7b666cb63",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4ec12e93-dd60-47df-985e-49490069f918"
        },
        "item": {
          "id": "00f877d4-22d8-4cbe-857a-ae19055b3d56",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e8817ee5-0f1f-4e53-9361-1a239a8ad552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9367ef8c-3f67-491b-b52c-08511f21ab7a",
        "cursor": {
          "ref": "c804838b-a484-428a-b977-cc27983f7407",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "445423c5-a87d-4458-95f9-016640446a8d"
        },
        "item": {
          "id": "9367ef8c-3f67-491b-b52c-08511f21ab7a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ed9b5781-16d4-4cde-b3bf-3094ef050438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a5e4e4-8ead-41ce-a665-8eb4188c9811",
        "cursor": {
          "ref": "a0597542-1e71-4f00-a4d3-4b17290a944a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cbb295bc-546d-4183-a546-5583a0c7fd85"
        },
        "item": {
          "id": "c8a5e4e4-8ead-41ce-a665-8eb4188c9811",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ce53410e-4c1d-47b1-ae64-32b4de64fb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a67f93e-afd1-492f-9c72-b59a7196524a",
        "cursor": {
          "ref": "89be61d8-c551-4158-8275-14da310b0b70",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "127ba594-8bd6-4da7-ac71-66b48db72415"
        },
        "item": {
          "id": "7a67f93e-afd1-492f-9c72-b59a7196524a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "df6280f1-c04e-46d8-be46-00f8b385fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d039f28d-2c16-4cf5-9a37-7f54914d6dc9",
        "cursor": {
          "ref": "6d71538a-3ef5-4c85-bc49-6cd07b872a6e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "482c3732-db61-440b-af3e-80f176bbfdd1"
        },
        "item": {
          "id": "d039f28d-2c16-4cf5-9a37-7f54914d6dc9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "297fc55d-299f-4908-99cb-c6e7348a7155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698526c2-f0e5-4f56-a4ea-d980dc0a6faf",
        "cursor": {
          "ref": "8a4a3e38-c8c4-4723-9907-92497bb798bc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "28b1662e-5ca8-4c90-ad10-45a85db43671"
        },
        "item": {
          "id": "698526c2-f0e5-4f56-a4ea-d980dc0a6faf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "725696c3-5af2-4754-9c87-fd21cb3033d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81e2a50-d17f-4e0d-8e50-678fe99d956a",
        "cursor": {
          "ref": "ad4671d5-040d-42b8-bb29-4369172fef32",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d6d99f5d-86e5-48ff-a520-614e1151f38d"
        },
        "item": {
          "id": "f81e2a50-d17f-4e0d-8e50-678fe99d956a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f46605cf-ef17-4cab-959c-2b86487d7a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62af14ce-054d-48ed-8559-ec5fbe9f824c",
        "cursor": {
          "ref": "b9c994da-133e-48e1-bb9a-28e55dbe6386",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2eaf02d4-15e2-4a71-9d43-4e5bdb50f458"
        },
        "item": {
          "id": "62af14ce-054d-48ed-8559-ec5fbe9f824c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "66f634c1-ae9f-4b7b-a0d3-c50e53086cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41548635-899b-4e43-b55f-f7e671e12ea1",
        "cursor": {
          "ref": "09454056-c73e-47da-84c1-d0c744d98429",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d6bc9826-dd44-4c34-897a-ef0d526be82b"
        },
        "item": {
          "id": "41548635-899b-4e43-b55f-f7e671e12ea1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4c17c4bc-8b0d-49c7-83e0-7380208db993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9bfb82-4745-4b3a-9105-c4bf77544078",
        "cursor": {
          "ref": "fbc5f0ad-7b40-4261-8517-57836989d698",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "10b82355-ef66-423a-ab1d-c3a5dcf7d6db"
        },
        "item": {
          "id": "5c9bfb82-4745-4b3a-9105-c4bf77544078",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7043c7fb-0c72-4c3c-bfd4-3fca88c51a92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfadbbd3-2ac0-4f7a-917a-15c171da0ba5",
        "cursor": {
          "ref": "d025b146-4226-4bdb-a2bd-499a89dfbda5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "868c95b2-37e8-427e-b942-d77b0e085db5"
        },
        "item": {
          "id": "cfadbbd3-2ac0-4f7a-917a-15c171da0ba5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1e5fc588-0277-4910-94b0-3dac7a77c45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "e02a56b6-fc10-458f-aabb-431aea1fa905",
        "cursor": {
          "ref": "74e70c67-2c39-4243-a8fa-f7f90e35375c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6faaf0e7-9006-4218-bdad-d7ce7df63974"
        },
        "item": {
          "id": "e02a56b6-fc10-458f-aabb-431aea1fa905",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b4ef041f-3aa5-49ee-aa0b-af306a343395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "21426dc1-701b-4b1b-96bb-d01529155ab1",
        "cursor": {
          "ref": "8e36ca3c-2d42-4745-b100-1641e27d7f5b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9fade0b8-f604-4ddb-bb87-1c0c378f2cf2"
        },
        "item": {
          "id": "21426dc1-701b-4b1b-96bb-d01529155ab1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e6b537e-c801-40f2-9c31-a7cd9103776b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d2e423a5-f503-4719-912c-aa9ca6c815cc",
        "cursor": {
          "ref": "2a6402dc-de93-4511-b109-545276c294c7",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5a885d5f-4875-4bd8-b4ce-be09828a9776"
        },
        "item": {
          "id": "d2e423a5-f503-4719-912c-aa9ca6c815cc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "315e060f-621f-44fe-9ec0-aa1130707711",
          "status": "Created",
          "code": 201,
          "responseTime": 6059,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7995d3e-1045-4716-b748-947a3102ad6d",
        "cursor": {
          "ref": "48e82520-7cd5-45a9-bbfc-aba5bf7705d4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e048d185-5cc5-4ee7-b355-bc9b09c7eb14"
        },
        "item": {
          "id": "a7995d3e-1045-4716-b748-947a3102ad6d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "15d81f50-926e-49ac-9439-4bb08a0c8f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4fcfb7c2-20cc-4881-8ea8-3d99d0a65618",
        "cursor": {
          "ref": "25128277-0add-4cd6-8534-a91c457243a2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cab490d1-ade7-4221-84b9-5091cc3943f8"
        },
        "item": {
          "id": "4fcfb7c2-20cc-4881-8ea8-3d99d0a65618",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "15aad285-60e4-4299-a7bc-cfdcf37263e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f7c560de-e5dd-4bec-85e1-bcd48f70d7f3",
        "cursor": {
          "ref": "767d7163-9e7d-45fe-99c9-c799d540e8a0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bece7b56-d49d-49f5-8aa9-c87b81f74ff8"
        },
        "item": {
          "id": "f7c560de-e5dd-4bec-85e1-bcd48f70d7f3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "03c4bf0f-4a95-46ee-bc2a-b559e27da5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89156d5-94a5-4d13-ae3b-36136728c09c",
        "cursor": {
          "ref": "75bdb014-d698-4a5d-87d9-3baf5a447b23",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f0545db0-6e69-4079-8a2f-83362226e110"
        },
        "item": {
          "id": "b89156d5-94a5-4d13-ae3b-36136728c09c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "30ee0fc4-f909-42ca-bef8-224c110ae188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7919ec-a3ce-49d3-a7a9-28f5721cc3d0",
        "cursor": {
          "ref": "d68997ac-790d-4637-86dd-2e57d94eee91",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "33e4d65c-f295-4658-9282-f052626f2c2c"
        },
        "item": {
          "id": "5a7919ec-a3ce-49d3-a7a9-28f5721cc3d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a532fa27-b3d3-47f4-8673-50720e558712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b82c6ef-df9d-452a-a9b3-9891f1e8b6b8",
        "cursor": {
          "ref": "09bb45a9-1006-418c-b0f0-0163afc27023",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c6e5707a-1726-400a-805d-a54c35e5ae8e"
        },
        "item": {
          "id": "7b82c6ef-df9d-452a-a9b3-9891f1e8b6b8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc29cf22-f6a3-421c-9a63-bcbfad58259f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd691cd-26ac-42dc-b8c1-ecf1af6613ef",
        "cursor": {
          "ref": "2575a9f7-a26b-4688-aa73-7af1f6d4b8dd",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a6030c75-8692-4d2c-9ad1-46e9aec90775"
        },
        "item": {
          "id": "bfd691cd-26ac-42dc-b8c1-ecf1af6613ef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a8f2d23a-f506-49bf-82ea-ff141ced5ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a758d6-f9b0-4d71-b0a5-fbb436aeebcc",
        "cursor": {
          "ref": "8a562ca3-bf7d-4689-b14b-4f5da87fd335",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "eb991773-1769-47a1-8048-288e8ee0e0ae"
        },
        "item": {
          "id": "c9a758d6-f9b0-4d71-b0a5-fbb436aeebcc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b6d5a802-e93f-48e6-914e-db60195db7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8f186a-477f-4d81-b895-920e7946d772",
        "cursor": {
          "ref": "61bf2008-433c-4e41-a1c7-fd3fdad99e17",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3b3f3584-037e-4fad-ad9f-de553f838016"
        },
        "item": {
          "id": "cc8f186a-477f-4d81-b895-920e7946d772",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4ca1497-d6ac-4fb0-b8fc-f0efa36a47e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2db2ad-c290-4ffc-9fa8-8becb5d5a9ac",
        "cursor": {
          "ref": "16d0dad3-037a-4000-84fe-bd4d983f8daf",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7d36a562-ebaf-47fb-8a25-a53a49009cc0"
        },
        "item": {
          "id": "7d2db2ad-c290-4ffc-9fa8-8becb5d5a9ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c4ece2c1-9628-4a16-a610-431ee9098c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28678c9e-d8d4-46f2-b359-4b338b834e81",
        "cursor": {
          "ref": "e31df886-b018-4b54-8d28-78065bcf5385",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5f875c1f-0981-49ab-b8b3-7e7fc35b41c6"
        },
        "item": {
          "id": "28678c9e-d8d4-46f2-b359-4b338b834e81",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "50b0c626-6b18-44ae-8ece-3e9bfadcb260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06a52c2-76e4-4248-8d07-2b0d9b4a3ade",
        "cursor": {
          "ref": "bd11d60a-5179-4d53-afc4-2412945dfde0",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c79fde75-94a8-4410-982d-b172b8f23dd7"
        },
        "item": {
          "id": "f06a52c2-76e4-4248-8d07-2b0d9b4a3ade",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "44dc7b3a-e9a4-4b8c-ae01-8f7f55eb1d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f8c898-ad67-4659-a66a-05a62e780260",
        "cursor": {
          "ref": "93272da4-eea6-4b54-b694-df509a385607",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cc0df074-fb96-479f-83eb-715c8a52e449"
        },
        "item": {
          "id": "a2f8c898-ad67-4659-a66a-05a62e780260",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ee4fa763-bd39-4926-a9f8-931bbcdb60c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf33d6fe-78c8-49bf-bc70-b58eb4529e93",
        "cursor": {
          "ref": "8b608477-520b-469d-9d1b-046dc1f8cb77",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7111c9fd-45a7-4218-ad9f-76533b01b2b8"
        },
        "item": {
          "id": "cf33d6fe-78c8-49bf-bc70-b58eb4529e93",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "63c41ab8-fb7f-4c17-a5f7-776df6ef7fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d75b59-a761-43e0-aa59-6056ac419378",
        "cursor": {
          "ref": "62db42d0-094c-449b-85de-fa5dd1d4bc1c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5f1c26c3-8a9a-4b24-b157-cc74aec729ec"
        },
        "item": {
          "id": "c3d75b59-a761-43e0-aa59-6056ac419378",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc3bf998-de35-4bcd-a42b-b370c72e9f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffdebbe-7e3a-4b45-a559-391207e4a506",
        "cursor": {
          "ref": "30589f9a-950e-4b80-8d30-375143d35417",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ab012e98-0e8d-4218-aed7-b907068e0f41"
        },
        "item": {
          "id": "5ffdebbe-7e3a-4b45-a559-391207e4a506",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "819f4be9-3d61-453f-8083-de4ae9ecf10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733eba85-be66-420b-97e3-e89af3966b55",
        "cursor": {
          "ref": "c9256026-a67a-437a-b895-07daad5969ef",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b30e36ab-ce28-4c0d-8b2c-3b81be702a54"
        },
        "item": {
          "id": "733eba85-be66-420b-97e3-e89af3966b55",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "089b2d59-96f6-49af-88b8-97293b81b4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd78a88-2cf8-4aee-bd79-4e7bfa5c66c2",
        "cursor": {
          "ref": "93f7ed41-a235-4c37-8e26-872d02160063",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ef1e993b-1374-45c1-b23f-f21ba9b5fbcc"
        },
        "item": {
          "id": "cdd78a88-2cf8-4aee-bd79-4e7bfa5c66c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8c395d6e-1eca-4536-81c4-4db1ac82b05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97d2899-26fd-4b1c-b75f-a81a5705bf09",
        "cursor": {
          "ref": "96ed9340-99ee-4752-8065-2560b358ac62",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1a4cc32a-adf1-49a2-8d57-6065c1b6fb3d"
        },
        "item": {
          "id": "c97d2899-26fd-4b1c-b75f-a81a5705bf09",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7e74021d-df68-4ba7-a294-32792a781ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52719d1-36be-48f7-9696-343a0127e9c7",
        "cursor": {
          "ref": "e63fb28c-b2b4-4623-8b7b-354724626941",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9e756134-f260-4295-a8f8-9c69b2e61ed2"
        },
        "item": {
          "id": "d52719d1-36be-48f7-9696-343a0127e9c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2cd5543e-c4d0-4d4e-915a-502980482a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38212657-1dfe-4df6-aa68-bf216cb4ad96",
        "cursor": {
          "ref": "84fd9afb-8f16-4d06-896a-413b1ef612b0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4a2f35cd-b9a8-42c6-9ac6-e80474f63616"
        },
        "item": {
          "id": "38212657-1dfe-4df6-aa68-bf216cb4ad96",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e455eb8-3140-4e9b-825c-045c45abc195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b8076c-5614-4dfb-8a3a-b9a846c8b89c",
        "cursor": {
          "ref": "9ed627fb-753d-4c55-95a7-a8c0ec56227b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2f250030-a574-4823-af38-565c56c93784"
        },
        "item": {
          "id": "20b8076c-5614-4dfb-8a3a-b9a846c8b89c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1572b51c-f825-4433-b57c-903a20c1c2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27655df9-2663-40ff-a4e1-d6a0e1268e5f",
        "cursor": {
          "ref": "d9ab85f4-2705-457c-b1bb-f207e8b0939f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1af6c7cd-52f1-4905-921f-d6b57099668b"
        },
        "item": {
          "id": "27655df9-2663-40ff-a4e1-d6a0e1268e5f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "72598aa0-4dfb-4caf-a9f1-d1f9ba31b9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68855c6-9fe2-405e-95ae-1696d22c01e5",
        "cursor": {
          "ref": "ca2bab4d-6a80-498a-8c17-231ebbe28086",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a5c74756-d1e3-4cab-bbcb-912b5bee6ad1"
        },
        "item": {
          "id": "f68855c6-9fe2-405e-95ae-1696d22c01e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "815a2061-8389-43b6-bc24-4fabd5eefd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb12ebe7-ffc1-4ddf-911a-ef03974e92ce",
        "cursor": {
          "ref": "e98a11f4-b6fd-4a4c-82e1-b0e13b78a855",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3e86f67d-5c62-4cc7-b4f0-b3ae9f5d5c15"
        },
        "item": {
          "id": "bb12ebe7-ffc1-4ddf-911a-ef03974e92ce",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddd6de19-a0c1-480b-a9cc-58946d9327aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eec9086-e136-4944-bef6-e93a54a0f067",
        "cursor": {
          "ref": "acca377c-96ac-4ba8-82af-0be19df653fa",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7d67c2a9-7a3f-49ce-b135-6558135ba600"
        },
        "item": {
          "id": "2eec9086-e136-4944-bef6-e93a54a0f067",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a1958fc-637f-4f6d-a9d4-3ad46980cb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c638ae9-68a9-4e41-be01-2f6415e16855",
        "cursor": {
          "ref": "87533771-b4e5-4a17-8be2-e13d1e62acc1",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "14fee0ee-af6c-4580-82b0-3b9306258d6d"
        },
        "item": {
          "id": "6c638ae9-68a9-4e41-be01-2f6415e16855",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c455d6dd-0136-4a63-9d9c-f746c24d3c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95cdec0-7dd4-450c-9c65-87b25ee7940f",
        "cursor": {
          "ref": "d92eeb30-a7a0-4611-854e-75b1356472c0",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "35e1cdb6-3ae4-4052-96f8-b12f13c03ba3"
        },
        "item": {
          "id": "e95cdec0-7dd4-450c-9c65-87b25ee7940f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "82b57fac-fe94-4e4c-8c0c-537827916057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411788f0-f5d1-495f-b9b9-03913b862dda",
        "cursor": {
          "ref": "fc57257f-d001-428f-8a1f-4329448807a0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "21d28055-d551-46bb-9e8f-0b8cf0d677fc"
        },
        "item": {
          "id": "411788f0-f5d1-495f-b9b9-03913b862dda",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a078f1b2-e12d-456a-9fee-50cd4f76194a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4657424-45b0-40a8-aca0-f83821226543",
        "cursor": {
          "ref": "70dbe67f-2660-4662-9056-eac6a3172018",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1e1e7004-87ec-4ab3-8cd0-4ef9f7cebda0"
        },
        "item": {
          "id": "d4657424-45b0-40a8-aca0-f83821226543",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d9391266-9c02-46ee-9f8c-9b668ea64580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7a1cce-fd13-4438-a608-bd97d0c1843f",
        "cursor": {
          "ref": "5c932f32-6244-414a-ad8b-ba7e887cd596",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ad4bcfdf-e712-4c96-9042-0f6cdd3cdf25"
        },
        "item": {
          "id": "3e7a1cce-fd13-4438-a608-bd97d0c1843f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "13c8651c-a984-4e98-bc83-0cc3f609ea62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c094501b-9c1c-44bc-b88e-c488a18d43f2",
        "cursor": {
          "ref": "b10cdd49-40e2-4053-b06a-96dbce9c247c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0a3ca605-f493-4d00-9043-8f5ce8c5cb59"
        },
        "item": {
          "id": "c094501b-9c1c-44bc-b88e-c488a18d43f2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "45cb08b7-594d-47dd-8f1f-98385ed6887e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd8ad3a-30fb-44bc-ac22-a902cf784ad1",
        "cursor": {
          "ref": "62793271-f2d6-4fd4-83f6-64b4969cc6ee",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bda3cfa2-815f-4548-ba3a-27f2f13a3e7f"
        },
        "item": {
          "id": "1bd8ad3a-30fb-44bc-ac22-a902cf784ad1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e12c8a7a-d631-4fb3-a2ef-dc4df92ddee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf1e5f4-5779-49db-813a-21ed407068ee",
        "cursor": {
          "ref": "c2742728-5936-4ac6-a176-f8c5b68dbfe8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9e91bd44-9acb-4f23-9029-6ac669e52516"
        },
        "item": {
          "id": "adf1e5f4-5779-49db-813a-21ed407068ee",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cfe437c2-1aaa-4d58-8e64-b879425a722e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8115a8-3bde-49f3-829f-fb8c97de2950",
        "cursor": {
          "ref": "f18f5eb9-7993-4bd1-b502-55c6369977aa",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "21827e0d-f33c-4c1e-9539-0969955c23fa"
        },
        "item": {
          "id": "7f8115a8-3bde-49f3-829f-fb8c97de2950",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1342f5c9-ef45-41a6-ab3e-6d7bf849b4c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064c4c01-ef70-4f27-9d56-2069a2b00a19",
        "cursor": {
          "ref": "830bb154-2fa6-4cfe-be32-34c43990e0fe",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5d41e638-728d-4dca-a172-e141be731b1d"
        },
        "item": {
          "id": "064c4c01-ef70-4f27-9d56-2069a2b00a19",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f69c7a4-299f-4d55-b8ab-c1c70bd85b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e987f8b-17fd-49ce-a4c8-02e4f64004d8",
        "cursor": {
          "ref": "9fc800b8-33ff-4784-9815-e1e43383aaf6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "23ca40ab-2af5-4226-8a63-c04d2e0388fb"
        },
        "item": {
          "id": "6e987f8b-17fd-49ce-a4c8-02e4f64004d8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "91e1d81f-21fb-49dc-96f6-54713bb492a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741e2612-1018-4f95-ac1d-96c93cae8d84",
        "cursor": {
          "ref": "9f5e7a44-f40b-43cb-99c9-a8ca83f3fce1",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b4fd9c59-0e49-4541-bbef-4166c3b8a90c"
        },
        "item": {
          "id": "741e2612-1018-4f95-ac1d-96c93cae8d84",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1d148691-b4ff-4e9b-a835-883ac5be9381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4126685-1cb3-4c6c-ad3d-b98a5b5401de",
        "cursor": {
          "ref": "0c9720b3-52c4-4544-a0ca-6afa7ae0095a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "618550db-e984-444c-b5d5-8cf77476c854"
        },
        "item": {
          "id": "d4126685-1cb3-4c6c-ad3d-b98a5b5401de",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "17060f60-e7c0-453f-b210-dfa2ae8fd7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9f0940-de26-4194-bd6e-28e45eaf8fc5",
        "cursor": {
          "ref": "87f18bec-6655-4314-b4e6-f5ff400caae4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bde4038a-71ab-4736-8b7b-9843dc4da6ad"
        },
        "item": {
          "id": "4e9f0940-de26-4194-bd6e-28e45eaf8fc5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68439fd7-dbf2-4a0e-a402-4ac18595fb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66847547-d3ca-42f3-b0fe-2bf438ab62b4",
        "cursor": {
          "ref": "e7ba5b3e-24f9-48d3-84c7-57f42e1049ae",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "42f3519b-1695-41ba-b3eb-86b971354763"
        },
        "item": {
          "id": "66847547-d3ca-42f3-b0fe-2bf438ab62b4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "521a33b9-e2f3-42b4-9331-34b81618c095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4268849b-3f13-46cd-865d-870fa090ddc5",
        "cursor": {
          "ref": "f478dd43-90c8-40d0-a5e9-a2cd82635c77",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "40392f80-4722-4f4a-ada3-b1fef09e7918"
        },
        "item": {
          "id": "4268849b-3f13-46cd-865d-870fa090ddc5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5285247a-99f4-4d73-bc4e-a8d0bc253ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf9c36a-79ab-4f2c-b623-b1f809f6c5f9",
        "cursor": {
          "ref": "71ce56c5-0fa6-4e16-afe7-abe30e792e4f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cac4a14c-13ed-4f9d-8846-000b01a5f4b3"
        },
        "item": {
          "id": "ebf9c36a-79ab-4f2c-b623-b1f809f6c5f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c6262b2c-1687-4638-aeed-9e191cee6fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168de3d8-4fcd-4ffa-94e4-c3237299bcf1",
        "cursor": {
          "ref": "03590e7d-ca3a-454f-a145-d56aa68e83fc",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7fdec2bb-44fc-478d-905b-71155fae118a"
        },
        "item": {
          "id": "168de3d8-4fcd-4ffa-94e4-c3237299bcf1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3782893d-339f-4d61-ae80-fdcc6defe205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d5ea6d-9d2f-40fe-a6f5-33aaa04b5787",
        "cursor": {
          "ref": "49bd7f87-31c6-4866-ba86-b1910304275c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0aeb4cb9-8f0a-41f2-8c65-75bef0f7331d"
        },
        "item": {
          "id": "b3d5ea6d-9d2f-40fe-a6f5-33aaa04b5787",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "077a066e-fe0d-4784-8a0d-fc4a05ddd44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bc5f84-aa04-4836-91da-1f6b82c1b08a",
        "cursor": {
          "ref": "5c299ecb-5ccc-4dc9-ad0d-1f3b5c8ef8e4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "12849a0f-98d2-48d4-a825-b6c335c35edf"
        },
        "item": {
          "id": "87bc5f84-aa04-4836-91da-1f6b82c1b08a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c492136a-f451-4686-a88b-9adc9d1c0681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885ee8a5-4b92-4bab-9447-544e295bfd8f",
        "cursor": {
          "ref": "268f56e3-b14a-4e8f-b6c5-55def7f713a9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "66988e7c-baa5-4750-8425-a3d88473c41d"
        },
        "item": {
          "id": "885ee8a5-4b92-4bab-9447-544e295bfd8f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0a31895c-6093-4dbb-a3f8-06fee1690140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597dfb00-1d18-473e-ba3a-2d7007ec3e1f",
        "cursor": {
          "ref": "c772223f-b99b-45ed-9a54-4481e748094a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8a1f5472-d234-45e7-8b31-e7e07fad4982"
        },
        "item": {
          "id": "597dfb00-1d18-473e-ba3a-2d7007ec3e1f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b87eca83-4e02-4767-a5e6-db63e5bd820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bffc65-4ef4-4085-9f8e-dd1b586c6e6f",
        "cursor": {
          "ref": "caaf6bd1-0aa3-4ca1-9379-96246a36c4b1",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "322974be-1d48-4eeb-b83a-3779271a3244"
        },
        "item": {
          "id": "92bffc65-4ef4-4085-9f8e-dd1b586c6e6f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ad2656e9-8e06-491d-bbff-3679b969f096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec8e207-b5cf-41a9-8fc7-ad62c89a2497",
        "cursor": {
          "ref": "74869698-56d9-407b-80a6-b5c820f83d15",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c8e6b00d-77d5-4b1f-abf9-138ed0132fb3"
        },
        "item": {
          "id": "4ec8e207-b5cf-41a9-8fc7-ad62c89a2497",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "71318e87-64b1-4fda-a751-913619e29376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea248b5-b8e0-4796-a766-307d94ee1de7",
        "cursor": {
          "ref": "795db4a4-8993-424d-8073-8abeedef63f6",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1afcabca-b53f-4889-97a7-9b2eac9347f4"
        },
        "item": {
          "id": "4ea248b5-b8e0-4796-a766-307d94ee1de7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8cf9a268-c1de-41da-972f-1026d1fe353d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2d5384-28ab-4c70-b989-6bf62b30a352",
        "cursor": {
          "ref": "afc0d31b-a29b-4c47-bdb3-67055c293ecd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7118e593-0a4d-4d45-b8e0-e37a52174518"
        },
        "item": {
          "id": "bc2d5384-28ab-4c70-b989-6bf62b30a352",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8f1c4fcc-edff-49e9-8b8e-a73b9bde88ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432f79fe-cd37-4c93-ab01-bb9eb495895c",
        "cursor": {
          "ref": "6a6df6e0-b296-4d4e-bbf8-9bbf09383b8e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b06867e-7691-4467-8af2-8fbffd939fb5"
        },
        "item": {
          "id": "432f79fe-cd37-4c93-ab01-bb9eb495895c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6f90a5cd-9124-4bdd-b377-32266d808129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb23a622-3ec1-4665-9603-51721a393d60",
        "cursor": {
          "ref": "dbfc780e-cfbf-4231-8af3-de4465bd0faa",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7cdbd4c1-f715-4d3d-988d-9204fab8f7b8"
        },
        "item": {
          "id": "fb23a622-3ec1-4665-9603-51721a393d60",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07654d94-4832-4c73-8037-633e6558f1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3978be-7367-4a44-99ae-030d3bb593bc",
        "cursor": {
          "ref": "b699f5b6-8201-47d5-9e68-ec9c06d35153",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9d907179-234d-439e-87a5-5bab5ade5b12"
        },
        "item": {
          "id": "de3978be-7367-4a44-99ae-030d3bb593bc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d03031c-83fc-40d2-a5f5-7f5f1f64465e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cfd0c0-fe32-4f78-851d-b961ad21e92b",
        "cursor": {
          "ref": "e467d3b7-6321-4e2d-a129-1b72d1c6b976",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aa8a37c5-b082-4c4e-9e00-cc9966327a25"
        },
        "item": {
          "id": "61cfd0c0-fe32-4f78-851d-b961ad21e92b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eca3f11d-8b70-4587-8182-fc2a1bd51468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2da629-89fe-4880-a1f2-479ebe24d65a",
        "cursor": {
          "ref": "2b58a0b3-6522-4425-9b52-76ebcb42e463",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1a1afa10-7798-4b02-96d7-45564bd164e8"
        },
        "item": {
          "id": "6d2da629-89fe-4880-a1f2-479ebe24d65a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7269177e-ac0b-491f-8687-6cb6710ab4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52855deb-89c5-4fe7-8dd1-253cda6fca33",
        "cursor": {
          "ref": "ba6306dd-a324-4b43-b108-a57d760f29cd",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e55f88dc-03c4-4d4d-95c5-22941cb0f969"
        },
        "item": {
          "id": "52855deb-89c5-4fe7-8dd1-253cda6fca33",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "efa7bb9a-9a43-400d-8d91-0eb3866aeaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434379d4-f8c3-4380-8942-7725c814f913",
        "cursor": {
          "ref": "80f63581-9095-43d7-875a-dc29c0132c34",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "59413c1f-6e62-4589-9406-eaba8c1738dc"
        },
        "item": {
          "id": "434379d4-f8c3-4380-8942-7725c814f913",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d7f0a57-f92b-4544-bd25-829c254b2bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ab2c35-6077-4003-86a8-032dad87e3d8",
        "cursor": {
          "ref": "f91d628e-269a-403e-b6e0-f0212ebae366",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ed1c8b40-eb9e-4fad-a406-64808fbbff1a"
        },
        "item": {
          "id": "b7ab2c35-6077-4003-86a8-032dad87e3d8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "57fc1c67-93f9-44a9-80df-70a799e0dfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522dfeae-20da-48ab-9b9d-2c208c73730c",
        "cursor": {
          "ref": "0ef9cef0-b678-430e-b51b-da9775d2f43f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "85850dd6-9889-44ea-9c9b-ac610ad74df3"
        },
        "item": {
          "id": "522dfeae-20da-48ab-9b9d-2c208c73730c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ffcf2e1f-8980-496f-baa2-5acf1d9b59c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f39c8f2-53f7-4863-9e69-e5a012902272",
        "cursor": {
          "ref": "838e309b-bd24-45f3-a271-9d489bb07cf6",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9c70871c-be4f-4ebd-80cb-c94683d6a734"
        },
        "item": {
          "id": "6f39c8f2-53f7-4863-9e69-e5a012902272",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e69cfa5f-1119-4fa1-b4c5-69d41ecda496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e78b34-c079-4281-8353-26c22c400921",
        "cursor": {
          "ref": "8b8dd644-a1b9-4e93-925e-fefd1a4aadb2",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "598b2da2-fa3e-478f-a020-d35f6350f272"
        },
        "item": {
          "id": "88e78b34-c079-4281-8353-26c22c400921",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8427c581-1a85-4211-b7f6-d377f2853c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3495d9c4-8638-4abe-a25c-2f5accbb43ad",
        "cursor": {
          "ref": "dbebb0b1-46e4-4d2b-a40e-9862c17322e0",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "21a35cc5-b952-45d6-998c-bb8bd35b4270"
        },
        "item": {
          "id": "3495d9c4-8638-4abe-a25c-2f5accbb43ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "67b02fbf-c6c8-4837-a775-cfcf5031980f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab07f38-e451-4e39-b2ee-9f070b6504f4",
        "cursor": {
          "ref": "a210cf48-0223-403c-9b62-e9e874caa45a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "94be6f75-e301-494b-9a1e-0d5e5958444d"
        },
        "item": {
          "id": "2ab07f38-e451-4e39-b2ee-9f070b6504f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2537c24a-1608-4342-aa8b-fd75e1cbffcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e57f87-bf95-4b5d-bf13-f870c7ef0f78",
        "cursor": {
          "ref": "0c2de0bc-2c10-4206-bd6b-cd656294a997",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "57807841-2ecc-4582-ad6f-dc6c662f30dc"
        },
        "item": {
          "id": "e7e57f87-bf95-4b5d-bf13-f870c7ef0f78",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2ff4c266-798b-4f43-b3ea-42de7bca8eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd64a77e-d65f-4e9c-bf91-d074d571ec52",
        "cursor": {
          "ref": "d92d48fd-d5c0-4089-ba9a-7db953bf5312",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2f8eafd7-7827-411e-b45a-336d5e845509"
        },
        "item": {
          "id": "bd64a77e-d65f-4e9c-bf91-d074d571ec52",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e5dc2a6c-a694-4606-8452-fce93c3e9480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00987c96-bcc3-4bbc-9808-1d2709cc05f9",
        "cursor": {
          "ref": "958c2d2a-0b7b-499d-beeb-e724bcb6b1f1",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4f2d663-f300-4b61-9e20-678880021651"
        },
        "item": {
          "id": "00987c96-bcc3-4bbc-9808-1d2709cc05f9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8a79d28e-07bf-4f6f-bf3b-33fb3eaafe1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2a1877-5285-4af0-a513-855b3c374fb8",
        "cursor": {
          "ref": "c0ac5e45-25b9-448c-af92-f8fcdb6b4fe4",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b30cb121-ed98-4754-9878-c5e3520bccbd"
        },
        "item": {
          "id": "4e2a1877-5285-4af0-a513-855b3c374fb8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6e3d60b0-0d56-4c96-bb96-5e57214d1a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5589c0-b09e-4a1a-b6ea-d5f4c5d1667b",
        "cursor": {
          "ref": "526977fc-3d5a-4e9c-9b2b-fb5d9e915f33",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e78fb660-3538-4b34-81dd-95ff7f9ff111"
        },
        "item": {
          "id": "6f5589c0-b09e-4a1a-b6ea-d5f4c5d1667b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "97629380-b165-460f-92f6-591a26ec75a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd9c38c-77fa-49f9-9b6d-b39f6be96314",
        "cursor": {
          "ref": "c9c3bfde-e712-432d-a8bf-aa73d44b9840",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f97de623-baa3-46c8-b78b-86047d815a2b"
        },
        "item": {
          "id": "2fd9c38c-77fa-49f9-9b6d-b39f6be96314",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a0b63102-0f9c-48bd-b3d3-63dbd3b382b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f30c7c-d982-4f6e-a419-cc58e62ff181",
        "cursor": {
          "ref": "75e49c67-9130-496d-94cd-79fcac5156a6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "43e898cc-9994-4a70-b41e-76bc2566e417"
        },
        "item": {
          "id": "03f30c7c-d982-4f6e-a419-cc58e62ff181",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3db89f45-fbba-42d1-89ac-8420115b6ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ee6c63-52f2-49c5-945c-46ba4cd91641",
        "cursor": {
          "ref": "13afae42-dd38-4a5b-b75f-32defbbc0288",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "39509816-2b36-4ba6-8f3d-9b4a4206968b"
        },
        "item": {
          "id": "b2ee6c63-52f2-49c5-945c-46ba4cd91641",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "276368eb-2c2e-4bc5-a885-0aede3161954",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77616993-fc60-4c1e-8e64-23f41ec21767",
        "cursor": {
          "ref": "94fe91fe-f27c-4814-8802-bec11bdc4eb8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "50c86918-9861-48ab-8f7c-021148adc0d7"
        },
        "item": {
          "id": "77616993-fc60-4c1e-8e64-23f41ec21767",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3893f7b6-5461-465e-a7e7-c5e40c7e3b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af990b9-4a07-4979-966c-c999e5ed70ce",
        "cursor": {
          "ref": "9cf5e68c-9df9-4b36-b919-a098e2d7ac54",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7f4f6fcf-1318-45cd-813c-5ab1b3777947"
        },
        "item": {
          "id": "9af990b9-4a07-4979-966c-c999e5ed70ce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "46989aae-1079-443c-b0cb-fceac798a6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773d6c00-26f3-4fda-ba2d-74ff3fdf1402",
        "cursor": {
          "ref": "ae4fc513-1b79-4f9f-a6d6-e8cf87954a5b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "72fe98a0-a0b8-4328-8949-d92d6ecf5111"
        },
        "item": {
          "id": "773d6c00-26f3-4fda-ba2d-74ff3fdf1402",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7542d984-9244-4184-8b7f-27323100c34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f6eb8c-1acd-499b-a9c6-51f292cf9a83",
        "cursor": {
          "ref": "1039170b-3026-4f01-80ed-6eea6b489ac2",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "581ad56b-401e-4b7c-8c68-1a7718ca2f7e"
        },
        "item": {
          "id": "29f6eb8c-1acd-499b-a9c6-51f292cf9a83",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "62d992df-aa19-49d4-9fb7-3f58a4ae7276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da83350f-c615-464e-8296-e047d6bfdac5",
        "cursor": {
          "ref": "a6c39d05-d128-465c-80b2-7ac61181c39e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "71461cca-c8c1-4759-ac93-fd005d50bec5"
        },
        "item": {
          "id": "da83350f-c615-464e-8296-e047d6bfdac5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f0a3d38c-ac2e-4331-b84f-fbbcbabe294e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285acbce-3358-4d2a-bb6b-6374efb300dc",
        "cursor": {
          "ref": "1f733eb2-e827-4ea2-aa43-f387dd5eba72",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "621ba5b3-8de6-4ae8-8b8d-e6548c95d39b"
        },
        "item": {
          "id": "285acbce-3358-4d2a-bb6b-6374efb300dc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9b2e4dc4-f4b4-4c4d-8e13-69817d4e7362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b137817-e675-44ec-8847-53345d2ee109",
        "cursor": {
          "ref": "f8147d28-fffd-4071-a583-8edee91a2c4d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "28129662-221c-43cd-b3f9-1a22a8196cfe"
        },
        "item": {
          "id": "3b137817-e675-44ec-8847-53345d2ee109",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ed21cc49-0287-46da-8b95-8b902d4d262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e97074-3a61-4ab4-bc68-2940fdb05388",
        "cursor": {
          "ref": "e92a497f-efe4-43fb-ba50-e47e69b9edc7",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a6da1d27-1a60-4cf7-8b01-19821e575783"
        },
        "item": {
          "id": "08e97074-3a61-4ab4-bc68-2940fdb05388",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2fd0fd98-e4ae-4227-bd15-a3a1b9e772a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da50317-16bb-4a1a-923e-c80a6e30ffae",
        "cursor": {
          "ref": "c9c8d3e1-51a7-4d14-9c88-802721709518",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fa769ffd-ad38-4ec1-9f62-c8a5b4c5cb37"
        },
        "item": {
          "id": "7da50317-16bb-4a1a-923e-c80a6e30ffae",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9606ab36-729c-41de-91f7-70d3d64f3305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24763e28-2abb-468b-adc9-d36906eabc83",
        "cursor": {
          "ref": "85b33358-796e-4acf-adc5-5d2adba2b689",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a61e6876-1249-409a-99fc-4d3b87cc97ad"
        },
        "item": {
          "id": "24763e28-2abb-468b-adc9-d36906eabc83",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "04c2240f-7b11-49c1-9807-8a534d2ba053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4123c3dc-f8bb-4122-a724-7de8d3848463",
        "cursor": {
          "ref": "b66e3a4f-af6a-4e2a-956f-b4525f97b082",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "30329140-1fa6-45c4-b6ca-0e418ec966ca"
        },
        "item": {
          "id": "4123c3dc-f8bb-4122-a724-7de8d3848463",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "787f0050-1546-40dc-9518-b566db64e026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87992a5a-e973-44a7-ae80-0bf4d7a0df89",
        "cursor": {
          "ref": "08a7e4ea-60ff-4844-a3b4-e040fabd710c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3cf398be-3850-4b72-93a5-6b2286d62c04"
        },
        "item": {
          "id": "87992a5a-e973-44a7-ae80-0bf4d7a0df89",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e4b14581-137f-4c37-8194-b1e17de662cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12931182-a741-4e11-b0c4-9e24a1d7a9a5",
        "cursor": {
          "ref": "0de4dbd4-cd25-4b27-913b-54fdac4aceeb",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8398e1e7-8d7a-43cd-ac5e-196f1ebf0cfc"
        },
        "item": {
          "id": "12931182-a741-4e11-b0c4-9e24a1d7a9a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a8f5af8e-ee0a-4656-b6d0-4c4b8575198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dff331-59d1-4b35-9095-ae86bdbe2417",
        "cursor": {
          "ref": "a3019dfa-95ec-439a-9319-97acbf21049f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3e0154cd-fd0b-4e0e-bb46-b367ebf1c918"
        },
        "item": {
          "id": "40dff331-59d1-4b35-9095-ae86bdbe2417",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1ec46366-0168-492b-86be-a8c5758178b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21694b30-c699-4940-a3af-98a8aa53f5c4",
        "cursor": {
          "ref": "61bda30d-507f-46d3-b3a8-2871324aa759",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "913d6574-70f2-4922-ad72-d2db01886d30"
        },
        "item": {
          "id": "21694b30-c699-4940-a3af-98a8aa53f5c4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c99e3c50-12cf-4c38-aeb9-485788b3595a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e87abe-7fbe-461f-b673-e01c73736c2f",
        "cursor": {
          "ref": "d7ab9c5c-965d-4c66-ab97-f2b2b13dbd63",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7bb1026b-d383-4ea4-bf3c-978a103f451d"
        },
        "item": {
          "id": "70e87abe-7fbe-461f-b673-e01c73736c2f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fc90d268-5dbf-401b-b878-c2d26ec09c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87988871-9007-48eb-89ac-9afcd7c5e5be",
        "cursor": {
          "ref": "c442bb9e-23df-4ef6-a57e-5232ff47a938",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "baff9b76-af11-45f3-8578-b157e314e902"
        },
        "item": {
          "id": "87988871-9007-48eb-89ac-9afcd7c5e5be",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "af5f4f1f-8c2e-42d8-8ffb-2cd3d5fc07fa",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ef9dfff6-bf95-4e49-aecf-96543e42401d",
        "cursor": {
          "ref": "507de110-a87f-4eb2-8c8d-4b4af49c60a8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "03b3c8e3-8714-4fe1-81b2-e6b8d5c122e0"
        },
        "item": {
          "id": "ef9dfff6-bf95-4e49-aecf-96543e42401d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d67b1e9e-b785-4713-aa53-d9d4309d0121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a34de4-38c6-4a83-82a9-b51058ea2cf7",
        "cursor": {
          "ref": "43c61180-8aaa-435c-9e27-a885da24fedb",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "896abc3d-6132-4bdd-b6d5-1ceca69911f6"
        },
        "item": {
          "id": "c3a34de4-38c6-4a83-82a9-b51058ea2cf7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "11456525-94ab-43d6-af18-8848be19ffbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9de0feb-17fc-4cb1-a16d-76852a618e40",
        "cursor": {
          "ref": "653222ef-f87c-4bfe-a33a-83ed467f998b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f1055b51-1b35-473e-b2ae-7b9be7bc3462"
        },
        "item": {
          "id": "f9de0feb-17fc-4cb1-a16d-76852a618e40",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0cf82fbc-b861-4a5e-95e8-83bee7875221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82d80b-3f1f-40f9-ae68-bb8f969e7f34",
        "cursor": {
          "ref": "52e2a546-bed1-426e-82ba-14fb3523f87b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2ebf290d-08a1-4112-a8ce-41dd4d9d1d2b"
        },
        "item": {
          "id": "3e82d80b-3f1f-40f9-ae68-bb8f969e7f34",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "29df8e81-e51f-425d-ad6f-5375a1773d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fab0b2c-9cf4-4bf0-a93c-453759be8f90",
        "cursor": {
          "ref": "ab54a3da-d4d8-4a7a-b729-6e827f108fda",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c08cfe75-f04b-4de1-8ba6-3cf176465e43"
        },
        "item": {
          "id": "5fab0b2c-9cf4-4bf0-a93c-453759be8f90",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4f9e4b4a-7e23-4a1f-9516-628a8cbd6431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7c192a-b440-418d-85c5-2b5d2433a70a",
        "cursor": {
          "ref": "d0ee588d-29d6-448e-8e2d-edef0c0a5c92",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5c35979e-a710-4d90-86f3-a5f87384d946"
        },
        "item": {
          "id": "4c7c192a-b440-418d-85c5-2b5d2433a70a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4797e544-38fc-4107-8df8-d007f780fbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbad1e87-0793-44d1-b531-5b3dd90ce88f",
        "cursor": {
          "ref": "c2f2e973-ca70-4128-a4b6-a1e54c059e89",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e541699f-aa9f-4283-94ef-090fb622c240"
        },
        "item": {
          "id": "bbad1e87-0793-44d1-b531-5b3dd90ce88f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "020a1476-2e21-4cda-9d15-6e9fea211897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379058a6-e16c-40b5-b412-8f6a929471ba",
        "cursor": {
          "ref": "668de448-21a7-441e-9895-1a388f593f8c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c124fb09-2b59-4e17-870b-caa597c1ac77"
        },
        "item": {
          "id": "379058a6-e16c-40b5-b412-8f6a929471ba",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e32427cf-8cc2-4708-bf5f-21a5b5877e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd68f388-f69c-4b41-8fa5-49796512edb6",
        "cursor": {
          "ref": "7ee5438c-dcd5-4525-a70c-a8adb8e27acb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d3a7d476-f429-436b-857d-0e60c1adecbd"
        },
        "item": {
          "id": "fd68f388-f69c-4b41-8fa5-49796512edb6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "824d42ca-9ab8-41c6-abf1-9c8461ddb94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5a48ed-ed11-46ac-aff3-d055555158f4",
        "cursor": {
          "ref": "a1a3f1fc-c11c-4f5b-a5e2-375bf6d10b3f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "00fb1c57-9970-416e-86c5-5682ba201bda"
        },
        "item": {
          "id": "0f5a48ed-ed11-46ac-aff3-d055555158f4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2cf057ef-09e9-4512-b2d0-70438ed7847c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2764ab47-7396-4bec-bde3-121262a83efe",
        "cursor": {
          "ref": "e51af03a-50e7-4614-b24b-2dc9981dbb2a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77cc2910-c66f-4309-a5d8-4ce13f3d803d"
        },
        "item": {
          "id": "2764ab47-7396-4bec-bde3-121262a83efe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c117e202-0928-4c69-8526-b7d27d19974b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1549482e-087a-4b61-a242-983f79459b98",
        "cursor": {
          "ref": "996906b4-b2c5-4ebf-a60e-4a9da23fdbb9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "40d3cd2a-70a3-4882-80d7-fc9197a87071"
        },
        "item": {
          "id": "1549482e-087a-4b61-a242-983f79459b98",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "523d74ee-39b2-43b2-9059-6dd78dd13531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fa42ff-974a-489e-affe-888bf603ea6c",
        "cursor": {
          "ref": "cb62406a-7f32-4ecb-8127-cde7cb20c20e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "33092099-77a8-4456-b9ce-368054b0ef28"
        },
        "item": {
          "id": "23fa42ff-974a-489e-affe-888bf603ea6c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f9305a78-f98b-444f-81b2-b8b25c4f82c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e986f30-be33-45c1-95ef-a7638f339394",
        "cursor": {
          "ref": "e9ddd240-7f3c-4dbc-8baa-53b94910abf6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a56b1b2c-db80-4753-a47e-bb2ff8e7c2a1"
        },
        "item": {
          "id": "7e986f30-be33-45c1-95ef-a7638f339394",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0ed8c72b-2938-4458-a29e-76d1b262513d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e9790e-b369-4ce3-b633-ec9e383e0a41",
        "cursor": {
          "ref": "0bd7ab52-15ff-45f4-80d6-d6bf01a11107",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f4217094-3806-436f-9374-cd9cdcf82831"
        },
        "item": {
          "id": "51e9790e-b369-4ce3-b633-ec9e383e0a41",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4d5bf255-a30c-400a-9d00-2cb09881e048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44157a1-0ff9-4ad2-92b7-da6444493158",
        "cursor": {
          "ref": "466735b3-8e6a-471e-82f4-949aecfbfdc7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8defd2ff-1f7b-40c5-a37d-e12848b8428d"
        },
        "item": {
          "id": "a44157a1-0ff9-4ad2-92b7-da6444493158",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4b19fb91-27c8-44fe-9ca0-0f5dd2f6cb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c15b5a-1036-4e47-a48b-b6beeff9343f",
        "cursor": {
          "ref": "37cdf6de-b0ed-4e50-8629-a155843b5357",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "61cae32b-370d-4fd4-84bc-88182eb73b08"
        },
        "item": {
          "id": "a1c15b5a-1036-4e47-a48b-b6beeff9343f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6bcaf8eb-6e65-42e3-aeab-2abbbfdf6448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03deef5-f36a-43be-8fa6-e19b88a1cc83",
        "cursor": {
          "ref": "0de35303-d728-44bc-8634-ef31c9b07dd1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "24cdb6d6-6325-4df6-9782-3943524439a2"
        },
        "item": {
          "id": "f03deef5-f36a-43be-8fa6-e19b88a1cc83",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e2abbf54-9558-490e-a8c7-1107d67d46dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e894b102-ec8e-4277-81f2-a6891be3177e",
        "cursor": {
          "ref": "2a3a4757-cd50-4d21-820a-1d823d9da87d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "956cb7f6-d72a-4962-8fb2-9ce698c03b81"
        },
        "item": {
          "id": "e894b102-ec8e-4277-81f2-a6891be3177e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "677e8268-6643-49bf-a910-ad2ed137b96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3842ac33-9027-405e-8d27-f53c3f84eaf5",
        "cursor": {
          "ref": "9d929afe-bf98-49b6-bd2a-85a2f6850534",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "24392cae-a334-4f29-ba96-c7b4541dd2ae"
        },
        "item": {
          "id": "3842ac33-9027-405e-8d27-f53c3f84eaf5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "120a0a18-3daf-43a3-a8ef-f3df825dae40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7b46d7-b43f-4be3-82bc-e3c4eda89a29",
        "cursor": {
          "ref": "c0f543cd-933f-4cd4-bd68-2f20a41e3b69",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "12650891-22f6-47e6-bf5d-67adb61a684b"
        },
        "item": {
          "id": "2c7b46d7-b43f-4be3-82bc-e3c4eda89a29",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a9f72eee-f718-4bfb-be53-adbae761d7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07dc8d5-7d85-4e3a-8cc0-9f99c0482dc0",
        "cursor": {
          "ref": "02890d91-1021-47f7-9c3a-c7e5f57f7edf",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3df783e5-2f84-4908-9bba-7b78e993dce8"
        },
        "item": {
          "id": "c07dc8d5-7d85-4e3a-8cc0-9f99c0482dc0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d15120ed-3386-4cc4-b241-d1aa84dbd818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e26aec7-6898-4818-be8b-53ebc0ac4088",
        "cursor": {
          "ref": "c357378d-3644-453f-a91c-dd4f0eef7384",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fff8ecb5-b6dc-44b8-8952-85086f72a408"
        },
        "item": {
          "id": "7e26aec7-6898-4818-be8b-53ebc0ac4088",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13f5d195-8079-4357-8bac-a06fbf7396b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333f3e8c-245f-4386-9f06-0ab72f758ee0",
        "cursor": {
          "ref": "0aa793d9-3676-43b1-bc3a-68a4a292f1d6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "afe762d2-8859-4bd9-b905-9c4efa570e0a"
        },
        "item": {
          "id": "333f3e8c-245f-4386-9f06-0ab72f758ee0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "63ef790a-a75a-45bd-8031-9d0fa483805c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5bceea-cfa4-47c6-b6a9-ed523ad42678",
        "cursor": {
          "ref": "ee8acc43-4738-4fad-bd18-a61d1df4f820",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4fe51657-5613-4d29-b8e2-b15af7c79b76"
        },
        "item": {
          "id": "7a5bceea-cfa4-47c6-b6a9-ed523ad42678",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c10dc52d-4dcf-4ea4-ad60-6fefe3b15c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebd2884-b007-4774-af31-b08a5c1fd80d",
        "cursor": {
          "ref": "ed893d70-edc4-4c83-893c-657095a03c9a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "450ff4a3-2829-4d19-b79d-79eb79c1950c"
        },
        "item": {
          "id": "bebd2884-b007-4774-af31-b08a5c1fd80d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a6bf8608-92af-423d-9e3c-bc515c78f036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97e67f7-44f8-4d76-bf93-303753b38a3e",
        "cursor": {
          "ref": "a0b27820-db52-45f6-8e15-259b7050cc7c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "333e8e3d-5d13-4ad3-a1b0-3bb404a2add3"
        },
        "item": {
          "id": "d97e67f7-44f8-4d76-bf93-303753b38a3e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7e511a0f-9fe0-4946-9beb-d6e7a1342c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4657fce7-409b-4a78-b215-094bf38a9e56",
        "cursor": {
          "ref": "74267a87-7f0a-4de7-96a2-deca196223ec",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "55a4e6dc-3eef-4ba0-a535-fb1278fcac94"
        },
        "item": {
          "id": "4657fce7-409b-4a78-b215-094bf38a9e56",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bca5f807-de40-4b7e-875d-53bf96337696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c06ced-1207-4ed8-b00d-3f4b9a6df17a",
        "cursor": {
          "ref": "c8c43333-1cd7-4620-ac88-f6cb57361d43",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a346bf2a-ec85-46a8-ae8f-70777a1e05e0"
        },
        "item": {
          "id": "b5c06ced-1207-4ed8-b00d-3f4b9a6df17a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0a3910ff-de00-43bd-975f-b504277e5022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ddf216-1e80-48d5-910f-4ecbecf5b660",
        "cursor": {
          "ref": "6d4e82d3-98d7-447f-ba40-505bfece8ab1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ad30cfbd-ff8e-40e4-9555-247a86d99878"
        },
        "item": {
          "id": "38ddf216-1e80-48d5-910f-4ecbecf5b660",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "215bd5f6-53be-4d89-884f-ce0c1138ff19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d15b13-9de5-4652-8260-c6e7d82e3bc6",
        "cursor": {
          "ref": "31b00dc9-ddc2-4b7f-a973-01c3037bc420",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "33fd4381-15bd-472c-90e4-ed6fdaeae675"
        },
        "item": {
          "id": "a1d15b13-9de5-4652-8260-c6e7d82e3bc6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f4ea1ba4-a980-404e-8bca-e37ff7502475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8e4fa8-b032-4758-b8ba-c922a3d44e22",
        "cursor": {
          "ref": "c9a987c7-9061-4ade-b70f-94757b0979cd",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "793a4dfe-b601-49b5-9580-a1a238649f3a"
        },
        "item": {
          "id": "cb8e4fa8-b032-4758-b8ba-c922a3d44e22",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ff1c3d20-9d0b-4c80-8f97-705d1bebbe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b12fc2-403a-4b13-af5e-1548920ec1d9",
        "cursor": {
          "ref": "cc74b146-c01d-4273-acec-190b91411a65",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0ff9f4c2-8cfb-4210-aab5-cc88810526c7"
        },
        "item": {
          "id": "26b12fc2-403a-4b13-af5e-1548920ec1d9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85fa0828-9a23-46a0-8215-7e8410663762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e108f704-e0b3-4b88-9615-0e9e811097b0",
        "cursor": {
          "ref": "edb04ba7-2e19-4e67-9d1c-e4c7ec4c6759",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "572cb5b9-97e4-470f-872d-dbc6c6f90f1a"
        },
        "item": {
          "id": "e108f704-e0b3-4b88-9615-0e9e811097b0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5250e104-ec6c-468b-b4ef-3acbff1ef26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dfd42c-8853-4a2b-a0e0-c1bd0feabc41",
        "cursor": {
          "ref": "97273429-fb7b-42b7-970a-73b8b44a2921",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6d7542fc-8d5a-4320-8f3c-41ad18beb11f"
        },
        "item": {
          "id": "d8dfd42c-8853-4a2b-a0e0-c1bd0feabc41",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6b7abe5f-66a9-4dc7-940b-dbf3cdfefe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4145a50-0d4e-4993-b5a6-f237c853c3f5",
        "cursor": {
          "ref": "007396f1-1345-4721-b8ac-79d011651609",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8a412061-3ebb-464c-9473-262c87428ba2"
        },
        "item": {
          "id": "f4145a50-0d4e-4993-b5a6-f237c853c3f5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ca4ba3ad-4003-4bf6-b487-058ed1ecf62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18277011-d4a8-43ee-a4d7-cb7ab7373b29",
        "cursor": {
          "ref": "733e99d9-8453-4389-928e-429e133b487d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "672846bd-562b-4816-ba20-439ed8ba8530"
        },
        "item": {
          "id": "18277011-d4a8-43ee-a4d7-cb7ab7373b29",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "712ae95f-d8b2-4531-bbbb-7b5ee5e16e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e944b8a2-cbe5-4845-a1c8-94a7a0709540",
        "cursor": {
          "ref": "f72db00e-6a2f-4610-ae99-589b4c8782d9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9e93c183-ca63-4b0a-85e1-855b5db5e731"
        },
        "item": {
          "id": "e944b8a2-cbe5-4845-a1c8-94a7a0709540",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4d949ed2-1468-4471-928a-e07788ea5e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee9828-7bd6-4e55-9e96-2f54e55f4f28",
        "cursor": {
          "ref": "7894ccba-d5b6-4212-ac8b-b81db7122567",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7de98c89-9750-47fe-bb9c-18a1ee7c2502"
        },
        "item": {
          "id": "81ee9828-7bd6-4e55-9e96-2f54e55f4f28",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "46f7106d-1809-4448-b0ef-0018052df3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4116e16-6e32-464b-bc35-81311ab3acf8",
        "cursor": {
          "ref": "3e6ce0e7-86f2-49c7-9560-7aa9850603bd",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ee49b853-09bb-4d98-ad67-381c69cb16fc"
        },
        "item": {
          "id": "b4116e16-6e32-464b-bc35-81311ab3acf8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b7042f1d-d4b3-40be-a52a-ee0f74e35819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbafad9-fdd4-42c4-9cab-a281fc41fb3e",
        "cursor": {
          "ref": "474d5411-dacb-4ee9-b471-dc873748fbef",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cb28b9fc-0596-46de-8472-3bc2f4056ae3"
        },
        "item": {
          "id": "1fbafad9-fdd4-42c4-9cab-a281fc41fb3e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1d8f0554-88c4-448d-9c0a-adc4f10f24c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fe16b8-e056-4f86-b701-2a2f6da18786",
        "cursor": {
          "ref": "a14b3b94-39af-4001-94d3-cde772978d3f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "01f9ce6b-9cec-485e-adb1-b7be88ddebe9"
        },
        "item": {
          "id": "49fe16b8-e056-4f86-b701-2a2f6da18786",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9ff0f9e1-c011-4ee2-a16a-d7d43710f463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39f811c-b139-4fa7-929d-af387b13325b",
        "cursor": {
          "ref": "f928030b-442b-4a86-b476-55469f9345c5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3f1032a3-f475-4f86-8219-64f42e0ada7a"
        },
        "item": {
          "id": "b39f811c-b139-4fa7-929d-af387b13325b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "812dd61e-293b-4d10-83bc-051c28bfa04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c2fd10-d438-4950-b3c3-c42b04d6c22c",
        "cursor": {
          "ref": "3bb1002f-3040-437e-a92c-008bed597e8b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e6b07635-c9b5-42dd-8233-ec63b230ab62"
        },
        "item": {
          "id": "a9c2fd10-d438-4950-b3c3-c42b04d6c22c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "58bccaca-77ac-4c5b-b380-e39d3d78d6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b194bc-1785-49f8-bc17-2284530d135e",
        "cursor": {
          "ref": "c566caaa-fb2e-4a84-865e-e86dd831e8e6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c83c8b2d-d64d-4668-b330-f154158ddee7"
        },
        "item": {
          "id": "09b194bc-1785-49f8-bc17-2284530d135e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "781cec0d-1b97-4284-b117-dc2820a07309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27782514-8426-4ad9-8fef-1cd2dd85c0ec",
        "cursor": {
          "ref": "1f4a8f3a-fcfe-4de7-8b74-bf15c43401ef",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "637f3a49-efa0-4b3e-9536-5467351fea52"
        },
        "item": {
          "id": "27782514-8426-4ad9-8fef-1cd2dd85c0ec",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "46e633ac-2dfb-4992-ac71-4993e174a9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ce483-4a74-4928-b306-c09dd884ce30",
        "cursor": {
          "ref": "730db881-cd59-4e77-9670-08669248226d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e6129ff7-656a-4ee6-946c-728d35a1247e"
        },
        "item": {
          "id": "cf4ce483-4a74-4928-b306-c09dd884ce30",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "212a7e37-0a18-4b11-b620-68c9c8b1c304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a648b5-f236-45ba-83c7-14f8f7c9b2c5",
        "cursor": {
          "ref": "d18babab-2e8b-428c-91b4-443e5a732a7c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "406e68ca-fb0b-4b2a-a7bc-17d6eb8d5558"
        },
        "item": {
          "id": "b2a648b5-f236-45ba-83c7-14f8f7c9b2c5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5d95c622-9282-4681-8e5a-da4c5142ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6a0c9d-d57e-472a-ae33-a67fa87c5614",
        "cursor": {
          "ref": "984df94c-0cc8-490e-8e0e-8bb4f3d11245",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d70bf67d-a81f-43a8-928e-30dd3d520b4a"
        },
        "item": {
          "id": "0e6a0c9d-d57e-472a-ae33-a67fa87c5614",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "41a0b080-d7d4-43e0-ab29-f0c85ab00782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff504fe5-8eba-4d0e-917a-9e1947247836",
        "cursor": {
          "ref": "44c46982-a8d4-49e6-b2a1-2f049d6d229a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cf786e6e-e552-4954-9897-17f20bf64c04"
        },
        "item": {
          "id": "ff504fe5-8eba-4d0e-917a-9e1947247836",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9421e918-6f3c-4973-89c5-c33b3045c812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d796f6-9cc8-41fb-9b4d-58177ea164a3",
        "cursor": {
          "ref": "96c175ad-2705-4a93-9a1c-889a94246259",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "09a43017-09b2-47ac-a637-1fd70f0ef5bf"
        },
        "item": {
          "id": "85d796f6-9cc8-41fb-9b4d-58177ea164a3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f26fe05a-628d-40f0-9632-d7ce40b3aa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40872bb-5814-4da8-ad9d-39f38b71b67f",
        "cursor": {
          "ref": "32fa79ce-cb75-4987-aa8f-7bf8e90de905",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "39e321af-e176-4913-ad6e-39bbea04d444"
        },
        "item": {
          "id": "f40872bb-5814-4da8-ad9d-39f38b71b67f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c9b45297-a8ec-439a-830d-4f715007ab95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c24c47-f1c3-488f-a60c-ddcd5ae8acf9",
        "cursor": {
          "ref": "7410e3bd-8130-4151-9c7f-6fea9025c5bc",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d8459ebf-bc0c-49d0-847c-d499374409e4"
        },
        "item": {
          "id": "97c24c47-f1c3-488f-a60c-ddcd5ae8acf9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "41269c80-b1f1-42a9-8584-813c79cb42f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bde96c-1cd2-4f2e-b5ae-93823f3d48e9",
        "cursor": {
          "ref": "17bf7685-19c9-42c5-93d5-84cf017bb886",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc4ecb13-8732-4f55-9ada-afb9317cae26"
        },
        "item": {
          "id": "b7bde96c-1cd2-4f2e-b5ae-93823f3d48e9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "06934454-e204-4912-9c5e-93b1623269f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280c2ebc-4b2b-4abf-946b-1b88f5ca66af",
        "cursor": {
          "ref": "e3cc3ea4-8285-4d98-a58d-32a0ffc52ff8",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ee883403-f3a3-49f9-9d79-d881239ffcbf"
        },
        "item": {
          "id": "280c2ebc-4b2b-4abf-946b-1b88f5ca66af",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6ffd53eb-0b18-4ee5-bee8-202e5a9f9bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e18e3f-21a9-4f4e-be0c-b06be3dd85fe",
        "cursor": {
          "ref": "f20c7511-4e43-4520-af44-ca4af35d79a2",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d544be9e-138f-4e00-bcce-5031cbc2ca8c"
        },
        "item": {
          "id": "b6e18e3f-21a9-4f4e-be0c-b06be3dd85fe",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "40429817-e950-4b61-b05f-981efdd39034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71254171-e7d5-4831-a239-974542d52ebc",
        "cursor": {
          "ref": "d034e716-e560-40b0-95dd-f354074261d7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "967f70f8-e152-4a50-9dab-68553652d6db"
        },
        "item": {
          "id": "71254171-e7d5-4831-a239-974542d52ebc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ad33b4a2-82b7-46e6-a9f8-7c0963317e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3217dc93-7906-45ba-9ad3-b8d25aed5626",
        "cursor": {
          "ref": "307976b2-ea1d-45d3-b6f6-6b38a9de85c1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8207aef8-875d-41fb-8b21-fcb10331f59d"
        },
        "item": {
          "id": "3217dc93-7906-45ba-9ad3-b8d25aed5626",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bb431d13-e473-422e-9740-073cf268295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414f39cd-bbe6-43cb-98d4-3fea70c6008f",
        "cursor": {
          "ref": "8c3a5337-94b1-413c-abb1-eccfc9401d63",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e36eace1-7793-4cc7-9eb0-228ba69181ac"
        },
        "item": {
          "id": "414f39cd-bbe6-43cb-98d4-3fea70c6008f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c705de5e-cb01-48f8-84a3-e39650af10e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8abac4-9592-4b75-9f79-2e80b5f61bd1",
        "cursor": {
          "ref": "5e58035a-0aba-4288-bf19-afd98211a674",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c3ae4087-82bd-4de7-9bf5-2ec36f45c403"
        },
        "item": {
          "id": "af8abac4-9592-4b75-9f79-2e80b5f61bd1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a3d46e09-050f-40bc-9c51-452c155be574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39205a6a-7086-4b07-a490-3663da803160",
        "cursor": {
          "ref": "764a3f21-33f0-419a-aa2f-976a7377ecff",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6917419a-b468-46ed-bd25-c738f3e16db8"
        },
        "item": {
          "id": "39205a6a-7086-4b07-a490-3663da803160",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6133c1d1-eb1f-43a9-b686-bf514c625b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a0a1ba-4a85-4ea5-af73-a053d552a761",
        "cursor": {
          "ref": "24719e7a-426b-43cc-8161-dc5867d8f15f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "19ccc885-d649-4a67-a322-684abb4e271c"
        },
        "item": {
          "id": "13a0a1ba-4a85-4ea5-af73-a053d552a761",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f8ada0d5-fc5d-42fc-aa50-6f7ffa6f58ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c1b7ed-0646-49af-b9c0-6f2178f77368",
        "cursor": {
          "ref": "f5722132-664e-4f96-b3db-c040c8a89aef",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "36e37dbb-612c-4b4e-81b8-f4ac5b9cd2a5"
        },
        "item": {
          "id": "e4c1b7ed-0646-49af-b9c0-6f2178f77368",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1c4f7e64-2896-4f5d-9af4-86bb1fd7d704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0bbd49-50c1-432b-a3b0-50d7e327e4e3",
        "cursor": {
          "ref": "7df163c8-14f5-4f63-bf38-77293ba44a14",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "70c52cf3-f219-498c-9dbe-85065aa6c38d"
        },
        "item": {
          "id": "8b0bbd49-50c1-432b-a3b0-50d7e327e4e3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b02d8668-c3f4-4d83-b76c-db77e89e8884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb2a63c-c66b-43ff-9a44-74d1463611cb",
        "cursor": {
          "ref": "19d2724d-58dc-4589-b20b-f42669444b21",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "245258fe-6644-4916-b7ab-c74a7bb055c3"
        },
        "item": {
          "id": "2cb2a63c-c66b-43ff-9a44-74d1463611cb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e3ae2e30-6465-4464-8cf6-c886ff4ab920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1475dafc-06a4-48a6-b742-de8fed35ac91",
        "cursor": {
          "ref": "91dc37f9-d31a-49c7-b09f-8c4e25fa2c5e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "27d3adf1-3a3f-4e73-917b-fb5eb612994b"
        },
        "item": {
          "id": "1475dafc-06a4-48a6-b742-de8fed35ac91",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8cd1c5ab-a0bc-4861-b06f-6135be4f1995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 972,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53289eed-09d0-4f89-8f22-815b4421add0",
        "cursor": {
          "ref": "5f39d782-51b0-443a-855c-be01ccf82bb8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f0f83d84-1cc9-4dbc-ae15-b4e0c2d7a083"
        },
        "item": {
          "id": "53289eed-09d0-4f89-8f22-815b4421add0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5fcd5a1b-ea5e-4a69-a106-967cb09278f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1400,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228a698a-a76b-445c-a571-634ed504b6b5",
        "cursor": {
          "ref": "5ef59653-5d52-4d8b-ace7-b4668697540f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "078254de-f46c-44dd-9407-f538946f28a8"
        },
        "item": {
          "id": "228a698a-a76b-445c-a571-634ed504b6b5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "61f3b070-64dc-4b7a-8bd5-8c0fe122c600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1185,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9362a3-81fd-4418-b447-d96276bdd631",
        "cursor": {
          "ref": "c03919b1-fec4-4fa7-9939-951ace0a71c2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e4c1794d-fb91-49ca-bc79-81e106f14027"
        },
        "item": {
          "id": "5f9362a3-81fd-4418-b447-d96276bdd631",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4e8b928b-81fb-44fd-bd79-1b916ab4fc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f95c49-57df-4ca9-bd78-97b4e640cfc0",
        "cursor": {
          "ref": "111dbd73-00da-44fb-9f57-b819a63bd83e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "08d5d0c8-a0c2-4b85-ad8b-c7fa4e0be1c4"
        },
        "item": {
          "id": "07f95c49-57df-4ca9-bd78-97b4e640cfc0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb20e57b-b490-4aca-8abe-c51eb3c5b23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b5c756-5735-4e63-91d9-58aba638895e",
        "cursor": {
          "ref": "4d1b98f3-1dc4-45ca-9efc-3b50e4a82816",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "43f0958b-f562-4e18-8dbd-27af69ae852c"
        },
        "item": {
          "id": "22b5c756-5735-4e63-91d9-58aba638895e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5b4920ee-848f-4874-a397-e787891ba658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d85b53-2d9c-4919-9369-14ead2df989f",
        "cursor": {
          "ref": "ca057f87-b7d4-42f3-ad90-4961453dd670",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3297314a-1f30-402b-957e-cb8620ae3722"
        },
        "item": {
          "id": "a7d85b53-2d9c-4919-9369-14ead2df989f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9f222210-39e9-41c2-bd98-e02773db2f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da63fe13-b093-4976-bf71-d47a91a2dcdb",
        "cursor": {
          "ref": "fba1aca1-1dd2-458f-8063-9c03a069b881",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0c82cab2-1863-4016-8c9b-2786b8f3023d"
        },
        "item": {
          "id": "da63fe13-b093-4976-bf71-d47a91a2dcdb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ab66deab-a42a-4353-9798-b7238456da75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f465926f-0e7c-465e-a23d-832f113f2341",
        "cursor": {
          "ref": "55ec5957-fb7c-46db-a506-a56f308c82fb",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d9ec99a0-dbfa-4551-9495-21904be2c6fe"
        },
        "item": {
          "id": "f465926f-0e7c-465e-a23d-832f113f2341",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ccbaec4d-8db5-44fe-996d-4048d66b09db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861a96ef-029f-49f0-bb90-16c1f6fdd261",
        "cursor": {
          "ref": "2bfe30f8-140b-4c35-bc9a-71df4cf2e194",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "50bd1359-a6af-41fb-ba71-c1ebf0c90202"
        },
        "item": {
          "id": "861a96ef-029f-49f0-bb90-16c1f6fdd261",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a43f826d-bb50-422a-86d2-955515d569e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae4d2b5-7e38-45c9-a21c-5f2bbe22613e",
        "cursor": {
          "ref": "030f7606-c2df-4216-90fe-d43566a16894",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8c52ee63-790a-4991-ba99-da86a1295d66"
        },
        "item": {
          "id": "4ae4d2b5-7e38-45c9-a21c-5f2bbe22613e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4e8f356f-9eb0-41c6-b71e-3025938b9305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3975f0-b982-4393-9940-61b9541fa3b8",
        "cursor": {
          "ref": "18feb39f-8164-4ea9-b41d-89bd7029773a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a9e82e69-dc9a-4e13-845f-4bb6ca441d0a"
        },
        "item": {
          "id": "eb3975f0-b982-4393-9940-61b9541fa3b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "35bd2edf-5192-490a-b4ad-052c4a0ddb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4166a9dc-b6aa-4ccc-99df-922aea26849a",
        "cursor": {
          "ref": "999a0bd4-2823-4ae8-b6d4-4d7ad28e12e0",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1a523494-a052-4902-870b-75303b4161ae"
        },
        "item": {
          "id": "4166a9dc-b6aa-4ccc-99df-922aea26849a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2bed38b0-4dd1-42de-90f9-78bb36b5025d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d034d2-5292-468e-8804-41b592928a6b",
        "cursor": {
          "ref": "2b608c69-70bb-4b7c-827f-a202a01ec22e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9a824443-2254-46f8-be6b-ba56e589376d"
        },
        "item": {
          "id": "92d034d2-5292-468e-8804-41b592928a6b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "32797188-29af-46ff-ab8a-8edd26a08c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c67f59-bc36-4ca6-acd6-179a966829d6",
        "cursor": {
          "ref": "b6a23edc-ff73-4f49-8fe1-dc5bd3360012",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fdeaaf9d-fd7a-44c1-bcf2-8f458de6b7b8"
        },
        "item": {
          "id": "a9c67f59-bc36-4ca6-acd6-179a966829d6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fa7ee588-7123-4c18-891f-8c382604eaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ad99af-d558-41e6-930d-35e0951881a2",
        "cursor": {
          "ref": "ca52c2cd-8d87-4888-925d-22a63e8dffe5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f238329e-1c31-4c68-82eb-ced5a7e564d1"
        },
        "item": {
          "id": "96ad99af-d558-41e6-930d-35e0951881a2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9b1963a8-17da-4766-8924-6f9fe38f9ba7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47e16d2-d7ea-4fcb-9d63-b3844595b96d",
        "cursor": {
          "ref": "41b89ad3-0251-4cac-be46-050f6e17ee5f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5647988a-219f-4158-a98e-1c74181b439a"
        },
        "item": {
          "id": "e47e16d2-d7ea-4fcb-9d63-b3844595b96d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "048e8cdb-815e-4402-99a7-d72cd9ba4897",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc17a4d-6425-4a88-98b3-3ef879c53bb9",
        "cursor": {
          "ref": "93952888-0c3e-4275-98d9-9aa0fb882578",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4ae8e85f-fc69-4ae8-a918-b492d3b469c5"
        },
        "item": {
          "id": "3bc17a4d-6425-4a88-98b3-3ef879c53bb9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "119cb03d-e850-4389-943d-1d073767904f",
          "status": "OK",
          "code": 200,
          "responseTime": 3177,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ace7d46-4bcd-4590-871b-0078892f1969",
        "cursor": {
          "ref": "1651ecf0-db1c-4a43-9c7d-56b4a8e8d2b3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5ce02d9e-181e-4c62-b279-ebf0e3e21c04"
        },
        "item": {
          "id": "2ace7d46-4bcd-4590-871b-0078892f1969",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1536d0bf-0594-477f-a6c7-f03cbd571593",
          "status": "OK",
          "code": 200,
          "responseTime": 3246,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "837456eb-12ab-46d3-b7c2-f1cc745edd33",
        "cursor": {
          "ref": "b5f41beb-3be7-4965-9c00-efce3bede1f2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "65d561a2-ca16-4ea3-9ddf-d4945871b70c"
        },
        "item": {
          "id": "837456eb-12ab-46d3-b7c2-f1cc745edd33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e62a01f7-a5f1-462d-befb-21e8b90ace67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837456eb-12ab-46d3-b7c2-f1cc745edd33",
        "cursor": {
          "ref": "b5f41beb-3be7-4965-9c00-efce3bede1f2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "65d561a2-ca16-4ea3-9ddf-d4945871b70c"
        },
        "item": {
          "id": "837456eb-12ab-46d3-b7c2-f1cc745edd33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e62a01f7-a5f1-462d-befb-21e8b90ace67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1486816b-c38c-4484-90d8-23f62779bfe7",
        "cursor": {
          "ref": "1b150d25-fd2b-48cd-a329-a47eaaad81f7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6c5e6ba9-ae23-4c34-811b-74c8fe9f32ae"
        },
        "item": {
          "id": "1486816b-c38c-4484-90d8-23f62779bfe7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "18c3edb1-931c-4a83-a810-55be59bf15c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b85bc-e6c5-4e71-81d5-2557b23eacc1",
        "cursor": {
          "ref": "04905944-64c6-4810-a71b-964176350288",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ba11c173-f85b-41f2-a060-062fc6816469"
        },
        "item": {
          "id": "5b3b85bc-e6c5-4e71-81d5-2557b23eacc1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "55f1dce8-1703-45fd-9f81-76635dfe2ae8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}