{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a8645168-ae95-481c-b26c-c70e3c21e597",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6bccde11-7b35-4461-a2db-673ce00e0069",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42b1d5c0-10e6-4daa-941a-3dd37b2069d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "905b8e4c-d268-477e-83df-f6c54ff4f6c4"
                }
              }
            ]
          },
          {
            "id": "9d4c54da-81e1-4d8f-9cf1-98c886edffc9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "237cb6f1-cd1b-40eb-9340-ba56a5c0bfea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ba64d8ea-c0f2-43f2-8a95-149a8ce07d29"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e5c51b40-8b6e-43d9-95de-e67cfbdc1c9c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "63e3c3a9-2666-4a92-b0da-b013b30dfb82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c51c14a3-baa7-4f81-85a3-cd3feffea6b0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3282a22-b21b-4423-825a-70bd77a9851f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89cc30fa-9d8e-4274-8253-e36622aa1c85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f659d5a0-7922-4c5c-98b5-825c277e7242",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d96ca420-07e9-47e3-ba2b-c28def628c1e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "66c9b84f-7b9d-4324-ac1c-b3a4d52a3624",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b1da45b-7d06-4416-870f-1f0c14474c9f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e0127e1-0c18-4e46-93c4-14264a248096",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4aa385de-b62f-46b8-8941-fb0d6a5ae380"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f6b3c97-5e94-4aa2-8955-6351f9596ad6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27c6963b-93de-42f2-8a9e-ef3c8df726ba"
            }
          }
        ]
      },
      {
        "id": "2f4b60eb-f0f1-4f0a-9621-44cf452d1e39",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "72e74ef0-2572-482b-b078-73e43dfc2d16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "054c9759-e7d7-47eb-9909-aff4a75d8968",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68bbbcf5-b295-41ac-a211-52f25e9a6488",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e475ac-24a3-44da-8513-e8a2684040db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57116823-8e18-43f9-8a83-26d93fd00068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded871bb-23d3-435c-90d0-43f74d57a942",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6564f811-58a7-46ac-8d97-4e93c02576b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e8a46f7-e52d-4228-8659-9747ab9ee957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d69b1a-e3cc-436f-bd33-0ac08990e438",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bc560c-b8e7-4665-8e9c-4aec8e251129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ef5c7f1-22f1-40d5-a5a3-3ae561d6303d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f510549-a0c8-4e53-86ea-56b4d34c77a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfe0f1b5-bbb2-44c4-baa6-cb8971742c75",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff5a1aa-2084-4a58-a408-43d4f11f9cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75f3bff9-6de0-483f-8f15-6eebdeb71394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dc6f9b-2347-4767-a226-575e5c814692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a018158a-1816-4585-b8b7-2bb672876024"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07f8ce0d-d337-4a44-b74d-090c060dbb32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef114d04-6e7e-40ac-bd27-789c043e218b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f422c5d-46a9-4414-b224-76e813ebba12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c6d2b35f-9b28-469b-b0a1-a9fdfeb255d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dee452d-08ab-48ca-9c07-7bc28be8ed35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6e96eb9b-30b7-4358-9b4f-7a8a920ad280"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e4a4e02-3b45-4642-b629-ede2d5b3691d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddad292e-41c4-4de5-a22a-b9ec901ec560"
            }
          }
        ]
      },
      {
        "id": "e74a3751-d848-4e09-9631-29839316e636",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "432e546d-4b05-4229-ba8f-065819f7831b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "066769fa-dbcf-4dd6-b7e3-b618d0c265df",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6fde25a9-2f3b-4c8a-b7c1-d59912ac5c60",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0686b15-0d96-41c8-bc62-c69805887553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b8beaf-b759-45be-bf29-38587bf723ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f22255-4975-41d7-90d9-8918cf528eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f94746b-0e7c-4539-a931-0322c70827e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d5ce83-4b3e-404e-a6a9-413658742a52",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf85285-a980-404f-a3b0-2365f8cf9c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e6a288-5bd9-42c1-a0be-038cddbc1070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edee0117-9636-4538-a8a0-16e344d248e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1903d0d-2c12-47cc-991c-8ba5c81d154f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c272a74-1171-4200-8297-c0f6838162e5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650c6eda-cdf2-4613-bb32-2dc8ae628a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea38ee5-8ffe-4951-8d2e-2e7799b54cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e813eeba-1ad1-4757-b616-315049cb5517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70ddf9b2-9d0e-4307-9b5a-9b83574f1367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e51d93e-883b-4581-90b1-abcfa1ad09dc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6d963a-15e6-4de0-a558-2346742845c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2870ec38-d759-47ea-a8ed-5eba367c3286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab3353-8cc1-4fa2-897e-e7b7daada0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c5e82df-1d32-4857-8485-09a17eefd5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7c00a7-fad6-4aa1-b828-85ae4d5f94e6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83a7d99-62c6-4268-8ce9-fc8c0d095323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7f89be-e826-4a5b-aed5-ffca769f62a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34e46e4-96a2-46c7-88b6-d6f7842b51bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd572ae8-0383-4d88-9c29-47ca8ff36115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d1ab8e-ec09-4e2c-b8f8-807167773708",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2ce035-a2ff-4e4c-899f-a11632be07ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6382c9-5a51-45aa-93d4-b27e10f725fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14696a8f-9ebd-45a1-a062-5902fc59fccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11c443c-8bff-4d9d-b0fb-266d6de80146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc611fe-4977-46c5-8b6c-3810c7678cfb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b09c90-e829-49bc-81c9-4d207825ee42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447f0c12-680b-4d52-a3af-40edb95c70d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4f4fe4-34b4-41c8-930e-cfcc1014e758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8f9dc05-ed25-4ceb-9d06-932d7f90684b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a57354-8cf7-40ce-b199-deb0c064f89f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0d2389-8ee4-48bc-9eea-f8784292c3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2441d6b-13a5-4e18-b609-b3ba9f6ba004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8612607-ad3f-4084-a31d-624c31b8558a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91fb003c-9d88-4600-a6f4-bacdafaddf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283b0e17-c261-4fe9-8f4a-326dc8f1c295",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7be36b6-e6e5-4741-8eeb-bd80098dac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7087f2-a5f4-4be1-ad8e-88da570b660a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63bc50a-48b8-4a26-b5a9-94ada6c26957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2703430a-9990-450f-ad81-24e5e426ef71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b677ae2-b6b3-41d5-afb8-c47091fc2630",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05beae7-7967-47da-b086-9598239c242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab624aa4-ef31-4cb3-b623-49617d8b12aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edc59de-d95f-4d59-a7bf-ab35d8fa95ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d0221fc-0362-4bcc-a603-ee344087b402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56717143-1016-4e75-894f-fb1c8443aa60",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa45383-a413-45af-96a3-9a576aa7e2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae84cf86-4413-476c-ad8f-66d8faf34a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b21e1b7-6519-4be3-a042-4e6e510a3a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de3b88a9-758e-43e3-b047-b0df4377aa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1d6eb7-e91f-4868-9690-9585492bd589",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b75b7e6-eefc-47b5-a2f5-48380d002537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f88a4d-4907-46c8-9515-d4fd0349a8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b468b9-468e-4588-9ba3-a35860f697cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ec1a79a-af15-497d-b7ca-2e909e988bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0320d9d0-3e4e-48dc-8652-d24a764979fe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb423d8-e654-4369-9ff7-ee79ec15e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe26bc3-09a0-4a47-837b-38f2bd297679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f68740-338a-4fd3-b7bd-c88dfd518306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cb85a99-c7d8-4382-bb52-aabe15ad4953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f672d4-fc82-4fd5-be62-0320e92687da",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae0589f-691b-442d-8c92-9d4d0ce3cd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d08c8ad-1de5-4271-ae0b-d36403e012fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449aa634-3122-49b2-88e8-84f0ea922480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8714fa37-aa0a-4ed8-8889-b2446bfa9317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e5e5f4-157d-469d-ada2-3ba41529521b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a645c706-6022-4dc9-ba04-7c4a4073324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e06028-fda4-47ff-96bd-7e73d3da56cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d20d94-c9b0-4e78-943d-eab105b8d1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7efcb1eb-56f6-4a24-8c5a-e598d262427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534eed5a-0fa2-4727-b65a-c4123755e9da",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec3471-f989-44b1-a1dd-d3a8015a484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed333ce6-6f00-4290-a3de-1d8ebd05b291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aeb16fb-8f96-47bf-8ce3-340f25bf6fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc16bf42-178e-4dc1-9275-45293780351e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eacfb7-a11f-4b9c-bdb2-6697c3c8b67e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2264f1b2-17d3-459e-961a-44715ba1f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b850f618-f177-4822-88df-8a97b4187e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae212d9-1470-4f27-8d05-e4852f81aa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5349f8e3-5b6d-43fa-be3d-bf7fc501b32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba98ed3-e2ae-4be2-ac9f-903b4257bd2a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4701cb-9306-42e6-af2e-fa575c5c4b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ac4afa-0815-404b-b901-c401c018c3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd81de1d-7fe6-4d57-beaa-ad9fd2f3fbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "34775bef-3a0a-419a-9c04-b91befc1f713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a2a5c7-3977-4bc8-94d1-8ff1a934d0bd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627e0ffc-5ea0-4a29-b2c2-ffb8ed0a1c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6250e889-99b7-49af-acf4-e72cecac9f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab45ac-6523-4088-aa91-32b7385c9df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0389b505-a309-4928-add6-df65f97b9f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98837d11-260c-43a8-b802-31d1c9682769",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abcbc29-e5bb-4df6-b90b-e06d231ed7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4805df2-94ce-4773-8757-5ff418fe69a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44df4776-8b56-4d43-88f8-f9b33167e574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "624df999-5151-4196-b9ff-53192149f4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe0babd-768d-4b26-9f5d-a9734b9c7855",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f7858e-d839-436d-a591-54b19563548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce3ee77-92f6-4f9f-82df-28407809db33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8650e7-4096-4355-be21-b2faaa22bd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1193fe-b20a-47c9-9b7d-a1a195a6c4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285538d0-aaa8-4efb-839f-e73768665368",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd66433-4bed-4970-aacf-78f5f6043b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2da48e-dd5c-49fe-80cd-bd1e33a97abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a11304-2b1b-49ba-88e7-0c7e7fc61a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04e1cc25-4faf-4df3-9aff-2f555812b5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd4a8df-bade-425c-886b-5971ed0011cf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc6bc1d-2b00-45bf-85fb-7657df7e56c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdae2a8-1109-4c30-b682-defaf5d743ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e821945c-68d7-4c5f-a1e9-0ea217cf33e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7fcae7-477b-4680-ade8-6ccde908ebbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ac3b43-d42c-45b7-b594-f87d8e48084d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30d7cec-49e7-4f1e-a311-02c8bd2017b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5ba0c5-2bb1-4918-82c5-cf1f561e0cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569a72c6-2f9c-4d8e-90b6-54e0e9c519b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d869f5d-1f27-48c7-92b5-e6c77f7f76cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5efecd-65a6-4160-b7cf-c1ef555b0200",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299ab7d3-bd1e-4b00-ad74-bc47a6793c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040c5ffa-d3ae-44fe-ba66-4b5f62597826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca60a6fa-9dc0-4bfb-8218-d7778ec6c962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af5f4be-3f93-45d9-9e28-94e645e291fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019e61da-a5ac-467c-b26e-01a313212651",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ddde6e-a36c-4e16-93ca-9562b43fb51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74c4a69-0a12-4a8e-a5ca-2a0ca69b66ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f395538b-f6dd-4ca4-94d7-f0e5b7bc7ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f1e9a9-dcfe-4d52-acbe-84a5aa8246d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f0b067-ac36-4ddf-83db-4ecb609ec968",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e4bf04-190f-4906-b685-a0fa3dd7ffba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d3ebca-96f6-4a8e-b956-4ca135186d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc6c91c-2784-4934-a7ad-2ea1e6cabd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "680de051-cde1-41bc-b982-9ceddf9aa2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469df62e-8685-4053-8799-9567cd507ed7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f63a739-879c-4c85-a356-a4b0ae774370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf812a51-d689-4025-9e1c-a31ebda6207c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dc8126-f788-48fd-a3ee-de30b9eaa02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "252df94d-c3b2-414c-8f6b-0827753e2a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c7fa47-17ef-4b8c-b623-0ca0d9ddad6f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cbd24d-9672-4731-a901-557cdf580128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545d1571-9648-4505-8a1f-78b4f6d254c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489c7271-ad45-43ab-ab5b-79a8297f119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c107e21f-fc0a-4927-b442-d4417b1716d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25f4d9d-568e-4007-a1fa-ce1de6200a57",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801821c1-1c71-4cfa-b3ec-689407f8584b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14e6bfb-4a55-4d8c-b398-093e657daffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ee5987-da24-4015-9ad7-525eb401d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "abad7aa2-f8da-4d57-9dc2-4d9f3dd6272b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e01c24-1fbe-4cc7-8b8c-77252f6fc7a0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c154621-ea1e-4d91-882e-7e924ec03745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c09f54c-8258-4aa7-bce9-6c10fc5c4cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68944102-b060-474a-a849-a41ff7591187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84202ecd-d6ac-4c47-a3ff-44e1fa709936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a816af-b267-49f0-b6c5-308537467c7e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c182d6b8-3ea8-4fba-8a68-a28338eb8bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b80b311-d090-4dc4-96e1-09dbe2bc4fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802eb633-c9b1-4a4a-adb9-541ff76050a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "746e8b45-f2d2-4468-b29f-468ab5331c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c211118a-d66f-4550-a4cc-e42a46552c71",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f9f1e6-aa89-4127-8f49-583bf34f51b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f086adb3-5c3d-4bf9-a6f6-73b5af950ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9bc623-5c91-473b-9c81-1b80d0f442aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e52497b6-3cc7-4761-b8fe-f9449d0bce5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec7adb6-117d-4299-ab7a-f87f61bd3880",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b29928-8020-4ac9-ae92-ea1b3bb204a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08efebf8-fe3a-4f88-acf2-95d074c332b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7061597-45af-4a46-86e5-16ae05527e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26090e67-5385-4d85-baaa-d0aaca53bf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc1d8bc-6ef8-4510-b5c8-56725cc61897",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11a83e3-c212-45ef-b667-e4f5779aacd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03289077-9524-4a4a-b805-348a39e71feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9050330-fba9-47e8-aa05-eda953b3cd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "70ef6041-639d-44b1-a7d9-4b0f6e9321d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e13ee5-8dd4-4c5f-af14-25ecfe740f25",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b06cef-442b-4acc-b8d0-ab8176df6644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e22d31a6-299b-4852-8fd6-383c78ade621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0430aa8-f221-409c-b759-21bdc0557afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92e6162b-4624-4710-b05e-d036ae9adebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d601fb2b-63e4-4f1a-9b4c-29915ee0308b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7773ad-e754-47ae-9d57-e381d16c765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae51208-f9af-4a59-bf90-f80a67364586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae4019e-9ffe-4149-ba4d-27be9e9f53d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b489f8-2a6f-4c84-a1c4-15ef363ca83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8943bf-eafb-45e5-a133-b0db80236699",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f32ab9-467e-4232-bf76-cb0be3f513cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04350596-d9d6-4de5-b8ec-768403e6dd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a7ef40-d68a-4cd1-9bca-53a15c5da25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c89129-4d00-4fac-aab6-552d9c4b7770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fc0d93-90df-4399-806d-a02bb88fb624",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7d6d23-ccb9-4bca-a74d-72183ca552c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be409d4c-3eb4-49be-9fe6-90fa7dfc615d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41871adf-86e0-4dfd-85ea-9dea196f86fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c943844-5393-4e37-9a98-b62b25495ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bec2905-f6e8-4e74-8eff-b769017b99bc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6a1d92-5d15-40b5-861a-1297edd4b0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b200ea-08df-49c7-9b61-93892809d1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ab279e-0e02-4b2a-94e9-0bd865ca4cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "492d0459-a8d4-4e4d-a257-f0a973b5e5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e398d0-8b37-4537-96c8-633cffc1944a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebce323-fed9-4278-9921-5de3d8cb62a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fda1912-b904-4d3f-838d-0e386589c6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c0e2ec-a314-4385-823c-aadf925e8ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dafa517d-499b-4b8c-9275-857da47b1c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117b6393-b1a1-4189-a5c4-73802dfa16c6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41fe8c6-4076-430e-9aeb-0695db35e14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76574999-edfe-4317-a130-522923f30f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb895d5-0e39-4e25-af37-f33e5ca6597f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "35206b8e-31b4-4d79-bc1c-ae3eb98f631a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e427d47e-8568-464e-b5ac-cd6a10309419",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0796cc-ed64-45f1-8b37-3c0f947df027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbb5f3d-55a6-48d8-9cbb-7624d988d743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fbb8e4-ded5-4cc9-8de6-894f0461a5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41f6f524-fdc3-46d2-ba9e-aad98ac94625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c005e739-992f-419e-9043-e783d171c9a2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ef2dbd-6ee1-4b96-a728-85106c08cbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21876bcd-d83c-4b68-a571-386aed70b977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fffede6-03b5-4d2d-be19-5f13a9b0d3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6fefc8-609c-45d1-8ef7-e380072496a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28682b4f-fed5-49a4-973c-0e0795c7132f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365445db-5512-4dad-a78a-05dbfe32582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e731c66-7a92-4503-bdc0-ef6b6ae32295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b46ed4f-08e8-4057-8d71-4b51f781ef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "634c48e9-eb1b-41ee-8360-209ab0a99d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02fb30a-4f8b-4dc1-944d-3b40ec4a9dfa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45d1ac7-ce62-4d07-9518-734199ff24d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e7b298-f1b2-47a6-acd3-63e29b59e4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe356bc-5729-46d1-ae78-41cf8cca17fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc55cd0-2fd0-4122-a321-d1735af34675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d04e4d-6c35-46e3-aa33-737c2222c8a0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dd2534-d2db-401d-a0a4-91e4dfe40fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5576a4-b67b-4178-a988-e282a6edad2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9bce66-50b4-416a-b97c-22c1849654f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa610d3-75f7-4990-806e-e336f2818925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b9f6fd-b94f-440f-b4fc-ce95900f5520",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c72985-7b27-46d4-aff6-92289fdfce5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343f0531-9c98-415e-b173-59d1ebc819cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744ea6ec-3757-4b02-af91-7264ea7f692c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "773ecf4e-c263-4ceb-9f73-7e94b0955777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ae8c8e-2403-4f27-aa77-e489cd77c1f9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e62e8b1-e80a-442e-b0bc-6c0fc7af2030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e998dfd9-eb2e-4f04-a630-ac1a8738580f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02da6ad9-e3e6-4a88-87e5-f1534e5e113e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49ace5ff-d833-41c1-8e75-30bd4ad57f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f105cdcb-8524-4d7b-b1ff-b10b56c72b3e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b3dac9-731d-430c-83d8-0b37cfee8e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f8a3e6-b804-412e-a4a8-cf0a027a0db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6366c2e6-b27d-48e8-9dec-63febda28f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45bf27a7-d1c5-400b-9043-d04197e702b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f096411a-b800-4208-9dd8-b889beb954cc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d706a98e-f06e-4b28-b3cc-f20c8fab5cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35718d6e-08c7-411f-854f-d972d5fc2b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335499d1-3462-4cfa-a884-a53273cf1f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c99176-ac7f-4af0-a86a-714473aa0f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8c7f71-1667-4de5-80a5-867d327aa1bf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2533b420-7ea1-4765-8653-d95f01ea2cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a011c3f2-55b8-4d6d-ac59-04ec392c4b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b9c1a0-eeaa-40da-868f-4f14459f1584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24fa1b09-b78d-406e-8b1e-6821af98285e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bed7f8-2465-452d-8bfb-2b7ac2271ad5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9a8ae5-b9f8-4521-8e67-d39e978e0d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b72dbe6-1464-45d4-b264-bad8b94882e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb19612-8154-4081-9525-46054efe17fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3b9eeb-8baf-45cc-9654-040f37d90bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd2287c-f120-423d-940a-c83e2e8d3e44",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842e59fe-644e-4f02-a884-2cb11f5d2da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3edcb8-5d3f-4b9b-8dd0-fde2114eb87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38d9eff-6796-4cd7-bfc0-280b0e368e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75068503-1a6e-413e-9ca7-25a3c938fc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a3c978-7778-4781-8a6c-cf81804f0e2c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7804bac-b09e-433a-a5ad-bc5234da3840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a1bb07-d780-41fb-8319-f6c677b0ab42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d12d8f2-ef56-4407-b05a-9cb4d5f974d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "947550f8-3189-44d3-b340-3560659d4cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24785bd6-a3f5-4f6c-b569-c547409d99ea",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c141cc-04e2-4346-8b23-10b4f78162ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecd2894-9a21-4ee5-8617-78a260a4f9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578ab757-585b-48b7-8d09-f5beb931675a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f12f886a-f083-4bf2-afa1-9c0c8afe9853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3156f9d0-8099-4a8a-a221-e2479398ba85",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cd72a9-2bcf-4805-930d-8e9706754263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1366ec-ea6f-4bc5-a672-a2b420a996a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeb1799-9a82-4057-9540-56fb2d6ff797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "597d27ee-3de3-40b6-8efc-17be4a644b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d536ac2-7a1a-42d3-bf89-eab91cb4b34b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab7074e-4819-41c6-b9b7-469d3eebf2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2ce895-1863-4103-a247-3a9c5f542702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0250c53-75d9-4452-b7c8-79b1aba91fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f414e345-68d5-45ee-ab4e-d53e33dc425a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c1dfa4-c565-40d8-a4a4-deeef094e200",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0542caad-3e43-439f-9dde-56ac72d9e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803653c8-0d2d-48a8-9199-76eca08a8201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f223fa7-51ca-40ba-a695-25fd61dd3704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ba0bc1-78e8-497d-9d45-37c3fcb0a0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ead2bc-a7a8-4c62-899c-e43771dc1482",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2560ce52-5ebe-43c7-8b6e-224a2f215b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bc6049-a21a-4624-9b69-8238616061a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5504b146-5740-4175-bee2-9017596d35e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6395727-eed0-455a-a001-11bca73d9fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688cc528-7d24-409f-9f40-82cb226f53cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e83f478-a626-4fe7-8706-2a9c6799d3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82470d4-a447-4ad6-94ee-dd0397e82fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d21fed-1ed8-4f04-a108-476bdf489813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "61cc9c52-dd82-45e6-82c9-a0ecac4c5186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb79bb77-d0e9-4f54-b37e-3f3d1e41cd7b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb53691-f9bd-4c7d-a0cc-96a143174eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2ab22d-c2af-48a5-b7ec-a0e4caa6771b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418423af-c525-4a8c-ab92-fa1997623c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc280f4f-f7b3-4e90-830d-e6c970bf1de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d78803-eaa4-4377-80f4-7a9b4e891527",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8df849c-7703-45c5-8df1-f4f613ebe3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c63b4e-1758-438e-b5ae-34d96420a333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83178f0a-6645-4017-8b68-ee77686ad777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fdd949-2574-495c-a167-ded56bde6e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892f345e-60fd-47ec-98d9-c4c680aeff7a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9334bf2-bfe3-49b1-b318-91929ab1120b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d372d7cf-1503-4d16-b8fd-77ae3868319e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dde140-9e3a-48d9-959d-a316b1849aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d636b1-b795-44c0-ade2-be11fd224915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41f5ea0-c630-4ff7-b514-7ca5a7ad4bcb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340a7431-336e-4aac-88e6-291651154440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d101871-aa68-4bcf-80df-50177f2ba26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ab4664-3c09-457b-aa31-1ae8a96434be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b418d7-f4cf-451e-9e70-80f0ae367c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff91023-0354-4bbb-aa5c-57d1ef8b8782",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1d0983-7846-4a24-ad94-3a1f75926ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc43990d-0d7f-4c7a-a4e5-4fe0ed98f4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3073157b-5bd6-4091-91e6-5cce66ae1972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7156856c-07bd-4cb1-9e72-5b83594237c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f72c28-0048-4375-ad24-9220dbc287cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939879d1-6d0c-4ee4-b4d5-a6e20cb5e1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc52028-7c36-4fe0-b4e4-f5d3300f6820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36b185e-9b49-4b24-b885-000613d0559d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "115ef2ba-7c9d-4b90-bac7-ba716650eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d2ba7c-bf1e-488b-b094-1ff835a8c63c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0253e1-6fb3-46d2-b882-f9a3edfb326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d998c9-a10d-4370-8654-f941e48f1396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2881efc5-ec71-46b6-8487-9ddb2a7f1334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "704f9bd9-32bd-47f5-afbb-46d21e878de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31285256-ab16-4f79-b799-091a04c6beac",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb9cf59-fa56-443a-b332-7bf40134a8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b136c3c8-32ed-4876-abed-8f9bbc8ca6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c170374a-d4a3-493c-a565-e8e76f3636a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b5ac82-8671-4992-807d-67753040ecb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0f9e6f-cb6c-4965-b972-825ee0ab5dd7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a894b6c-4f9d-46e2-a6fc-01bf9a2ded42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73df0f6d-9958-43ee-bf45-d1533ed3f913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067b54da-3a6e-4e44-9ce6-70b475021011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a07178-cbd6-40ff-8dbc-1cbd2b2a5825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1a68e8-2b35-4103-b1cd-c2e21b021891",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29272f78-4e03-42bc-890b-a9ea3c535eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3661c745-5b76-4deb-be31-3960f6225b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b10a84-3654-45ee-9eeb-0601556f3729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fd0513-f473-4e0e-85b9-57b833c46204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaff1d4-c6ba-4c8e-b582-3b66ddd8e253",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3d2bda-d839-4df3-9462-c388a17ff1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b064fd-2d46-4b00-a1f7-146d0e6ac345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a22b24-3768-42d4-ae2c-7556f1c10f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f281e2-782e-4de3-8f68-43325e2ed1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995dc4ab-3cbc-47b8-bf03-53e4fad58340",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e474672f-7371-4c7a-abeb-03f5343c0abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87a6598-c42c-416c-83c8-6e6065ce78b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382d16ad-4866-4d6a-bf43-7ec50f4e6892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "780454d9-c472-40a5-9cd1-d384b836461a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cd44a7-3205-4e33-99e2-865d022d5e17",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582cda85-0183-4950-8e34-9b4eb40bc3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bfb014-83d5-42ce-8534-06a3b3598c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be236c48-e87d-403c-a787-faad4c2737ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fea1ca00-7034-4921-982e-29f51da6bd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a940fe2-a3de-4c75-aa48-1b5ac5d11b52",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac03dc5-b3a7-45a1-a181-04836a5054a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a02e6d-0950-4f13-8fe3-cb21d0b45063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeec586-04eb-460b-b2f4-b62471e7dc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45313117-f01c-42f4-9928-9d856cdb4875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc14310-3dfd-47a6-943d-8a1448d645f6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2699546-9dec-4d01-9c5d-3cfdab1081ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba2cbb0-2be5-40c5-9b3d-cb79d15bae4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec72881-a9cd-415d-babb-8348cf1cf638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec02e4a2-36f8-4d45-85e9-cdf0d28adeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba268149-5a71-4971-838e-d15d763d0e6d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7377f2fc-382c-4572-aa59-a848d0b9ab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9104d9-78e4-4952-9307-7aa3a997ef23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d0950d-ce84-4a41-861f-1cb4d7930268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b86796f7-4418-4d24-80bc-06d2d56f1a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b8f48e-292c-49eb-ad48-640f27be4ae4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a861198b-e864-41a9-9394-bdec73624cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1cf6c5-dec7-43e9-bbf3-2db4df500cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98d23de-0bf9-4820-8612-093a8c9b323e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f66fd2f-7e5d-463a-918f-2c3e9581084b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a9fc22-21c2-4681-93ad-94a716004f48",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b160cabb-97f7-498a-bf67-1b9f3ee3215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5eaaa8-de0c-407a-98fd-7116c862e59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86108c72-93f5-46d7-bde7-dad2ce7178ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6d077a-e1ac-402e-9ff7-b6c2c0811340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fe4fe7-3609-4bc1-8c27-26808207e0e8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45fed1e-b7ce-4850-b026-0423c7af8451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2cec6d-195b-4ca9-8ea0-cd27ec44d6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25b2dd3-55a9-4a50-90a6-0bb1e54ae4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf53f708-9f69-4372-9b16-f005aff65bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e37d0e-242d-43f9-a8a3-21f13eb35eec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e512d4-e8ad-4455-8aee-1bcc9638e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30de99e-00fb-4301-a517-c7990c8b184e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b4f2f-5b7b-4624-801b-239c8ef60f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e577d5-6798-400b-a9a1-bfa337c4eda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f95b3ea-2265-47ca-98f0-8fcb8af74e4c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842c0ee6-e01e-461b-88b0-2626b44c352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8ebf1b-8a1b-4b0a-8c7b-0e09015a3c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f40bc6f-f916-4ed2-8a49-5cac2b869277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7fbb63-a1c3-45cc-ad29-756979982517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39297039-4041-4fbc-a136-961592d17150",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99157ed2-e21b-4407-8d22-bf3267bdf434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89baa3aa-82e0-4fe8-b438-4a29ef68d791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc931be-88f4-48ec-980b-c89eb034cf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a660ef58-a226-458b-9437-32d95f308c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d5524e-a70d-4fe4-acde-28eb554683dc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b50869-728b-445c-bd31-bd70afdc5cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc014b0c-7633-40ee-98fa-90afa760a4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd237c54-f9c6-439c-a7e2-43abe763ed4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d95bacd-3fc5-4e38-ab94-0cb838891da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e76643c-f1b1-4996-b7a4-d7ca220bd068",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1388a0a0-067a-47ea-8e3a-ed41e598d068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35dd03a-d70f-4854-953a-e4b91799c850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecb3acf-10bd-4029-b53d-7cf77feb1260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2070f916-8c46-4ba1-b4de-163ab4a81a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6e49d9-cc47-46cc-9766-d002de379f50",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1667c4ef-f914-4e99-8408-b30906ec98a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d99c78-59cd-430b-9191-51fd9f18a595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cb639a-3ea3-4c98-954a-58dffbfd7df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3856b72-3cdc-4e37-ac26-3be6d836cbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1310ef7-9166-4c74-a33e-8698d2f97a4d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e09c936-159a-4f42-89dc-cf18b2f12611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c6ce9e-b6a4-4bd6-9f22-3f5949235973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77080e58-537d-44aa-aff3-2726cb760deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09c9603b-4dfa-4832-85c3-85dca9acce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfb7d4f-7709-48bf-8b32-2743d50fd1a3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f05cd6-14a6-4675-9b43-298b9608e27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779f157f-7269-444d-8a65-d6d25a4a7a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09db743-a59f-49e2-841c-d78f263571d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89ff39cb-7603-4556-8ac8-9695e1214369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce50c174-3313-465c-a3a6-4523f2f30d11",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af6e1a8-ef71-468f-90fb-7ea1d89dc426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea5a85d-0086-40ca-aab4-751f0e0c2c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a14a9f-78bf-401d-bee5-b7ad0299c322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc256a8-0e21-408c-a221-57ed67115d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbc3671-e9ca-48f8-b86b-a11e5ed584a5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdb7437-3ddd-4d1d-b2c4-8387d7c10ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd0f874-9693-4517-a424-59dfd13294fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af05af-7d5e-4ddc-ac14-4787daadf8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee282cc8-83fe-4b7e-961a-7519aa81a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31182767-42f5-48c1-afe0-3ca7509656fc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83405fa3-feae-4342-aea3-6363454e07f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a40f10-0613-4067-aae3-af59e51b5d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759dc76e-7835-4a90-9aba-155dc3ce73cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "48a3d571-84ee-43c1-b667-3e98bbcf813f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbc4759-7110-4412-9639-e9050590603e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c3596a-6486-48a7-bffa-6c52adb82540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9267135e-7416-41b0-88eb-e02d32ab93c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e716d700-b98b-44fd-be88-6b801d3e0f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a0b8df-f92a-4ff5-82a2-6f480239aae2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19504c6d-98d3-4596-a300-9deaeb8ad21b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad261195-7e47-4733-a752-ee33618f620d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7d9acd-a770-48ea-87d1-58609afc0c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75fa7cf7-3058-490b-9335-785b4f85be14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb594714-49ff-4161-800e-5f1cc9887dff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7310eab7-e1a5-4cc5-8fb7-c6f2997a5212"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c5f51f1-aa6e-4e19-a8b2-70648426df46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ab94d48-65d2-495c-ae0f-a2af5c751383"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9af970a8-0b9e-4520-8764-d46316a26673",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d295c4e0-2456-4b0b-9a97-11680fe8433f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c66fc31-d8c2-46ce-b68d-87b97cfa819f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e493ccfc-3519-481e-943c-58398256d50e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "40231f4e-7975-4dac-aa3d-f131805fe2a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1c4e0f0-9379-4124-b6a2-b52c43ee95da"
                }
              }
            ]
          },
          {
            "id": "b61a919e-785e-4dd0-9334-ed720dc450ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc366ace-7973-40a2-975d-d59fe639a55c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d03b40e5-e7d9-477e-8923-591e4c41e702",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d3aa16-edb5-4ebe-87d3-0f0388cd3b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "72e9d717-b172-4db8-96b1-8752c4381c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5089e11e-e99c-45c8-b934-6b1953996619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8f8d2a-cc47-4229-9d1f-ea47d0b743ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64dad881-5a67-4827-8a5d-9f6192efa0ba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95f45ff3-6dcb-4145-b544-b1a9b09f4dd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "472538eb-ea02-4225-9b0e-8b04a6472545"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89c01123-288d-4b28-a84e-51cbae833eae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "023e5122-5ead-4b99-9bcd-4d36de4bceeb"
                    }
                  }
                ]
              },
              {
                "id": "c10c1fc0-2901-47ed-b811-883406f92570",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a00507d4-3e89-43b8-ba67-0b96c26df929",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53f2287e-0b67-475f-b99d-5b7ec14b1ec4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f2e7e3-55f9-4a04-a974-e89af563ff63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d2a30ca-ab31-4bcb-a207-2da4cd4ee551"
                    }
                  }
                ]
              },
              {
                "id": "e28fb796-1146-4c9f-878e-ce703ba32bee",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4605a609-c747-4e63-aeb8-279b57ffd110",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db5cbb70-dd65-4402-9149-941eb4465ca4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef88f91d-a760-43fd-aa6c-40ce009d9606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8832fc6-3cb0-4cbc-8bce-cbd32c7ea426"
                    }
                  }
                ]
              },
              {
                "id": "dffe8a77-8f9b-4231-bc67-b768c69fcdda",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1580a4f5-d115-4a94-9f90-ba53a372780b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b086c18-44f7-4d20-933d-957bc2e7dea6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b56f8d0f-61c4-4791-a83e-51590808b3a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aaca94c5-9a2c-497a-93e0-40cafce1d2cd"
                    }
                  }
                ]
              },
              {
                "id": "0a158107-3b30-4ee8-8ffc-92c791ec7722",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9613575-4480-4e04-9e95-ffbdddb951c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62e3d2aa-4906-43ef-8dba-851cdb3b08c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "876a82c7-7c51-459e-b534-49629965e6af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "74020c7e-0a7d-43cb-a2b3-479f8f22e01e"
                    }
                  }
                ]
              },
              {
                "id": "200c9da9-4225-4009-a783-96a298be5e28",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98bba436-9156-40a5-bad4-2069cda8714d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e53bc1f9-4b7f-4e77-8814-277c62759fb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79882eb0-e9b3-471e-b6b1-c1b2920c2eac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b0ead96-47f4-473b-a41a-6b9a007237e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbb2bff4-8864-41fa-8cfd-33ddb20268e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a302723a-cb75-4590-9ea3-35a9469c6be5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7013aaff-361b-4871-b9a3-1d232a428b66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05cf2b0e-b555-429a-b7a4-9b8876cc9001"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b2b064b-777e-46c8-a98e-e4b02c1ab61e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "360eb7c0-055f-4dfb-a7dc-98dfc8788a1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47902fe8-975a-4967-acd8-a18d93b30ba3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf82f71b-9588-42da-a451-701cbecf925a"
            }
          }
        ]
      },
      {
        "id": "04bfcaa2-71bc-4e55-a4b4-6012fe131a11",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7fb002fa-4bc1-446c-8bf9-03762007f767",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32ee14be-3a67-4942-88b0-be5adbeb559a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd78adc8-9b19-4846-973d-620e6cd6bd28",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fb0d5d-671d-422f-aa7c-76ffb9b92947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25473459-bbf7-43c6-a6e7-768a27db3897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adc2935-ca52-434a-b82d-4b9c80121b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "71199fdc-818b-4e03-9b9d-a4c5150a9c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c60171-5cf7-4311-bc67-234646e08396",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f08e405-4755-451a-bb77-286b02a4d854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecb52f0-db0d-49dc-9b48-8e3027abf791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88895e63-9761-4036-a325-697be91677ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e41e89-974a-4855-9710-6c901d422445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919e55bd-ad23-4051-80dc-20c0cc09a189",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2269a159-6052-4f55-93a5-844bafc93892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c43b87-484e-4d68-8a2b-a1a50ee89327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899a26f6-d089-442b-b720-cdf70302f731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be2a112-f791-4669-958b-f3074f697c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d460dd6-ace6-4775-855e-ca7e50bba6ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a30b88-6c66-4701-8072-3b4dc003e60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48edcaef-2147-4c2c-9767-e1e92883d5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa3004-3676-4735-bb88-7a043dce2448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7250ef4-a4a1-4cdd-abee-f9ee2c57e81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cef6619-1d87-4f0a-bcaf-e48012c38f74",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e62640-1742-4db2-adef-f024d629e931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d7698c-e171-4b95-8c48-8985e27a13d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a000130-38c3-4f12-b852-05e87515a995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c256dd7-3f8d-47b3-adb3-aeffa326ff9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e2a706-c7e1-40e1-a0f8-92d3b59123f9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9227dd-f9b3-486a-a8c5-4a059224f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4852cd0e-8f2e-4af0-b7b0-a3b66426befe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122784c7-3dcb-4d33-91b5-dc0b33733906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27402d7b-7e2b-4cfb-abf2-87e1566a48ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38728665-1606-452e-bfe1-93f6f493a852",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2783e73-2f30-420a-a390-494f9095a816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fa9285-55ff-4e1e-b736-f2c46c9933b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c310f3e7-2cfa-493f-8f9d-3756b540a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "811ae451-5868-4572-835b-6762d4173bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b8b8c5-c511-4d5a-9358-5160765cbde6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed342df-3c83-49d3-9f2e-8d6c60bbcaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e84507-2e91-4b4e-bfa5-bbeeba038099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9779c5-1fbf-4879-9ccf-09e4f4b4ad08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "380592ec-954f-451d-aa74-f6d11ce82e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6493e4b6-0d05-4c9a-bda1-5404674995e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f475dc-9701-4692-90f9-1cd54d3effbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad44187-87c8-415c-a32e-1c963c2df3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8abeed-91d6-4aa1-a466-f3aa1b42eb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0597484e-fdd1-4868-b818-4fe2d85c375a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7d4476-deb9-4463-af18-e7e4204e5c13",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af7d608-7dc1-4c7e-84c0-9b8b6ee7ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d68d9d-972b-432e-beaf-43759bee23b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c5f857-d8cf-4ff3-a929-857e686485c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e7d807-68e3-46a6-beef-f8cee88df399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2f9e81-3709-4418-b6c2-9f891b24072b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0206238-65e7-4153-9356-67548481e858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe5bb78-ef72-41ca-a696-cc8f38741c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e0562d-9d89-4802-85f1-20cf151cc935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c67ddc8c-5096-4190-abeb-764c9f4b66cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5def0728-d134-4945-83ff-2d6b0ba7b7f3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7ed3d8-6237-46be-a790-32405286b404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad60046b-2bac-44f8-9693-085544e72172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c6c638-2bf0-4aa3-91bd-7eea26f6bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "626379d8-d0a1-45e9-9863-cd662a6b390b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eac1b2c-d50f-49d8-b8aa-6cf5e89d3109",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb22765-cd50-4441-a002-28a23788942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6311f2-5499-4b27-817a-4c6a58147f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e74336-659a-48ea-8968-b947f3436f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08cab62-45ab-4251-a4e7-0cf84203247e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd17d56-2c60-4e89-a0c6-280270d8f7a9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069b82da-1b62-4067-818e-f18143f37489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c201937-a5fe-4e49-a2b1-e71dcc7e5e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967648e4-01b8-4e9e-8258-a907cc3dc61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbc5c47-5049-42a6-84b8-c49cb376103b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d269cd-5277-48d2-8c0b-c12fb0e38dd6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c03961-1d0d-4429-bf90-b7f057fca204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f9d235-a848-437e-b591-5a68af1aa480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd454a3-22b7-4f56-9acc-100f78d64bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "932b2504-d9fb-42bb-831a-3508a45810e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44de7014-b908-48c7-9124-c100df235188",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c5b517-cc46-4522-b6ae-3d632d24e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990488ed-ebae-4bd3-adb7-3062d4c740cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb8b16d-a8e3-413d-9f6f-8c1299b95a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c1329c-1052-4470-97bf-12c0640147a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38911852-5935-4d39-9126-2b3a3019a757",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1de5d8-db6d-41ce-ae00-d10837c0710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7e8dcd-f4dc-4828-afc0-91a38c39a649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a56d40-5489-4753-b910-bca9a183a6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "152ce29b-5e8d-401b-ab8e-42d1381a612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fea2c17-f560-47d2-8c2d-90e76356ede1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa8b222-41a7-4d78-928c-dc0311d1fa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e43e98-e79e-453a-9dd1-649705763d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4926dc1b-d88c-41a2-ad76-bee14c1bfede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd6e5c2-bafd-40e2-a8cb-a6285a91d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc9f274-6f85-4d2c-bcf3-e6c2ce2ffaf0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e360b894-510a-4c91-90ee-4187adcddb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42dcdae-ca3f-4d6c-96b4-f70dfb7ceb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177e00f1-4a9e-4d47-bc02-48d017051db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f3d9b4-6ef2-46ab-aa08-2ea89f721f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f553e48-2400-42c0-aaee-df379afbbefe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa84cf69-2ef3-4d1c-a5eb-654140ae6e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6b374b-3465-4d60-a52b-97f92cf2eb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583ce01d-a037-4c1f-bada-ebad0a539ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde3e170-2b4d-4839-9690-5c34d581252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420b6f39-0263-423c-89ab-ae404cafecf7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3b7e4f-3257-4475-b6eb-6fbde202c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36de7fc-253c-452c-ae0c-25b6637824f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db020749-f2a5-4f81-8fc6-2ba0c9754aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d2f11a-e6a2-46d4-a38f-b5ea32679fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee299786-723e-4e6a-9323-25d9f9eb1e49",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a346cd39-7ae7-4e9d-a152-c73f24b37a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1f375c-ebca-411d-9d93-5aeffb3b4bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089a83f9-968b-4322-a473-6a4bbae5b799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1287e2d-5fa2-45a2-97a9-64c872051ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefe2370-fb82-4b62-ab2f-e62459a49078",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7280b1e-34e5-4aea-9db0-c7448047a5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f67fd6-d161-4d28-bdd3-d1744c6a20d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085085c1-68be-447a-925a-a899eea4d8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea5f8e7-7c75-4e30-90b1-ad791e02cbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74d80c3-adf8-4893-82ab-e21a30fbf85d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e254b71-5da3-4397-bb8f-67f18d3ed19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39c6982-8ca7-4228-988c-4d3069b3fc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ca55a4-7614-4445-860c-1c12024449bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b869e807-f744-4193-84d7-1bbd23b7819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5069023c-c00d-4e2b-a2b8-6095df11691d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d13eb16-ec2f-4bc4-b4f5-68ce74d9834f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7213c220-32af-4ef9-b3fe-1539c0d98ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4ab502-c56e-48c8-9876-d99da4a2dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ab2d4b-64af-4eba-bc85-8cb6215418e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f25262-30e6-4c68-b816-c49e42c73513",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2362481e-1b93-48cc-98c5-702cd9f7902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb15456-5edc-4445-a205-446e08632dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70985ced-247a-4c46-a77b-68c1f8235889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4b7c9a-2617-4c32-93d3-3ecf621744dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8b5b84-65f5-4b47-867a-79184a5e8e4f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5914fb5b-36b8-4455-a650-bd7d1d94a007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608a3aca-3332-4f9b-b7c4-bf38ad7a8946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452cdb82-f422-4792-807a-f8fe02097ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c79e15-2636-4b2e-b119-4c1f7a54d187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf9fbd3-276a-44f9-8f63-79bec8ae53af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c344384-f8ef-4b42-beee-045d167bc38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8427b2f-ff65-44a8-b281-240bb97f7c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2a8371-50b3-41b1-866e-763d3a9aa4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b2dab0-8fd1-4fcd-b69a-cfbd3efd5575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4d7490-29f6-4cb4-aecb-21afea594fb5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bd433a-e978-4384-83fa-91342fa149ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c7f65e-d8ed-4c56-ad98-5f4868363153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c018293f-0a4c-403e-a603-feba059e48fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71ba5e1-dc55-4855-9bcf-d636cf664164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcd61b1-1919-40c9-a640-ad964965a588",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acac9e7f-4684-4e6a-8cac-91a5e0a3119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bb32ef-a36a-451e-8ae0-5bf4fec52813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83deb3a-448b-4194-be58-be920ec29848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b79057-2335-4e64-95ff-1c4548b585f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e98c10-3d5d-444c-84c7-bd556a2c75bd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd6f160-dd2f-40f6-b21f-0b135e8ad47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3328bd6a-bbe9-42fc-8bd2-9f6bf2ff80bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befb923f-9f5a-462e-997c-c3836914c7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2813c182-803a-4968-a0da-7f84f7e99b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8f18a4-ebed-44d3-b220-51d9e4a3e724",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0a6104-b60d-4d22-86bb-eb31563ec0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bb8198-8ab3-434b-a12c-990a1842fecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d62aabf-1d54-4652-b310-ebdfed6c32fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4d054a-5987-44fc-81cc-10fe29eb46d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "626b0363-f7bf-4156-9b55-ecbce7bbfbae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcbb1008-3f12-4c5f-a8d5-43ed42701d5b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f68222-98d5-47a9-b112-148e33d69a9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d692b56-7193-4a09-8449-e68cb557de81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c97ed47-636e-4b98-a143-17c9f058d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8fd7595-22d9-4f69-bd2d-521d3fc62be6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3694dc45-3ee1-40c7-9599-e517631c509e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25d0a1c8-18ca-4f32-9455-dd36dbc04405"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d2b0fb-fdc5-416a-8bce-e84dd901c762",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1462e80-fdbe-44c3-ad8a-9b0bffa29576"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00cfb1aa-7174-4591-acd9-b21f7d43257c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "201693bb-50ff-45e7-81b8-55984d69488d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5372def5-fd26-4fa6-a53f-04d687e50b19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bc7e456-c738-4de2-abf3-a322b940712e"
            }
          }
        ]
      },
      {
        "id": "af063907-76b2-4189-8538-400d4b6239a1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "94526b44-a62a-4653-922e-f45e7a8d843b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52578ad1-82d5-45a6-9ab1-f080ae695949",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95e18265-2863-4d02-ad2a-bbcd14f3158d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f15d2e0-321c-41ec-afdf-073281f58c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231dcbe5-9a9b-4fc8-864c-075e24e4675e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035b77ab-6fa3-4dac-80c3-a048a30fd00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7cb9ec-3a87-428a-b2cf-5e18929a60c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e3ba3d-c91d-478f-ace3-7b5bffa69915",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1915aee-c320-4e66-b0dd-7c4311ee6d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1621aa-3f6d-43ea-a77f-1b7b7b1990f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4869779-c84e-40b8-9168-0edc6aa1b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c16a0f-6fd2-4dc5-b201-1e4269cfc5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e55c62-ca54-4edd-9443-22636f197f79",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d66ace4-50d8-4774-8509-82b638c24570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c9a498-f91d-4e5a-b45c-d4e7d72478eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec28e84-f76c-4027-bd10-128397a57458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bb5036-cb41-456d-9a8f-92a1691f167b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca68b50-3f03-4627-8124-2e8d20482bfb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb70cf9-d195-4d4c-a292-e1d5ae51c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e245a634-ea57-41a5-801a-b2090565be42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ef6cb-baf3-4236-b9a3-176a7be2ead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d8e300-21cf-4d6c-86f7-b9fac502fafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1afb9e-5197-4de1-af89-894a07fbe086",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee32a98-e127-4541-8737-735d4650ea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80b3e90-7eab-4976-942e-1857a24c3e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82633f6d-d3e4-455e-90af-383a8e4448c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51db1a43-91e5-4aa3-bcb2-523466c2d1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39d2bf0-dd34-40c9-bcf9-c469424d9b02",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddb53db-a403-4179-adf3-f8253d0f8111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2419dc-b68d-4c64-bf2f-5bf5f9b87d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf8d8a1-77a2-49e3-95aa-a855a22e80c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5a5aa6-1cff-4f98-8566-efbc50cdee2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a43167-3de6-4c4d-8991-e4c68cd0068a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beea7024-aebd-4016-ac8c-f5ca2f5fa292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62b3ae8-879a-44b6-a649-b4830176b557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7fc876-9b06-474f-894f-56eef1ddacc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bd22f5-55dd-48d2-b582-eb5a10bf4d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dc9f52-699b-43bb-84ff-af13f496ce3f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b0b314-9c12-4375-a1ce-cb5c8cd23584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574cb03c-ce07-4339-8cc5-039277089c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b43759-b8ec-4b42-9d9e-9702f134bae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de0bbbdc-dcef-4913-ac72-59d11146e8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02e7646-d97f-4efd-bb72-b08c5e95cd11",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8502ec3e-b25b-472a-bf67-0c79f9d5f79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8270342b-11cf-4337-95e7-012ddbe51d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04bde5a-3832-43c0-b7bf-d1087437b870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd52a9b7-40b4-482b-8261-3f413ad8c40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736a66b1-f798-4eb7-85a4-9fd138cf0d1e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb7dda6-07a5-4f80-8692-7fb33c8b822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c99b904-0277-4adc-83f1-4afc85ab2320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1843d44c-8501-408a-b6db-d58b7ad86659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcc78e7-f0c9-4b64-b4c2-2880144e8c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4a1d9d-0c51-45a1-9d8b-cf014d950e9e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2a2fc5-9aed-45d6-9a7a-a1d838f364ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb77caba-3b59-4877-b2f0-929f2a409bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5129f7d1-30a0-4936-898a-f88dd71e08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "24511022-ba3a-4fa4-acda-bdfd0b47c0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3940f98b-25ee-453b-8294-38b11bea549d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ae6496-844b-4bc0-b2d8-3c3a68bb7915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf12fb4-c8f4-4b08-beb4-f72fbba2a856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7eb140-4e74-4d91-b74c-b908d9635b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9179b72-a277-4be3-b2fb-1cdba0f5db86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6da9295-d5ec-4216-82e3-805e89f99a37",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7da4248-3f41-4f24-a1d4-7120b07bcb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e1f4f8-350b-4b8b-99b0-9d94f67d860d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6d5254-2ced-43e4-b16f-1c8af6cf28bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23b4bb4-7a7a-4464-bce5-f5749fd500c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c13fc20-9b5e-477b-9de6-4f9f23866a3d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a84197-0f3c-4d5e-b7be-100cced759d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73637aa8-b2db-43e7-a743-676d374e8aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a5e267-ffd0-4731-bd43-b42b2e9974a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc870acb-f9b8-48e3-bff4-1b61872e7cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8dbf9a-ddb0-4ac3-89c9-9b61ec239feb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf87857-af97-4be4-9715-95da4eaf147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61aa2d41-1fa9-4ef2-a55a-3ad033ce63da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fad4bd-8e7a-4cf6-8e00-ca54d32747d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdae9a8-e829-4651-810a-9094f6c121ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03466dde-f3a6-4551-8f67-99ce5384397f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82f777d-eeca-4622-89a4-4c419c3e86d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ca8fd9-e49a-4215-9741-b754185acc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec75c56-59e1-4859-905b-d303ce9d5590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b1c570-7316-4222-afcc-603bd25848b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c4d81e-51d8-485c-92c6-4ae732099be2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4443b2-8c8a-41de-8e4b-59fc7a3aec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d966dc04-61f2-4821-8e25-32a33ca6682a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54c73dc-4999-40c1-aecc-dd878654a6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f41f8a29-9fce-4608-bf1a-453715d0e1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a32f3b6-13d9-4ecf-9ff8-e0e676ad6e8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7b95c7-69d2-4cf4-aa0e-d7e81e2161b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff8dd75-c084-49e0-9d3f-d022c8b700a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761339f5-5eb9-47c1-bea6-a9c59233c050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94fdd844-fdfe-44bf-b82e-39748e20b56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff292682-1c24-4686-9d73-4135a6ae9eb1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885d9f7c-6a19-415b-8b01-0efebb882845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b57d7cd-26ba-4b4e-9c25-a667349c73a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717219ee-251b-4890-b3d8-63bb0ff207b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37499fa3-4fce-42f7-b86a-9c0c69e00787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7aa31c-7f5b-41d3-9ab7-8f88238869c7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551cc5e3-da44-410e-b55a-87605e9d5061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c7563a-d979-44cb-8cfc-0579214abdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6e4f42-cbcd-4c97-9609-31149082e5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0067f7a4-516a-453c-8fb0-473fa5f47f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e9670d-5693-4952-9380-f95f44ea6b09",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94383db5-b779-4120-817f-d1ad4fecd7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17df522-3127-4761-98c7-7c1acf79f558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34790a5-8758-4cad-86ca-7b80bf50a6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6854a865-d2f5-4d16-890f-ce248372c0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30994168-4eef-4a1c-b6b2-eb5a4b1f1563",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92239ae-0cb4-490c-83b7-abd77f516752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da237825-6433-40b3-af79-7cdbc17953ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0457e42-b636-487d-b4b2-682464ea8942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec98ce8-71e4-4fe5-b031-7dd455c4ea4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c7745c-d83f-4667-9b0d-6dfce88d4257",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226b6798-6cd3-4c23-a8e8-34917de16ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72047184-c2b6-40e3-9134-49c22107881e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bad169-cfc4-43a3-98f0-bf0fb4bebf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d00ad4-247e-4f35-9db9-0860db2bd5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657e8768-9fc8-4964-bf3d-4a7b8c73b8fd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529132eb-e8a3-4db6-b5d0-9e8876c5b059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5783f8-b58c-40a9-9a4b-e745a6af689c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541738ac-630d-4050-acd0-4296ce5503f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7654ecc0-76fe-48c9-9bd6-e50286731259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037eb6f8-d7ff-43d9-8ffd-6add5130e6b3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa4f72a-9637-48eb-baee-897d5256a02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee80fe39-6f44-4caf-baa6-c5ca95eb0a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241e7b47-11e1-422b-8e5b-d130f3ce9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c05b219-061a-4f51-98a3-07459b3c9a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152fd636-f257-4eea-bbe9-7c55748bd2b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9e432e-e611-4572-89a0-da25e2e1f410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccaf3335-2d4c-42c8-b6d0-be8dbf16f20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5135e3a6-779a-4729-a9a3-cd450b4e7708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca839dd-4a4d-4e75-ae6e-daad7a591e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc775920-1a07-4fcd-80b6-e0a9b0d0d525",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1086068a-a7a5-47e3-8b62-7a9c419fa098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbefa322-0ce0-4e0f-afc5-f36f856ce057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99469733-0091-42c9-8b82-f5572813de0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f74bbb-2a8d-4ec3-a662-e49d16e1283c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae422ced-b5f7-4e31-afe3-b2454e140929",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fe56b1-ad26-4dfe-a4a7-5eeec2ff560d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339b48a5-dde3-4caa-b1bc-e06a43c5c13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff511558-0302-45c0-9256-01e4d03bc39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc1ae79-6880-433d-87ac-0bffcb5f85be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd67943-1e31-44e3-a3c6-ddd32c715aae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be4b988-bbf4-43aa-ba41-e2d4eded0278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b6b2bc-3a73-42e1-8f4b-778697ebee0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26417d9-d041-4a7a-b11d-e2a072d228b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ad73ab-89d6-4db5-828b-989f9ae9b91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9a5bd8-51d2-4db6-a8d2-235f8dc2245b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fb6865-f0c5-4385-bd0e-688fd8e1c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167baa39-61b3-49e8-9006-6fdff3824680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0823749-212c-433a-a69c-36aea698d050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062760c8-f0e1-4179-bf4a-dfbd5d421533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6efd4f-f9cf-40af-9d63-161dcdf87095",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7724128e-0bc8-4161-a355-a031f0760895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ed2784-6846-45e1-965c-30b067017b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa90fea6-3c5c-4aa8-aa50-e317024386cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78866dca-13ad-4e83-b26f-3be3197659e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23664f9-4b78-4ffc-9fc4-9f5b865b236f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aacc9d7-c66e-46f1-a0ff-de41186855d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96df0da4-0421-4605-9a24-d62126713e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd91ccaf-0a3c-467e-b874-90506ffe2b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3cb5b3-1782-4fee-8ec2-737e666e4d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d09ba9-2c6a-44de-8fda-2c9f3f0c7b07",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1fd46a-e1a0-41ac-9b2c-34e8d9b0547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b590c25-89d9-40c5-9ff7-95b95927d6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f52447-e3d7-46b2-bfb1-eb5f333d306f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d2d748-3696-464d-b3ac-7c85c6596ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7898d8f7-88a6-4853-841e-49066c30f250",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7290df2c-845e-4607-b943-14f1dc74f629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f418c9-b46b-4f78-aec1-e471d64a78b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5a154f-baf1-471f-b3da-930c1a549d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b7b529-93ad-4dbb-a2a8-4e2167841f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ab2cdb-56f8-4e5e-9c5a-8169ba41b23f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9a765d-73e6-4b53-8b80-33675ae9f233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac3575d-4e56-4471-a6ca-05a3eaf9141b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3904a86f-5a20-4cbd-9afa-405a29493595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d201c8-c010-429f-8554-a588ba38323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae0a007-ca8b-47aa-a316-12ee57091ba7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049a14d6-4cb5-4168-a7c8-74f8bf47cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2967fa27-72be-4cc9-bfa8-8ae59c0128bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e42f7c-3f98-4938-8098-311c6c892eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c064e17c-1abb-4afa-8c53-4445e2e107a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26ab7fe-cd84-480f-a389-b3f29f5a8fe6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf295cb8-9242-439f-8ab6-cc01fe5d33d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe0d16f-1968-4da2-b9e0-7549b13d00d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bff5f7a-4461-40c6-ad26-6abbfd55dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2726625a-bcbb-42c2-aa6b-7452f0b7b3fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "beaef80f-d7b8-4de1-b500-10d6607a5d1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2483222-276a-4001-a6f9-dc601a309b72",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5467243-142e-48ac-8189-6beebb75f24a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "182616cd-fb78-46b6-9ac4-becf57f5682b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ec13e9-a4fe-43a2-87af-216820eaf4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01c40a5c-ef1e-4f07-b146-5d5501507c39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e7d2a9e-0aed-4739-905d-7e95d13c62f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "087740b4-cf62-4e75-b5a9-798444c287e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ad4c16d-0b28-4f89-a3aa-11a4c170c3c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b8177f2-b60b-4179-8953-46d3f004e5f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0626916b-8627-459a-8908-a7d2348a9ee0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ecca55b9-a3a1-405e-be57-63f320f104e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59700c49-e590-499d-b647-cdf8358dc04b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9429c7a2-c197-4e7c-9bb9-78fd02245398"
            }
          }
        ]
      },
      {
        "id": "4b122459-d2d7-47cf-bb51-e4145baf025b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6ceda703-4ddd-4291-ae5e-e5f34dbdc6a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b50416f4-ce84-4dbe-9fc3-95926324c39b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5f6e6ef-649c-483b-afeb-2f054e6438dd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3bf46a-dd34-4a2d-84a7-fa7ec49ca8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9b7d94-230f-469c-84ff-25de683dc4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd328b85-4350-47ff-8953-1336a2fa3d09",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073abc64-a013-4c2f-8fd8-2b4534a6fca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb49c2d-85c0-4461-9522-7575301de9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52954c84-69a5-4b45-809f-decd8aab0ba0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee325908-a228-401e-ba8e-8b40aece89f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5320acd4-ed24-43ba-90ac-a95d6efa1a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22420f-b7e2-4954-b98f-6872aeef5367",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5af07e-52e1-4a42-aedc-fa8055dfb9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46914bf0-dab4-4169-81cc-56ea03984bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0feef5-83c5-4394-81dd-f132816df751",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871289a8-c118-4406-9507-a63e4c08bcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bff017b-e476-404d-a1f7-373f00c718c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2231a12b-017c-4ae2-a19f-1cd8f99e8e10",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c6ce28-e23d-4e7f-bb31-7dbbd464f8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae81d98-8d92-4f58-9c19-4f103ffc0070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761667ad-fe98-4489-b908-b667a5fb49c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f8acf6-805d-4e6d-895f-89dc7cf2380c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43401b8-0b10-4050-86ab-5b2f22b310a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6810984-83d4-481b-9545-bd0312c5f61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06205a8d-258d-475b-b170-d943f38238a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc61b25e-f1e8-40ea-9823-c53812512976",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d174c0f-47c9-4fa5-8a1c-f5248925172e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15214924-e6ea-49fc-9ff9-02a970ac629f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d1540-b08b-46e8-9448-3acb3e9c4be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b59d09-5918-4fa9-9689-02a21ff361e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5af748-fb27-4347-85fa-0c3d85a96eaf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3d4721-b827-48b6-91a8-bb3442759c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfc2033-cae6-4ffb-b5f8-b53c09b645fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d177709c-1347-4ffc-a762-74e446e09b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980f80ee-5a67-4a83-966f-6857897ce5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feb05a6-61a4-4691-877e-c09801398487",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b53ab84-8d40-4e9f-9abb-de87b9498e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62936ee9-df8f-4908-8a8a-6490f0963eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4fcbae-5608-44bc-80ea-f51c1a902af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8fbd62-8285-4414-8b2b-2e6077971472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbcc9b5-14ca-410a-bb92-e435ccc7c697",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a3a432-9b69-4f7b-a4ba-9d1c7639f21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02862397-a4e2-41eb-ac16-42587cd40348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040dae2a-9506-4284-9abd-4a682c751522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e534d2d0-84e7-4858-9fd6-b17dec0def62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df80e00b-a792-4cc2-af07-b54234a2affb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d223649-b273-4cf8-a268-39f2f919e45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e927395-f35b-45c4-835e-f10db7918863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba10697d-0269-453e-b0c4-7fba6605223a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346b9ff7-17b2-433f-98e3-198548991855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b255300-6a63-4e5b-8eaf-d3833031ca9b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975f4b5d-a798-454a-97f7-898003e6c483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d057496-7b1f-433e-875d-f36f6e184548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3299009b-810a-450f-830b-c8048b97ef9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947d4d5c-a46f-4404-8d4c-6418ddb94d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02225095-4eac-470d-9288-7f975443f8cd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f45b40-dd0b-4863-a3fd-6854bf946ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c5e8da-b274-458e-96c8-ea87538f6d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcb7dd9-9d20-416f-a75a-bc33b5127992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb6df27-3677-4cec-a049-5d47058dae57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29d94f6-d207-48f8-813f-9685e33b2212",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289d5efc-b41b-4fcd-8349-65180d9ba49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0d1ef2-f4d8-4e81-aed8-60d0c05d6706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae76f44-1f86-4cb9-b29b-9d22c3d4b352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c758e9-9d7b-4527-af13-d27b67e4a175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b210089-3e05-4b0b-bb50-c39ff4354503",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3867973-5ec8-418b-8a4d-ed1cd5906203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac42b0cd-6762-442f-a3e7-3acf62302144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8011ef68-6b4a-44db-8788-c557896c9127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5abe7a-d03d-4ee1-96b5-c42fc020e7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2555c3d-f560-4f0c-bbcc-a5f1abb00aff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07d7f7e-5940-4961-91ae-b7cde7cee717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3f03a2-bab0-4fda-9ae9-85caee831a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1eb451-961b-43de-ab98-b89177c5dc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e132831e-38b9-424e-9197-b5a0c0908d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8998dac5-6901-473f-a5b8-7f4d23c8c703",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919126ee-9bdb-4338-9567-30ed1cf69dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e9826b-47aa-49c7-a338-26d49f9aba99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d955fd34-c9c5-4796-9ec4-9c2e8f08adce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84af62fd-8e1e-4c72-8aaf-0ecbfeb90af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684ecde6-8934-4ceb-b125-adc3cb688b58",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d85407-f70b-47fd-b20f-d5cc000c481b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d515dc8a-2b79-4bf6-a824-859cf1db55ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ca95df-d20e-4d72-bc88-b0fb24ae60ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375d9dee-e17d-4e82-b502-ee75b4e127fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceb523c-834b-4946-8844-495c6c9de8fb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f103666-a5ab-4dce-9854-eeaad6835a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e511d5f6-6c57-4968-bbec-04eee19c7763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8795d11a-89fe-4cce-ae03-2db2002616a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4aa3ae3-9e2a-4320-9833-a44dacdd8631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efab2cfb-ab27-4c0e-a5ad-7ac03c823142",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a160c-c5be-4c4f-92e9-735ac389b09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e59286-2851-404a-9c2f-4688a3534ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057988a0-fe03-45c9-9c0f-643a89d90f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0164f5f1-d45a-416d-bc25-91c58523e118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a95ebc-3dcb-4bef-9fbd-4c4d446efe96",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf9c98-c6a0-4618-8ae6-c77f34de5ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fe6478-981a-4061-99e7-da65d0087758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76986c55-66b4-4f1f-bf97-67e9cd7e1ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d5fc7e-9b25-42e6-86e8-26ff4e48b852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bb27dc-7890-4388-b75f-98fc7a477ae3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c60a1b1-f36b-4201-b04a-9bdaf8d54028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3c4caa-97d6-497d-9c7a-d7e46313a97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e63dba-7727-4c26-bb69-5b5ab89d7beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f35ef1d-c24e-452c-b958-e1cde017e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1371930b-dbb9-4633-b437-ed41e80dab79",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6c01dd-5be5-4d7f-90b2-071d0baee5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991285db-d598-4734-a1ef-96e8141ebd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c735d3f4-2f17-4964-8488-f00225108b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458fcdbf-6ce2-47ad-a91b-f982a0510062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64de4c30-c1c1-46e4-8e59-93f20c6e4afb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b14862-e2f5-4231-96b5-f279498b08b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb8d4383-69f5-4780-915a-ce4f1fa78239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08166318-f457-4c81-ad1a-0b80d503b49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbbfc9a-866e-4757-ab46-7a1d1aab8820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de53dc93-0a19-44b3-8c0d-52399f97868e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5da50a-42e1-47ef-ab35-5bcf81b563a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94181caa-03e9-4f82-a2b1-cd60833c9652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f607d1bb-f2f0-4035-836b-c358ac50d5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29f5301-55c2-4ae8-99e0-fb2ade5ebcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b674d285-94ec-4a65-93ef-16e75e40110f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1f8f08-3961-4485-ad81-cb8883126149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68c576ff-35a7-42f6-9cee-ae52308b38ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddf3bfb-2dbe-4846-8967-b349daa86bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308a9366-5e48-4b1e-970c-b093efdcc850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ca3042-e3e6-406e-9ad9-0e0e0a888943",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20827e14-de7e-41f0-9a5b-75465e0bffdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd46a35-1eaf-4714-8f9b-ea139829bc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53734df-1320-42ed-a861-579543906d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c9d658-3197-400a-8701-5af41665ec00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f23bf3-dc60-4c48-9f26-137c28bc9928",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4cccfa-9fd3-4e63-8f9c-2f42ab2927e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35ca3008-4723-4496-95ce-c48db10b51de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b309308a-c847-4236-8de6-a947499a32ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96710986-f546-44ca-92b0-5993e3d77c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf03ad8-4fe8-44bd-8660-438d6e54f09f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eba55e-b7d4-4c38-ad34-110e59de623b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba960f6-eedb-4632-93f6-e19599261702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26de17ff-6e73-42cb-8a74-5d580f723e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da30732e-a29e-4d00-8cd1-be1d1e70af11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46550c5d-c930-4de4-b7b4-96beb3300ac2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eddf68-bd41-40f1-b71e-6bb367bfc445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ab17ca-eb07-4f3f-ba3e-cd23b916fdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d02cb34-1591-459c-8b72-04690978c0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5c9c27-4cd1-4f8b-a8e4-c9e537378ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159f9c21-8249-426d-9c7b-24e9f3a8e9a7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543534d9-0780-4a8f-baaa-0e780d5596ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d3439b-46ef-4a55-92dc-dcac630d6e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467e4f0a-66d7-4ede-9ed2-e5f0c7595c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147ab22b-93b4-4f64-a7ba-25c45f3ca531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b29985a-ee98-4d49-80b3-df849e1eebcc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130000cb-134d-4677-88f0-44dd934a4713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb4f590-24d4-416c-a29c-9ecb38e06223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef6f009-0b8e-4ff6-92c6-1e57a69dc47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e88b8f8-79fc-4f97-a92e-5a63be77b719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc7986f-bea6-4383-b781-0d36c5376d3c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497a7436-a7ff-4085-8f52-0470e60ecddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd574e2-182f-4115-9840-1d6c71cc6833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd443e-c40d-49b1-8bd4-ceb15be621a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbac015-88d8-42c5-b204-881af932f557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51f485b-dc60-4a48-bf11-942fdc8fd80e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc9f57e-282f-4f5b-b27b-47a0b57da245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8e1f6f-42fe-4e33-b0d0-a5c87ac7e740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1e5d8d-9c1b-44c0-80d5-a066cd84d554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee8f9c5-e16b-48de-b06b-468e091d8a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e7e796-3111-4875-90cd-2c29b6485196",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29021d8b-9d0e-45a3-8da0-cbf6578ce723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4385bca-c9e7-4371-ac64-5440f0cdf425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a548df-e45b-47ad-93bf-c57f3b7e3479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566b3f1d-c9bf-4787-af81-2e30b7397b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ea5d35-9885-48dc-aced-5d5b86cb2b72",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381b37f0-17bf-4fca-be3b-9c847b46f6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb12da-e63f-4954-8ab6-f41ec07dcf63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1671e07c-946f-4e71-994b-11c8f41afc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e340b7f1-9b24-4a00-8441-41e55a2d876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9b47cf-4d0a-4797-9fc1-e4a6965e9409",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759f1765-36f9-4f9d-a498-7291c30e1de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca0ac59-504f-4eae-b5ad-984b8115096a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2969d3-6e27-4735-80d8-9f1f1c4ab8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10df5cfe-90c6-40b9-a05b-05563f8dc681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72466dbd-0e59-48bf-83fb-d5c58679bf9e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850366c5-8fc0-4de3-bb8f-1fc399d9b797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44d02c3-5cf9-4b89-93b6-0cf173e199ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cf8828-d88b-4210-a8dd-08e6bd54ec5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e381deab-8839-4e2c-83ce-25d988f958a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6a6b6-bc5a-4a6a-99aa-5f28530ebf91",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b135d350-2218-4fe4-bc55-b184b3cbe70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb3ae3f-f126-4a24-be18-8e41d99ceb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eebe58a-387a-4893-bcf6-41884547e070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0533e30e-f6fb-4c65-8316-e606146865df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24444678-6f90-4f6e-a019-4f5cb6d2101f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ffb28c-4f35-48ca-8449-7b4b7091a2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953f9168-2620-4af8-a1cd-1ec9befb88c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcb0d87-064c-4a3b-9d63-ec61e071eedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1d35e9-bd46-4953-9d34-a8f4ed105298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27ef11a-ec92-4063-8a3e-51a9a882f560",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911ad7e7-7446-4506-8527-1dc549a0727c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedc0977-e616-460a-835d-19282c11b1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ce3a62-9b80-47ea-b7ab-83b061add2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c31873-c17a-4241-a619-93ab0f38d169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d45fc8-1379-424c-8e83-35497f1db591",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635f4d3d-4f4b-4f9b-83ca-caadd920e89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d59228-e56b-4c43-bdec-0161c3bf1e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b4a30a-a4f2-495d-97a8-a5fb0590048a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf732d8-2a4e-4c73-adb4-b09e92ad428e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc722de4-8161-4e95-aa61-352c231f5d45",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1d4b93-a3af-4868-aebb-102c4d17af39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e150084c-4cf7-4e9a-9765-9653f2dd2ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3f16f3-8690-4ad8-b342-3fceda1b154a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf0e983-c2b4-4a38-ac1f-f596ed1fdce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f50e6d2-674d-440d-9768-3af83ba00439",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5da0a-8e32-4f60-a1ce-79ea1511cc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfacf91f-b53b-49b8-91a9-68f9bd487b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3fe473-baa7-4f34-ba81-e73d6d5b4d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a719f983-588c-4fe1-a9aa-9e9893b4ad3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997d171a-5097-467a-aab8-ee7efe4bbaff",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ade445-dbe0-48ee-94bd-27ff4f80231b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344b320f-daa1-4feb-8c97-096663859a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890c3ea4-24aa-4ff5-ae02-31fa797c8699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369b8eee-7b6a-4c95-bf3c-336d941b8cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9723d310-4bd3-401f-986e-b2b6c7ff5211",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2a530d-aa1c-4219-8354-1075380e2a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec97de03-86c4-44fe-814e-33194450fe4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d24f81-60a3-49d4-a640-7f0508008592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d671bb5-88fe-4ecb-b789-8acf39b745d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db45d01c-4a9b-43cf-ae3a-446a521adaa8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cad06b4-d83c-4f17-9458-c76e23384eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e911443-da5b-4b4e-9ebc-b51c6ac4c94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b1f733-ec55-4e28-a404-7f135169a64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86b7c00-47ba-4148-a767-1bd9c62f40cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1141646-f5f5-43ef-b553-85a7a87ddc7e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade5a76b-820f-4a02-93a6-8a6ff8a8ccc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bfedd3-3221-4a50-b6b5-020cf47895e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182f5014-b304-4e99-abd0-2208d6017318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fe03d7-203c-4c2c-ac5e-797a8b5f4e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f9fe94-d2fc-4102-8044-0fe9f6c3114e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3d9730-e86e-4078-bd78-3640d89effc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c5a7d7-270a-42c6-8867-41fb85f06595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ef1600-736f-40af-ac1a-2f4092da7ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934c66fb-e922-4537-8f75-bdab325219e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d77d954-9ed6-4c05-a64f-9fa94b5de7c3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e9d0e4-a3fc-4347-9c2d-239513279c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35502814-986a-429c-b8a0-ab08491c9fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dae3e5-1be4-48d9-ac35-7fd460362ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bc526a-2aab-45c4-8bdd-1cc92c34d960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f2fcb8-139f-4fc9-87d6-3d1b78029254",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4667c44d-5b26-46d3-9d33-b82d8c99a665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bac3bca-08f5-4ebf-b049-58d77aa0814d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4a025c-d301-418c-9bba-34b122826d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daef989b-9d00-411e-8ca0-a97a8fcb92df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd3c65d-6fe0-471e-b595-046d64c9c2e2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccf1f19-ab80-4a30-8861-ae06f11f75ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b41c94-f01a-4ae5-aebf-3d26c253bcad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0e48fe-f9ff-4964-bdb7-dad720f37628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82b44dd-d11e-47ea-84b6-e49bd4a57828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c4582a-0e0e-4eae-a6de-6058dcfcb26b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1458d5-9363-4130-8803-e837c8b0c9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68d4c97-74bb-4f50-a954-459d3a979778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d752a4-4146-472c-be03-3a60178f06c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9e743c-013b-4eea-bc21-2b7151899b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99493bf-8991-43ca-b82c-ddf162c42277",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9b22ca-d32f-41d0-8879-0b7d4cdd6ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5952d55b-e84d-41cd-a699-b178696ecd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203caa3e-784f-4df2-baf7-19ccf357d00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a57afe8-d19a-48b1-aa64-529983c4fb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fc684c-0631-40b6-96af-29cbcd698ab3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b99498-f337-4706-b49d-1fc5c06987ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f52c72-23ba-4471-b636-384ac31cc6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f9f55d-c658-4c0e-a28f-834cab51071b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da5d530-dcc0-4542-af34-d3ae66393212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56ab1c5-9c72-4530-87c2-8838db057607",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05590cf8-00b1-4a8b-9508-c017877dbfca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618c2505-9bd1-4b08-b4b4-e121964bdb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b15ec25-2e0e-4fa0-93c5-9bacd283d3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1a2ae3-acc4-4d38-b150-63f175a9c00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6887263b-0ea5-4c9e-82f3-fa7f65f4e928",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b6113f-4b25-45ff-bdd1-2ee083457e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158a8cb4-4110-411d-b634-903e1b5823b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b91d1ce-3b46-4817-ba9b-5cf46e75c9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f393b3-9f61-45bf-880a-af79067ce3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0a61ca-5939-4f04-9b0a-8a05effb5818",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2438edab-6a12-4038-a3bf-0a431ad9a142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19faf799-0871-4fde-bc2e-9f3267de90d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e91a27f-32af-4ede-86ba-6bd90532603e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d12856f-9a92-43ff-a34b-09193399718a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba951f-c4c6-4aaf-9308-32cda3accfcd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0947d51-1fb4-424a-86fe-a6e858a8f741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec565a4-0ced-43aa-bb05-eaa21433cf10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86f1da-559c-4880-98c7-4227169e2256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2e5c39-f5a9-4a1a-8dd1-539502b0b6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32031db-5e40-4290-9d1d-871dffd6d073",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1b4db2-d1d3-479a-8b9f-83e06ea371f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3be7870-a376-4c0d-977a-58c5134d36b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dba647-bf7b-4686-8e0a-74a186aa4b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3566ff80-c8e6-4377-9b94-556c29bf15a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a604e677-ce21-4380-b849-029c521a0805",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebacdb03-5956-484b-8aff-80e9bb1d3e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e21fcd-aa49-47e9-bf3f-d59891e96c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3688eabe-8b66-4ba1-96de-1d151197a3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a2fe22-5658-4654-ae0e-cb1e4f1547e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848974b8-7bf4-47d9-bf75-96ee303c1da5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bab52e-6586-4680-a571-dd483055de05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca0860b-1824-4f08-b568-91d2575c9639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2040a576-b90a-4278-891a-1663277c02c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9246320b-f6d5-4e1a-9364-ec963d35d5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1ae44b-5000-43e7-a046-608290049bc9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721fc146-dd56-49d7-a4c7-78d499052f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58767577-06c1-4090-a5a9-0f7c39c6f659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db57b05-a767-47e3-9f78-7c8d36928e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca60496-5e5e-4f62-b042-4073c26c740c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247fe59a-47de-44a9-8ef1-c41465f07d07",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0d17f6-5a1c-49a0-94ff-a62279e814d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b1612e-aae1-423e-a501-e2ac0faa18e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207ab078-cfa6-434d-b517-ff926dfd5250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d93a519-9784-4c14-a216-49e517fc04bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c569d-4ed3-4893-99c9-9e50b5e49ec1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6d80f7-28bd-4a40-b31e-61a32f7ab5d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a2cfea-8da4-46c2-8d0c-775157b62b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d60452-e667-4e2e-bd73-c2b1d8c17f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a41335-0468-4b98-8d8d-7c87ee6af6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8cf245-67fc-4a60-af57-1667c54fe305",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f39b91-ea6f-48ab-ac33-534e59173f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf844e98-3573-49b9-a621-b6f567d23a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377768e7-e4f5-4397-b518-31e01239d17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9420b335-a782-4443-b4f1-beb832479843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb64060-6493-436c-ac44-520fd700fafe",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2e2d23-30bd-45de-9547-7f8a3349e7dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3bbc5e-522d-4865-a462-3d6f1ffc35c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7976b2-7f87-49de-83c7-9ce0056c6293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012fccd7-41c8-4f30-8eb3-9465c8ad7c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0af40a2-abc7-49d9-94b1-bc264d6a5d2c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d5ecc2-91bf-4ef3-996e-13f4de0009bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3e252e-6cd9-496c-ac23-96be30ce1b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f5b8df-9503-4397-b2ee-c97eee524025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdb6187-ff85-4d6b-be4d-940eda962779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9beca1e2-f5b0-423b-910f-643700d98fd2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7706f1b1-627e-464c-bb2d-92548d4a2f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47feb5e-f708-4068-9181-e4579d989c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab8bab8-700b-45cc-85df-1c84ae353e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8963fab9-d77a-4284-b49e-56feb8765478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfea17c-d8e0-4955-9bcf-6259f5b686ff",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6e2bf9-6f06-42b6-bad8-515c601a169e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519413ef-9332-412c-aa87-2097a199cc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0ceaae-fa5d-418e-a1df-39266c7abad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fceea44c-fda9-4db8-a597-70fa065c87bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8acf87-c00e-4b32-a962-1a725b531688",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194ffd7a-2046-4c09-849f-8007138093d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e4599b-0bd4-41c7-99ad-cb743917c1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1136e9b9-8aa4-42e3-b16d-222511f250af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e80a38-2561-4f49-b9d6-ad661592dd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b1c7bc-ca0f-4658-a7f0-7c8bb67e6140",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ca2d59-069e-4925-8ff4-6806738596f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78be5e7-401d-4c1d-82ed-27d9f370fe17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b53fb8-4187-4e85-b622-4f6d94bd3903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b315092-4c19-465e-b78b-caf4a8a54acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417aac7d-ebd5-46a2-b69b-2120762eee1e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc53d59-e5c9-4c9e-b81d-4a81c84499dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be06b28-587a-4104-a702-040f845689d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3534330c-e2a4-473c-8fff-d773397f7903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183930e4-d9b1-411d-8816-d30b5fed588b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cceae3-482b-4080-95d0-802ae1e29acc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b60ac90-3ea4-47ad-b3b2-dad4d4b0d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c000f86-9ed7-483a-90df-dd212f747919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc632c72-b237-4713-9917-c8344f96b39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23258e1-9dc2-4008-9f95-8064b4160a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bf47c6-53fc-4865-9c15-b8bbb5e2c22b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7945bb85-8625-4d42-bad7-1e238e90e1a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052e6b89-5425-48d9-b9c8-733e049badde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a0bb8b-4c50-4d17-b6c9-7e96ff4d839a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c38c1ab-4dce-4c2c-b15b-53aaf8754918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948d8c8f-932d-470d-ba7a-61c4db86f035",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc74a8d0-599f-4926-8270-88e5e3ae6b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f77668-878a-4160-8015-97b0b8bca98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7a6ac5-b1d8-4642-9a82-70be7c9c315a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27997902-8957-4058-adcd-9f610045d3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca44494a-907a-46d1-848c-1df6820890c9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3f9314-af34-4edc-93b8-304dbd28c137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4953654f-c122-4107-b5ed-ee2cc7c3b55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f23199-c664-449f-96e0-31635c99c65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb3222b-5eb7-4796-b0ed-744c3840e953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29f0868-2ee3-4dca-b3e4-98f5b366003c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a632fe-6667-4775-a1e3-a80b7d1261b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad349cce-e33a-4e37-8095-a235e54272e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4221c5e3-3015-4d4d-ade9-de614fbe1fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4607863c-dfb0-4c48-914f-3433758d0e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79b2366-c6ac-4b1f-af89-3187c8e49096",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d705a891-c604-455f-bbca-c9b486d226bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19db18e6-9b47-48e7-ab34-20c7fe6ce3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ea1ecf-0279-4ff3-8a99-ec97488f97f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdffd43d-95d5-4188-9a4e-094d07286c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c822633-d27c-4b57-a752-5fa619a5ff31",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ecdfae-d438-45d3-86f0-ebc240665b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d98f2e-0966-46e7-a724-c1c185bfa343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a9bc37-cdb6-427d-bf67-c8928026a05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9756a1db-d1ac-4654-975e-615ce93028b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5de6ab3-561e-4acc-863a-e2802653607f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b875c5f2-b436-4e44-b1a5-0087ce9c2ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0b241a-ab26-4440-a4bd-ed028c265882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4041bb-c1f4-4797-8832-ccde178077e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4b93a2-689c-4462-84f2-2a2fd856bb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fa4bf7-9544-4c4e-bb5c-fb59660115b1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1adeaeb-a1f8-4d46-ad10-b1a5a26bfa10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33da695b-f74e-44bc-b1df-5ead29a5116a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7042eb49-dbd6-4d1d-826f-eac7ea947c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0d215a-9ec8-44f7-9d95-e25e555c2f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0405a20d-5d07-47ca-88aa-29c8975b0167",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220bb931-a6c8-4866-b4f0-a79369aa2584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3cdbf2-c304-455f-8062-b47f2aec1d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373f32a2-dd13-4397-8570-9f8d8f44d933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacc84ba-c45c-4e28-906b-3fe634feb4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92acf238-f9b1-4a1a-8511-83bf7f2cc8c9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ec5126-434b-43c1-a0e8-c2ae1736b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c62654-bc98-48f3-9da6-163c4489b0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d441b49-10a9-49a1-afab-61a03f4565f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102dcab8-d6dd-4870-b567-c25aa195c300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e308d83-2918-4317-9cf5-9fd896e6925e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2078f3-4ea0-4f46-8f68-73ac32f824a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab79e57f-9075-4e8b-af7f-52bf7b2f7b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f95f3-5104-461e-af75-5841712806b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19242d84-2f63-43aa-8bbc-ad86457b9922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd7330e-773f-456e-b718-de60650b90e7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380cfafc-1e47-4cd4-8064-54c3b8c132fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c831b4b-6da0-4e57-8173-57685df90e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1e9fb4-029f-43d6-9254-763a7bdd15c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9cad7d-8ac4-448b-89fb-bbecf0a38818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732442a9-7cea-450a-b7d0-1f2b0aedaa1f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c718d4d4-6b23-413f-9e9f-6e19855483c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde2d454-bace-4437-b63b-c15252351312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0a7a7f-d3d5-477b-993b-79012a30b034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831cecbf-aec6-455a-91c8-36598b4ace14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93ae1dd-f7ee-48ce-afa4-27265c7270bd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d58b80b-7163-445c-9ff4-6a1bea3e104a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d7b136-2c74-46cc-b407-de0e1eaaf470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f05007e-d67a-4586-b991-121d402d4b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dd30c9-ebdd-4e30-af99-26c2881786a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d8a5a9-230c-48ea-af1d-9eaf420f205b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f630d3ef-a15b-4431-82e3-5d29cc542da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a717bdfe-3540-4b06-be4e-a68b8a57b136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8885f9b-07bc-4ab1-a01b-94e66c258f70",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612a2c32-5a68-4903-a5d2-c9668c5b8c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb92ef1-7a30-4695-96e1-59bea1771a0c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fd5d9f-04c5-4759-812d-f5dfeb7c4c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687f86ed-152f-47d8-99ac-e3e19b1e85f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09e97be-a561-4942-9b77-80782a465ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf1a833-da1e-4ac4-9944-f9d64e005f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5b5bbd-f6ec-46ae-91ac-78d2b92a7762",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b2f8a8-8cde-4f61-8609-21d0f9fa1f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b9bb75-9996-4a17-a475-30c031d0f3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ab0945-b7a3-430f-9070-b13bc3597b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192018e6-1067-46f3-aced-ef468b9bd245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9a5191-3f0f-4431-be01-0bad51de70ab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b86294-b31b-4df2-bf16-f7c7f3bb7e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b000d201-ecdf-4b85-a702-8ed45d152696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d4ed3e-ef17-471d-9076-d8e4c0e8161e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3adf097-3639-475b-b95a-35cc499da937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaed378-fa95-40fd-b6cd-10d43f8a98a0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0fd63d-524c-433e-adfe-c8a915948521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50683fd0-d793-4e1a-8b69-8fa605adc371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a5625d-c109-4af2-865c-73d2b9489397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd13f595-d581-40fc-97b0-3f881efb2d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81c21eb-0140-4156-aabd-5c10ec7fcb8b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c735bea-d621-467a-91b7-30e508d91fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b754a7-f8c0-4f04-9698-ccc10aae2809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce92b16-568a-4d82-8e52-e6038a8993db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8342f6ee-3c40-4fa1-a315-96ca9b23b313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d31cf7-96a8-4be4-8b09-1e31c06b6dfa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82188f64-7cfa-4f1d-81af-3f4b5a98747f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb3b2a6-16e3-4fa1-863a-82fc9dba114b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3879fc-ece4-4bf8-8da3-2480541c7e5f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da1cdd5-884f-4d17-8132-c883f74f1bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f90e0b6-8292-4d46-8cdc-f6a8cca58c60",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee71607-09da-4b4e-904c-943e897fa602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b13c00-758f-4ee2-b99c-7f1170d41c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dc89ff-7f44-4dcb-bcf8-e270977e5ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2d2cf0-d17f-4afd-a568-7a46328dbc43"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32a80316-4af5-45a9-8ebc-f806feb3dc9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "786dfed4-0b5c-4a02-9dd5-a6273c1947f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e15351c9-32ff-491c-ba6f-5467fc09cea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "086ca442-f00b-425f-928c-1890f4b04f3e"
                    }
                  }
                ]
              },
              {
                "id": "57479099-8f25-4225-acf1-763ed2152cbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf26217d-d55f-4e92-9632-f19722a9b1dc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74b15c7-9a2f-4746-a017-8634f7c2f7f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "35a37cb3-5e6f-4ba0-9d43-4d9dc63c8b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3a2449-2bf8-4806-a9be-08703c082722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b7f91d4-dd74-4f29-be6a-b6338052f3c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae69c746-810c-4cf9-b566-2cccd3a15217",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ade4f11-1769-46ad-8aea-823e8f2972d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "693eccfd-6590-48a2-b046-a4d61722a50d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc9b6eec-ecd8-4839-adfa-be583525f631"
                    }
                  }
                ]
              },
              {
                "id": "6174099c-8870-462c-93ea-8bf10a93853b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "209c3530-7009-4478-8538-5a620b49e8cf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a929aa-08f7-4c4b-9e07-52e0b52f67f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "feed898e-f40f-460d-b84c-51e207906b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0083980e-1659-42f0-a4e7-8a9d8e375987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f73889-bf06-436c-a423-b1240b357f04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eda4a034-bca4-42e3-b643-68e62efffa93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fdc6c1f-b027-4330-bcd1-242c116b4130",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7d24e38-36c3-4174-8b43-acc2cfcdb99e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26dfe0b9-49e1-4150-81c2-19180a08ddd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e8b8fa2-e351-41af-93a7-074394eb618e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d27a2091-841c-489c-947a-08de04f33eb1"
                    }
                  }
                ]
              },
              {
                "id": "6951fe2b-e694-4d8f-924e-0ecb060af5ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d5f5388-5546-4e60-a0f9-826878c98408",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5f61e0e-0149-46c5-ac04-60a363149c88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56a6bdf4-59a1-4deb-8748-d926fdb0ca7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ae1cc48-ffa1-463c-a68b-0185f339e716"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47979189-f1cb-40ed-9bd7-906677134630",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d9cc0ef9-0151-4108-92eb-266d670d2fa2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23b41011-48b3-4856-bdfc-6817fedc6cde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb029f60-8821-434d-8529-1b06a99c4e5d"
            }
          }
        ]
      },
      {
        "id": "6efcea12-e882-462c-a0f2-779394d2d1a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e38ef587-2f9c-40d4-9206-200f8aee5369",
            "name": "Negative Testing",
            "item": [
              {
                "id": "038ad6eb-c68e-4ae0-bfa1-4909760c1791",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd5a515e-2eb6-49bd-b84a-97ee0746c62f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97589736-6419-4825-98a2-190e848ca072",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43c4bf92-a43d-4715-915e-5811d44f7671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bc87a4-600c-43dd-bc2a-fc31c945a682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33df830f-a700-4a7b-8162-446c6845fdb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc9ed4c7-5655-4b03-aaff-49ee5fa51988",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e39758e6-079e-4295-9917-de69d6ec9888"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e2d2d3b-354b-427a-b217-25a4653eadfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "207bed98-0fe7-455a-ba4d-afe194b7a754"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a5b2619-09a5-44a9-b3ce-4ae03352a4d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e0a75604-47c4-4e76-8c60-fe4cddd79c36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "507fa5fe-3174-4fe7-91df-9f771c047588",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8feb008e-ed98-4a5c-9b16-148d5a1650a1"
            }
          }
        ]
      },
      {
        "id": "f37cedf5-0630-4653-babe-4e45e29d408a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "68d16020-a6d1-44aa-ad5e-233ffc820ba8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25829604-8705-40de-9a0e-65cbda0e5705",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60cc4c99-1b41-4275-8ede-022d891e852b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5862c7b4-01cd-46a1-9a94-f352c90ec712",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aa6ee3f-e7a0-4b86-9ff6-44f96817fef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff96860-0aae-4ce7-8444-5b7e0032c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10ec46ad-8daa-4a96-aeb1-82bd88c92df5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b90e4281-62e7-46d2-a13e-b5b8a8e06421",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8761916-0030-4115-9a7f-8693aeed582e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b231521-e1d4-4c73-9d26-87bf9b1f8ba0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "429af453-e77d-4978-9590-d41d8142081f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fe69245-d6b1-4bc8-97b7-2718e903a695",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24aa5a31-4877-4fee-9ccc-854199fa517f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2eb7c24-3b3c-4e33-b0c3-6d2a1f8186d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80991200-4cba-44f0-9af5-6a18ecb6c724"
            }
          }
        ]
      },
      {
        "id": "8220440b-8763-43d8-af34-9a2b5deda7aa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "46a985ae-788d-4f70-95c3-bfe15ca3ef45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8721ba4e-c125-429a-9f35-c42da0bd91e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90fd9d37-0f3c-4925-baef-2aea38c209ec",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1632b5-def0-43aa-9e31-edece2be704b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8a908a6-402a-46ec-901e-88c754bcfb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32bfc8a-b191-409e-9dac-eba874bb5616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438a99e4-cae7-4b2a-9797-b53430afac0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1826ed0-d454-4c5f-8ce7-136d4ea9317f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e06ec5c-bcdd-4216-b27f-325d9bc2d005"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e039f976-5d82-410f-bf07-a0d1469562ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4fc07fc-7f14-422b-962d-7e1bfe7d3980"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c11b74d-263d-48c2-a839-e6e498ac2698",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50f5cccc-70c2-437b-9d9e-f40101ac5b6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94ab7994-061a-462a-ba03-574c13056152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa1d4bd9-ef63-4431-9a87-f70176f5c2c6"
            }
          }
        ]
      },
      {
        "id": "fea94cd7-5952-417e-88d5-21a4276384d0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a8aef73-0840-4a80-acf3-8dce4c36ba07",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73fd45a6-ee5e-49c5-83b3-875430033139",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a7d287d8-480d-47ca-bae2-36b19012a358",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "934a9a8f-dce1-41f5-8c36-a665a3f26401",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "291166fc-b0d6-4e3b-8544-bce5606f6a37",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.9578947368421,
      "responseMin": 5,
      "responseMax": 12104,
      "responseSd": 754.2442005190494,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709598820877,
      "completed": 1709598863515
    },
    "executions": [
      {
        "id": "6bccde11-7b35-4461-a2db-673ce00e0069",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "660b5119-ba9a-4d96-8ba5-b9ff42961f04",
          "httpRequestId": "24998141-6f99-4a45-99ed-b2ffd5b8f5ca"
        },
        "item": {
          "id": "6bccde11-7b35-4461-a2db-673ce00e0069",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6120ff69-2250-4299-8fb5-0ca09629b18d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "9d4c54da-81e1-4d8f-9cf1-98c886edffc9",
        "cursor": {
          "ref": "92bd075f-efa2-472b-940e-d76cc32f8465",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5263db14-67f5-4a56-a752-4397a4f07114"
        },
        "item": {
          "id": "9d4c54da-81e1-4d8f-9cf1-98c886edffc9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4bba8cea-4394-4747-80a6-6ab1e57287f3",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "c51c14a3-baa7-4f81-85a3-cd3feffea6b0",
        "cursor": {
          "ref": "9372b3eb-b7f8-4725-ba2e-75221dc048a3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f1436fda-ecbe-4d5d-9719-7a86c271ea2c"
        },
        "item": {
          "id": "c51c14a3-baa7-4f81-85a3-cd3feffea6b0",
          "name": "did_json"
        },
        "response": {
          "id": "c39b2f43-7b84-4fb5-908e-35503c384e64",
          "status": "OK",
          "code": 200,
          "responseTime": 336,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bbbcf5-b295-41ac-a211-52f25e9a6488",
        "cursor": {
          "ref": "5e60ceeb-6b02-4516-a4da-e210bd52602a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "476f55bd-63ab-4c4c-bf30-e260268f7f2d"
        },
        "item": {
          "id": "68bbbcf5-b295-41ac-a211-52f25e9a6488",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cbaaf66-3ba3-4513-8c8e-fad257d643a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 643,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bbbcf5-b295-41ac-a211-52f25e9a6488",
        "cursor": {
          "ref": "5e60ceeb-6b02-4516-a4da-e210bd52602a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "476f55bd-63ab-4c4c-bf30-e260268f7f2d"
        },
        "item": {
          "id": "68bbbcf5-b295-41ac-a211-52f25e9a6488",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cbaaf66-3ba3-4513-8c8e-fad257d643a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 643,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded871bb-23d3-435c-90d0-43f74d57a942",
        "cursor": {
          "ref": "28abf2f1-6209-43b3-8237-aaa177839f8f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e83b1732-6216-4354-b3f9-0a7db728e0d4"
        },
        "item": {
          "id": "ded871bb-23d3-435c-90d0-43f74d57a942",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8b26f6b2-b716-4e3e-bf0d-cbc4d04740be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d69b1a-e3cc-436f-bd33-0ac08990e438",
        "cursor": {
          "ref": "89ecc118-9302-493f-97a3-12d61ef5dbca",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "509fde64-f312-46a1-8899-78eda545f083"
        },
        "item": {
          "id": "34d69b1a-e3cc-436f-bd33-0ac08990e438",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "368ffbb0-3039-4730-bbca-ca78254ce533",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe0f1b5-bbb2-44c4-baa6-cb8971742c75",
        "cursor": {
          "ref": "3db2acc7-9891-41ab-ad48-fda783f3d172",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4ce7321e-90f4-4a4e-b95a-e004cf1b90c6"
        },
        "item": {
          "id": "bfe0f1b5-bbb2-44c4-baa6-cb8971742c75",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "747c075a-d55e-4250-83ec-c198c653aa2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef114d04-6e7e-40ac-bd27-789c043e218b",
        "cursor": {
          "ref": "0a93283e-3313-49e3-9051-5b052e9215dd",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a99c0db9-bfd7-4750-b96c-c0a76641e9d5"
        },
        "item": {
          "id": "ef114d04-6e7e-40ac-bd27-789c043e218b",
          "name": "identifiers"
        },
        "response": {
          "id": "35db3968-174b-439b-8c87-0ea23572304c",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fde25a9-2f3b-4c8a-b7c1-d59912ac5c60",
        "cursor": {
          "ref": "76d07302-0b94-45b5-8efe-808572f90e73",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0b8900bf-111e-41a7-ab01-7413260ca50d"
        },
        "item": {
          "id": "6fde25a9-2f3b-4c8a-b7c1-d59912ac5c60",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f35f1c60-8d71-4184-9749-e8c50dd4e6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d5ce83-4b3e-404e-a6a9-413658742a52",
        "cursor": {
          "ref": "bc20494c-4453-4dbb-b51b-c4c8b6dedd0d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ccc98ebf-f012-478a-a794-b324cb9316e9"
        },
        "item": {
          "id": "15d5ce83-4b3e-404e-a6a9-413658742a52",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bea2e40c-ab09-40ee-9890-99d3291e24c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c272a74-1171-4200-8297-c0f6838162e5",
        "cursor": {
          "ref": "91d10c54-8e3e-4f3a-8110-a384c7d2cd72",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "51f2144c-0328-4861-8773-0344a193e010"
        },
        "item": {
          "id": "1c272a74-1171-4200-8297-c0f6838162e5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "61f6c2ed-9e72-4bcf-aab6-300aabd79881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e51d93e-883b-4581-90b1-abcfa1ad09dc",
        "cursor": {
          "ref": "cb94589a-367c-4b08-8e5d-621f3950a08b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "92165175-8026-4ee5-8003-fed3b1ee4b68"
        },
        "item": {
          "id": "7e51d93e-883b-4581-90b1-abcfa1ad09dc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eb9c321a-b8d6-4593-bb66-6cfe43df40ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7c00a7-fad6-4aa1-b828-85ae4d5f94e6",
        "cursor": {
          "ref": "137438bb-430f-4f85-8696-ad8878f0f0f4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4d72b6a5-6c3f-4c4c-8561-7e47ca9ca8ab"
        },
        "item": {
          "id": "8c7c00a7-fad6-4aa1-b828-85ae4d5f94e6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d1434058-b033-4308-9469-042adc7bcce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d1ab8e-ec09-4e2c-b8f8-807167773708",
        "cursor": {
          "ref": "91418c0d-70d3-4038-b3dd-fddc9dfda4f3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "55738933-78b2-40ab-850a-f3f41de99f7d"
        },
        "item": {
          "id": "66d1ab8e-ec09-4e2c-b8f8-807167773708",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3394bad2-e9ea-45f8-b97b-a24d2c19efa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc611fe-4977-46c5-8b6c-3810c7678cfb",
        "cursor": {
          "ref": "5a58ee25-fea3-4d45-8933-79b6870ab142",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "593044ef-5edf-4c64-aa86-8efc5db738e2"
        },
        "item": {
          "id": "2bc611fe-4977-46c5-8b6c-3810c7678cfb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "233d73c6-2037-4451-8966-6d14b35b7c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a57354-8cf7-40ce-b199-deb0c064f89f",
        "cursor": {
          "ref": "998707dc-cf13-4fd7-83fc-c5d3a52f12fd",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fd574824-e890-4d5d-a59a-97d3cc06ae85"
        },
        "item": {
          "id": "11a57354-8cf7-40ce-b199-deb0c064f89f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "37917e7d-ca28-40f0-b204-40252a36c2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283b0e17-c261-4fe9-8f4a-326dc8f1c295",
        "cursor": {
          "ref": "5682a933-4592-4ce6-8eba-87fdc6a80f49",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "24f1ad47-f26b-4583-bbf4-32a7e8836672"
        },
        "item": {
          "id": "283b0e17-c261-4fe9-8f4a-326dc8f1c295",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3165818a-c3d6-4d01-9a09-cb17ab872280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b677ae2-b6b3-41d5-afb8-c47091fc2630",
        "cursor": {
          "ref": "bed40ccb-b26f-49c5-a2a0-81f908e2347c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc9a9e59-2388-44d5-91fa-c11d675336b6"
        },
        "item": {
          "id": "1b677ae2-b6b3-41d5-afb8-c47091fc2630",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee1310f1-b7c0-4387-9e0d-e111a14e2128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56717143-1016-4e75-894f-fb1c8443aa60",
        "cursor": {
          "ref": "e0facaad-97bc-4a26-a99c-7b3dcdd9e73e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1db53615-5795-49de-8ba8-e93469e42e29"
        },
        "item": {
          "id": "56717143-1016-4e75-894f-fb1c8443aa60",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f0f55b2-d67c-4af4-adbf-5136b538b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1d6eb7-e91f-4868-9690-9585492bd589",
        "cursor": {
          "ref": "caff1e84-ee15-4870-bdc3-2eb9c7e92d16",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "15737ca3-b505-4f4d-a648-937caf979d79"
        },
        "item": {
          "id": "ea1d6eb7-e91f-4868-9690-9585492bd589",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a342d1f1-91e4-4442-89db-23ff338b18c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0320d9d0-3e4e-48dc-8652-d24a764979fe",
        "cursor": {
          "ref": "501e2d20-4395-4c9b-9a99-37d991dc249d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3179c4d6-df20-4992-9ea3-d8f1e1280fe6"
        },
        "item": {
          "id": "0320d9d0-3e4e-48dc-8652-d24a764979fe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "63696d2d-98cd-4131-8fa9-29d8e8acdda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f672d4-fc82-4fd5-be62-0320e92687da",
        "cursor": {
          "ref": "2917df89-de50-46e0-830d-feb4ac56f348",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0ca0b11c-53b1-404b-9ee7-d7b6fcf72354"
        },
        "item": {
          "id": "10f672d4-fc82-4fd5-be62-0320e92687da",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dd74d03c-54a7-421d-be8e-f3ecbbea8bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e5e5f4-157d-469d-ada2-3ba41529521b",
        "cursor": {
          "ref": "5fa95abe-fa42-4202-a6e1-096a6fe0d365",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bda6cd15-fbb8-4d5e-8ae5-2e2dfdd89a44"
        },
        "item": {
          "id": "96e5e5f4-157d-469d-ada2-3ba41529521b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a204d9de-40f2-475a-b1ce-22842c2b580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534eed5a-0fa2-4727-b65a-c4123755e9da",
        "cursor": {
          "ref": "d4867540-7dae-490b-91b5-f63d5c3c6f93",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6ae556d-8051-4a70-b91a-ecd8374b9a5d"
        },
        "item": {
          "id": "534eed5a-0fa2-4727-b65a-c4123755e9da",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5d660fda-f90e-433c-8dcb-edf4346ea523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eacfb7-a11f-4b9c-bdb2-6697c3c8b67e",
        "cursor": {
          "ref": "33921628-d330-4c49-b763-1fbd224ceb22",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f9e2910-24e7-4b3b-b38b-7fe04c8ce1d0"
        },
        "item": {
          "id": "a3eacfb7-a11f-4b9c-bdb2-6697c3c8b67e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2034971b-ae31-4fda-a1d0-c073113a537f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba98ed3-e2ae-4be2-ac9f-903b4257bd2a",
        "cursor": {
          "ref": "e544227a-1182-48d4-9b75-9c1bc07d6407",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c1ea289f-aa6d-41ae-832c-018b8062492a"
        },
        "item": {
          "id": "6ba98ed3-e2ae-4be2-ac9f-903b4257bd2a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c1574b5f-0b05-4041-b94d-fca6ecbe4e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a2a5c7-3977-4bc8-94d1-8ff1a934d0bd",
        "cursor": {
          "ref": "4cdb34c1-22ed-4d28-b3d7-150354cdfbfa",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ef38ef02-467b-4eac-aec9-0888995f24d1"
        },
        "item": {
          "id": "59a2a5c7-3977-4bc8-94d1-8ff1a934d0bd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "20ce6dc1-6415-4705-a36e-87a8eeda6aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98837d11-260c-43a8-b802-31d1c9682769",
        "cursor": {
          "ref": "0529caf4-3fa5-465f-a95a-65860e580c8f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4e5baea7-436b-48c9-8641-1757bf8b3e96"
        },
        "item": {
          "id": "98837d11-260c-43a8-b802-31d1c9682769",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "05fe6891-815c-4de0-82a5-07f4565f1ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe0babd-768d-4b26-9f5d-a9734b9c7855",
        "cursor": {
          "ref": "29fc72d6-44bf-48af-ab2b-32927b9f7370",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6f171b8d-58d7-47a6-83ec-f0fe695b47d5"
        },
        "item": {
          "id": "5fe0babd-768d-4b26-9f5d-a9734b9c7855",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "06c97236-fc3c-4fd9-abfa-5ec82c65402b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285538d0-aaa8-4efb-839f-e73768665368",
        "cursor": {
          "ref": "08cb63e4-a32e-4050-aa31-8035a90ce59a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0ed792d4-094a-474b-84cb-abec3ae63103"
        },
        "item": {
          "id": "285538d0-aaa8-4efb-839f-e73768665368",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "34626433-9065-46a8-8e5a-7584421bd682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd4a8df-bade-425c-886b-5971ed0011cf",
        "cursor": {
          "ref": "cd245dd0-82c6-481b-af0c-187ac1b020c8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0e213e48-28f7-4ae0-a575-527b12fd851e"
        },
        "item": {
          "id": "cfd4a8df-bade-425c-886b-5971ed0011cf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1e0f297f-dfb9-43dc-80d7-8d27d473ad2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ac3b43-d42c-45b7-b594-f87d8e48084d",
        "cursor": {
          "ref": "f190290a-8198-43fe-adca-e808e337647c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b443a528-251c-4021-b6e7-3ecce2f5d7c2"
        },
        "item": {
          "id": "43ac3b43-d42c-45b7-b594-f87d8e48084d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0a06dc8c-0e94-4293-9fe6-2029e42ec4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5efecd-65a6-4160-b7cf-c1ef555b0200",
        "cursor": {
          "ref": "3e352d55-c48e-44fe-b097-cd25214ca4e4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d83137b6-d837-460d-bb6e-06ebfadf7051"
        },
        "item": {
          "id": "fd5efecd-65a6-4160-b7cf-c1ef555b0200",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ca3c685a-81cb-4bcf-ad34-de0e0dccff4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019e61da-a5ac-467c-b26e-01a313212651",
        "cursor": {
          "ref": "655d2e1c-4f99-4e54-9bcb-a275b823f92c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1911d202-e591-4e18-aa16-9ba998ec317c"
        },
        "item": {
          "id": "019e61da-a5ac-467c-b26e-01a313212651",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bf3d3aec-6d9c-4ea6-92b1-60a5fb096fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f0b067-ac36-4ddf-83db-4ecb609ec968",
        "cursor": {
          "ref": "de91c69b-ffa1-41ec-acfc-48ca97051de8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e5bf8eae-d2ec-4aeb-b9bd-dad522f5b313"
        },
        "item": {
          "id": "08f0b067-ac36-4ddf-83db-4ecb609ec968",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "90fe72a2-1f78-47a5-87b6-6836a901091e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469df62e-8685-4053-8799-9567cd507ed7",
        "cursor": {
          "ref": "2b13269a-b3c4-4691-a0b2-d64e0a08d045",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0497d6ec-7841-47a1-bf3a-7abe9eca920e"
        },
        "item": {
          "id": "469df62e-8685-4053-8799-9567cd507ed7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a4f3adf3-7cb6-4391-a471-ce5b53731e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c7fa47-17ef-4b8c-b623-0ca0d9ddad6f",
        "cursor": {
          "ref": "a4063bde-f625-46e6-a621-56b02923e5ca",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2345fd97-0005-4252-a227-727fceb65804"
        },
        "item": {
          "id": "03c7fa47-17ef-4b8c-b623-0ca0d9ddad6f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "620e5bff-bc2e-4e3c-bdfe-f26ccc3e4ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25f4d9d-568e-4007-a1fa-ce1de6200a57",
        "cursor": {
          "ref": "9abfb12c-dd4b-443d-93b4-13557336a6f3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "aaebe19f-efde-4110-b9e9-d0ae1e90c4a7"
        },
        "item": {
          "id": "e25f4d9d-568e-4007-a1fa-ce1de6200a57",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "036dcae4-7ae3-41c3-8693-b9cbe6fec05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e01c24-1fbe-4cc7-8b8c-77252f6fc7a0",
        "cursor": {
          "ref": "077f361f-c483-4bdd-a427-374baa6e19ed",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "19a41261-7e0c-4618-a0ae-03c4dc2418c6"
        },
        "item": {
          "id": "b7e01c24-1fbe-4cc7-8b8c-77252f6fc7a0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f7acbc00-7d26-4570-bc9b-a3f66c5edc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a816af-b267-49f0-b6c5-308537467c7e",
        "cursor": {
          "ref": "f14ba641-69f2-44ea-9834-7ff9ec64411b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "35769f80-f749-45fa-aae2-bbcc7984b2b5"
        },
        "item": {
          "id": "22a816af-b267-49f0-b6c5-308537467c7e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b4fe4a96-8cd6-4491-b688-cee63cd9755f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c211118a-d66f-4550-a4cc-e42a46552c71",
        "cursor": {
          "ref": "cf569201-ba24-4bcc-9b95-6738a3319aba",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6fa00cd0-19c9-4a34-934f-de3195688eb9"
        },
        "item": {
          "id": "c211118a-d66f-4550-a4cc-e42a46552c71",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "da620824-93c8-403c-b6e5-d0108b61d5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec7adb6-117d-4299-ab7a-f87f61bd3880",
        "cursor": {
          "ref": "bb4f1b3c-d908-4e64-836d-cb2b4774be2f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e9a1a872-bac7-43e2-9561-8c691ee02edb"
        },
        "item": {
          "id": "aec7adb6-117d-4299-ab7a-f87f61bd3880",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3cb075ae-680c-42e1-a111-e8df719a0156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc1d8bc-6ef8-4510-b5c8-56725cc61897",
        "cursor": {
          "ref": "5e664342-4ad4-46be-b561-20de104c760b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e860fd4f-a9b1-4ccf-b9f1-768fafd664a1"
        },
        "item": {
          "id": "7dc1d8bc-6ef8-4510-b5c8-56725cc61897",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "79924d7b-7c9a-4ded-879f-c8aa7cacf2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e13ee5-8dd4-4c5f-af14-25ecfe740f25",
        "cursor": {
          "ref": "954b0a57-c1ff-443e-9e50-305291320caf",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0531034d-7fc4-4d6f-b969-f9dde48536de"
        },
        "item": {
          "id": "69e13ee5-8dd4-4c5f-af14-25ecfe740f25",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e2841ef-7004-43f3-8438-8a469c795d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d601fb2b-63e4-4f1a-9b4c-29915ee0308b",
        "cursor": {
          "ref": "f78572f7-dfb2-4359-8b4f-03f654f5c76f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3851a460-4780-4383-8202-f3106ed67913"
        },
        "item": {
          "id": "d601fb2b-63e4-4f1a-9b4c-29915ee0308b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9b02d8c2-8b31-442a-9f8f-e7850426b7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8943bf-eafb-45e5-a133-b0db80236699",
        "cursor": {
          "ref": "0d592988-d860-4773-91f0-f2b61b8a14fc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "51b7fe3a-3276-4004-a5d4-e1e3ab2b4349"
        },
        "item": {
          "id": "4e8943bf-eafb-45e5-a133-b0db80236699",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3e773003-f38a-4300-af17-9d854c742987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fc0d93-90df-4399-806d-a02bb88fb624",
        "cursor": {
          "ref": "f82ccfe3-c097-46dc-bed1-e801b76d86e8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f6cffb70-015e-4b5d-bb7e-4c0e83db5d88"
        },
        "item": {
          "id": "71fc0d93-90df-4399-806d-a02bb88fb624",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0b173ff9-08d3-4235-8700-be6fda63b9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bec2905-f6e8-4e74-8eff-b769017b99bc",
        "cursor": {
          "ref": "b54f2285-5b29-45f3-a743-40201b043c75",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ec46ac20-a69e-4b2f-9c21-055f9f081256"
        },
        "item": {
          "id": "4bec2905-f6e8-4e74-8eff-b769017b99bc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "df43535e-ab61-4bc5-8b24-9238d2117a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e398d0-8b37-4537-96c8-633cffc1944a",
        "cursor": {
          "ref": "45e0004f-27ba-4201-b8d0-628b731806f0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d4da1ae4-6b48-4300-ad1b-9152ec896b27"
        },
        "item": {
          "id": "10e398d0-8b37-4537-96c8-633cffc1944a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fd486cbe-e8cc-4496-9c8f-b4341655714e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117b6393-b1a1-4189-a5c4-73802dfa16c6",
        "cursor": {
          "ref": "648ebe8a-871f-4b7d-bd5c-0861dc2da8a6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fce3bc37-3d7b-4a62-bbfd-c146c67f95ee"
        },
        "item": {
          "id": "117b6393-b1a1-4189-a5c4-73802dfa16c6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e16ac8c6-ffce-4bee-9f31-13d839e31237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e427d47e-8568-464e-b5ac-cd6a10309419",
        "cursor": {
          "ref": "a073f229-4cb2-4b40-ae97-e5266dfb804d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e9619c04-d21a-4ab5-8178-294d806de331"
        },
        "item": {
          "id": "e427d47e-8568-464e-b5ac-cd6a10309419",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4cd654a3-f4a2-4897-a0fb-12ab14508f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c005e739-992f-419e-9043-e783d171c9a2",
        "cursor": {
          "ref": "db24b5dc-79db-4089-87c3-17029125ecd3",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1780fd67-2adc-4f6e-996c-905ec2de2a91"
        },
        "item": {
          "id": "c005e739-992f-419e-9043-e783d171c9a2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bd304961-7ca2-4fd4-b160-6b135ce1ef60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28682b4f-fed5-49a4-973c-0e0795c7132f",
        "cursor": {
          "ref": "b24cdf79-4d79-42f3-b481-92631ce2029b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "11d3d06f-8c32-47f1-9e67-4259c1d72175"
        },
        "item": {
          "id": "28682b4f-fed5-49a4-973c-0e0795c7132f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d07923e0-2f76-4f3a-b457-57919404a1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02fb30a-4f8b-4dc1-944d-3b40ec4a9dfa",
        "cursor": {
          "ref": "5fa01b94-f98f-42b1-b10e-028f1a321699",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "944e7b6b-0b5f-406a-888a-a0c655d6172a"
        },
        "item": {
          "id": "d02fb30a-4f8b-4dc1-944d-3b40ec4a9dfa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7fadf8cd-8870-4ad5-a102-a696d2ba5ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d04e4d-6c35-46e3-aa33-737c2222c8a0",
        "cursor": {
          "ref": "7122d6e6-159b-4a21-94c7-e9621b4631f7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5f5ae0d9-6007-48d5-a8f9-0ad988d782c2"
        },
        "item": {
          "id": "71d04e4d-6c35-46e3-aa33-737c2222c8a0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "25861bbc-0a60-4538-9995-85360cba6bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b9f6fd-b94f-440f-b4fc-ce95900f5520",
        "cursor": {
          "ref": "37b132e5-76b0-45cb-ac82-42ddfb062118",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab7bc55c-5325-41cc-9ab8-9cc9983b8ed9"
        },
        "item": {
          "id": "53b9f6fd-b94f-440f-b4fc-ce95900f5520",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fa2f3220-0cf5-4d83-86c8-ba22ed667041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ae8c8e-2403-4f27-aa77-e489cd77c1f9",
        "cursor": {
          "ref": "05e4e059-d75d-4354-8246-be5b02384255",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "73f919de-eb2c-49e5-af83-01b607c97a4a"
        },
        "item": {
          "id": "28ae8c8e-2403-4f27-aa77-e489cd77c1f9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a25448f-21e2-4f0e-9938-91f379ad8589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f105cdcb-8524-4d7b-b1ff-b10b56c72b3e",
        "cursor": {
          "ref": "7b4f87e6-d4cf-41fa-896c-bbd52569067b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c92bf3f3-3bf8-40c6-a4a3-f1e4ce5c555b"
        },
        "item": {
          "id": "f105cdcb-8524-4d7b-b1ff-b10b56c72b3e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a67d1d3a-06ce-4d03-8161-66a64e5512e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f096411a-b800-4208-9dd8-b889beb954cc",
        "cursor": {
          "ref": "5f8971cc-55dd-42df-adab-2ed868549886",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "11877ec6-10b3-4462-a669-88b080ae6e54"
        },
        "item": {
          "id": "f096411a-b800-4208-9dd8-b889beb954cc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b3c67183-9602-4a19-bd97-4cfbf73f0811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c7f71-1667-4de5-80a5-867d327aa1bf",
        "cursor": {
          "ref": "90e55428-f995-433a-80a7-ff0ac1510b75",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "81647c99-8836-4830-b36f-cfef5b67ce4a"
        },
        "item": {
          "id": "3d8c7f71-1667-4de5-80a5-867d327aa1bf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "22a0a195-524a-45d1-af1c-b876a684979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bed7f8-2465-452d-8bfb-2b7ac2271ad5",
        "cursor": {
          "ref": "e919f818-e912-4600-9369-a553dd70bcd7",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fa9df422-0874-46c2-a4f8-941036cdc426"
        },
        "item": {
          "id": "d7bed7f8-2465-452d-8bfb-2b7ac2271ad5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "368c5eac-df9e-427d-b13e-48ed3a79bf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd2287c-f120-423d-940a-c83e2e8d3e44",
        "cursor": {
          "ref": "2d076ab2-6667-493d-8fd0-0bbbe40d83fd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1badef26-78e9-4a14-9465-3b694fe00ac9"
        },
        "item": {
          "id": "9fd2287c-f120-423d-940a-c83e2e8d3e44",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "314ac6b5-f8d0-47f5-8619-90c244238838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a3c978-7778-4781-8a6c-cf81804f0e2c",
        "cursor": {
          "ref": "ca9635b2-6f3f-477b-b5dd-c7fbd0353d5e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c2b486ab-ff05-4c33-af26-2fe512407c4c"
        },
        "item": {
          "id": "c0a3c978-7778-4781-8a6c-cf81804f0e2c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c2dd6996-71b6-4d4b-acae-6efee0396101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24785bd6-a3f5-4f6c-b569-c547409d99ea",
        "cursor": {
          "ref": "b3b76434-19a0-4046-97ed-8545f0c1cc45",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "89905faa-4bd5-4cb9-a075-998cd1160f75"
        },
        "item": {
          "id": "24785bd6-a3f5-4f6c-b569-c547409d99ea",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c78bb700-5070-4623-a054-3401ff5bd31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3156f9d0-8099-4a8a-a221-e2479398ba85",
        "cursor": {
          "ref": "a10a9389-b46d-458e-845f-70fd41854f37",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fffa2df8-2a75-4caa-ac4f-c0e20c347192"
        },
        "item": {
          "id": "3156f9d0-8099-4a8a-a221-e2479398ba85",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1470dc8d-a4b7-43bb-b53a-f5aee6600b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d536ac2-7a1a-42d3-bf89-eab91cb4b34b",
        "cursor": {
          "ref": "3cb38960-2caa-4c51-8d3c-78109a6db17a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8e84093b-deaf-4237-b9fa-93e52b266876"
        },
        "item": {
          "id": "5d536ac2-7a1a-42d3-bf89-eab91cb4b34b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b468d44b-275e-4219-b2d3-3b53c13d94ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c1dfa4-c565-40d8-a4a4-deeef094e200",
        "cursor": {
          "ref": "88321fa7-da4b-4dc5-a8d4-e82f23feadf2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5464af1a-62e4-407a-8023-39d786e2d78a"
        },
        "item": {
          "id": "23c1dfa4-c565-40d8-a4a4-deeef094e200",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ce710111-4fa8-4e78-b11a-07d5afd3ede7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ead2bc-a7a8-4c62-899c-e43771dc1482",
        "cursor": {
          "ref": "0a2f0907-a244-419a-8f06-12844950357e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "446f25c7-6a98-48c5-99c7-a943dcaa913b"
        },
        "item": {
          "id": "97ead2bc-a7a8-4c62-899c-e43771dc1482",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bddff767-6911-489e-9fe6-aa1ee741db5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688cc528-7d24-409f-9f40-82cb226f53cd",
        "cursor": {
          "ref": "5383096f-2f8b-4f36-aa61-00e841a3b5a6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "168e1ae2-d835-4a08-bf00-0b3d9e4a0767"
        },
        "item": {
          "id": "688cc528-7d24-409f-9f40-82cb226f53cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d9b6b0e6-aaf7-4e90-963f-4d34f97dcb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb79bb77-d0e9-4f54-b37e-3f3d1e41cd7b",
        "cursor": {
          "ref": "2264b330-3881-420b-a63d-e20c981bcd18",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c5fb44fd-1c44-49c6-a1c6-ef8d8e9c72ff"
        },
        "item": {
          "id": "fb79bb77-d0e9-4f54-b37e-3f3d1e41cd7b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e8653793-a157-4e1c-b119-37a06e4dc7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d78803-eaa4-4377-80f4-7a9b4e891527",
        "cursor": {
          "ref": "f96bc664-0244-4051-bd7f-75153e0e1281",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c4b6d026-2b93-4a5c-9c89-aa7d24620d88"
        },
        "item": {
          "id": "27d78803-eaa4-4377-80f4-7a9b4e891527",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "39c3fd66-dac8-4d4b-a7ea-d60f8a877110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892f345e-60fd-47ec-98d9-c4c680aeff7a",
        "cursor": {
          "ref": "2e050682-927f-4131-bd8f-1c33560a413f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "31e0997f-5918-4fcb-ace7-c6776b26ef58"
        },
        "item": {
          "id": "892f345e-60fd-47ec-98d9-c4c680aeff7a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa008fac-e862-4e3f-9a26-76634b4b97e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41f5ea0-c630-4ff7-b514-7ca5a7ad4bcb",
        "cursor": {
          "ref": "3b8ebc79-0cca-48cb-b936-c5fc601dd4a1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6c2fda93-1504-4f77-ac8c-ca3929c2f779"
        },
        "item": {
          "id": "f41f5ea0-c630-4ff7-b514-7ca5a7ad4bcb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3efceb24-e932-457a-8550-f46cc0a4da7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff91023-0354-4bbb-aa5c-57d1ef8b8782",
        "cursor": {
          "ref": "871ad176-d316-4756-8417-55e85163ab70",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f56254ee-560f-41ea-b450-1c98f3cccf09"
        },
        "item": {
          "id": "fff91023-0354-4bbb-aa5c-57d1ef8b8782",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "75a913b8-14b4-4a5f-9529-90027278b465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f72c28-0048-4375-ad24-9220dbc287cf",
        "cursor": {
          "ref": "b29a5647-e4bd-4190-9845-80d96e94f09d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0b84db8d-479a-4e1d-bf0d-4138be6e9a83"
        },
        "item": {
          "id": "b7f72c28-0048-4375-ad24-9220dbc287cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "db8e34d8-74b3-4f61-84b6-0ae0afce54bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d2ba7c-bf1e-488b-b094-1ff835a8c63c",
        "cursor": {
          "ref": "dae1ad10-3022-4ab0-a8e1-a018a6aaf304",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "004408da-71a8-4582-b86f-db288fd9e04f"
        },
        "item": {
          "id": "23d2ba7c-bf1e-488b-b094-1ff835a8c63c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "694b7547-d2d0-417b-bebf-9c2189cad0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31285256-ab16-4f79-b799-091a04c6beac",
        "cursor": {
          "ref": "96b49684-7cc5-4653-8642-c73bfd2c6fb8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8b4a8bce-4a3f-47dd-a058-c3d37f5c3fb3"
        },
        "item": {
          "id": "31285256-ab16-4f79-b799-091a04c6beac",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b28bd11d-340a-47c5-8145-f5232968e6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0f9e6f-cb6c-4965-b972-825ee0ab5dd7",
        "cursor": {
          "ref": "43562919-30a5-49fb-b6df-8b7cb8a10113",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "31d41e96-fccb-4c80-8c66-bdac18b0b368"
        },
        "item": {
          "id": "8f0f9e6f-cb6c-4965-b972-825ee0ab5dd7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ba148165-2990-4603-936b-92f1792011fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1a68e8-2b35-4103-b1cd-c2e21b021891",
        "cursor": {
          "ref": "88e06be9-6a65-4612-9778-1f590faa7df3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "10fe32a8-1541-48b4-8e3b-998d4727c845"
        },
        "item": {
          "id": "ed1a68e8-2b35-4103-b1cd-c2e21b021891",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9b550ca4-9e40-4755-8c3a-19ec7d64dfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaff1d4-c6ba-4c8e-b582-3b66ddd8e253",
        "cursor": {
          "ref": "2d679d3d-972c-4856-ada4-c20680a7e383",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "40c43eb7-0798-426b-a967-b47fa30c68a3"
        },
        "item": {
          "id": "bdaff1d4-c6ba-4c8e-b582-3b66ddd8e253",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f9015df0-59e7-427b-856f-f8578ccb025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995dc4ab-3cbc-47b8-bf03-53e4fad58340",
        "cursor": {
          "ref": "5f5f9f25-9c50-4e7d-aff9-8b7b1d36f93d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6beede8f-c884-4d01-bf96-954d628f1610"
        },
        "item": {
          "id": "995dc4ab-3cbc-47b8-bf03-53e4fad58340",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9748af42-a398-4773-b04a-41209658be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cd44a7-3205-4e33-99e2-865d022d5e17",
        "cursor": {
          "ref": "508ca316-b1e4-4e31-85db-4aa7f9d2d363",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "777b076e-ce8d-4717-9c63-f56b710c1636"
        },
        "item": {
          "id": "d5cd44a7-3205-4e33-99e2-865d022d5e17",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0c3e10ba-a2cc-4c9d-91c5-d51adb0d4756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a940fe2-a3de-4c75-aa48-1b5ac5d11b52",
        "cursor": {
          "ref": "4b013dab-08de-4dea-ac36-a0569ec741c6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99bda17f-1756-42c5-9537-3bee7bd438b0"
        },
        "item": {
          "id": "4a940fe2-a3de-4c75-aa48-1b5ac5d11b52",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "453632b4-9cb8-4fea-95b4-0d185ab963f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc14310-3dfd-47a6-943d-8a1448d645f6",
        "cursor": {
          "ref": "8f48d133-0f84-404a-81ab-5bda61aac8db",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "56d45c4a-b4ea-482d-a8f8-d16cb3e757dd"
        },
        "item": {
          "id": "1bc14310-3dfd-47a6-943d-8a1448d645f6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fa4bc5fa-b9da-43da-83e5-7387fd949f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba268149-5a71-4971-838e-d15d763d0e6d",
        "cursor": {
          "ref": "b91401ad-b666-4540-8dcf-af78ff62f2e6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2d24e37c-b64f-416a-b1b0-7ad03cfd7cb2"
        },
        "item": {
          "id": "ba268149-5a71-4971-838e-d15d763d0e6d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fc3cc8bb-dbfc-428d-ab7a-b0668584c43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b8f48e-292c-49eb-ad48-640f27be4ae4",
        "cursor": {
          "ref": "786fe757-fb4b-4007-ae60-dc81489abf15",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "03aa8999-bef6-4100-9eb9-ea8769c512d5"
        },
        "item": {
          "id": "92b8f48e-292c-49eb-ad48-640f27be4ae4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e00fa9e3-e66c-4de3-b49c-f725556dad32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a9fc22-21c2-4681-93ad-94a716004f48",
        "cursor": {
          "ref": "0e170569-ccfa-45fa-8014-fda2590aa972",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6bdcd1ab-157b-4019-99f5-3012b661454c"
        },
        "item": {
          "id": "40a9fc22-21c2-4681-93ad-94a716004f48",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "626676d7-fa13-4083-83eb-3f82bc846584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fe4fe7-3609-4bc1-8c27-26808207e0e8",
        "cursor": {
          "ref": "f0d0b7c2-1410-4e2d-b6bd-61ec4c87413a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "171c54f1-b567-480f-9f86-cacef648bed5"
        },
        "item": {
          "id": "55fe4fe7-3609-4bc1-8c27-26808207e0e8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "11a24347-0f6e-41f7-942d-93f3fbd3536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e37d0e-242d-43f9-a8a3-21f13eb35eec",
        "cursor": {
          "ref": "56ae0b52-dab3-437b-bf9b-ce287d1a78c0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1aa7f5ce-9afb-4801-a34a-283e684c1d8a"
        },
        "item": {
          "id": "74e37d0e-242d-43f9-a8a3-21f13eb35eec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c68a25a2-7095-47c8-b241-07759fe14bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f95b3ea-2265-47ca-98f0-8fcb8af74e4c",
        "cursor": {
          "ref": "e0c607dc-b411-43aa-af57-8708d7caa034",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "71daea19-ddbc-4ee3-91b4-b2e2ae5c8126"
        },
        "item": {
          "id": "8f95b3ea-2265-47ca-98f0-8fcb8af74e4c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c941dc9-f650-4c59-8911-401fe6ed8a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39297039-4041-4fbc-a136-961592d17150",
        "cursor": {
          "ref": "c4c7ccc4-83b4-47c5-b0ba-04e4c96617dc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5963591a-2993-46ae-919b-b5bec15b4fad"
        },
        "item": {
          "id": "39297039-4041-4fbc-a136-961592d17150",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9102da1b-4c8e-485e-b376-fd512b22c29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d5524e-a70d-4fe4-acde-28eb554683dc",
        "cursor": {
          "ref": "63f3a482-636f-4556-a278-72b825d3acaa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0dcd05c3-82b0-46ac-b320-85831fdc7cf7"
        },
        "item": {
          "id": "24d5524e-a70d-4fe4-acde-28eb554683dc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cb64c38f-585e-4bd7-8855-bc87012384cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e76643c-f1b1-4996-b7a4-d7ca220bd068",
        "cursor": {
          "ref": "ae7f6d94-bd0e-496a-8174-56e6a06c613f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2456b51c-2a92-4766-a94a-6e31c3bbfd93"
        },
        "item": {
          "id": "3e76643c-f1b1-4996-b7a4-d7ca220bd068",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "12b29c27-1072-46d9-84e1-243e01408425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6e49d9-cc47-46cc-9766-d002de379f50",
        "cursor": {
          "ref": "7616abbb-81cc-449c-b45e-4d1f48a4c961",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9e4daec1-f30b-4c84-987b-ec0c2ae9a553"
        },
        "item": {
          "id": "4e6e49d9-cc47-46cc-9766-d002de379f50",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "051f1df5-377e-4fbc-835d-c5c7d33e53d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1310ef7-9166-4c74-a33e-8698d2f97a4d",
        "cursor": {
          "ref": "336c813a-af47-4202-a92c-86271cd0f765",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4e8e48dc-5120-4de5-9397-fc4bcff10d5d"
        },
        "item": {
          "id": "a1310ef7-9166-4c74-a33e-8698d2f97a4d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "669cd262-8633-4ef8-80c3-1c375481ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfb7d4f-7709-48bf-8b32-2743d50fd1a3",
        "cursor": {
          "ref": "46013980-9e85-4d29-8eb3-9088f5a7a773",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f0d9e11a-9bc1-4e10-b354-9d78be940eb7"
        },
        "item": {
          "id": "acfb7d4f-7709-48bf-8b32-2743d50fd1a3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8ea639c8-b19f-45a5-b5df-a3bb210b6043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce50c174-3313-465c-a3a6-4523f2f30d11",
        "cursor": {
          "ref": "5f406523-114c-44f7-acca-7830416ef0b8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "396bd959-99a6-4861-9895-2e9d2377aaf3"
        },
        "item": {
          "id": "ce50c174-3313-465c-a3a6-4523f2f30d11",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0bc2ca38-1b11-4aca-bc8d-58013a896766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbc3671-e9ca-48f8-b86b-a11e5ed584a5",
        "cursor": {
          "ref": "325c6438-bd5d-4b73-b28d-486e066b64ab",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5ed71eff-3b25-4597-a423-8186f7adfac3"
        },
        "item": {
          "id": "dbbc3671-e9ca-48f8-b86b-a11e5ed584a5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5199fcce-b842-41d4-9e4a-f8e02767168c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31182767-42f5-48c1-afe0-3ca7509656fc",
        "cursor": {
          "ref": "1a1d4cd2-4b7c-4dd7-86ce-5e670f3f2772",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0f0f09eb-740e-4436-b422-6480d9a58016"
        },
        "item": {
          "id": "31182767-42f5-48c1-afe0-3ca7509656fc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1aed7e87-bef8-4994-809e-f863407cd46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbc4759-7110-4412-9639-e9050590603e",
        "cursor": {
          "ref": "89e80801-5287-4e7d-b5af-c5f24122be74",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5f2106fa-486d-46cf-a732-f746a7911dd5"
        },
        "item": {
          "id": "abbc4759-7110-4412-9639-e9050590603e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "08e2a4be-adee-409f-b73b-8a21831263ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad261195-7e47-4733-a752-ee33618f620d",
        "cursor": {
          "ref": "919dc336-e88c-4f3b-895e-c936add747bc",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f40a7e43-55ea-4470-abe7-35fcbe48a393"
        },
        "item": {
          "id": "ad261195-7e47-4733-a752-ee33618f620d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e26933b1-5845-4d2a-a5b1-7c1de80c2985",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03b40e5-e7d9-477e-8923-591e4c41e702",
        "cursor": {
          "ref": "e3887b41-46bf-448f-9863-f99171782798",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c862685e-2c08-48a4-8797-2b73991b561a"
        },
        "item": {
          "id": "d03b40e5-e7d9-477e-8923-591e4c41e702",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0c6cda6a-fd01-4e19-8bc7-d84c71f2a9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "64dad881-5a67-4827-8a5d-9f6192efa0ba",
        "cursor": {
          "ref": "2cc7bd48-513d-4a7b-9f80-caf840c1d9cd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6da6b7df-f494-4c1a-ae22-92e35ae6e9f1"
        },
        "item": {
          "id": "64dad881-5a67-4827-8a5d-9f6192efa0ba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fb5068f3-da41-4351-8302-103ebea48a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c10c1fc0-2901-47ed-b811-883406f92570",
        "cursor": {
          "ref": "65951798-b85f-4cdf-8a2d-ed31d8f00d81",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f42c40d8-91f3-4ae5-9bfc-b2f10935ce29"
        },
        "item": {
          "id": "c10c1fc0-2901-47ed-b811-883406f92570",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3a30ce8e-9596-452a-b5d3-59f360103841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e28fb796-1146-4c9f-878e-ce703ba32bee",
        "cursor": {
          "ref": "4cc8a17e-84da-4b41-bf68-074ce2ea1637",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6a4b993c-43e6-435e-bb83-8034e1cb15e3"
        },
        "item": {
          "id": "e28fb796-1146-4c9f-878e-ce703ba32bee",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9dadbc29-d458-4fe9-b875-9a1a2c87c6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dffe8a77-8f9b-4231-bc67-b768c69fcdda",
        "cursor": {
          "ref": "0eb34475-b142-4ca3-8f16-9959bf9f4320",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "849510ff-09c7-4626-b595-89ca3fb24925"
        },
        "item": {
          "id": "dffe8a77-8f9b-4231-bc67-b768c69fcdda",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b06138a7-ec9f-447d-b8f7-57c1851eb9d9",
          "status": "Created",
          "code": 201,
          "responseTime": 12104,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a158107-3b30-4ee8-8ffc-92c791ec7722",
        "cursor": {
          "ref": "135932cc-722b-4dcb-ba61-d456910a51c2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d76441ff-fbd9-4822-b620-d957dbabb34d"
        },
        "item": {
          "id": "0a158107-3b30-4ee8-8ffc-92c791ec7722",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2d5435c2-61a3-470b-9f02-ef1242550a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "200c9da9-4225-4009-a783-96a298be5e28",
        "cursor": {
          "ref": "d1930111-bb52-48c3-b1ff-e8ca1334389f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3421f0b5-d8df-482f-a0e5-f46b20e39909"
        },
        "item": {
          "id": "200c9da9-4225-4009-a783-96a298be5e28",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "41b89a5f-f6ed-4ac6-b33d-69cf1ec662eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "fd78adc8-9b19-4846-973d-620e6cd6bd28",
        "cursor": {
          "ref": "5fa4f151-cf77-42d8-a77e-7df3be74efe3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5a4d6d5e-e009-4b90-af0b-534e4812f99c"
        },
        "item": {
          "id": "fd78adc8-9b19-4846-973d-620e6cd6bd28",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "583e14bf-f61e-4375-a2f5-7bd7eefa6767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c60171-5cf7-4311-bc67-234646e08396",
        "cursor": {
          "ref": "2703101d-e14e-4847-9467-388496edb681",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "25bbc182-31fc-4fad-8e50-bb03fef694ba"
        },
        "item": {
          "id": "a2c60171-5cf7-4311-bc67-234646e08396",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "474b4113-2879-4e08-bb67-70812b40edb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919e55bd-ad23-4051-80dc-20c0cc09a189",
        "cursor": {
          "ref": "ba45a9a9-b1d7-4936-9c3a-944b032ae6ae",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "248aaf45-3494-4513-a47d-e90c7cff14e8"
        },
        "item": {
          "id": "919e55bd-ad23-4051-80dc-20c0cc09a189",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "74b5563c-971a-4239-9973-a55f16185ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d460dd6-ace6-4775-855e-ca7e50bba6ae",
        "cursor": {
          "ref": "a12c9445-0167-46ce-a6d9-29963ddaa318",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1f48be4c-b6c9-429e-847b-41237480ac9e"
        },
        "item": {
          "id": "4d460dd6-ace6-4775-855e-ca7e50bba6ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e9ab39e8-6347-4b25-8509-cf06dc7a1023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cef6619-1d87-4f0a-bcaf-e48012c38f74",
        "cursor": {
          "ref": "49849dde-f8a3-4d13-aeb5-6fab976258d3",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2b70accb-fa9b-4780-a743-7c0f932c738b"
        },
        "item": {
          "id": "6cef6619-1d87-4f0a-bcaf-e48012c38f74",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "998c7a62-2adf-41b0-bfa5-85dde341d5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e2a706-c7e1-40e1-a0f8-92d3b59123f9",
        "cursor": {
          "ref": "728615d2-f329-45e8-8aa8-f5196a03525e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "372ff5c2-1238-4874-8df4-5a93e67fc7e6"
        },
        "item": {
          "id": "a9e2a706-c7e1-40e1-a0f8-92d3b59123f9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "da7ca559-f90c-4064-88cf-1702d9a2cbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38728665-1606-452e-bfe1-93f6f493a852",
        "cursor": {
          "ref": "773fc676-2a43-4a1d-b094-ec313db13560",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3c2db3ff-2ab2-4aa0-aacf-5e815ac399a4"
        },
        "item": {
          "id": "38728665-1606-452e-bfe1-93f6f493a852",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d1c5dfaf-0db5-4495-a258-b0d773346f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b8b8c5-c511-4d5a-9358-5160765cbde6",
        "cursor": {
          "ref": "8b086be5-e7ae-4597-8c58-f61e6f52b70c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3f2ecdbd-7576-46d5-9202-1521e9db3f39"
        },
        "item": {
          "id": "10b8b8c5-c511-4d5a-9358-5160765cbde6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7d3915eb-233e-49d9-bda7-711b63eff767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6493e4b6-0d05-4c9a-bda1-5404674995e8",
        "cursor": {
          "ref": "d326f2cf-fc4f-4849-b38d-f53c0490c821",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b73c6c11-38cd-46aa-ae2d-40a8f6c087bb"
        },
        "item": {
          "id": "6493e4b6-0d05-4c9a-bda1-5404674995e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "84f3c8bc-7307-4eb2-8c58-f30720e5c353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7d4476-deb9-4463-af18-e7e4204e5c13",
        "cursor": {
          "ref": "e5b7f30b-2f90-4e4b-9f79-2ca9f1ee47a7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac1b1aa9-6e2e-4ea6-9fa0-975e5273536a"
        },
        "item": {
          "id": "cd7d4476-deb9-4463-af18-e7e4204e5c13",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76e2fabd-91cd-496f-b097-f733474cc4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2f9e81-3709-4418-b6c2-9f891b24072b",
        "cursor": {
          "ref": "4e4e2f39-e526-4102-85ee-d1dedb5321cc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "91326222-83d7-4813-9989-512c378b3b84"
        },
        "item": {
          "id": "9a2f9e81-3709-4418-b6c2-9f891b24072b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "912e7c3a-8804-48c8-bf40-75fd73404c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5def0728-d134-4945-83ff-2d6b0ba7b7f3",
        "cursor": {
          "ref": "ead8d53c-9952-4b0d-8d7a-bc7fc192f043",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cfa35a1d-4d7a-4357-a412-8cdd83c12c45"
        },
        "item": {
          "id": "5def0728-d134-4945-83ff-2d6b0ba7b7f3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0a03f95d-33b6-471e-b29c-639fe94cf373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eac1b2c-d50f-49d8-b8aa-6cf5e89d3109",
        "cursor": {
          "ref": "dcce8da4-8d51-4425-8c42-f529de6e3be7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1d01c058-87c5-4aac-92a6-cbcdc657d6b1"
        },
        "item": {
          "id": "6eac1b2c-d50f-49d8-b8aa-6cf5e89d3109",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d90e6a66-a23d-44a6-a418-4c1d57995025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd17d56-2c60-4e89-a0c6-280270d8f7a9",
        "cursor": {
          "ref": "c0082792-a5b6-419d-a119-363fc20d4b60",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8a921866-349d-4a9b-888b-637223a984d5"
        },
        "item": {
          "id": "7fd17d56-2c60-4e89-a0c6-280270d8f7a9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "302a753a-5c2b-4ca9-8f43-15685ae4f7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d269cd-5277-48d2-8c0b-c12fb0e38dd6",
        "cursor": {
          "ref": "f6a6ab91-1e1f-4e1b-8263-3ac1e18bbcbf",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a06b6a13-4f32-4b21-bf9b-8014510e3a76"
        },
        "item": {
          "id": "d2d269cd-5277-48d2-8c0b-c12fb0e38dd6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aab4d184-d67d-4d5c-b251-23883d23a890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44de7014-b908-48c7-9124-c100df235188",
        "cursor": {
          "ref": "9072c80a-4b8c-4550-ab6e-176f8e371a5c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0b998f35-b2b9-469b-a235-af7a32d801d0"
        },
        "item": {
          "id": "44de7014-b908-48c7-9124-c100df235188",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7d35f17e-7df0-4b80-bc30-e577bacbfd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38911852-5935-4d39-9126-2b3a3019a757",
        "cursor": {
          "ref": "2dddfedc-04b3-432c-8015-b6449593b1d8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "300ef93d-fc28-455d-a317-2d1285709c7a"
        },
        "item": {
          "id": "38911852-5935-4d39-9126-2b3a3019a757",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2309a3b8-eb41-4908-a798-bc9d2c7555c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4fea2c17-f560-47d2-8c2d-90e76356ede1",
        "cursor": {
          "ref": "cef8df91-d5a0-4371-a036-ead16363cea3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b92f0fb4-464c-447a-9511-4a1c768ae57b"
        },
        "item": {
          "id": "4fea2c17-f560-47d2-8c2d-90e76356ede1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d037a549-d4ac-4c30-a83c-33fdd8ee846a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc9f274-6f85-4d2c-bcf3-e6c2ce2ffaf0",
        "cursor": {
          "ref": "f6e5b23e-ca79-4382-a79f-730f18b6c536",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "738382e3-957b-4c4a-8e76-2a720c9be32a"
        },
        "item": {
          "id": "bfc9f274-6f85-4d2c-bcf3-e6c2ce2ffaf0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cb1a6a44-5890-4698-aede-41acac5205d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f553e48-2400-42c0-aaee-df379afbbefe",
        "cursor": {
          "ref": "02df166c-1a19-4182-b4e6-c255ca5a9220",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "48c4ce19-6755-43ac-ab44-e94800ac04b1"
        },
        "item": {
          "id": "4f553e48-2400-42c0-aaee-df379afbbefe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ddbb659-0151-4ab6-b8bd-4113f8863cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420b6f39-0263-423c-89ab-ae404cafecf7",
        "cursor": {
          "ref": "87c04274-110b-4458-b1d9-b8fff1deceb0",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e3ba1a69-5c39-4a0b-bad8-e4fc3bd5f2c0"
        },
        "item": {
          "id": "420b6f39-0263-423c-89ab-ae404cafecf7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8facd8c8-e172-4489-912c-baac307eb6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee299786-723e-4e6a-9323-25d9f9eb1e49",
        "cursor": {
          "ref": "b6da1828-a372-437d-8d15-f48fdf79d74e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a03c67a1-0572-4c31-a6ad-3c1c58ec3d9a"
        },
        "item": {
          "id": "ee299786-723e-4e6a-9323-25d9f9eb1e49",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8f000e91-404b-41ca-9e95-f47b3225e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefe2370-fb82-4b62-ab2f-e62459a49078",
        "cursor": {
          "ref": "4dd3c3b0-9d46-42f3-8473-dd09924c0f08",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5bfcf2bb-c8ee-43bd-b1ec-6991b5fb0dde"
        },
        "item": {
          "id": "fefe2370-fb82-4b62-ab2f-e62459a49078",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a847c080-bcf7-4a2b-bef8-ab568910c2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74d80c3-adf8-4893-82ab-e21a30fbf85d",
        "cursor": {
          "ref": "1bed886b-6696-45e6-b6d0-e37ea407035f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "13628d66-1019-4920-a137-e211935f93eb"
        },
        "item": {
          "id": "b74d80c3-adf8-4893-82ab-e21a30fbf85d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "874c2f7e-a698-4ca7-a521-4746dc34a998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5069023c-c00d-4e2b-a2b8-6095df11691d",
        "cursor": {
          "ref": "ebf0045e-7b2b-41ff-8c16-fe927cbebc58",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32fda5e5-3666-49d2-b905-6dd3342f704d"
        },
        "item": {
          "id": "5069023c-c00d-4e2b-a2b8-6095df11691d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dcc9eeae-cb61-4848-8967-edb284057f38",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "73f25262-30e6-4c68-b816-c49e42c73513",
        "cursor": {
          "ref": "c2b9b872-ca12-4f0d-8083-50ae38a03383",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "441eb69c-b630-4ebd-9546-68e82e273855"
        },
        "item": {
          "id": "73f25262-30e6-4c68-b816-c49e42c73513",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e03f3502-c541-4535-a017-0346ee69d981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8b5b84-65f5-4b47-867a-79184a5e8e4f",
        "cursor": {
          "ref": "b531e670-258d-4cb6-861b-65db69aa0ce7",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c0402a2d-5fa2-4780-b76f-2447a2eeb183"
        },
        "item": {
          "id": "db8b5b84-65f5-4b47-867a-79184a5e8e4f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b953322d-b5c6-4756-aa29-fefbd7677846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf9fbd3-276a-44f9-8f63-79bec8ae53af",
        "cursor": {
          "ref": "e6a85c30-cc8f-4abd-92d7-7c5dd5b8f1af",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "00388df0-fa8b-4b8d-b578-b09b893a4cba"
        },
        "item": {
          "id": "bbf9fbd3-276a-44f9-8f63-79bec8ae53af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "82824f3e-4065-4a23-8674-60f002efb9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4d7490-29f6-4cb4-aecb-21afea594fb5",
        "cursor": {
          "ref": "01530a80-8a43-4861-8cf7-10653d2d672e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "15f72aa8-8a82-4cce-8607-bc3342557370"
        },
        "item": {
          "id": "ba4d7490-29f6-4cb4-aecb-21afea594fb5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "352d607f-5a28-4622-9e54-72714c5d572f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcd61b1-1919-40c9-a640-ad964965a588",
        "cursor": {
          "ref": "f470111f-2358-44c6-878d-802598d6de14",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cf0fb8b2-f6d1-4a0d-b41d-31257718d408"
        },
        "item": {
          "id": "ebcd61b1-1919-40c9-a640-ad964965a588",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6d4718f-ad7c-4f0c-9fad-1fbdc8bbc0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e98c10-3d5d-444c-84c7-bd556a2c75bd",
        "cursor": {
          "ref": "02bfc073-7950-4d45-8e8c-105e1a085239",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "69fccbd2-b504-44d0-8e44-ab9b73f8eab0"
        },
        "item": {
          "id": "19e98c10-3d5d-444c-84c7-bd556a2c75bd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d1951093-eb25-4ceb-ac77-e112a0ca8fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8f18a4-ebed-44d3-b220-51d9e4a3e724",
        "cursor": {
          "ref": "33ca3e15-e6c6-4873-a128-9dc619366c21",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7c419d27-291f-4e70-851d-c08d13a79d20"
        },
        "item": {
          "id": "bd8f18a4-ebed-44d3-b220-51d9e4a3e724",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ebcd71b6-4edf-4dda-8826-8da5f357e4c4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "bcbb1008-3f12-4c5f-a8d5-43ed42701d5b",
        "cursor": {
          "ref": "2d935185-2b60-4b1d-9c84-4234d8464ab2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f9dfc153-2c10-4a09-b697-7983e2464363"
        },
        "item": {
          "id": "bcbb1008-3f12-4c5f-a8d5-43ed42701d5b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "08e4dc3a-24bd-427a-8d0f-980659c7c7da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e18265-2863-4d02-ad2a-bbcd14f3158d",
        "cursor": {
          "ref": "0a00c1bb-be8f-4519-9574-e8808d73dc46",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c7f66aa6-2431-4597-9f2f-d14cf408fbd0"
        },
        "item": {
          "id": "95e18265-2863-4d02-ad2a-bbcd14f3158d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56757668-f647-4f02-9086-d59a855856e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e3ba3d-c91d-478f-ace3-7b5bffa69915",
        "cursor": {
          "ref": "ccc5570f-b94c-4589-9740-9ab08147bc23",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6848bc01-4e10-4a88-95d9-dd219c304156"
        },
        "item": {
          "id": "31e3ba3d-c91d-478f-ace3-7b5bffa69915",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c7e0481b-4bdb-42f6-b7d5-10751c721c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e55c62-ca54-4edd-9443-22636f197f79",
        "cursor": {
          "ref": "51e3fc50-89a9-47cc-a9c7-6da30b5199cf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d11a1ab4-a7c5-40bb-bc02-e0579726cd23"
        },
        "item": {
          "id": "82e55c62-ca54-4edd-9443-22636f197f79",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d7d7b9cf-027d-42fa-9bf2-d851dbdaea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca68b50-3f03-4627-8124-2e8d20482bfb",
        "cursor": {
          "ref": "b00634c4-6936-4bad-af4c-df8c52f5329e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d9d32784-f17d-4a5b-bd34-2a44287ea215"
        },
        "item": {
          "id": "2ca68b50-3f03-4627-8124-2e8d20482bfb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fe106980-ee98-4481-a2a0-45f89a610610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1afb9e-5197-4de1-af89-894a07fbe086",
        "cursor": {
          "ref": "4db26298-0573-4bbe-8b78-f8ec13cfad58",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fc533ddd-66bb-4887-93dd-4308ab637e87"
        },
        "item": {
          "id": "6b1afb9e-5197-4de1-af89-894a07fbe086",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0878ca9f-7f6c-42da-97b3-d864ed645e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39d2bf0-dd34-40c9-bcf9-c469424d9b02",
        "cursor": {
          "ref": "f48e5131-9998-4f5e-9f02-e376aae3ad41",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "daf267dd-aa9a-427e-86af-685d56c27930"
        },
        "item": {
          "id": "e39d2bf0-dd34-40c9-bcf9-c469424d9b02",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1215f83f-0731-4c37-9c55-9eb0aa336cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a43167-3de6-4c4d-8991-e4c68cd0068a",
        "cursor": {
          "ref": "14799fc2-af8e-4a65-8cdc-e8a5525096ae",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f9216aa5-bdc7-4305-9f21-b338d50e0193"
        },
        "item": {
          "id": "78a43167-3de6-4c4d-8991-e4c68cd0068a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c45750af-0ec4-49ce-b2ef-4501f53a0d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dc9f52-699b-43bb-84ff-af13f496ce3f",
        "cursor": {
          "ref": "fbbbc485-1574-4513-b973-04b032099550",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "69f13d76-cbef-43e6-af99-179deefc9b64"
        },
        "item": {
          "id": "a4dc9f52-699b-43bb-84ff-af13f496ce3f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e5867ee9-4c51-4e00-8464-0c2d9dd2f038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02e7646-d97f-4efd-bb72-b08c5e95cd11",
        "cursor": {
          "ref": "9ff9dba4-c8c4-4b4c-af48-c1a4ce5b9bde",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1d56a9c1-7622-4a4f-9bff-5f9b57b74a73"
        },
        "item": {
          "id": "c02e7646-d97f-4efd-bb72-b08c5e95cd11",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c064e7a0-846c-45d3-92d8-6c8a78b826a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a66b1-f798-4eb7-85a4-9fd138cf0d1e",
        "cursor": {
          "ref": "b177cbe4-2dbf-47ef-946e-afcbb2097783",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f8eecbe6-d2cf-4680-bc2e-2b5ada08c545"
        },
        "item": {
          "id": "736a66b1-f798-4eb7-85a4-9fd138cf0d1e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a92945a1-5b9f-4dee-847c-e8d96b2b7ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4a1d9d-0c51-45a1-9d8b-cf014d950e9e",
        "cursor": {
          "ref": "34e65401-7143-4849-84ef-d698ef9f7e55",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b9f7d81f-9813-4d7d-bef7-f302b89a11f0"
        },
        "item": {
          "id": "af4a1d9d-0c51-45a1-9d8b-cf014d950e9e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9139de78-c60b-4a42-9a7e-18c54fe44fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3940f98b-25ee-453b-8294-38b11bea549d",
        "cursor": {
          "ref": "66d54768-2e20-4a2c-85b6-c190ff53db2f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2e44d4e3-910b-4ea4-a6e7-ca0d85fd0cf2"
        },
        "item": {
          "id": "3940f98b-25ee-453b-8294-38b11bea549d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cb9c9434-9cf7-4d16-9853-4dae98a04ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6da9295-d5ec-4216-82e3-805e89f99a37",
        "cursor": {
          "ref": "7028b80a-2b93-4b0d-b297-2b875a4a7afc",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b73294aa-ee7d-4f22-b3fa-9785ae5aac54"
        },
        "item": {
          "id": "d6da9295-d5ec-4216-82e3-805e89f99a37",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c23bfffb-b47c-4cc7-bf48-b9384c80f428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c13fc20-9b5e-477b-9de6-4f9f23866a3d",
        "cursor": {
          "ref": "e2059daa-34c5-4e3d-88f0-79ebb700371c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e704e789-79bb-466c-8e80-2087ec8e7a8d"
        },
        "item": {
          "id": "9c13fc20-9b5e-477b-9de6-4f9f23866a3d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f48e685e-9887-4c88-a92c-56133fccdc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8dbf9a-ddb0-4ac3-89c9-9b61ec239feb",
        "cursor": {
          "ref": "e125e638-a3db-4972-b37a-b001f79d4810",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "491ce794-4bb7-4ca9-bb60-80d4135c8032"
        },
        "item": {
          "id": "4b8dbf9a-ddb0-4ac3-89c9-9b61ec239feb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc070eea-9088-429d-b107-8a82aea95d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03466dde-f3a6-4551-8f67-99ce5384397f",
        "cursor": {
          "ref": "8c734023-2f8e-47f9-84df-9258b37a7e0e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "609bcadd-fb6a-4a19-8be9-6cba6c16ad53"
        },
        "item": {
          "id": "03466dde-f3a6-4551-8f67-99ce5384397f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bb9d1dc2-a6f0-4074-8fa3-cd07cc9624d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c4d81e-51d8-485c-92c6-4ae732099be2",
        "cursor": {
          "ref": "445a2e58-30d8-4412-a673-ecd2a8a44ef0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "41719844-af63-4e16-9843-ccecf0cc7af5"
        },
        "item": {
          "id": "29c4d81e-51d8-485c-92c6-4ae732099be2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ceb045ba-421d-43f0-be11-7770282be7d8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4a32f3b6-13d9-4ecf-9ff8-e0e676ad6e8d",
        "cursor": {
          "ref": "765a5d1c-0d5c-40d4-ac86-bc133e92a24e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "95179705-6232-43b5-b820-7e12cb0ffb4d"
        },
        "item": {
          "id": "4a32f3b6-13d9-4ecf-9ff8-e0e676ad6e8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9ada58bc-008a-4ac1-9cd2-a45bd04e9ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff292682-1c24-4686-9d73-4135a6ae9eb1",
        "cursor": {
          "ref": "938ffe19-09c7-4a25-9042-6e49859357b3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3e1f4c59-92de-44d1-ad50-4c2dee01a5a2"
        },
        "item": {
          "id": "ff292682-1c24-4686-9d73-4135a6ae9eb1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ce1948d-7ab7-49d5-b366-364bc4507f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7aa31c-7f5b-41d3-9ab7-8f88238869c7",
        "cursor": {
          "ref": "548ca8d2-b4cd-4de7-8a2b-d4edf6d894a8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "99d17181-1dda-4ff5-9848-07f91904ebfe"
        },
        "item": {
          "id": "4b7aa31c-7f5b-41d3-9ab7-8f88238869c7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c2d14d14-f80c-4ad2-bb50-03621cf10956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e9670d-5693-4952-9380-f95f44ea6b09",
        "cursor": {
          "ref": "6bccf24a-67f1-42e6-9ff4-dd83d26d1132",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "59c02e81-5b1e-4190-aa77-e617c4525e8c"
        },
        "item": {
          "id": "f6e9670d-5693-4952-9380-f95f44ea6b09",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "de730e15-05ad-44ba-b93f-1d02c4de8d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30994168-4eef-4a1c-b6b2-eb5a4b1f1563",
        "cursor": {
          "ref": "06c8c24a-e0e4-4713-b48c-fd3535a23bec",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7d81799b-3493-4c28-92d3-6e01c9f209fe"
        },
        "item": {
          "id": "30994168-4eef-4a1c-b6b2-eb5a4b1f1563",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a1daf475-87b0-47a3-9bc3-1e757612572c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c7745c-d83f-4667-9b0d-6dfce88d4257",
        "cursor": {
          "ref": "5b29e241-b27e-40eb-8ab2-c326f2640773",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "71d0a2e5-0abe-4583-9c1f-f11f8ff07d7a"
        },
        "item": {
          "id": "92c7745c-d83f-4667-9b0d-6dfce88d4257",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8f55d981-20bd-437f-b0d3-d1c4ead81aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657e8768-9fc8-4964-bf3d-4a7b8c73b8fd",
        "cursor": {
          "ref": "b92194e1-5634-4b7e-a2a3-266e334952a9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f90beb5d-3b3b-4e9f-be1f-6d4c71d49ec0"
        },
        "item": {
          "id": "657e8768-9fc8-4964-bf3d-4a7b8c73b8fd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e6cbf6dc-3eb0-4885-9f0e-a8f41c7aec63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037eb6f8-d7ff-43d9-8ffd-6add5130e6b3",
        "cursor": {
          "ref": "955af3e5-7bae-4c38-b3cc-fb05a721c1a2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7d6a7feb-23b9-4bb0-90fa-e074ca97a3ba"
        },
        "item": {
          "id": "037eb6f8-d7ff-43d9-8ffd-6add5130e6b3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1564ca6a-6a92-495a-ab4b-bd4f17efd19e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "152fd636-f257-4eea-bbe9-7c55748bd2b0",
        "cursor": {
          "ref": "72bb249c-d1f7-45e8-8f03-b31c2ba1ed0a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7b8ee147-9225-4d04-bc1b-e092877ada98"
        },
        "item": {
          "id": "152fd636-f257-4eea-bbe9-7c55748bd2b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "79977d68-77f7-44b6-a040-ffe820639d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc775920-1a07-4fcd-80b6-e0a9b0d0d525",
        "cursor": {
          "ref": "5f562388-08ed-41dd-a2d4-58befb0aac43",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c33f4856-5aa2-4754-83a1-02608a2938ab"
        },
        "item": {
          "id": "bc775920-1a07-4fcd-80b6-e0a9b0d0d525",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0c32c6da-860f-4539-b748-5f4e0c6bf304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae422ced-b5f7-4e31-afe3-b2454e140929",
        "cursor": {
          "ref": "f245cfeb-d74b-4516-803f-c07bf0cf3cda",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8f3322f5-d62d-4df9-a51b-5fc2590316a3"
        },
        "item": {
          "id": "ae422ced-b5f7-4e31-afe3-b2454e140929",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "947a9092-e282-40b1-abd0-3735c1e5a143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd67943-1e31-44e3-a3c6-ddd32c715aae",
        "cursor": {
          "ref": "e9462d75-9134-4be9-8f52-e9f37d4d7b5b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0b0b202e-96a3-4cf6-b846-2b4d3a05b79c"
        },
        "item": {
          "id": "7cd67943-1e31-44e3-a3c6-ddd32c715aae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a3ac7c7e-6958-4874-a3ae-e67e02117fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9a5bd8-51d2-4db6-a8d2-235f8dc2245b",
        "cursor": {
          "ref": "ecf16a36-a8b2-4493-8c58-f0402f734cfa",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d7e11e03-522c-4d19-afd6-e80c585f1a75"
        },
        "item": {
          "id": "2b9a5bd8-51d2-4db6-a8d2-235f8dc2245b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1d79df89-950f-417a-a3e2-abff7402fbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6efd4f-f9cf-40af-9d63-161dcdf87095",
        "cursor": {
          "ref": "a1c165c5-16a3-4c4e-a491-804290975006",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe7b93de-28b0-401d-9acf-c921bb74513d"
        },
        "item": {
          "id": "ee6efd4f-f9cf-40af-9d63-161dcdf87095",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "874afa45-b20e-44ac-9101-a541bc81f7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23664f9-4b78-4ffc-9fc4-9f5b865b236f",
        "cursor": {
          "ref": "d3167218-41c8-48e1-9f90-1837cdb9542c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7ac4034b-915d-4669-816d-28b38b7f3667"
        },
        "item": {
          "id": "b23664f9-4b78-4ffc-9fc4-9f5b865b236f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3158ac62-9455-4bc3-afe7-9915ca76f7af",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "f1d09ba9-2c6a-44de-8fda-2c9f3f0c7b07",
        "cursor": {
          "ref": "bc14f56d-19fa-488b-b359-c0f4df35eeba",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c63bc271-4a4e-4210-8083-99f98cf788f6"
        },
        "item": {
          "id": "f1d09ba9-2c6a-44de-8fda-2c9f3f0c7b07",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4d5eb91e-8801-4fdf-85c3-08e82656f787",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "7898d8f7-88a6-4853-841e-49066c30f250",
        "cursor": {
          "ref": "6597e953-17a0-415d-9079-ef9b26a2e17e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d2945d90-d33f-4215-8306-0eee9ee56122"
        },
        "item": {
          "id": "7898d8f7-88a6-4853-841e-49066c30f250",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4dce51d8-4f4b-4598-9700-7b168c6bd914",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "a9ab2cdb-56f8-4e5e-9c5a-8169ba41b23f",
        "cursor": {
          "ref": "452efae5-55ec-481d-af07-4825864eb8dc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d1f79860-b2c1-4ed4-897e-4148e48fb679"
        },
        "item": {
          "id": "a9ab2cdb-56f8-4e5e-9c5a-8169ba41b23f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "38d213ef-de86-46d4-8fe8-d0f00000f3ae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "3ae0a007-ca8b-47aa-a316-12ee57091ba7",
        "cursor": {
          "ref": "b9201123-bc45-4cdc-a732-409f0d8b6eca",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7a373414-7a57-4ecc-87dc-6bffbe1fc9d7"
        },
        "item": {
          "id": "3ae0a007-ca8b-47aa-a316-12ee57091ba7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3409cf59-e1c8-496f-a7f1-7fa311ce9c75",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "d26ab7fe-cd84-480f-a389-b3f29f5a8fe6",
        "cursor": {
          "ref": "8d0809df-98b5-4abf-a5b3-6eb7894d0cff",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9d771fb2-ad2a-4dae-84e9-16add15144f9"
        },
        "item": {
          "id": "d26ab7fe-cd84-480f-a389-b3f29f5a8fe6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "efe54a3e-be84-4fe8-859a-73b808c6f4c9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "e2483222-276a-4001-a6f9-dc601a309b72",
        "cursor": {
          "ref": "ddda10c4-cc45-4a1c-9073-5ac7bf7ff560",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a657ada9-c28a-4e46-9de1-67715438f286"
        },
        "item": {
          "id": "e2483222-276a-4001-a6f9-dc601a309b72",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "883a8689-3977-4fa3-99db-0b32221a8b06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f6e6ef-649c-483b-afeb-2f054e6438dd",
        "cursor": {
          "ref": "31f2fb0f-e389-4584-bba3-40e376b992c8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b2496d56-95fb-4975-bb04-f5bac4f050fb"
        },
        "item": {
          "id": "c5f6e6ef-649c-483b-afeb-2f054e6438dd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c7331327-38c0-4d5e-a763-97210710231e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd328b85-4350-47ff-8953-1336a2fa3d09",
        "cursor": {
          "ref": "1eec3af6-a439-49d9-8652-60f36106c7cc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "88fae7ba-c2c7-41db-b2b5-82a00a6a89ce"
        },
        "item": {
          "id": "cd328b85-4350-47ff-8953-1336a2fa3d09",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6083e4f4-ab05-4a52-ba43-882957c5dcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52954c84-69a5-4b45-809f-decd8aab0ba0",
        "cursor": {
          "ref": "43787f1a-1d6f-454b-8979-70a2c15dd5c3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "38a9fc56-ecea-404b-8c7b-0a6a29944584"
        },
        "item": {
          "id": "52954c84-69a5-4b45-809f-decd8aab0ba0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4b267f53-feb0-422b-bf26-40d284a7e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22420f-b7e2-4954-b98f-6872aeef5367",
        "cursor": {
          "ref": "8fd9bb2e-0b4b-48c8-96da-fffd745eab2e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "39e8a142-b5f4-4b9a-a9e3-457005a3a185"
        },
        "item": {
          "id": "cc22420f-b7e2-4954-b98f-6872aeef5367",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "88cf51c4-4449-433c-bea6-b82c282739ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0feef5-83c5-4394-81dd-f132816df751",
        "cursor": {
          "ref": "d0e62cf9-07dd-4751-8901-cb1ee49f10b0",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9c8255ff-0cab-4f1d-b19e-fd7abdcbe593"
        },
        "item": {
          "id": "bb0feef5-83c5-4394-81dd-f132816df751",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "300cc211-995b-4268-bc5f-f5aac215672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2231a12b-017c-4ae2-a19f-1cd8f99e8e10",
        "cursor": {
          "ref": "082987ce-18df-400a-9566-735508246a36",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2b698db6-b896-4d27-ba26-61cd8ff67c4f"
        },
        "item": {
          "id": "2231a12b-017c-4ae2-a19f-1cd8f99e8e10",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b89f403c-fae1-4d8f-83e3-a1f7f7a4e0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761667ad-fe98-4489-b908-b667a5fb49c6",
        "cursor": {
          "ref": "826101e4-201b-45c1-a364-eebe19f5f04d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cf460a79-93f4-4cfb-b953-c67fcbcb3e3b"
        },
        "item": {
          "id": "761667ad-fe98-4489-b908-b667a5fb49c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b8649110-dca6-4e45-80eb-2be781395e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc61b25e-f1e8-40ea-9823-c53812512976",
        "cursor": {
          "ref": "3105433f-207b-4750-86a4-66e56c17b172",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b8fe6e47-59b5-4346-a5c1-662945cf82ca"
        },
        "item": {
          "id": "cc61b25e-f1e8-40ea-9823-c53812512976",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fcef0425-3668-43fe-88a0-bc6261e3760c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5af748-fb27-4347-85fa-0c3d85a96eaf",
        "cursor": {
          "ref": "525ffdd0-2933-4b15-840c-e35df03eb47c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "df24144d-27d9-49b6-8a28-9321d7d0db20"
        },
        "item": {
          "id": "2c5af748-fb27-4347-85fa-0c3d85a96eaf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5ad8d8b9-539d-4bb3-bc8f-3e28aa83d8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feb05a6-61a4-4691-877e-c09801398487",
        "cursor": {
          "ref": "938ade89-f148-4911-8a19-8bc7d9f2ffe4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a805d043-8f40-4300-8082-850d3924d63a"
        },
        "item": {
          "id": "6feb05a6-61a4-4691-877e-c09801398487",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fbf911d9-36bf-4e76-8c27-2ecd36b0fc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbcc9b5-14ca-410a-bb92-e435ccc7c697",
        "cursor": {
          "ref": "60d82664-6440-42f9-ab6d-5ae28d9b63ea",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1a9e01f1-2d92-4206-8c3f-c0df70688609"
        },
        "item": {
          "id": "edbcc9b5-14ca-410a-bb92-e435ccc7c697",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4f508fa9-20b9-4280-b27a-a867d77a17b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df80e00b-a792-4cc2-af07-b54234a2affb",
        "cursor": {
          "ref": "3f2746ed-f211-4d2b-8738-0882fd310cc8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9e43aa2-6438-4d48-885a-548e688cc5f3"
        },
        "item": {
          "id": "df80e00b-a792-4cc2-af07-b54234a2affb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3a1b4b1d-1532-40db-abed-e84fef92670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b255300-6a63-4e5b-8eaf-d3833031ca9b",
        "cursor": {
          "ref": "e5b61677-da34-4898-9160-1dc44b3ea42b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "81a92851-9cd4-4795-9b9b-03da6d5b2d88"
        },
        "item": {
          "id": "9b255300-6a63-4e5b-8eaf-d3833031ca9b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "efe1872d-429d-4dc1-b6e3-c166206e43c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02225095-4eac-470d-9288-7f975443f8cd",
        "cursor": {
          "ref": "1445ee30-1f38-40ce-9970-3897c06b2c2b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f2285386-a7e7-4f56-9a58-dfe3b1fe6cb7"
        },
        "item": {
          "id": "02225095-4eac-470d-9288-7f975443f8cd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "47d53a3a-1d2d-44ba-920c-7f47d35d7237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29d94f6-d207-48f8-813f-9685e33b2212",
        "cursor": {
          "ref": "4596956e-3b0a-44e4-8088-4ce38055b774",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "76199a3b-dbc8-4b2d-be6d-7f477dd609e6"
        },
        "item": {
          "id": "c29d94f6-d207-48f8-813f-9685e33b2212",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "88bf0234-41a7-4564-b5cc-95231cb20f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b210089-3e05-4b0b-bb50-c39ff4354503",
        "cursor": {
          "ref": "66b775e4-d95f-4e0e-acb0-54b3bc9c8782",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "88627372-fca2-4107-a2c7-06b89b5cd9bd"
        },
        "item": {
          "id": "4b210089-3e05-4b0b-bb50-c39ff4354503",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "72f892e6-9951-428a-991b-83bc1bb75a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2555c3d-f560-4f0c-bbcc-a5f1abb00aff",
        "cursor": {
          "ref": "9ef9be9b-3317-4e35-b64a-5032daf116b7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bcb8f8ed-8239-4dd1-a703-bee10e512ece"
        },
        "item": {
          "id": "d2555c3d-f560-4f0c-bbcc-a5f1abb00aff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "78a17898-229a-4035-a161-0bb8fcb1a07d",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "8998dac5-6901-473f-a5b8-7f4d23c8c703",
        "cursor": {
          "ref": "7b9c5027-3afc-4d5a-b328-92bbd26df109",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b60e02ae-4b6b-41e7-840d-4e7ff5c48bd3"
        },
        "item": {
          "id": "8998dac5-6901-473f-a5b8-7f4d23c8c703",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d30f6290-f71b-4073-bd88-373f50c154f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684ecde6-8934-4ceb-b125-adc3cb688b58",
        "cursor": {
          "ref": "f4682da4-940e-4093-a284-8beeb1b9cb51",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "68fbac72-8ec6-4138-a659-e33c27c8ca2b"
        },
        "item": {
          "id": "684ecde6-8934-4ceb-b125-adc3cb688b58",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d3463ccc-24e2-4ed7-b87f-25f23556a0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceb523c-834b-4946-8844-495c6c9de8fb",
        "cursor": {
          "ref": "a96486f6-2c7e-42d5-b8c5-1817564863ab",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "88f0c85f-e429-412f-9975-47a99c0e34ba"
        },
        "item": {
          "id": "bceb523c-834b-4946-8844-495c6c9de8fb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c376e54e-1e38-4d18-8f01-00a28ef91885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efab2cfb-ab27-4c0e-a5ad-7ac03c823142",
        "cursor": {
          "ref": "09af4286-8626-4f37-bd93-bfabee155d6c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b7b4a742-9829-4f4d-b661-6c1c626bd0a2"
        },
        "item": {
          "id": "efab2cfb-ab27-4c0e-a5ad-7ac03c823142",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "87533fbe-59ea-498d-815d-a1e8f18560d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a95ebc-3dcb-4bef-9fbd-4c4d446efe96",
        "cursor": {
          "ref": "476da68c-987b-4bcf-83c8-448b16a71633",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c4b948a8-ef44-4763-b9fd-61f20ea48365"
        },
        "item": {
          "id": "27a95ebc-3dcb-4bef-9fbd-4c4d446efe96",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc87f5d4-f504-4e4c-ba3b-74d1af805ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bb27dc-7890-4388-b75f-98fc7a477ae3",
        "cursor": {
          "ref": "8a46973a-bfd7-4153-9bb2-0ad46d22f5c4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "34acc610-bfaf-4078-a47e-4fdfec1ea415"
        },
        "item": {
          "id": "83bb27dc-7890-4388-b75f-98fc7a477ae3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f2735493-043a-4552-b81f-df18bfd2db7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1371930b-dbb9-4633-b437-ed41e80dab79",
        "cursor": {
          "ref": "628cf6c9-7f06-4ccd-89f1-702850d8c656",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "def991bf-23dd-4738-ae2e-9ea88fac0253"
        },
        "item": {
          "id": "1371930b-dbb9-4633-b437-ed41e80dab79",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5e1ca365-6920-49b7-a200-f2291c2d8a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64de4c30-c1c1-46e4-8e59-93f20c6e4afb",
        "cursor": {
          "ref": "fae83771-766e-4e0b-bbea-978d229c700f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a243466b-83f3-428f-b036-49c09a72a4d1"
        },
        "item": {
          "id": "64de4c30-c1c1-46e4-8e59-93f20c6e4afb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d88b6bfc-3fa4-4131-a424-183ace4947df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de53dc93-0a19-44b3-8c0d-52399f97868e",
        "cursor": {
          "ref": "97a77f7e-07d5-4cec-b661-9ac5c2fa84f7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "20f85dfb-1b78-4369-b062-0be8fc0a7e09"
        },
        "item": {
          "id": "de53dc93-0a19-44b3-8c0d-52399f97868e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4f7762fa-4533-4ae7-9d98-9ac73bc075f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b674d285-94ec-4a65-93ef-16e75e40110f",
        "cursor": {
          "ref": "9a363567-9558-4e05-aca4-ca2012fa2f9a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6f358d0c-6706-42fe-803b-33daf6b194e8"
        },
        "item": {
          "id": "b674d285-94ec-4a65-93ef-16e75e40110f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "990f3fc7-fbb6-44dd-b546-ff4f87892978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ca3042-e3e6-406e-9ad9-0e0e0a888943",
        "cursor": {
          "ref": "151eeed7-012d-4f54-841f-7c3230228f28",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ec795c80-0d71-4d4d-a746-0cbeb19681a8"
        },
        "item": {
          "id": "00ca3042-e3e6-406e-9ad9-0e0e0a888943",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "055f0d15-4680-4b1d-8300-8b68a45e999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f23bf3-dc60-4c48-9f26-137c28bc9928",
        "cursor": {
          "ref": "3ef939c1-5100-4587-a6e7-4c0feab626ac",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c137c437-7b95-47b4-b0a6-300fea069626"
        },
        "item": {
          "id": "f5f23bf3-dc60-4c48-9f26-137c28bc9928",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c97f6d8f-adf3-4059-b819-183b443d6e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf03ad8-4fe8-44bd-8660-438d6e54f09f",
        "cursor": {
          "ref": "396c24f2-646a-4483-a374-af11d4eeffa4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4ed3c0a-ec3c-4273-8a7d-4544d086cf65"
        },
        "item": {
          "id": "7cf03ad8-4fe8-44bd-8660-438d6e54f09f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c33ed78e-a8e2-49cc-983d-0cbf01122155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46550c5d-c930-4de4-b7b4-96beb3300ac2",
        "cursor": {
          "ref": "93367da8-fbb6-4a4e-852b-dbb5e7b8bb1f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ade04e1-962e-43df-be2f-f4a773432797"
        },
        "item": {
          "id": "46550c5d-c930-4de4-b7b4-96beb3300ac2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "537ace6d-6955-47c4-8dc5-7c29bf311eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159f9c21-8249-426d-9c7b-24e9f3a8e9a7",
        "cursor": {
          "ref": "428f3da7-0132-4e3e-962a-6bd7d6bd6672",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3f8bd43c-28ba-44a0-8ca0-97cc249db617"
        },
        "item": {
          "id": "159f9c21-8249-426d-9c7b-24e9f3a8e9a7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a09dca72-4488-4ed4-b395-820c744c066b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b29985a-ee98-4d49-80b3-df849e1eebcc",
        "cursor": {
          "ref": "a96ff3f9-caaf-4cb1-86ec-7ef3f2dca49c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2bd895ff-3ad7-4759-b684-bd1f89b5dfd6"
        },
        "item": {
          "id": "2b29985a-ee98-4d49-80b3-df849e1eebcc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f0cef46b-1932-4183-bfc0-a9564f788a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc7986f-bea6-4383-b781-0d36c5376d3c",
        "cursor": {
          "ref": "375861a2-a7d1-44fb-8957-bb74262e90f8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c75ddd2-3802-4146-9b52-5dad51a9b03f"
        },
        "item": {
          "id": "bcc7986f-bea6-4383-b781-0d36c5376d3c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6f020488-8dfc-4fb1-9357-43054dfc53b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51f485b-dc60-4a48-bf11-942fdc8fd80e",
        "cursor": {
          "ref": "db53bcad-5053-4717-94ae-2a4ff635a72a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f929c2e2-29b1-4246-8881-dbb3a0b3ab57"
        },
        "item": {
          "id": "d51f485b-dc60-4a48-bf11-942fdc8fd80e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5cb0f7f2-53d0-4f65-9601-5e463b6a3a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e7e796-3111-4875-90cd-2c29b6485196",
        "cursor": {
          "ref": "52885846-3fdf-4104-8a2b-23fa26dcc00b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8b3eac26-74e9-4618-bcd9-ba78e294594c"
        },
        "item": {
          "id": "90e7e796-3111-4875-90cd-2c29b6485196",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7cea0e39-ed0b-4fc4-8cb0-d2526edae729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ea5d35-9885-48dc-aced-5d5b86cb2b72",
        "cursor": {
          "ref": "85004c6b-0375-4b42-a37f-cccf6f5a55cf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac33bd52-6dfb-43bc-8099-7c3f6ed07dea"
        },
        "item": {
          "id": "01ea5d35-9885-48dc-aced-5d5b86cb2b72",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "57c4b6f8-159e-4b01-9f9f-b72c5de4abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9b47cf-4d0a-4797-9fc1-e4a6965e9409",
        "cursor": {
          "ref": "9a39a5ef-3b6b-4bd2-ab53-f9731810c4bc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "faaad0be-8bbf-43df-96e6-463e0ca0fc6d"
        },
        "item": {
          "id": "cb9b47cf-4d0a-4797-9fc1-e4a6965e9409",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bd63d130-2aba-49d8-86b3-691f2569deee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72466dbd-0e59-48bf-83fb-d5c58679bf9e",
        "cursor": {
          "ref": "f2d77b03-04b1-4331-9d55-e12d85ecbfe1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "70cf1bfc-20b6-4b0d-a506-bb5116a890a0"
        },
        "item": {
          "id": "72466dbd-0e59-48bf-83fb-d5c58679bf9e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "86b06160-f783-486b-9a01-eaef4d142067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6a6b6-bc5a-4a6a-99aa-5f28530ebf91",
        "cursor": {
          "ref": "75a36563-2a2e-4974-9cc8-e4a687b1ad01",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cec1fb82-b008-413b-ab5b-263fdb092691"
        },
        "item": {
          "id": "41f6a6b6-bc5a-4a6a-99aa-5f28530ebf91",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1af01d42-1025-404b-bd6a-df8e038f9dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24444678-6f90-4f6e-a019-4f5cb6d2101f",
        "cursor": {
          "ref": "4499d20b-7147-4a38-88e6-4a6818dada0f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b46139b5-8da2-4a04-a3cf-564b986a72be"
        },
        "item": {
          "id": "24444678-6f90-4f6e-a019-4f5cb6d2101f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c350da08-1ce2-4e03-a077-14b5b7e89d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27ef11a-ec92-4063-8a3e-51a9a882f560",
        "cursor": {
          "ref": "4b2c6680-834f-4e50-84ab-365c70ac420f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "387d4e80-030d-4050-ae45-46d9def46628"
        },
        "item": {
          "id": "a27ef11a-ec92-4063-8a3e-51a9a882f560",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "975e8eb7-34d6-429c-a838-0c47a50851c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d45fc8-1379-424c-8e83-35497f1db591",
        "cursor": {
          "ref": "e7a3517b-46aa-4c4f-afe2-8fffebde050a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5c5da915-9d6d-4ae0-aafd-129982443ef7"
        },
        "item": {
          "id": "45d45fc8-1379-424c-8e83-35497f1db591",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b700343e-7e69-47ca-97b1-bf43337a919b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc722de4-8161-4e95-aa61-352c231f5d45",
        "cursor": {
          "ref": "2058a36a-9560-415b-805b-25615ba762bc",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "54a155b1-3926-4cf5-9d1a-0b38b57242bc"
        },
        "item": {
          "id": "fc722de4-8161-4e95-aa61-352c231f5d45",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e9208859-3cf2-4c62-b239-07b4ffeaea0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f50e6d2-674d-440d-9768-3af83ba00439",
        "cursor": {
          "ref": "8bf45ee5-5674-4d1c-ae00-f0c880a057dd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "62e2fef7-1bd5-419e-83b1-52cfc076927f"
        },
        "item": {
          "id": "4f50e6d2-674d-440d-9768-3af83ba00439",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "71db593c-74db-40dd-bdf3-e907e20910bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997d171a-5097-467a-aab8-ee7efe4bbaff",
        "cursor": {
          "ref": "5df8809c-3aec-43d0-9766-5c8fc9dc0813",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "70c3c7ae-9a97-44b4-8261-0b79421ffe25"
        },
        "item": {
          "id": "997d171a-5097-467a-aab8-ee7efe4bbaff",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e6b016c9-edea-4629-9c80-94fd7c70ed8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9723d310-4bd3-401f-986e-b2b6c7ff5211",
        "cursor": {
          "ref": "444577d5-c91e-4e90-9ef6-e36d7a234151",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9858f203-7e09-4323-92f9-0b9983e97071"
        },
        "item": {
          "id": "9723d310-4bd3-401f-986e-b2b6c7ff5211",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "39bea9ee-cd28-43a1-b62d-b678137e6903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db45d01c-4a9b-43cf-ae3a-446a521adaa8",
        "cursor": {
          "ref": "9a83d2bd-0798-4885-b8a4-7f9b5fad8006",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4e963211-ea70-4e35-bc45-aa3f1ffc2b22"
        },
        "item": {
          "id": "db45d01c-4a9b-43cf-ae3a-446a521adaa8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "44ef3ca6-7b0f-4fb3-9c7c-07790a55d20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1141646-f5f5-43ef-b553-85a7a87ddc7e",
        "cursor": {
          "ref": "3f12f932-4777-43f7-a83d-484d08ffa4c0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bb71a47e-a1bb-40ff-abbc-0b74577848ec"
        },
        "item": {
          "id": "c1141646-f5f5-43ef-b553-85a7a87ddc7e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "26331a8e-dd6f-4323-896f-b17e1a235e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f9fe94-d2fc-4102-8044-0fe9f6c3114e",
        "cursor": {
          "ref": "efa8e079-b79d-4186-8066-437229d2bf0b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ad3067b2-4147-4310-9b5d-c660702a486d"
        },
        "item": {
          "id": "d4f9fe94-d2fc-4102-8044-0fe9f6c3114e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d5d70967-6406-443c-92b0-6fea70e2bdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d77d954-9ed6-4c05-a64f-9fa94b5de7c3",
        "cursor": {
          "ref": "2772078a-8606-4307-b254-927b71f645f9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "77f81771-76c6-43a0-8db6-6b190d447792"
        },
        "item": {
          "id": "0d77d954-9ed6-4c05-a64f-9fa94b5de7c3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9c6f4c0f-020f-46db-9a3a-2e8e84555f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f2fcb8-139f-4fc9-87d6-3d1b78029254",
        "cursor": {
          "ref": "d92a88ae-ea30-44d6-a5d2-ebbda9711ca8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b01cb28f-b5a5-41f1-8ede-e64a0698b0ce"
        },
        "item": {
          "id": "84f2fcb8-139f-4fc9-87d6-3d1b78029254",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "791b69bf-621b-4de6-ab60-03007256e62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd3c65d-6fe0-471e-b595-046d64c9c2e2",
        "cursor": {
          "ref": "703dbdf6-aef7-4bbb-b2d8-2928641ebb5f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bd1b24db-a5d4-41ba-b8c5-bb82102b2701"
        },
        "item": {
          "id": "bcd3c65d-6fe0-471e-b595-046d64c9c2e2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ead9e71-4530-46c5-abf1-7ddecbcac9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c4582a-0e0e-4eae-a6de-6058dcfcb26b",
        "cursor": {
          "ref": "4eb26683-d6b6-4ba7-811e-ae88f3b9d378",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "787f6a41-9f3a-4142-88cc-4daeb6cf3e2c"
        },
        "item": {
          "id": "19c4582a-0e0e-4eae-a6de-6058dcfcb26b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a1deb356-2eff-457d-90ca-5abe9277bcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99493bf-8991-43ca-b82c-ddf162c42277",
        "cursor": {
          "ref": "af18ae80-d251-436c-bd00-9731f6af7861",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a11f115f-0c6e-4243-9520-47197ff81b42"
        },
        "item": {
          "id": "f99493bf-8991-43ca-b82c-ddf162c42277",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "77c72285-a5d2-4cbf-a997-690c38acd18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fc684c-0631-40b6-96af-29cbcd698ab3",
        "cursor": {
          "ref": "65969435-8eec-44f1-9924-387379f8ecad",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a0aecf03-0a75-48e6-abfd-e838ec1e0b72"
        },
        "item": {
          "id": "89fc684c-0631-40b6-96af-29cbcd698ab3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40be26e3-dfc0-4407-acd3-1bd62fd2bf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56ab1c5-9c72-4530-87c2-8838db057607",
        "cursor": {
          "ref": "7e6baca4-5b53-4747-879d-7800ff20ef36",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "82ad701c-29ea-4f66-a50f-3189346e70b7"
        },
        "item": {
          "id": "b56ab1c5-9c72-4530-87c2-8838db057607",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3adceca0-62cc-470c-9a1c-51441016227d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6887263b-0ea5-4c9e-82f3-fa7f65f4e928",
        "cursor": {
          "ref": "df0a4aeb-abdf-4349-b001-db48e89841f4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0f13ffff-5103-4842-9770-9700283a3711"
        },
        "item": {
          "id": "6887263b-0ea5-4c9e-82f3-fa7f65f4e928",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d99c9f4a-bc77-40a0-baa7-3e6c4584f916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0a61ca-5939-4f04-9b0a-8a05effb5818",
        "cursor": {
          "ref": "b0719a39-0d82-4c6a-9641-acd35aac89ee",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0e134647-19b0-4f9e-bf9f-a5b18da81b02"
        },
        "item": {
          "id": "7f0a61ca-5939-4f04-9b0a-8a05effb5818",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7a2944b8-133f-41f8-9ad8-001787e324d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba951f-c4c6-4aaf-9308-32cda3accfcd",
        "cursor": {
          "ref": "d5a9a1b1-d670-4b28-bd25-178f790ec082",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3dec3791-5390-40cd-a8ed-f9b4ecf2479a"
        },
        "item": {
          "id": "ecba951f-c4c6-4aaf-9308-32cda3accfcd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "32024bbb-7c4c-45f5-8489-cb5d9376c813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32031db-5e40-4290-9d1d-871dffd6d073",
        "cursor": {
          "ref": "dd685085-f786-4478-b5cc-95728025620f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8eda6521-4b0d-4f85-bf20-20e640b99ff2"
        },
        "item": {
          "id": "a32031db-5e40-4290-9d1d-871dffd6d073",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c0f211d5-6051-4d01-b6a8-6f5e8a470082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a604e677-ce21-4380-b849-029c521a0805",
        "cursor": {
          "ref": "54486f08-0035-41f0-8cdc-40b94968d7d8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "97511629-9304-4a4a-975b-d952e8b58484"
        },
        "item": {
          "id": "a604e677-ce21-4380-b849-029c521a0805",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "03374ab8-d8cc-422a-af91-e588df20a238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848974b8-7bf4-47d9-bf75-96ee303c1da5",
        "cursor": {
          "ref": "0f64429f-c665-46e7-8336-9dcc03dd07dd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d44c7fe7-1692-4c08-b8cd-1cd6ff78f033"
        },
        "item": {
          "id": "848974b8-7bf4-47d9-bf75-96ee303c1da5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9e8ebfa1-fe0c-409e-b8f7-ea249f01fc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1ae44b-5000-43e7-a046-608290049bc9",
        "cursor": {
          "ref": "ee5ea71a-b9d7-47d1-98fa-0c363091712f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2e17f336-18db-4c5b-81c3-5ca1830ab3ed"
        },
        "item": {
          "id": "0d1ae44b-5000-43e7-a046-608290049bc9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "80cd2e61-5fe6-4c46-8f8f-22df679c7242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247fe59a-47de-44a9-8ef1-c41465f07d07",
        "cursor": {
          "ref": "a16344a9-22b3-4744-9dd0-fb0e85a7dade",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "80ae0686-b496-4e45-9255-cef5dbc0678a"
        },
        "item": {
          "id": "247fe59a-47de-44a9-8ef1-c41465f07d07",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "04150684-8673-4693-a6d9-f290b0482c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c569d-4ed3-4893-99c9-9e50b5e49ec1",
        "cursor": {
          "ref": "2de17437-1849-44fc-a6ce-16f2d7f44790",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8f65afc6-dd47-43e9-90e2-1f9abe7ee79e"
        },
        "item": {
          "id": "ea7c569d-4ed3-4893-99c9-9e50b5e49ec1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7f02b949-0d00-459c-8f67-acb49b3750fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8cf245-67fc-4a60-af57-1667c54fe305",
        "cursor": {
          "ref": "c83cb1f8-e907-4671-a551-eb3b048bdb2f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "632058b1-381c-49b7-ade7-dfa5b5e49f73"
        },
        "item": {
          "id": "ee8cf245-67fc-4a60-af57-1667c54fe305",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "14f2ddce-8d75-410a-8c6e-6c4583c92dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb64060-6493-436c-ac44-520fd700fafe",
        "cursor": {
          "ref": "bbe7f75a-df68-4c32-9c3b-3d7589c39cc2",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9ad4bd63-627f-4a84-b26d-1e73d5d211e8"
        },
        "item": {
          "id": "afb64060-6493-436c-ac44-520fd700fafe",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ac93e78-b2dc-4bb4-b8d0-e95765180dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0af40a2-abc7-49d9-94b1-bc264d6a5d2c",
        "cursor": {
          "ref": "664c7686-66af-46d9-86f0-d614c85a2628",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "00916cc5-ecb9-468e-b385-de6f3f1062ac"
        },
        "item": {
          "id": "c0af40a2-abc7-49d9-94b1-bc264d6a5d2c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c9660a66-0003-4bd7-a751-d6ecf192dd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9beca1e2-f5b0-423b-910f-643700d98fd2",
        "cursor": {
          "ref": "bd824a3b-def2-4f0b-993e-ea2df373df4e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fd37a229-661e-46b6-9c21-d561e6f5c074"
        },
        "item": {
          "id": "9beca1e2-f5b0-423b-910f-643700d98fd2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1632a583-7509-4cd6-9738-7243beb3afb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfea17c-d8e0-4955-9bcf-6259f5b686ff",
        "cursor": {
          "ref": "6bdb85c7-3684-481e-bdc3-cce2b3f91caf",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "63eaf317-d3f9-47c0-b1bd-f5113ab29c8f"
        },
        "item": {
          "id": "2cfea17c-d8e0-4955-9bcf-6259f5b686ff",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b63887c8-a4e0-4b9f-afcd-b84a5a737e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8acf87-c00e-4b32-a962-1a725b531688",
        "cursor": {
          "ref": "310b0dc9-383c-4a53-82eb-90ee904b4b84",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bdb8b1ce-e8a5-4ddd-b0b0-86c923ab6f7d"
        },
        "item": {
          "id": "0e8acf87-c00e-4b32-a962-1a725b531688",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8c31a5e4-de92-4de6-8bed-6ad51df814e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b1c7bc-ca0f-4658-a7f0-7c8bb67e6140",
        "cursor": {
          "ref": "12c75834-75f7-4640-8f78-544ba6ab7da1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0f6c332a-d46c-4a6e-b594-b904223ba972"
        },
        "item": {
          "id": "96b1c7bc-ca0f-4658-a7f0-7c8bb67e6140",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bef85ce8-e197-4dd8-ace0-055441c885e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417aac7d-ebd5-46a2-b69b-2120762eee1e",
        "cursor": {
          "ref": "ad9cd485-7574-4d3a-b471-b1149b742b79",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f85cd7bc-07b0-4d54-9d96-f2862456994b"
        },
        "item": {
          "id": "417aac7d-ebd5-46a2-b69b-2120762eee1e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a3fd280a-1a44-4832-9bb9-a58d420aca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cceae3-482b-4080-95d0-802ae1e29acc",
        "cursor": {
          "ref": "92de3538-b571-4605-b32e-1c5e38da5b96",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bba87709-bd63-4866-8fbf-1715d947e241"
        },
        "item": {
          "id": "44cceae3-482b-4080-95d0-802ae1e29acc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "900ff2d3-0497-496d-84a6-9e07dba57ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bf47c6-53fc-4865-9c15-b8bbb5e2c22b",
        "cursor": {
          "ref": "a938920e-60bf-4cf8-b941-1570cd939118",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8d840ce4-1fb0-41e8-af29-d2bb61e8e89c"
        },
        "item": {
          "id": "39bf47c6-53fc-4865-9c15-b8bbb5e2c22b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b4b5b9fe-17c2-456a-809a-1d38aa1a44e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948d8c8f-932d-470d-ba7a-61c4db86f035",
        "cursor": {
          "ref": "7dffb0ff-52ba-4fff-9275-0e0297054cf8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ea2dd048-2d30-4eea-9b32-60bfc27591ae"
        },
        "item": {
          "id": "948d8c8f-932d-470d-ba7a-61c4db86f035",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "542f32ab-3316-485a-b999-5010f2da3fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca44494a-907a-46d1-848c-1df6820890c9",
        "cursor": {
          "ref": "1ee37cee-02e0-446e-af29-c347ff4c72dc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5ac797e0-5a62-485d-a919-39e232b27146"
        },
        "item": {
          "id": "ca44494a-907a-46d1-848c-1df6820890c9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e62150db-ba0e-46af-b47b-806c66894f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29f0868-2ee3-4dca-b3e4-98f5b366003c",
        "cursor": {
          "ref": "37a89003-956f-4e5f-bce2-cfe58f75c0fa",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fbf9914b-b256-446c-a877-c7bb19ffeafb"
        },
        "item": {
          "id": "d29f0868-2ee3-4dca-b3e4-98f5b366003c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1b0febe0-fa2b-458a-85ef-a23d977baf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79b2366-c6ac-4b1f-af89-3187c8e49096",
        "cursor": {
          "ref": "fdb2d1e6-04fa-47d1-b809-4e0bcf25667e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "22327ff4-7ca3-4eda-a9ec-250414706522"
        },
        "item": {
          "id": "c79b2366-c6ac-4b1f-af89-3187c8e49096",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d07c0d56-fbae-4537-aadb-ba67672bd868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c822633-d27c-4b57-a752-5fa619a5ff31",
        "cursor": {
          "ref": "0a9a1275-4ea0-40cf-b89a-6f1d91e703d2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d00e0f96-ce74-4eda-90c5-1f423ac73c33"
        },
        "item": {
          "id": "0c822633-d27c-4b57-a752-5fa619a5ff31",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c868ef35-2eaa-444d-b61d-94e0c3033941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5de6ab3-561e-4acc-863a-e2802653607f",
        "cursor": {
          "ref": "6bd3922c-62ef-4082-8cfc-54e8a92ce108",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a82a6ce1-d7ba-445f-a981-e990f0758158"
        },
        "item": {
          "id": "e5de6ab3-561e-4acc-863a-e2802653607f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a5090fee-2704-410d-9e3a-3a4a70c98b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fa4bf7-9544-4c4e-bb5c-fb59660115b1",
        "cursor": {
          "ref": "e702dfef-5b76-469e-94dc-228dc1f76a47",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e4a12f63-a3b5-4a0a-9ffc-844fb2aac595"
        },
        "item": {
          "id": "d3fa4bf7-9544-4c4e-bb5c-fb59660115b1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b6e966f6-577f-45b8-80e8-7022837d34b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0405a20d-5d07-47ca-88aa-29c8975b0167",
        "cursor": {
          "ref": "cdf048bd-3612-4da3-bd80-29c3d11c3683",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b5fbd2bb-2ee9-4638-a253-1fd2d99bcead"
        },
        "item": {
          "id": "0405a20d-5d07-47ca-88aa-29c8975b0167",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b106c494-11f4-45de-a0d7-627b6ab463ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92acf238-f9b1-4a1a-8511-83bf7f2cc8c9",
        "cursor": {
          "ref": "314a2f14-ff5e-4dae-ab30-57720294c9ba",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ac84a8b6-8eb3-40ee-a257-c6534cc7bb5c"
        },
        "item": {
          "id": "92acf238-f9b1-4a1a-8511-83bf7f2cc8c9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "52718875-e628-4dc7-a1f6-c7b9705317ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e308d83-2918-4317-9cf5-9fd896e6925e",
        "cursor": {
          "ref": "bf124137-2aaa-40f6-a479-20f9d7ffc478",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3955be92-8435-4b19-ba08-309dd5e76489"
        },
        "item": {
          "id": "0e308d83-2918-4317-9cf5-9fd896e6925e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "df108394-1da5-45f8-b595-9be6adb87e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd7330e-773f-456e-b718-de60650b90e7",
        "cursor": {
          "ref": "58c2985a-86e8-4cb0-97d0-070d0fedc0de",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "75d7c711-369c-4049-8597-14205b252a36"
        },
        "item": {
          "id": "ffd7330e-773f-456e-b718-de60650b90e7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6c06e6bf-63cd-4074-9ae4-5e0884cf23ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732442a9-7cea-450a-b7d0-1f2b0aedaa1f",
        "cursor": {
          "ref": "6bc72255-60e0-4c03-a33e-4c52e1e4aaa1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "04d1f9a5-6935-4d4d-a092-03ad7397f374"
        },
        "item": {
          "id": "732442a9-7cea-450a-b7d0-1f2b0aedaa1f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7089581d-f058-4cd3-8b25-6296b3e5046c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93ae1dd-f7ee-48ce-afa4-27265c7270bd",
        "cursor": {
          "ref": "3b0932c1-a0e5-4a0e-9e4f-83f31d3d043d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a6e2bf23-6270-49dc-840b-ba41e0522ffb"
        },
        "item": {
          "id": "e93ae1dd-f7ee-48ce-afa4-27265c7270bd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "84e7bb5d-e244-4c1b-8926-7f7472a2811f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d8a5a9-230c-48ea-af1d-9eaf420f205b",
        "cursor": {
          "ref": "97d7a898-b7d5-42ee-871a-bbb211a2208f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "de827ec7-7e4b-4dda-bb0d-2b92036ea74d"
        },
        "item": {
          "id": "e9d8a5a9-230c-48ea-af1d-9eaf420f205b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "009e39f2-f9eb-406d-a36c-28caee45d1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb92ef1-7a30-4695-96e1-59bea1771a0c",
        "cursor": {
          "ref": "016334ec-354f-45f0-946a-e62b5186b3e8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c2d0004c-e4f9-4be3-95e7-04bbd88fd201"
        },
        "item": {
          "id": "1fb92ef1-7a30-4695-96e1-59bea1771a0c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3a4a3eac-14b5-4c79-806b-e77335b5fb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5b5bbd-f6ec-46ae-91ac-78d2b92a7762",
        "cursor": {
          "ref": "61d4dae2-4ab4-442a-be3d-726c2d3a300f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cc98458e-eb1c-4807-b1d3-749043281a1f"
        },
        "item": {
          "id": "cd5b5bbd-f6ec-46ae-91ac-78d2b92a7762",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6ffe977-2609-46c9-ab55-86bd2569d0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9a5191-3f0f-4431-be01-0bad51de70ab",
        "cursor": {
          "ref": "463cc48c-7069-4356-82b7-a8434da2bd3f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ae82cc5f-044d-443e-a6ba-a3db49e11cf5"
        },
        "item": {
          "id": "3c9a5191-3f0f-4431-be01-0bad51de70ab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2c641d9d-a43b-4a13-8e0c-f7145202fa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaed378-fa95-40fd-b6cd-10d43f8a98a0",
        "cursor": {
          "ref": "d37c5ee9-008f-42d9-9a66-d806f88c6ea5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "42bbbf91-edeb-4548-a9e5-ac5771bfaa68"
        },
        "item": {
          "id": "caaed378-fa95-40fd-b6cd-10d43f8a98a0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "de237bef-fc9e-4adc-8400-525575fe4333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81c21eb-0140-4156-aabd-5c10ec7fcb8b",
        "cursor": {
          "ref": "4d6e6bbc-64a9-474b-afca-62350f19344d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3ac38304-713b-4e22-8e20-6f25bd038527"
        },
        "item": {
          "id": "f81c21eb-0140-4156-aabd-5c10ec7fcb8b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "639112f7-33be-414b-a2c6-95f83f0eb6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d31cf7-96a8-4be4-8b09-1e31c06b6dfa",
        "cursor": {
          "ref": "8ca21218-ccb1-416d-94e0-86da048f4297",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3e5bd7b1-8104-4b38-b155-ba99a68b1043"
        },
        "item": {
          "id": "f4d31cf7-96a8-4be4-8b09-1e31c06b6dfa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4fb55e45-4c16-4513-8840-a49d06ff3c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f90e0b6-8292-4d46-8cdc-f6a8cca58c60",
        "cursor": {
          "ref": "2bdd0250-569f-4c22-a330-975149660037",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "786c3eb8-6eb0-4a7d-b647-94cafed7b420"
        },
        "item": {
          "id": "5f90e0b6-8292-4d46-8cdc-f6a8cca58c60",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a4bc02c0-d4d8-48f8-a909-291de7268ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf26217d-d55f-4e92-9632-f19722a9b1dc",
        "cursor": {
          "ref": "dc6e053a-0eea-4f48-a55f-91ae96df16b0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2afe5e29-40e7-44fc-9c3b-9cf111221ddd"
        },
        "item": {
          "id": "bf26217d-d55f-4e92-9632-f19722a9b1dc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5a6e5f83-c2c0-4c69-84cb-188a21dd95c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209c3530-7009-4478-8538-5a620b49e8cf",
        "cursor": {
          "ref": "c8ffe446-e8a9-4c74-89e4-494ff86711c6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "35fbea21-86d5-4450-a92f-688a56385871"
        },
        "item": {
          "id": "209c3530-7009-4478-8538-5a620b49e8cf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fff2fd57-fe40-467a-9ded-c3c5d3ede7a7",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdc6c1f-b027-4330-bcd1-242c116b4130",
        "cursor": {
          "ref": "3cf63cae-f89e-4004-ab54-eb1c94c3f1e5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f552b2f4-93a9-4874-a2a5-09c133ee9a9c"
        },
        "item": {
          "id": "7fdc6c1f-b027-4330-bcd1-242c116b4130",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f3ee9a26-76d5-4084-a765-9af2f8d25a11",
          "status": "OK",
          "code": 200,
          "responseTime": 2782,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6951fe2b-e694-4d8f-924e-0ecb060af5ce",
        "cursor": {
          "ref": "29bdbc22-4483-4c88-a919-85427ba236c4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ba574eb6-bdf7-4b74-b400-5ce261e3f702"
        },
        "item": {
          "id": "6951fe2b-e694-4d8f-924e-0ecb060af5ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "77656db7-6d2d-4bc5-aeb0-96156ab74fdb",
          "status": "OK",
          "code": 200,
          "responseTime": 2729,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5a515e-2eb6-49bd-b84a-97ee0746c62f",
        "cursor": {
          "ref": "239b046d-7a4f-4d9d-a788-2d8f27eb21d9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d4b2fbfd-bcc7-4a2d-9d17-e70d2067ad06"
        },
        "item": {
          "id": "dd5a515e-2eb6-49bd-b84a-97ee0746c62f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21ce3923-c573-452f-96e7-28168aec18ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5a515e-2eb6-49bd-b84a-97ee0746c62f",
        "cursor": {
          "ref": "239b046d-7a4f-4d9d-a788-2d8f27eb21d9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d4b2fbfd-bcc7-4a2d-9d17-e70d2067ad06"
        },
        "item": {
          "id": "dd5a515e-2eb6-49bd-b84a-97ee0746c62f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21ce3923-c573-452f-96e7-28168aec18ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cc4c99-1b41-4275-8ede-022d891e852b",
        "cursor": {
          "ref": "361e37dc-d720-45ab-8108-f66d89681c01",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "67615222-7b6a-479e-a7e1-0cabcf534276"
        },
        "item": {
          "id": "60cc4c99-1b41-4275-8ede-022d891e852b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "29f83525-6b50-498e-8241-19cf6be5452f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fd9d37-0f3c-4925-baef-2aea38c209ec",
        "cursor": {
          "ref": "84ad440c-4406-408b-ad5a-4b8d71ff46d5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f3a3e0eb-3b3a-4f26-88f9-6309e386576c"
        },
        "item": {
          "id": "90fd9d37-0f3c-4925-baef-2aea38c209ec",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7cfa1141-979e-4440-9435-6d10265ac0d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}