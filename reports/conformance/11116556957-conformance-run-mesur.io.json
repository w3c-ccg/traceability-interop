{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "02c18401-dbf1-4642-87a0-1d5c823236bd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "85b15c87-77b0-4fe4-82bb-8d195fef7035",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e42357dc-4e55-41c8-b27e-d1bd226bb0a0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "abb6425d-55b1-4c4e-9a1b-b62382bd96fb"
                }
              }
            ]
          },
          {
            "id": "b9c49d52-dd8b-41d2-97c8-0c4b1d4dc9f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29055c35-0651-4623-9def-06284f9bb7f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4fd62a8f-cd0d-4809-94ad-009dee80aaa0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dc4e906d-7198-4746-90f4-354c1bb29312",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8cbb6154-3e74-42eb-825b-ca862257ca79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa2c08cb-b4ca-4326-a1e5-669d6e8124a0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1209850-6018-4d5f-b260-7049f4d90278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a1e5bf4-f14f-4134-82df-264e69b27aa2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "166039f3-6e40-42cc-acdb-a745524dddb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbc8fb11-2bec-4b4e-bf5d-52b7ddc6ba16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e7b699ff-0397-4b73-95a4-221d15e16f59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae1eb76e-2883-4bb4-a430-534f0f07a0d2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc52ce34-0322-4783-a5d0-42d43e2692a1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "954020a2-d896-4970-affd-3b539be806c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "948f7d70-0a75-4f07-b299-1d4f3f870310",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd769434-fec8-4abe-a685-1e58b513b65b"
            }
          }
        ]
      },
      {
        "id": "fa116958-06ed-4461-83b8-959d56bec32a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "da07f87f-e3d6-4098-9362-ae75336f7519",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b9d2ad0-6dea-4e20-8639-a07ab6931f18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6953fe1d-399f-4eab-a13e-44cdf679d924",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcb4f08-ec85-430d-a0bf-1d422a7dc207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dec7978-7bee-4734-a5a6-a1c186a98dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1951bf3d-24c6-4549-a00b-68071625c4bf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd37a7e-0fa2-455a-ab9a-ec9e0d9b6c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d05807e-0c59-4453-9040-df9923bc6439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be3adad-cd08-4dfc-a1f1-806e5950453d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7f55c-70fe-4fb8-b581-c2f586153036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "691d4dd4-6c7b-4e7a-9ad0-d3bae6f02249"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ebd8bb9a-b578-420b-967f-61b3b84ea801",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87ebb269-2bad-4fea-a2f2-5f2833719170",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e5aea9-9d68-415f-95cb-12373617bc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ce370a8-5fe4-4e21-9a3c-8c5f23efbc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25aa412-be4c-4785-aef0-c356bea4f67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706e93bb-f9ce-4d44-b59b-b318aa1ca85c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3622b29a-d06e-4e33-a1a5-3e3bb041a2d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5ad7cdb-0647-46a2-9df1-62d90990b3c8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04d44437-df55-40a7-b88b-31dbbc0fe53d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aec7b47f-8c66-417e-a44e-5daa117206fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00a18545-e348-415c-bdc5-a528994a2a67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0088141c-0339-4676-88dc-89eed289a94e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6da0a672-485f-4186-808e-3b59e4aba056",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43718f40-0bc3-4850-a1a5-a30c8cc47c19"
            }
          }
        ]
      },
      {
        "id": "68795777-3354-4a68-add7-7b61d57c70a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5b458379-9cb3-4f4d-89c3-cda0538b4429",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d451fa2-16eb-44d3-b770-2a9268c182ba",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b8e8fcde-f4d0-4e6f-ab4c-f76dc0deedab",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de0935d-a21a-4782-9344-1e5b67fd811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc1882b-6517-492f-ba85-e12aedb957c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd23fde-63af-4dd7-a333-9839079bab1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be72a6fa-8b15-4c60-b19c-794fbd8eb8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8fb50b-33fb-4508-9b92-47160e15703c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72a7402-27e5-4727-92a0-496ae568c934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1baa60d-1bee-402a-b85a-ab9d2165fdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f5977d-1b00-4ec1-b5bf-7a4897140f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6575a451-a25d-443b-b3c9-0f3705a3ef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0547d0-6949-41a6-8713-3fd0dd5ae0b0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397950fb-c321-4748-a2db-e5e82cfa70f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be53572-5a1b-4e55-9172-521d6f942ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e307461-6ebf-4f11-9c30-1c313f0382d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19a4e0cb-5fed-42ef-90bd-2a65270412a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8559159c-857b-4734-ab20-c40cfd310d27",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc696a44-8e1a-4601-b932-333df70b4941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9667b4f6-1238-44bb-a80c-8e6a539bbc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d80f76-7d22-4cd8-9ea7-b5c6f10cf16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9888a56f-af53-420c-8632-801d681a72fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986b8fc8-7eb0-449d-9b57-b936ec4c9bbd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28989ef9-d552-4adf-9b6f-7579bbfb619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610812e5-dc0a-40b3-a36c-282cea15eb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d02533-7c37-4714-a53f-39f6839fd9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d93bacd8-0e8e-42f5-9011-6d5df1d47725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf71d08-3841-4891-b575-007f3b217345",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988b4e6d-c9ea-4365-afef-7865e2c48667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ab32ba-eb8b-473b-b79a-659445257389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1955f5-ddc1-431d-8f66-8f98a47610a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0230dd1e-de46-4568-94e5-81bbec564cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2e9ae4-d658-4bf1-86e2-335c32195b06",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7c7456-98a5-4843-b381-998f95a3c334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55a5bb7-bca7-4fd8-a2d6-7d12b182fa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7368bb8d-5a76-4598-ad18-8b360552cef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4a76897-c7a5-45c7-b712-8474d1625a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1617d7-93aa-4679-a102-efdef1a7fd6a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531db8e8-70e2-431e-9919-2bce5511c741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181689bc-43bc-42a6-b201-6fd2acbd84ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee8d975-dcbc-4e2b-a4ee-5238aa303ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6daa7419-af5c-4408-ae6d-71a15754d3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3192271d-c429-44ad-8337-c3e639c2b109",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17383e70-157c-4368-b6b8-f386093f7cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d79253-dd52-47f7-9718-248e748928d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dbcfd7-a311-49c3-b8f8-06e2d6bff59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0543563b-a362-445d-b0e2-dbd3eac71cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d04ca7-8e82-4bca-a640-cb91d9f30310",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dcbb9e-0333-4161-b21d-5a7ea6aef01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2a951a-decc-4324-b08e-3b38b990b14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50334ab-e73d-47b4-801f-4fea2275e11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c99592-a473-462a-8709-520579035626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33087de3-6a32-4fa7-ba83-e385a8f6f4df",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae2c5e7-a2b6-4b0f-b101-7805a105ef9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7b4713-14ac-4132-88c6-3ba65063d08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb8728f-ef1a-4746-9967-028a7c61d93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d34b70c6-6b76-4d89-960f-51b0fe2739f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a1f622-4e8d-40d2-b152-1e07316e87fa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a410ca02-2853-49c2-a292-6014fa20e48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805d5184-1619-407d-939d-b71d4cd86a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3ebc3-4c1d-4a17-b414-24e314726d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c011351-a972-4c81-b4e9-175cdf90cf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775babe0-b038-4de2-a4b5-98422bf4e053",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7f7fda-c7b4-43d5-a376-c7e1d60e5b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6410f6b3-5b5f-4f79-9f7e-f2032bfd72a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbe8b65-8543-44c4-b6ca-0225d708235c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bf476fc-d167-4055-b125-370a7c55549a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e02cb8-78c8-41ab-962b-80a140eb11b9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dc2a23-5326-4891-a328-e864cc706294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a23e4fa-97ac-40a5-b9fa-c104919a5021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ded7c4-6332-4a7a-8e38-be0652749392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ee74563-4712-474b-92b5-155d1c7c5a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867fe4e2-8865-466a-9a8f-120c228266db",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65221f4-8404-46f4-b16d-7b2ea8f3b2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4469891d-b03f-4a69-b373-311ff9074e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c95a120-0bd4-4d54-9d9b-cc7e2aa48cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "300bc663-b877-464d-adeb-b0ebacb6b109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0426234-2c78-44f4-b697-d0f7575fef47",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6531664-c3d5-45e0-a57d-b4e2d424733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af86b10b-96f0-443c-bbb4-db53320250cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84045e4e-145c-4fdc-b4c1-dd407787c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "904f846e-eb65-4518-aad6-4ad1d61dcf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f2a943-2665-4077-b52f-1692cd3d0d55",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9a595d-8c8d-456c-9eaf-723fecb9be09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de22937d-6783-494b-8380-b0247eec5589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25810aac-9b48-4fb9-b823-24026b9a5e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d88ad6c3-9480-47a3-a401-d72208be9802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9c16e7-9b18-4562-ac7e-38809ac00c63",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7568d90-4809-43da-88e4-37ef3b766781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec654e2-9177-4f4d-85d5-9f6ac21fbf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2b56f5-a849-46a2-a13a-dd86e2d47172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "344604c8-93af-4a75-9829-bf547c5e4f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2962e194-dbae-42f9-b552-9436ed2a02b9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5912324f-4a4c-4b4d-b58a-d841c77dbb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7979f4b-8e69-4648-9206-d27fd61bdd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185e4abe-9168-42f3-b96d-8ea1c8b09f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4f0563-2c53-4c36-9990-13f70de01d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b739bfaa-e8d5-4495-a3e6-a0c2b39bf9a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9c7727-648e-4010-8cd0-f67f98aa69c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43d32ab-4bba-466f-97ae-4dc1e772e968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f770ceb9-e368-40ba-806b-ee32150b5561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69bb3fe-7243-44c5-9922-3dca760c8203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c972713-9565-421b-9026-60df5c9dcd61",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f447e4-316e-4e1a-928f-c7d4dfdee265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90864325-a657-4aff-829a-550f9b81341b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf95c5f-3c63-46a7-b862-fc9b0c679263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac837bec-3a37-4496-9996-c605f39b0193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c2a2b-13f1-4e94-9627-81949138298a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f0c41a-648a-4871-bc4e-fc03e391b52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d77700-ea7c-4275-9e9d-6c36cb51095b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aedaced-ee81-49cd-a2b3-0d431d06319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d58f18d8-d347-4e90-9349-f2628dd636de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0307eeb-851f-4190-b732-45011147ad50",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ae9248-685d-4b87-835e-fcb5d6b06f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4768502f-864b-4ea6-991d-896b665dc263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549d2b27-2c2a-4b64-9d3c-94271c675b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e367983-6e00-4187-ae54-46784bdaffea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7004c62-5d31-4d2b-9fa5-c9c714b4f11a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7c0203-f6fb-4ca4-8618-0af0ec86b416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee68145f-3d61-4fdd-a15a-e5c12fa6991a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c575f660-5656-415b-9251-5fe113b35d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "680b0675-c9e7-4795-a736-e042932ecc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1f28f6-1aa5-4bce-a692-32ea5f55029f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77193e6-98f1-42d0-8219-3a82284817bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fac92ad-d7f6-4284-a243-5dd49f0f74e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7d7b27-010d-4c2a-84f0-2de062f8e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1e8b83-1488-4d78-b9ae-900afee597ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a097aaa-73b0-40c2-887d-163540401b52",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a99489-0445-4429-b95a-7b9c8c76ea5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b708756-b2af-413a-9671-7938e4978591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e29034-d8f6-4432-ae60-6a14ca6958ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce2c28e-b590-4665-8b53-637d29e121a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd95f5c-6566-4aa9-ac49-acf78cefb723",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a51013b-b929-496a-9fe6-2dc64d62a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f4738a-713b-4cf6-b45e-0aaafa9051ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ae849a-a105-4b73-bec4-9a880383a3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7589a58c-7552-423e-b36b-719bc2e0d26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a063c2b-68d4-4a1c-bd11-a52eb6dc12c7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd1b3d0-dbac-452e-9569-2bc0b9790ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543002a1-391e-4e3b-8d21-99368d952bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a4add3-5ef5-4b83-8369-deba7f1d5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ebbebc-1de1-4dc8-af56-c5d7dde6afa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b771d5-b7dd-4d58-b216-899db3eef014",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d96faa-1395-4d60-b63e-e7a3e4f2e5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b979e00f-b49d-409d-9275-c48715a5e4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eea4471-77cc-4f9e-af1b-c5618f197a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c2fa01-c0e4-4f36-8af4-0e28fa39283f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa02e34f-ff0e-481d-8389-eae6c70721a1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4116788-a1cc-4636-9e84-ee73cc9fecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656f88c8-768d-4092-9188-53b53831aa54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360053f5-5f31-4080-a70b-1ca006ef89df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b601670-64c8-4a62-be80-1b9c25db5191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63182f43-f687-4a51-9104-673496ff3ccc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6232fa59-848e-406d-bf9a-e6a54829dfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cded75-58a0-4600-b41d-a8bb79345945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a6874e-a4c1-4561-a1ae-d43affecaad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a0c5b8-6e0e-4247-8862-286f4b60eb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6446ca6b-4f65-4537-b898-e4ee1f463a8d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5ff88f-27c9-42f8-98b6-e0ebad4b50fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac42bcb-7e19-40e9-acbe-c1b95831fbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb84720-1619-49e3-83a8-08c6bc9303a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b7df64-f6dc-49e4-8c15-306daa642a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5b7d13-d3af-40eb-ab11-207bfad17cd0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc4e9d-097e-43d9-a4f9-89a8db13efea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0888c1a5-89b7-4ced-b5ee-c1d449f7eb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a08649b-16a7-4043-890b-d41b9e179384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d341f1b-640f-48bb-b91c-c2c8a28558ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b86ff7-298b-4328-80c9-ff630460c68b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e3ddb8-2d22-445a-882a-b4c7bd8d30a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f150aeae-13ae-4fbf-a8ab-b7d2e43f3b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcb9699-9b77-42e0-bdee-d7ac6ae0190f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e0ae49-e3d4-4936-adeb-b16d6dd3e5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeb8ab3-f84c-4905-8b16-ea4a6d0904cb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037702dd-0ab2-411d-bec1-db8c78b9b403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90dd195-0ed1-41ce-b7c2-c6fb8f8adc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498e5e21-fbdc-47f7-b6b6-c94c7490a350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "17102d5b-0836-46d1-ba54-3f7ca858be2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6545f5a1-892e-45a5-81fc-0f47e5a8ae64",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3a2c1f-0e35-4267-b059-dc6eb4875256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87427a48-f823-46b2-b5b0-3751f8b9dd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4149173c-df71-48fc-9073-66d246ef6b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b43a548-7b4f-4e63-84a2-02f6432199d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e000c16-90a2-434f-abf1-c620f5ddc88d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b365e6df-333f-403f-9782-4b1a966c136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8542ee1-cd44-4d75-adea-53d3e08ab141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2a5f97-7060-430e-be8c-a23ae01b50ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e0f4d5-3d27-4595-acdf-48f8b67ad31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d34f062-8509-4daf-9749-b2e1c398d7b5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937ff1cc-5715-4cf9-835e-1f42e13130ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1a6065-e5c8-457c-922d-af1fcb63b383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5a3ae2-4902-431a-a45d-1d3c8291f3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df5154b2-2c56-4137-a5cc-8b997e8e5702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f22955c-7dd7-46d1-ae40-e2077dad1677",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a86ecd-84f0-43d7-a4a0-3483701b67db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d95758-b258-46af-b7d8-4139b69bdeeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67ed1a9-0327-451b-b397-dc846ac8b9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f74fea-5be1-45b5-b3ab-367e6987b57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23989774-b482-41fb-b4e4-3481a50ca281",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1074a9-2bc8-447d-9a43-be3415a9e82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d7d557-dd90-45b7-8a32-fe32c5ea984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4d07d9-4fa8-4614-a0e2-f3ad7681de85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "086230b6-a434-4aa8-b09c-e8b7b81e3d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451e7f63-c249-4544-9012-a765a1f03cef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5e324b-fe47-42be-be61-a4ed4edbf72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f7877b-8aae-4ed0-8654-113c3923b07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9580c557-f029-4ad4-b52f-e6618142d869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f59517-b58e-4624-afed-6fa16bb76dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534c4272-d756-4145-af19-eb6de4e1dcbc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44987c1d-93d1-41f1-8cc8-5b6b920441a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e67f92-b5ee-42f5-a7f9-6550125ee57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a739cf3-e8fc-4847-a705-b88d3bfa9332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dda545-894c-4e61-8704-5e164c0d94ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb45116-052e-4c1e-a74a-3ac094f58cd4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bed09b5-dae5-420e-b866-19b9dc52923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c251a3-0d26-4195-85ed-36424e30d66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50be5699-edd8-4c8d-8b5b-6315f39367ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa043907-c9a6-4fa0-9e36-afe84141c085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d313e95-bd40-46a1-907b-c9e931e05f90",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbcd36f-a355-4a3f-b03b-22177b82f13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875130c3-e7aa-4960-b33c-8f0973c59023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76259aa4-fb06-484b-a6e9-197bb70e86f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f207283a-7e2c-4f6e-982c-6f9462a339cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a148c5-0553-44b2-948f-86386ec59118",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa65ca24-c77d-4c30-acbd-59d8b213ce0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d1f745-91e5-436f-b585-ac4e9c9790b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9fb5e3-3807-4e98-9e71-3705d8b3666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f6aa45-37e9-44d2-bf3b-d4900bc8a4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ab8861-26fc-4128-a952-88c110fe97ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd95fc2f-b7cc-46ef-ad47-3dd06bd72e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c4cbb5-7309-4169-81e2-dee2d0fbd15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381f578b-3e9a-4582-9add-6e767bc53727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddf828c-9fee-4a41-8e27-ecf720f83052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a2cf2f-c6ce-4a5c-a4b3-0eabc64e3c79",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6729b39-452f-4bfd-b8d2-c8139528f8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31209d57-f4cc-4940-8e21-0d112dbc21a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c55de5-9785-477e-a3a4-ef1dbf302826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0bec7c-3909-4737-8415-692a1f1a6310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c210616-e73d-4cf8-ab23-c97aceb3bc31",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee37d6a-13ce-4ff8-9a17-6600dfb975f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2fb8f0-c3f0-4cd4-960b-8283658682b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbf6a92-0895-43dd-b4b6-2d14cb7f05f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5310f3c7-1fb0-4e38-a7d0-a9e9ade8c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec13455-b2d4-4ee2-8f47-7c4ef318222e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc80f09-6c80-4f30-80f6-186b3b6f23eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5471b1b8-47b6-4ead-b884-0b47b22c3b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbda733-51b8-48e6-affc-4aa4935ff9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9910328e-38ce-4dbc-acbb-beae48a453d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca1806b-16ab-47cf-92e4-8fef723f68f3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116372ae-f013-4981-ac4e-5e01ad1ae84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1dde4f7-9171-4642-9606-491cc567493d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeae3363-c61a-4a3f-848c-40bb5d2f9103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "649333c0-df58-4973-af0d-b7d75640212d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4949ec02-5ebb-462a-9137-3955a69a3260",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3f55d6-d030-407a-bd67-2c2455fc4601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee79838c-f46b-480a-bf36-47d894a68d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ee4b20-952e-4d28-853a-c1bbf77f9a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b296e34-21ff-44aa-8738-83e3c1d908fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c676a48-a072-48a8-a56e-e89f4884901f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fb1e61-c93a-4dd7-83dc-650a8c159590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf725845-dbfd-4ddd-bab5-240db3799a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b658baf0-cc28-417c-8447-7224ae1689d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a77bce-0c08-480c-a3c9-50147610e5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff4920c-6ee9-476e-b33d-e094e4ce7200",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe7e756-2c01-4c2c-bb69-db473892f34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfd1b9b-e53f-4713-98b5-60135ab77ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f9fc04-5fd4-41b7-9aad-08a06558f4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c3e805-f998-4afe-89b0-eeeeb10535e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abec87db-039a-4d36-b3b6-412714359299",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1744dd78-15ce-4a4c-b122-0ffdccad378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7dc1e2-3eb7-47d4-a978-c743489d9229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd44823f-dec9-4c4f-a912-c722da579b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a8b06c-d489-40ad-a01b-212441d82273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad85147c-4ed6-416f-953f-5f8db7ee2e56",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df54a27-f611-4f73-9ef9-c9c7cc2db236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b1bdb1-90fb-46d2-9a79-44d075406be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04e76f8-5603-4f0e-bfad-ddf2d91de755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1620d2f-708f-4396-898f-ed6e68e753e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8746556d-2fcf-4c25-ab03-250dd94ff659",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94427512-d5c4-42ff-841d-df546a5c7e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17abba6-4343-4f50-8d20-d34b046b3c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fd5120-542c-4c80-b5bf-7bc46907fb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd0a80d-4b01-4dc2-9723-970cf9a4455f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0653d1b1-e0d0-4eea-8f60-7c2b2d7c7cb2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6f9070-4c40-417a-bef0-e87ace17e443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da96bf0-ea22-4f35-a9cd-c87d3610ebdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959df908-51ef-4e85-9e17-e68bcbc8c9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3539aa9f-868d-4d85-ae42-46f9526b4adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5aaa293-dfbc-4af8-84e6-0c1f57543788",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e25c68-c15d-4db0-ae87-91f5579e52db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44006035-36d3-4b2c-a08a-dd959766215a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a193f197-7a0c-40df-9160-461dff0b40cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b59cc8f-35e1-4c69-821e-eedce1ada99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c910604-e6ed-4746-9918-632e5a308cd0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c13ecbc-cdc3-4442-8094-2e7308655075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea79a13-4dd0-46d5-a04e-2d6607af451e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c286df0-4ab3-4d2a-92c5-ddc3bd82dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc644ad-a31d-4a0e-a4cc-9222d694dc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cc85af-8f75-4c15-99ad-d6de6a311e6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6286e2-c285-4095-aeea-f2f222dabdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8016f0de-6ee2-49c8-ad3a-702bda6f8eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22ec295-e027-4f70-91f2-3e0ac24246b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f888b18-2692-477c-b0cd-321900f7f7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeae17b-4758-4465-bfe7-bc6c75ce525c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede9b6aa-da3c-440f-a1d5-aacc8247c18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d62e35-aa26-418a-8fce-4ffb1bbf6345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1a02e2-afd3-4c5d-b84a-12503ace62e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "81cf0983-f427-4799-87ad-13e4751570ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ceef5c-abba-4752-8051-f1d8bf24f96a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f90779-bdca-443c-b9a2-3af41cbc442a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07b2ca5-3e42-447b-9e25-1c2d4cce3bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ea3113-3649-4cf9-8a38-accbf810696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "617806d0-5551-4172-897c-ffe5d26a61af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e46a9a1-a390-4f08-9e04-01a8a2b90b33",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51019699-adfb-435f-83d3-212f7142c90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53e2414-70a9-487a-85ca-ff073b67abc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3badffc9-1307-4f9f-b45f-e625e7853b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac2a81b-202e-413f-be15-4f2cd552e2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c8bc8-8bee-4b73-9ff8-351f5ed3b018",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566299c1-be81-4c91-96de-931c62dc5203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb95b72-722f-4a04-b1dc-2e15c267bb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20115bd-fa4a-4ea0-83a5-9af577af62d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcea403d-b2d6-4269-876b-4b0e5a918dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ef2f92-dde7-4972-91bc-a9a2b0e01dfe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2fd93c-e790-4ebd-a1ea-d2cdc6d6d9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172e41e9-c264-455c-8d97-9d618b4fa388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8084f7-826a-4501-aec4-252a64dffdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49003521-4ed8-4b00-ba9d-73662aae04e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca59d31-2598-4ff4-9ab7-73f9e1bd7bf4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa85a3f-47e0-4986-8492-69daa7752d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d65afb9-166e-4fcd-be48-88e48a885039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13319fdb-820b-4ed6-9b63-962fa145cd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "970ee673-4b6f-417b-b39b-f27a24998e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ca6151-55aa-4878-8c15-5be02da67742",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a045f5-e537-4f91-8a43-0ac7b9dd7f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4520737-8b6f-4cc3-bb35-c97fa803874f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f13a30-310b-4041-9592-7cdf45c8f022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95565336-4d2e-441d-b923-42b28b3e6a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0107936d-8e2b-4fb5-8f42-4c6f5cc213f9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9bac32-a8db-44c0-bf14-7803fd596723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b68e79-ff08-4294-8889-6c10dde6fbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d181a80-1a16-44ab-94f6-faba852e5305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf80f41-70c2-4772-b805-eed724118ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1296eadd-1bd4-4fba-81b1-b63264dd33cf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a383a1a4-e9b8-4288-b704-3a938788685b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a6d728-6142-4aae-acfa-d7739183b58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d451da0-1f21-4285-96ed-b1310df8ded8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1702a9af-b83d-411e-aa83-cab7814a626a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f7cefc-4fe7-46ec-88b9-684d07c3a015",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31029135-16ac-4e0f-a9c1-4a4ada09213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed20793c-c574-4866-a0b8-259322246e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f73435-13f5-4bea-a5c6-c2844ce45e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40de9061-3f68-4892-87f3-951b4759fef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fe0f83-8c6c-4b28-87a2-be839e1483d5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee20de13-dc41-4f9f-b6d1-2c308c9b4c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e858162f-1b80-4172-bbd3-b81c1fedf88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56917c9e-625e-4cea-82b9-5d00e1bbb7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f41696a4-37e0-40fe-8cfa-45a4e66e7eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46540d4-bebd-49d2-8c6b-dff717193cb1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b4ff41-441c-47d7-88c9-d8f75ede68e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42214f11-945b-4d8b-a1d1-e2b615409422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707c465f-6085-4457-b8fb-cbef525b66ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb8b4cf-558e-4cad-b410-981eb7d1e38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108ea165-9472-452a-b5ea-66a59fcd3650",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c59b5f-e537-4c6b-95a6-cb077df289aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04fca9b-6bc4-45e0-af4f-f02963d12a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6f0ae8-732e-4205-b118-e9f8028dcd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2104fd6e-831b-40f1-ab9f-098ba9584d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87459f72-1bb4-440f-8dc6-cf1409af8ccc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11197f49-d687-4c3a-8750-364e76160bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41f63cc-10a8-4c57-b3ff-ae6c45037d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58b58bb-ad92-40ce-a742-afec4c98064b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cde514f-78d7-4697-8823-7bceafd5fca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb30cfe2-cd0f-4227-b0d3-250e4b6a11da",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f153c6-0d0d-4219-bf13-866e1a3fafb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907de4f4-cb9c-495b-8df8-91b5303dd1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ae2dce-9c14-4ad9-9fb9-f4d3a96bd932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf03513-32e8-4246-83f3-2d580e9e1585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b172cdec-94fc-4cb9-837c-f5765cdbd59f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba8914-4468-47ad-b413-4ebc795c4fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbda07a-716f-47b8-b012-bb9bbec9e3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceaa530-d0bc-4ba8-a7be-7c17ea26d131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbe93df-aa07-42b2-b643-74bbbb4e0217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab65d049-99b6-4bea-8424-49159c22108b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5f6a1c-586a-486f-8ce8-1b60aaea1fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8221a58e-d6cd-4697-b8af-20fec2c55059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55984497-bcaa-48c4-b16f-922d2043c97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b05245e-3972-400a-8d32-ec718583445e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271e51c0-fe9f-4acb-bdfe-eb333f8b71ac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df4e502-dd8d-4e8a-ac69-c28fb67dc301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ca055b-fdd2-4acd-8b74-f63458440f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9091f94d-33f4-42d1-9396-ce72c403fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "040a8fc5-c4b3-43e3-81cf-fcc4c5042260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c80c3e-a56e-44d7-9593-7596f9a4d126",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284b3367-e46c-4a18-b7fb-361c0a148cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3b2262-6a75-46a3-aefe-7fdf592265e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7026f990-57ea-4537-a391-b8ea10d7f54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eea31b2e-bfe6-42b5-887d-e9146ac1d2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da78da3-4a2f-411b-bc01-18691fefaaed",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b179196f-4c31-4f58-bd49-a778c98e9dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63719c7b-9b82-4bb1-9818-a8d1417973ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d024dc2-8bfb-4894-aefd-1fb73d071616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df054488-2d54-42c4-8a09-20aa0f0f10e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59b9f6d-136a-4886-9ab1-1bd9fee1c57e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f0bfb9-274c-4dc9-8d71-6ad231cfaebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08a3cc4-10b2-4b0a-97ba-e8be402df3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f67b2-cb2d-459a-b9d5-a974c0c47417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "346ce77c-4dbf-4a8a-b950-b67744da039e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbb29b6-3a80-48b7-8884-605878da85dc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b523456-3749-4987-9cc5-f84cece6dc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c4613c-ff70-4198-b6b3-e56ece51e8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078e3c3e-1480-4633-bd27-e100eecd3565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f352b7f9-8cd7-4567-a7dd-69659096cc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de65ae35-1bb9-4edd-bfd2-beb0827afb73",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe36a4ef-baee-4b4a-ab32-cc42142e90f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd42f3b-63b6-4b82-8415-e3abee13c5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be2ab08-5f49-462b-85ed-0ceeab08fe6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd3be99-b463-4881-8a6c-62cd39442d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef938af-6ce4-462b-97ab-4a0135168097",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9493fc24-b61a-4f00-a4bd-f531092ab533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf08287-83c3-4bf5-80fa-bca0486634d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaaea0f-9092-47dd-be49-e20aa6c9241f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ceb90a4-49c6-40b2-af11-65899e091784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20bfc8a-7e76-425d-b892-a3f5e13893d5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7148cbb-997b-4a3c-8697-20d885c921e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbeaac1e-7b12-4968-ba73-cf04d52445c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6859e7e5-e1fa-48e3-89c9-96da7a5261f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13aac567-4e89-46cc-b602-fe351c5a667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44546a47-ed1c-496b-8a28-d3e04c4c6c88",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d67a1c-5bdb-4ee1-a415-9cc48da6d14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5bc3ce-df60-48b3-9cc4-9b02703e6c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96834b92-8978-462e-98d7-f597f610aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40bcedbc-72bf-4d96-b1b5-6462df026f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371d6430-6d76-4e4e-9350-658da8e29af1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab92609-bd65-4c64-8be0-613428106d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b2efc7-cd03-4466-9630-f2f3fa998c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755d14b0-0abb-423e-ba0c-64a4a607a826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3130d42b-8a91-4e97-a03e-472c59d7658c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c0cb2f-1b18-46f6-b036-759aeb3e0296",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f7f74d-dc0a-4af5-99b1-b4b4ca698e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe61151-5e7b-4822-8344-44c3073252ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b271561e-3566-4480-92f8-163d036207fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfee5d2-421f-4882-876c-219f30968658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e547e857-57d6-4d6f-b1ad-e2da6e5a5c4d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd1a77-5225-495d-926d-5b4ead126dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5540e139-909d-4bf1-9eae-c70999166408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346b9749-627e-46c4-8713-efa88eb6c356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca49a3c2-5b26-4a77-8b6b-cdc965276c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420d72b5-b24b-4cff-8b47-db9666b7af94",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8443f20c-150c-46a3-a7dd-8451ce7de656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1214178c-4c94-4675-bc96-76900dd3151d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66002ff-fb02-4a84-9fa2-d523d2890865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "afa3f6f6-0459-4c34-807b-3d50a1ad7499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52301457-0b33-4a69-9adb-466e0d4d3110",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b687f8dc-b8c7-474c-9297-aaedc292f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31351a0c-0487-4817-a7b9-0a802d4f0539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47d83a3-534e-4e27-9f96-6b70958ec238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f716c1df-2248-4470-ba0d-824421a52428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a916a8-677a-43fa-a807-494307022211",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d311880-3ae8-4f38-8f64-0d65c7cf9bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6cd6b3c4-f37f-40c8-b8b2-bc9998877630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad270ae6-7289-4a1e-a6d3-31463242dfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a94ab2-e842-4dfc-8aaf-233d1121b2c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8d3b679-afff-4ddd-9325-db72f730800d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "671e7959-a56a-41a7-a67d-898546fca8ea",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814ceead-a424-4bae-9e15-f5299cb50790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff0175b7-ae2c-4873-bd01-4c22ca3fac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1184f003-a1d2-4fd1-bf0a-154366b96b5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0bf6c1a-02dc-4185-8756-bbe45b035c3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5016f8e-1ca3-452e-b01a-0b8fa411f83a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bafe6c08-7c95-492f-8e7f-f56e5638b5df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f6af237-d9d5-4f1b-9c00-f0fc352f2d66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbc9e067-9301-427e-aab0-9b4700117a5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a07cadd-3e9b-408d-9d19-e064e8b4dd70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84b5b64d-bc6e-4014-9f37-f5d82b2d3dcc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a91091a8-4af2-4f94-9f10-864dc48c8380",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b492076-2d48-468d-8fb1-8cf732197d40"
                }
              }
            ]
          },
          {
            "id": "aebfbf39-d0de-4656-bc5e-e1eba14c7daf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d643b6e5-3c8d-4c47-8975-caa0d3ae12b1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5096b575-45a7-4d3c-929c-fd2da8940c9a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db590b43-1bc7-4b14-a7d0-b9dcef22dff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a64afdd6-75e7-4dbe-9239-9188f064c738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b82988-44f2-442f-a512-069a29f6b2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472b14e0-b3f5-49f9-b5e4-eb7ee8b86a39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db88cd43-dc1e-4435-a3a3-ab8a1153821f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a77c979e-399b-461a-8965-c16cee9d0a07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cc23ab4-8b48-42a1-b591-38261977a481"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e1aa70e-4a6b-4f8b-9317-5249290bd351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6210b41-3f6a-4de6-834b-ab8eeff98966"
                    }
                  }
                ]
              },
              {
                "id": "6086a324-24ab-4947-97fe-fb858780165b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed8af12-d5a3-4edd-99f8-3b52e2156cbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ace22cb0-de8e-4dc3-b794-5971a3df8ec4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b57b13-85ba-4f5d-8534-2a4ddb5322ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73d6e816-ce34-4626-bd22-ed7830a64e6f"
                    }
                  }
                ]
              },
              {
                "id": "035468ae-b36d-4cb2-83f4-8642d5049996",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "693a8172-b13e-4013-b3cf-c14050db5ec6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f19ecd88-1736-4313-8c12-a6bec8dc864d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdbecbf5-aeda-4398-91bd-330de9a3a7a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7468a61-364b-4518-8508-9845057bd344"
                    }
                  }
                ]
              },
              {
                "id": "3f23ae24-3c46-4ee3-ba38-eb8babe976d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6885fa9-9e5d-438a-b11d-420e19aee670",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84b61512-8734-47b1-be64-675e47b24a80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d0ff185-9d7e-401b-8838-ce3d01b1573c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ba8dd50f-6e9c-4cbd-b692-56d41bf7fd0d"
                    }
                  }
                ]
              },
              {
                "id": "b1d9bb34-cb21-4741-959a-dc1b21782957",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54ccff3e-2b3c-4284-86ed-7d169e6a0e03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b4abfd2-66b7-409b-ab20-532ccc0dadaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb4cd906-fb9f-4a52-a1a7-c0f28a5f9d29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0090faa5-e07b-4cc1-b9e4-707ef4e4cfc8"
                    }
                  }
                ]
              },
              {
                "id": "acd203c1-99db-4c31-91ce-7d597b7ea0ea",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3b1403b-2878-4dc8-9c5f-98475e9b6297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60e9553a-35d8-4553-b9f9-debcf31e5160"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc2e3972-3f45-4a17-b641-2b53f33f3034",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca40beb7-5fa5-4b97-9b4f-e0638a7388fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c12a80d-425f-4740-9698-6967d2df3ff3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a33ae7d-bdff-4270-9576-b8acb43fd7de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "830eb1ff-2601-4a0e-9db6-39bdbc379ff3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a23ba2d-5388-40e3-9028-dad02aa23699"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "911c9dd2-79fe-4d3f-984d-97dc91505f28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4e405619-2e9b-4890-871d-3c91d41a07c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d323fc4-2b46-4a6e-a8c2-33f48d5b8150",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b5f8f56-a5e5-4e1a-a7b6-7cef2af40c87"
            }
          }
        ]
      },
      {
        "id": "aca23428-2f82-435c-a004-4ff0ce1cc000",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "092e75b5-890c-43ed-9e9e-44d96be45c86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "459c1a3e-5457-4e4c-b73f-707a4082a598",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45628327-df65-49b2-a277-46cb7e89071f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed73a78-6404-4a97-92fa-32ee6aa2960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84734de8-fb09-476c-9086-0494730aab78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae8332e-f62c-495b-bb13-533133e86b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7875f1-31f0-4efb-baf2-3d1bb70094e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3156e178-972e-43ce-986c-988f11ebac78",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b96c2c9-e189-42b8-9b29-4fc960a5df8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30be163f-5432-4e68-ab4b-6caffe2783a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fab8de-ce9d-4d0b-871a-78f9a95f61e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea36d38-a9ed-4d5c-b1c2-f93ffdde67e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a94610-ce36-4ec4-bd4f-349d64ecc7a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cb2578-4054-43d5-924e-0ad7ca1b3485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b590c0-b6fe-49ba-87ba-afe4872b2154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e22f97-2e07-4d70-850b-0d14d19c2570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b709e1d-33e8-4dbb-a619-791c5cd6525a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49185351-ab07-4b20-aaf0-3ce180a37e88",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502bea1a-5af1-4c33-b7d0-6e2767876d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f3ffcb-88ad-41b6-b057-cef5029c4d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150a1e01-efc9-49d1-9df9-092743320f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3be260-3cc4-4c49-8c5c-fd0d50907664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8755f3-ca5e-464c-9c5e-d8d3af39f7be",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6be7882-6304-4225-9fae-73d54e5225bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2165c5e2-996b-4133-9c4f-51deaf83594a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5d863b-9ec0-4455-bed3-f208bd3c23d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "471cb0c4-3d51-4fc8-be09-d645ff99720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6642e5e8-5b24-45bf-9e69-0504af08fd0a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bdbbd4-3f3b-43ae-b393-4c9ae1432505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5e3eb5-cdb2-4bc9-a5db-890a2741f410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3145dbbc-1cfe-4796-91e2-56db43439764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "952126fe-fc6f-427f-8701-664dda07cf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44af01ed-3b73-408d-a6a5-9811bd3647de",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40776256-45ae-40e4-89a9-1794285ba702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4670c403-78c2-4c84-b417-1758f32273b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed02b1f2-2301-465a-85bc-b2f8fcad9555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "27416ca4-8823-4c57-8599-698ee04bd969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8a5994-3587-4dff-aa0f-850d3649c198",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc9d7bd-e356-49e5-ab4b-48a2d072a95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e79082c-cd41-4530-9ffb-68fce9856f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bb362d-6242-4221-95ca-6a2fa4a4eb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "441d0b69-4137-4c6f-82c0-864aa67457f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed56062-b99d-4451-b33b-5b15760ee9b1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92994120-170c-4b7a-9d14-745b85e521e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b58d8d2-8960-48d1-b9f3-be041c5ac6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336947c8-8514-48eb-8448-1360042cef2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62e84e7-862b-4d84-ae01-401e0f286b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd2e4cb-0f6a-4343-ace4-5950217f1716",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b4365b-e3b7-4c76-be00-f9ae02aec883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4881afcf-a025-43fb-814b-d0a1a75926c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757d527a-8ce9-4d0f-b21d-f7e21c57787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0abe977f-d29b-4b89-bec5-fa3f625cec84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b7447a-6ab6-4d0c-bb9e-1e0208763d3d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35303d2b-38e7-4f6a-8ca4-16049507aa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcd115f-f5c0-4117-b75b-15173bf052da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d6c52c-4f2b-43e2-8dea-e4a134707fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "25eadfdf-6ac3-4a82-95ae-5e4d8aabff8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeba514-b0db-4ee4-a1d0-57f240e4d819",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34b87ff-d70f-44e7-9122-5ac477dbe831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d99216e-2f24-4c4e-af9b-33d722f56495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cb193c-065e-414c-a7b1-cb7780b1ca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1f9cf4-b231-409f-a248-2ddfdc4a887a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75973a07-0750-41e6-a0e4-20758503e259",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07875bfe-24fd-4947-8c58-b7c3a44b0a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f9ab61-2803-4a80-abc7-d7c050420acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eb176c-27a7-402c-b05e-83526b3886c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a62aa8de-4164-42ad-82f7-35e1c7d228a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b7a174-86ef-486a-bb3e-1a4b36a4f5ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cdfd02-f4bd-436c-bf96-4fe83ccd503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bccb1c-95d0-43ed-a560-e5ad5a0aed5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dadc6ec-a741-42ca-a02d-92996305203a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c96a41-5f5f-42b5-bd45-54cefcc4cb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23803a5b-bcfe-40df-ad85-32a17f4844e2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46dc231-86a0-4d0f-806d-78b962fcacc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b12e53-b1dd-46d5-bec8-064c3d7d893b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb1fb92-ce01-4343-8439-6a5ea93280a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9193181f-3df9-4d49-a20d-4f7b92b52269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b348e9-84ef-482c-9733-5e0826be7080",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c006dd71-a7bb-423d-bf98-9d804bf52fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c23f5a6-9ab8-44ff-8122-269f22f2eb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4a690f-2bac-42c3-a93d-3af3909f859d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "509a9a79-27e5-4d91-9c92-c4160eb62e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201bcfff-dd75-4f35-a531-34f608d3a3e6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07d3cfb-ba0e-4e99-b325-a833a208f305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9119c8ec-78ad-4e22-8ec3-9683a929b4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a16c774-b88b-4667-aacc-6a7cced41a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c61c19-94ab-42c4-9185-7780ec73e0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e15cb55-a186-42ab-9110-fc568c8853f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e05e311-a753-462c-a913-f178e7619b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a4b8ff-7960-4b60-9056-898ab5d6420b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dfbf91-8741-4324-a547-89dcd2511071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4a6d14-d368-4299-b3ec-e9e2986dcf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e145a592-5217-4829-8f59-59dae443f09b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5706db-8026-478d-8f59-d5d269a5601b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ac4481-2769-4b7c-98c5-9bc88cd9fc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144f7554-ece8-4147-a8ad-f1a51195a8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b05853-0816-48dc-91b6-d329aeb1d6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a1910-d5bc-47c0-8c2e-634dbc6c8dce",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615d36f9-9efd-490c-99d9-2b08d8198e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0da8e8e-8db4-4345-9343-76ee4c93ebf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38cc98c-9052-4295-b4a3-7bbfa1ea45df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2b9094-fd60-4497-aebf-43bd29c27e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc07831e-8c39-4d40-af59-0a565d71c47b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae635b1-f0e8-400b-bf14-7ea3c8caa458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7a1758-38fc-46c8-bdd4-88902e817d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20acc3e-78f1-40a0-a113-9090480c3693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c0e0cd-236d-4a7b-9946-b7a6e465d61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4ba824-be38-4aa3-bfc2-eeaed3be7c9a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a204de-5268-498e-811d-a12f9c26627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07ca742-6e54-4f34-b5b4-94829ec4fafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386425ad-6453-4547-9480-c3b5b7dfe436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3988b8-68cb-46da-9d32-0040da47d5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877540c0-023d-4916-93a3-8642684bd336",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4498676-04ed-4288-89ba-4f37216be706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2aeacf6-11df-40e3-b023-bfbc9d005e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d238c3-3a67-4c7d-9d94-f645f28044dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1634c1a8-1936-48dd-a2c4-d39e62c16b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad695c59-f3dd-43a6-b245-69d95ff9e355",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b54c21-5b3c-48db-83e9-e3facd763864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb68ae7-d17e-4dfa-9817-2446232ed70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ac6cfa-8f8f-4a76-9b76-0699aaf76372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed2dacc-5284-4227-8d79-86158735c984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab81d985-1f74-42b3-b768-407f1d6df137",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266e68f4-a5c7-4109-b56b-753467af823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0605f9d5-3747-4e72-9788-6e64c080b5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110974da-a191-425c-994f-a696deed43c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ada3ef5-9a73-4ca4-9e22-f169612674b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e1f8d8-7ecc-4c5d-a2b3-c00e93491b59",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11eaf80-54ce-419f-982b-986de15a238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b6ab9b-bade-4a8d-925b-49ca229435ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad67454b-1bc3-483a-8d12-0df632c6debc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a08c0536-fadc-4a89-8547-6a977fae46cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98926a7-a2a2-409c-9e53-9c9c71ece5c9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670ad5fd-e56d-4fce-961b-5ee95c108282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee92630-29ee-4557-ad69-615bf509ad54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18b35e8-7c6e-404c-a198-b68047a70c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0057bbb6-7f28-43dc-9c8b-eb5427ec50e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50dc82c-1deb-4344-9731-34a41aeb58bf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b009c67f-8f45-4c03-83dc-30ae75ba9483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0170df71-7bd1-4d3b-b637-a3bd8b39bad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82607995-f806-44f1-a0cf-efad239a2723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9800507c-8da0-485d-a597-22d28221677b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2529c2-9e5a-498b-8163-43a8654b795a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add8e2ea-8897-4bbb-8a81-341812e410c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9565e94a-980d-4707-917e-1afd45b09130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1c736c-e92d-4ce9-9691-e59716678738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f315cf7-25c1-4b2a-ad8f-ea38ee4c870d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab611afe-de93-49e6-ae00-93f7dccec4e4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfb6bed-38a9-4a57-af45-464a19ee7a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a040b092-a9a8-48bf-8d90-3208421beb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2de0356-2473-4f40-86ae-a1e0f4386ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05c2d0b4-adfb-44b4-87ac-3d0ca548f619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f072e3-abeb-43d9-861c-592b5b28b33a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ba9008-86df-4cfa-9455-bf32c409e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09fcfeb-652c-4794-8c2d-4d007aced60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d71cc38-ca85-4b09-8c10-b5ee1c9bc409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9bbf84-314c-494e-ab26-72b2140bbaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3add3ea-3dd5-43da-ab85-18c791b1cf57",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa365aa5-215a-4485-ad6c-5b7a3e43b529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e11af57-f36d-40c2-b111-4766e1f2e786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e11ee33-ba10-4376-9cbc-fc05a53a2798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b89f6c9-f751-4fc2-b88b-c15d25f45142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbfa81a-4fc0-4850-a8b3-06bb7be660c2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bed93a-4ae0-47fe-a7f6-1779bf510a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c773fa-184a-4bb4-8e39-716d9b1b07c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e4b047-1a67-4af3-bca2-2c6972c5c498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ba31bf-bb03-4bdd-95e3-720c0991cd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b35e793-0591-4583-a872-0f39fa52a076",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0515e2-a77f-4d70-ad06-bbb4930977f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec5a044-f787-45f6-bf17-0fd5e6954122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e4e8c0-d2a9-4da7-85f3-39d412f0c501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e47747-2126-4788-909d-b2b11d29f3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e41526-dfd3-486f-9e43-3b017a81de03",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401fee93-a021-43f8-9f08-f171b79d2437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4a326e-8c29-469a-993f-cddca9ebd95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce424dc-4fd7-4242-8508-ae07ca1aaea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00112512-061e-4c20-9e4b-59030823d53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9e35d7-aaa5-41ef-af16-89d1b4451317",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31b0924-e5a5-4d62-baad-e10f2eb0ed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83d82af-5ca5-41da-a313-275a0e19150d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321f7223-71a3-4c98-8e90-727ded672874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcc69e0-2b81-4194-b077-57dd8c870b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7391fb6d-c7f5-485f-83ad-d4048d0ccf85",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd4aeec-ff9b-4f91-b514-7aa1b588b056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6505937-ac17-49c3-9a27-bfc4ad882d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45067f4f-a037-40a6-b0a1-ac7863449694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c5cc6e-54c3-4133-883f-26a58075dc53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af0286fe-afdf-4522-9909-dccab818b84f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7f92a5a-21e6-4369-b776-012799f80bd1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6256e5d8-8fc0-4028-8f95-3c1c80f4d186",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "328a473c-0c51-4d24-8d87-8e54a809a3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9643fe26-48a2-4b4a-9329-4ca841346e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0cb72dc-aa04-479e-9796-945d65148c52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c94aef48-e506-476e-a946-b28cb78df4d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab92e27f-e0f6-4366-b7c2-9426014db639"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef7819b9-8c70-40f0-89c3-009109cf6c9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fea1aaeb-baae-4ce5-9182-9d55cea4a5a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7693571f-ad3b-4222-8ccb-84468aa74ec5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8f81ec7-ada4-4c7b-aeb6-5c22f1a6ab79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7114920d-ea3c-4d5c-af9c-bd136901c8c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6914a622-173e-40a1-bc59-7f1402aab68d"
            }
          }
        ]
      },
      {
        "id": "3dba90a9-6179-4a1a-8250-a66016e50cf2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "be0bbec7-c145-49b4-887c-e741d525f40f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0220b034-a664-4bc1-be7f-cc17a1c1ee68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4fcbe825-b3a3-4ccc-9601-f9394c2ea10d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3213abbf-84fc-40d6-91f1-a5a80fb56c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97776a97-d494-4c53-b7fb-5b2f100b03ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8a261d-31b8-4663-9e5a-07f8d2ec6cb6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e712b29-1a1a-4873-b9c9-dd0725799be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fca587d-47f4-40ef-91b6-03a596b4da74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2d9338-a623-49e4-a5e2-a226dec06018",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8092b714-e94f-40a0-a89f-16812528aa9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4229e9d4-227a-4f84-83f2-88a374b84755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4d6373-c36f-49e0-8d0e-92b31f4936de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f15d628-7852-435e-be37-f5f991ed8ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21800d57-288d-40ee-b011-70b0849f1f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8839cd-3674-4115-969e-5a967e834f36",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82e90a1-3aad-4a86-b543-e193fc720a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2638a357-a490-45f4-a7ee-278c2732f8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f6ec1a-5f62-4834-88de-29d7b8c9badb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d024e8-1582-411b-987f-7a4eb3f60138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f496dff0-dd95-4cc2-9610-92d7f42edb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1c7691-1257-4a16-9de2-644382628922",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cea272-4cc5-490b-8529-c772d300bc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc2ec74-dcca-425c-9012-c2e1f6f1cd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89e82ec-e5ef-4e2d-94dc-91c7f879a35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7d788d-0e3e-4d3e-855e-fef3868aef8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd99174a-c7b3-4c89-95f3-578e72cddc9a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25de0121-a02d-4d45-92b9-e793fe67db20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468f651d-d68f-41fd-a091-5c116745615e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85bbf87-dd38-4701-8ff0-eacd5d5e269e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0a3676-a889-43e7-8876-d26fd2342a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433d335e-e35e-482c-a524-bdb86d5994b1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf99ca1-bd13-4f65-9738-5456d0962c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2796d2ce-7808-444c-98ce-24f203007afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b94d6d-2584-4c1d-a6f1-b8f0f4002a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65296740-042c-4eeb-89a0-26c8e440af86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6859d7ee-a4bf-490c-8122-e65a5a9bb011",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b798b523-f8db-411f-a86a-600e0716e807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2adf0703-1900-4683-bb35-8c628a1f17ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e87fa6-1cc3-43fd-a9ba-d719cf7a7aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0127de1a-4b8c-4bc2-a8df-738a19e512f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95f6eac-fdc9-4a1f-8e65-2e1d07a6b553",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b99a1d-0311-4fcc-bdf2-c3ae6c42d257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53baa26c-a245-45b2-93c6-057f8ff6164b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d42d853-f1b6-4fe2-b95f-1bb3bc812145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220a3cf4-c65c-4a4d-84de-a6916376f632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a672a0fb-f034-41e7-b0e5-4ffc3e35c75a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e4b207-c8cc-4c40-8569-e1f0ea220186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c0e3f3-4f25-4444-9b90-d821e3400ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dca5d4-0e15-4234-a140-56b7451f803c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378644a2-2708-421a-8146-3db5e8356a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae8ebdf-c54b-4d20-8032-4cac62895876",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec89cc49-6ac6-462b-b6a9-49b64e55317d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ae7a36-2d11-455f-8f1f-6db63ff708f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a30d60-dbf1-414f-97be-1b0e1af5ca07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587d6aa0-fbe2-4bc1-9a4f-62bfb67790c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dec706-3756-4513-bc40-c74c0aaa05ec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51f7a8e-44a8-4382-8a25-6263aaed6a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8af7fce-1e54-4f75-9724-3a36e6db4a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd97cf07-c029-449c-94d4-cec94ce3339d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6aa928-3671-491e-8ef5-a20ec230dbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e796a5a-e735-473f-be21-2de35e995e5b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c3874-e34c-40f5-93ad-24f852939c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26beb016-b097-4241-b184-b21b3328e2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caaddb5-6239-42c0-b562-6ddb12299779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef08e2-7d71-4566-a7f7-c57c504f66b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21132b1-25ff-428c-997a-623b3c53e2bd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f22313b-4229-469e-a8bc-c3242bbc91f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1c857e-468d-4a46-b495-0137c365abc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc56afd7-cd61-4ea6-829d-e7de39071f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e3f165-3dba-4cf0-9d00-2fdd3b779928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e620e21a-44a9-418f-9be4-9bfb893c957c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b44f7e-b6c9-4add-ad49-53878d6b5c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae25a529-a18b-4d11-8d29-6e0cae835fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82621025-5ba1-46df-9e10-7d71217b8cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e8c22b-47b1-41a1-a60b-c4aa6701a2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb8e45e-96fb-42b5-9170-94c3cf55fcd8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020c8f1d-6a41-45b6-8408-f536f749cfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf465dc6-6169-4852-952f-2addb52d7a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e943cc6-3228-4e08-8ce8-0afdc3ac299e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4e340f-a32d-48dc-81d7-b115b08a486f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e72961-d864-41d3-a45d-97de12c602ab",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68252b83-f712-43ca-9816-e42f0a129760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec62979-78f8-4e1d-90c5-14d1ca758747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace34d51-37f3-46cb-9262-958d1c4a9431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b563dd45-cc9d-460d-b9d6-bc62de61c6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9955d7b9-4792-4592-b201-4d7b36bf0532",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb04bdef-d8a7-4aa7-9bd2-636d0abf2f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8d52b4-291b-492f-9b9f-722448c258e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57ddcff-8e07-4463-9b78-083507f36908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb4adf4-1215-4ed1-81a8-9cb24e3fc98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338010f7-13ab-4603-aef5-8e26631ed9e6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ca7516-c437-4119-985a-f17d75f1c0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92300374-747e-49ac-9344-44430e033d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813bb7c1-7670-49e7-8b78-4b62579e5a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500ebd4a-5d12-4e8b-ba7a-e22a9ebeb9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a171176-2014-4c5e-adb4-a4cfbd20f02b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dbcaee-f2f9-4e1d-acdf-71d3ea7502fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cfbfcf-d1a4-4065-b1a4-940a15a1ebc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb5ad1a-43b7-4929-a11e-72519d3e50ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accede09-5490-4255-a001-36a5dba2cd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84bc3ac-33e0-4eb8-85a8-ef97b4fd91c0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc39218-26a3-4d3c-9100-527e681f9f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937f5a23-18a2-41d7-9f6c-9165ab56fc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85967685-1db2-442d-9809-9f034ffa3eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76c930b-ba2f-4fa2-b02a-eb69faab9fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ceebd4-d97a-4f60-a170-d25168d2eec4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dd1855-b556-4bc5-b648-b0c60138f0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ced6ac-ed02-445e-9084-4417f0290bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93299225-6e53-4d27-858d-957bf23c7933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae09252-8fea-491f-a970-512b93c7f436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e176db9e-c981-4ac6-be93-232c033db946",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a07b7ab-79e6-4fc2-b856-0749b6c1e0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbac71bb-e62f-49e5-af7b-87daf3ae3433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e7b830-209a-44e1-b1ac-46e77186a608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90d3430-9382-4be2-a1a3-a97f917e188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00c5d7f-b039-40f9-a254-0aae03919d41",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ee90ac-d1e2-4807-bdc5-adcef1f596cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb2eb63-79ec-4dee-9c8d-e12950c6b9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb142eb6-e753-43cf-86c4-719fc521c264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddb161c-4e5f-4b57-aa33-a8d48bc13747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba898464-6dd6-4588-bde6-bf6adaef05cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0bf7c7-a87b-4e5b-a889-c67c45201059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9fb206-0dad-4705-b625-ac170033b574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df50fec1-1b8a-4eb2-a8b1-0e867b6510cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaa44db-d4bf-489d-bb10-699a1a60d3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108c6d6a-47ba-47b1-be9a-ad8c7c552e42",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670c557d-0ab0-4822-8682-4ba23bd30bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40726876-26b4-4fdd-8bc6-b03f36612f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d67e52-04b4-4ed2-beff-ab6870bdaf28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06334a3-68ac-4390-92db-5353abde153d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0f4d09-d755-4b8c-8944-0d693600e830",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458cc5a8-783c-46d0-9e19-1c200e947c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33451f8-a736-449b-95cc-4f574017a5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca63b5b-6ab6-49fe-8578-030da60f1ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f245d2-2e03-4cef-92d8-33acc25f00c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc6a3e7-920c-44c1-93d1-64c2541f1c7c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf17342-a34c-4239-a693-d2c1e30a56df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf2c8bc1-8ff1-465c-a42f-70769bfc40e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8136da09-9742-47a6-95c2-0f95c0fc23bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e75635-97e1-4e27-bdfe-d301eda68c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c34d8e-6b5a-460d-94eb-7d2665d0650d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccca0b4-25f8-4a46-ac7d-282258385146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06beb6fa-fe06-4d3c-b2c9-aa26bb6548e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e423df79-371d-458f-829c-57ac5e1b3887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cc6a4b-353b-465d-9120-14c73459d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f4913a-3d24-4cd6-a2ac-0911828efacd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4883f63b-ca51-4d1b-bfb9-24234267eb7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9577d61-30a0-461a-a25e-0894a20f17dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc1bdee-817f-4956-afc4-ae4d09179b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567cb1c4-f394-414d-b18b-6122909e8503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd740cd-e62c-4765-af85-da880ea04425",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7030572c-9f94-4503-a835-08194464a7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef12fe05-2107-43a8-a954-6f7d55646dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb15be2b-51ed-41fe-895b-ed1edc6c90c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938520db-24dc-4148-af17-8a0663e89056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa73a422-10bb-4a9f-abc1-a89264f97004",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886cdcbc-f9f4-47bd-ae0f-a0cd51ba6860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f01ae5-2e4f-465d-94ad-59c24f1f406f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09886654-d512-4453-bfa7-c6d02d32b59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daff3abf-55c7-4495-87b5-1b507f58107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e973153f-85be-44a0-837a-b70d41d5cfdf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d159db-b923-4e8e-ab29-c14c6454d336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711b462e-ccb7-44ac-9804-b10e2c11f79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdefa074-5f02-4a32-9ea1-a64c75b5a27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a193bc9-8834-4cca-8fa9-d413506b8d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07790de8-4008-4a9f-968d-7bf21adf9733",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b4aa4b-58c9-4057-acca-cd712bdb76e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb3b8c2-a848-4998-842b-be5a2e4a33ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e5b529-4293-4930-8301-b7165b4e0c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec1dd4e-ef85-4e03-b54e-e86a85184db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34856d9-245e-4515-aff5-1d021bd18baa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d486f296-085d-4b8e-823f-55d948e8875a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95280bf6-f79a-46ca-acaf-ce733ab44e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b507bf3a-3298-4b7b-bdad-ff732c5d69e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea87b92f-daf4-40a5-9608-133a307ae39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fad48d0-2576-4539-8c89-61438d6998bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843154af-d2eb-4a42-9595-8ff1aa14a138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc1aaf7-74e7-4993-93c8-4fb579ea3da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e122a922-5bde-4956-8053-f3e5142e0b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9df8f5-083e-46aa-ac95-61d894c010f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804a9a53-d1b5-40a9-8a81-8a886ff7dbf5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1595bd-da48-43d6-968f-e0190d66b30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9a04b5-18a6-482b-a628-26ac873b93f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82756e7-4087-4adb-83e7-071cc6bf7a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca017ee-bca8-4aea-8064-377b5cc124a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe0fda0-d7f1-40e2-8a50-6c4f4ddfe612",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed8ae86-2d72-4b96-983b-e879885102aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f7d94d-1c5c-44a5-824b-b4604506a0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc023d42-d0f6-4a0b-9f67-78d8e377f035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18be1e2-51db-40ee-9d3c-a95abd078af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a00e86-4aca-46a1-824b-1df727e2af5c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e128707-6e5a-48c1-8d3b-a9511e5b9fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d4ceb0-d089-4708-b919-397a731da38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e3b5ee-0633-4b0b-b8b5-ee7bc70bc74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40954158-fae0-4c1b-a4ba-0eaea85fd10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22947fc-63be-463d-81f8-1a17c1809aba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f19c604-7ad6-489f-ba2c-315a6fe43fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eded8b37-e801-4662-a7c1-065c3552d017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75d7780-7fb4-4661-ab25-b0213de459ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78cf6a2-9135-401b-bb19-85f22d39e095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7612ea58-d316-428e-beeb-b71e680ebce9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db22db60-b2dc-4708-9e80-9fb400bf0220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc63b93-8099-4ed5-a69c-39f2b3f4651a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf47058-becf-4862-a197-a9331250ae8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce021a7-70ba-4b9f-ad38-6ca1f53cb036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec5c485-8c22-440c-ae4d-630f44027cee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eb18b8-16ae-4630-ad46-1073317a772e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27062f9-5f83-4e31-9c20-fe9f56e9ca0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d548d8-b128-4062-a1f9-41028ad46b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af727a6c-9072-4213-ae45-23d6c473d1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfb375c-fc47-404f-8f01-7e8775be3dab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68ac2ce-982f-4e21-b6c0-ab7e17223f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc8484c-82ec-4eb5-a233-561675d2035a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1b2cb7-291a-4a4d-90d0-33d2f84b5197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35c9f79-d9a6-4e40-9afd-0be5ca697684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f31a4b-291d-46b4-a310-be817ae9b570",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f442312-0892-4365-aa29-2519b8c99ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d566c9d-a9d8-4c0c-9319-e393c5e44de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e495a91-516c-4b1f-8821-bc96e2ccc1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb15c16-d515-4588-8c64-1edad3c763df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f4536a-376d-491d-ba36-f822e11420ef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4894aca0-56bb-4e4d-a66c-63e2e6501b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09855bb8-5fd2-46ef-8df4-5caa71e2e00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12e80ba-f247-4ea7-a9d5-65012883e97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626f043e-5a2b-4ba8-bd05-21899e3172ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e66c932-5812-418c-8a37-a3dd5511170c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6900d301-ba40-4d36-8287-05a88773365c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e95c6b0-6520-4759-9705-277d79c1d6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1f7057-bd44-4606-a431-f74ab31e6939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719a32b7-6ddb-4e48-b698-5f6bee14dfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557ee934-4cc4-4976-a140-7e5511c3393d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabb400f-3d3b-4f9d-bc61-1601904b4e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae32ab48-5b69-4090-b8f7-19290378df23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775d32b4-7444-494f-8341-c06b22a2858f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13458015-1aea-4851-bdf4-f843dfb830d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2f488b-5864-4511-a962-f6f489a64435",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed1446-2c19-448d-9741-60182c44a2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0423bf17-fb19-4ab4-961e-7e6101603690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7589a7c7-533b-4a3e-b288-59d32527b405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78622d4b-08b4-4835-9f91-7f275d9ed602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcd486f-2d78-4106-bb75-27f1ce2e2db9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a4da87-2d55-41b3-bc19-70db54c32c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f81030-7c8d-4955-be18-595bd2d077ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756692e9-d956-46b1-95b4-6d6205195945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09863a65-ccc3-4056-8dc0-568cb89d1798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72008804-35ee-45a2-b94b-8b0b8d8f66f3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2242614-bd0c-41bf-b570-6ca25bd1d904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa008ea-7485-4d50-84a7-a97ba824d709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811d106c-a452-4cc0-a15b-632c6d3da57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fb531b-02bf-4214-85aa-566e303fedfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d3f2f3-f7d9-44c6-b4d7-7c08d1010a54",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cc2969-5791-4109-b789-6d8ef49da947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16240e9e-6431-445f-b302-0d1d24bfd8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374e2961-ecab-4415-b3c5-f77ce9a7c368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba95391b-6dc5-46eb-bc0f-1a50cc9e1245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6959236d-ce26-4e09-ade3-255d8b57fb4d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e479a09-5a8e-4b88-8750-bb6ade3e98f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0609f29b-0f0f-4abb-99bd-0bfb4147da3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e082f59-30bf-4b2a-a88c-c17efd39e435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10112698-aa44-425d-b1b0-ebbc40f1607f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a679cdf-05ef-4c8d-b660-286a17f8a71a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0059780f-3f37-42e8-9a5e-09a407dcab3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a90b8f8-6ced-4180-8ea4-94be2441b27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a3d757-0dec-4f9b-8bb6-b8948b492e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c939a5a4-05f8-4290-8408-1251123f4c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01681f01-0350-4a02-b789-05aa60d1cb3d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ed4e9f-e804-4b52-821f-faa670500f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a04aa3-8e56-454f-92eb-f7e8e81fe3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227050de-c1aa-4e04-80c6-88a015680eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bd3828-bbba-4592-9f06-202ec929f3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e75a14-60fe-4cfe-9f1a-32b57b0b56d7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ceb711-a013-44aa-9b7f-a0da5596a066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df40556-04f7-4818-b96e-fd7581f66d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fedfef-0c07-48e8-bf9f-915c347d76b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f085581-20dd-4d56-b9c2-180933c91c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c2e544-30f6-4637-a975-431d7e92dad5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634f5b29-563a-4460-8f79-cd6580ef0dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1d13d6-2c77-4bd9-b0fd-6c5dba0f529c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecb534f-8607-4421-87d9-d3672646afef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c72cd67-c46f-4a99-bb33-d46079229375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a78c240-f304-4208-b2ea-0cdbf582d3cb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db6e8e2-ec1d-4218-a57a-5ad4a0b35211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82216ea8-f3ef-481e-9563-7e86a073f6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e007a8e-b6a5-4fe8-8962-0bb2b6b9badf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64b8d45-81d7-476d-87fe-4de82133e7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf17eb-06c4-43aa-97a0-c624e645da14",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238a76a2-b932-484b-a718-f6a8b8d3c3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7bbebb-39b1-4030-bec8-837f720f6306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcde927-ba0d-4bdd-98f5-09eb86586f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fd43fc-aca5-4839-9a15-b535b0a48cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e712942-58e7-40d5-9e8c-53aa6cbb3e7e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e901b86-753f-4395-82a6-60b90c1ba35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22674a27-c65d-4d69-bcbb-6ee8fb828ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7b81c5-c3e6-4378-a9c8-6184a1634f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35720a20-7cd6-4c92-9b5d-acf8cc44e6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2e9bc1-f222-4ea0-b8a0-e9e3e4baf963",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a889da4d-aa06-470a-873e-ee00e8b16a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cadf6c-3e53-4273-927c-3ea3118f50f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad990a1-ab87-4a8b-96ed-52d20f459b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03f882e-8525-4555-aeda-7e09d7ffbaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd6e597-89cd-49fa-8ec6-7170710dbbb4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b356ca9-33ad-4190-b152-eb3719c89746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d0c001-73f7-4850-881e-ad2327f53ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114e5fd6-fdbd-4553-9c09-2c73f1ef1cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e245eaeb-1736-444b-b33a-0dfad70a0770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2232eb-ff34-4fd4-9123-cf978e29c3d0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647a1188-2e3d-4171-aaf5-f859b198ce45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b961a17e-06a5-47fc-9d39-e891f934a52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4746241-f0d7-4ba5-bf62-2749922a2c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e07aab-4531-431d-a5fc-3b255513518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe58882-87ba-4249-8788-2e42beddacde",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6182bb25-7403-4473-b54f-0b93b366c077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eccf8239-013f-4f3d-9a88-9b14ec55c146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517080df-1bbd-4af8-b01a-c6dc146c69d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7f688b-e72b-4cec-ac2c-ed88263a4f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0266fe58-5477-4d66-9022-c7eb561f1096",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2aa0de-f62c-4239-a029-863f1944355e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6def9e8-4782-48ec-869c-d32360003795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf487308-55d9-4062-9c6b-9745bc85a9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53f98b7-0212-4a2c-b2d3-125a17d8d951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a3c2f7-c034-45ac-8eb1-ee9d00f29094",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2643038d-6e70-4fd9-8be7-fb9e9bafd537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af137b6-9a47-47e9-998b-882ab1536a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97d8ffa-3a3b-48b8-9a12-abbf3039f45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4044dac3-2603-446e-92a6-946dd4fbda7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa28d98-ee7a-4cc8-b555-bdcdde6401ad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977687f3-b30b-40eb-adc5-bbf461755086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5ea274-9dbd-42be-ace1-096c8995f49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cf659a-0e15-488f-a59a-b31ea8bf840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfda5e6-102f-49c8-a040-bb7cceaf17a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ebefda-137d-4b6c-88d6-e87312c465d0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61b1fba-41eb-412d-b843-347902ae635a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb8ff8b-cac2-4cc3-8afc-2929ea887b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3903f10d-ca99-4ee2-af39-bc04c4b75053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6518a1c-8142-4ae9-afa5-504de67f77e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bf4ef4-5a80-401c-b912-c99bba769002",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160f238f-f66c-4a89-9581-817bd3f4248d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00bbe99e-7d0f-4493-a0a8-077a8c8e0fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef189bf6-b7f5-4b8c-a314-361b2ed9927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe225053-0217-4b3c-8de8-44359db75f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280cb7aa-675d-4033-b93f-ce814dc5da68",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb8e3c4-8591-49ff-8a43-fd506be0fcf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a33648e0-5c7f-41a0-bfbb-3a1fe459c48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f4a3a-bd59-4e55-8d90-3a160047cd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53f5d21-cf20-4ac4-9091-b899bae28273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ab2091-d1e6-40b2-a80d-bed8fc559ec1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f4796e-4dec-4137-be12-2f4454f7f491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2603f55-0d19-4e38-9a2e-1afe228ed60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23eccfa1-665a-428d-bb11-bf140ecdf624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795647b4-3577-4d47-b16a-b432a68230cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c692dab6-d467-4cd2-a417-1895572aadfc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626900d6-f809-48d6-8133-b5bc3fcbc75b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461ed79d-ef6d-43ce-8e1b-939975abfd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbe39bd-b63d-4d30-9334-3aa31967e296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f85b33-fdf8-437c-b866-9c928ebbbbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99d42e6-0466-42b2-a3a5-4781cc7acc29",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c44711-2cfe-4cc2-ac24-232d7ac03d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab321c0-0679-48a9-be40-4642bba02e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e6e274-831f-4ccc-8178-17aaf920a0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1f86e4-42c7-42ab-8ed2-baf6da2b060d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5d018e-a191-436e-940f-8b6ef97cd9db",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca6c2a-6dcd-4b39-b82a-8e899f24cc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640ad4dd-94d8-4bde-814e-e17c2b1e71ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6262e3c-9297-4c4c-9182-bcfec9b9df9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb0fe9b-cb23-413d-9e32-0315a25bb8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ab979c-e753-4c7a-b2db-4bb00ff97166",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9f7829-b47d-40b2-8a0b-3bd3588c4174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1aa28b-7596-4b97-8da5-ff31dcb1082a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aca2c5-888e-4615-9d55-719437f81548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbebe6f-2639-4e24-80b2-7133d31e0ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a26f2c7-2356-452d-b86f-91ad02bd8d7a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b122a809-69c9-4f2d-acf9-75fe8c944195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e813c1f-a520-47ff-9e5e-281ceafd4c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c21b2ef-bd9f-48d5-ace7-c54a1146187a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4f2bad-8872-4500-9327-5690c7fd6bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a2125c-dae0-419d-80b3-a6abf6f6862e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162d294d-2a54-48ab-8a77-6f56ad6ea0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8d4327-43a7-4f9e-9936-9a0b5d30e7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8567b8-7ec5-473c-b3a7-cbc28b845dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fb4f2d-4843-42b9-ba4d-dd041a74aa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b78a16-3538-41b6-8445-92f3e4c7732a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a75f355-2275-4091-abd9-357779d5d640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb3039d0-f9c0-4341-aa0c-6660c7e21f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e53907f-15c3-4162-898e-51e41b63f7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c0c90f-c9bf-45ef-9743-e431d912fc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a27cc7-2328-418c-b837-c72c3277b66b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae0bfc1-015f-429b-ad2b-3129c9df824e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934af124-97e1-4a4f-8269-dfff1a39e0a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6718c71-1d53-4f84-9001-d2ed39873628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc0eaec-4f63-4143-b36d-f78bc1036c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc50422-e7d1-4c76-afbb-cc60868b87fc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245b350a-d6d0-4927-8ec9-6dc000046721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f64700-e0d4-4074-8066-176239929507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282b2798-abb1-4348-8763-7f716d2774ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7822a76a-580f-40a7-8f38-01747cef09ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552a75f0-b217-4335-86c1-e80441ae75e3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f439c4-d75a-4174-a029-a8bb1f37a6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aba778a-d9f3-4e6e-9d69-7ef437e9c6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda9447b-38cf-45a4-994f-e100c2a69159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730da9d2-a176-4d10-a13e-b411f2a219c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e098888-543a-4900-8c2d-9ff8c7b7c519",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6b1a89-ed51-467b-833a-336c77d1f912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d6f4dd-3f48-46ef-b0e3-6f4fb80e9d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1af4df2-795c-4b4b-aa72-9d0ddd22bbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c6fbe3-2b46-4bae-ba8e-43a0a253fa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ecd682-6c9c-453e-88e5-09594f3eddae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058a60d7-35b2-4087-8492-d9f670d0b9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec3daf8-6606-49a9-9220-18d139475a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59af2cb-8f1d-42f2-b3ab-dad8f72fb364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2b0ffa-5e5f-4cfa-ac00-cee5ca071180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fdd72d-4334-4751-b876-fdf1a18e487f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61a5811-ecc3-4562-8b25-e9a379d4e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5008e0a8-4c4a-4968-9c03-f6cea603a088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b6d08f-0f4a-4b8e-9d5f-fb9350facb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d36c23c-d09f-41d5-b25e-4d37b29b9648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6f3cde-58cd-4c88-9b9c-5f2ed284959f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5505c2ab-7ada-4036-bcbd-78fbeedf2a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c68533-9ef3-4c3c-8479-9cc33e073805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f9b13d-a4f7-4f44-b8eb-dba4b9e1bf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5625ff-127b-4bb8-a35b-c83e25590fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b787163-fa3a-475a-9c23-0d89d0eece25",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84405040-c4ef-4760-9991-cd688abce7c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09e04da-5611-4921-8652-9f7aeacd017d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbd38b1-4a0e-4792-b3ad-301767589977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92998c8-d961-473d-a0c2-1c6d09976f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32701534-03b4-414b-aee2-c2f0b74ae86e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bd99a2-df46-4ecf-81a6-7deea44d7c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f391ec-1a22-4fee-bae8-c04f3b91f707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2781612-fc92-4921-801d-ea76febb1ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576ed13e-4bf2-447c-9b8a-c1523894e2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571a94a7-4bff-4ac1-8c8d-51983f78df53",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5423e2b2-3534-4e30-98e0-47a59fd59943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e0bf51-9dd4-43fa-a0f6-87cec5d40519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c4afed-083a-4866-87c6-f3e239263974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacc182b-827d-4b89-8e5c-333f4af3a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce928f9-6b72-4f7a-87ac-74419be5ebfd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa34717-22d3-45fe-98ad-5d2f83370ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cc3f3f-76a4-41ed-a773-6c84a584819b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b47f48b-153e-41ab-bd20-086ee8731437",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e309b8e1-4b2d-4842-ae22-857d7dacae62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f183240-94d2-4195-ba4a-c845d2357eb5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b591d7d-4741-462c-afbf-123562bebd3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abadcd76-8394-4574-947f-93c2441255e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde1b7cb-5904-4d59-a2b0-64ec853716fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fde623-d692-403a-9b75-e11ab29409d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4804ddc-cd03-4dc3-a7ce-d5d185737885",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f59517-1a7d-4f06-a117-7891506bc87c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b1e8c9-f3d3-45c2-b0a2-86a4065defa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f29cec3-bc09-4f89-a183-bf5176c45009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee893483-8abe-4907-bc42-1fc7df60d826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78d70ce-4e4d-47f1-8e4d-6c675436f6f5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6c81b0-ce74-492d-8e90-1bb1bc7b6fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2750fba-5a34-44f2-944e-9b3da7c940f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a3819a-5584-4c82-8c76-fa0d098cfeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e08a65-eee6-4c18-9b60-dd3a8d7a4019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7998f6da-7f76-4e4a-8329-5204c233d89d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e869737a-3ebe-4098-8049-e59b976f0363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a26c72-3772-4ba7-a54d-e0e21b73ab59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc3f1b6-2271-45df-9448-ae57c6655caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1ce9eb-9f24-4acf-a565-932d86d3de96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92544ea-3167-4a7b-b05f-178019c9b9fd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b4d771-af6e-4654-9ca0-436d12c184ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6327504-493f-4da6-99fc-896b609267e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f459b602-ba49-42b4-a2d9-42cd7e5e8f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d612b4-4570-4b96-9e49-1219531eab74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9637a596-e3e7-4700-91d9-e24e405037bc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c579a27e-b679-4ff2-9a49-708eb64501ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e59cd9-7319-44e5-85d5-cd75692c8a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330a6e3b-2894-405b-a410-45020b9a657d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b47127-fdfc-422a-b408-6c501761e785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758f7647-73e8-4f85-a99a-da9ece7f6dd4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13054c60-6155-4c64-9f5c-ef6809499439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfee5aa-b970-4dbb-8382-b5b6afba70b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20adf7e0-bfb2-44a2-acd3-d7b082d5a612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382de920-17ba-41a3-a173-c1cedcbded01"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87e415af-a10e-4a59-aa23-6efb682639dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1932690-eabd-476a-8302-68946ff1af71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b01f4d-b237-4861-9d56-fb81a136e2d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e67a487-d9f6-4066-8dfe-7ae82837d6bc"
                    }
                  }
                ]
              },
              {
                "id": "760950ea-aadf-405c-8c32-d4db936727c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da88ab6a-cd99-486f-a77e-fbc1615785e2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca5e015-be10-4b22-8ae8-c5478043e927",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f9eae5a6-e5e6-42f4-b97a-b65ff7ff6386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e67315-8770-4c28-82bf-080024f6d343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3bbfb15-abeb-4501-bef5-13f68ba1cff5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3a3800d-cfe6-40cb-b572-64ab1bee239c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc9ea860-a853-448f-b052-3bb55f7c4ea0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2892051-ef16-4cd5-b325-8b75da60f65c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3334b40-562b-4909-93c7-c682ee0e0455"
                    }
                  }
                ]
              },
              {
                "id": "2860b7ba-bdb9-45a7-b988-2c99604b6d4b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7d9c4663-4cc0-4a30-9be8-4f9acdb854cc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e428db07-efae-4163-ac00-bf68cb414dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1d8b0c92-393b-4c05-b0d4-fd3afbfc9e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f915028-93f6-4412-914c-d304dfa1987f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7f0b1c-65c5-4132-a504-ed8e501a36d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2ed76005-aa3c-4519-bc93-a0fc4b4a56f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a9f8f25-c646-4bf1-ae54-b1dbd38fd9b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "184d236c-2fcf-4203-bfdf-4a64c5d500ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9842c310-f3de-460d-aa36-aa4845582d64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3424d75-24cd-4c3b-903d-83e7e8970128",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7464ad81-70ef-47b5-9373-f4eb778eff0a"
                    }
                  }
                ]
              },
              {
                "id": "8ca375ad-740a-4ed6-a918-701c7614ea38",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e737daf5-5538-423d-911f-ac2685864423",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b09257d3-8b9b-4b31-993a-3d6f91e56b8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e95b478-fde1-48fa-807d-73001e492246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4069f9f7-72ed-46ae-88ba-6cb715e01c67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb0b5cb5-77b7-483e-9242-5de7b2bb5496",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "291eed0f-3c04-4113-8a56-648f1c1a647f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fac626b2-ee69-4e60-96b5-a8d9ca334166",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dd4c692-0f28-4424-9f46-9bc3cbf85ee5"
            }
          }
        ]
      },
      {
        "id": "c298522a-70e2-4437-8361-18ccf788aec7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6ff6d8c6-5115-4116-a494-d215aeca35b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1d67053-ac8c-4e02-83c3-9c96642613bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e03852cc-6724-448b-a55a-fbfd938b4497",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f16efa-5e3b-4389-9279-f1be19546201",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "75d36ba6-083f-4e79-a035-0b738958fb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960ebda9-c6fb-420e-87d2-9076b59e7cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70d53344-c42e-440c-b69d-5ee327eb8e4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa27ed5b-19cf-403a-ba88-02820f5a582c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcbdfb31-0fc2-408e-afc8-c6186e664a9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60e90207-b4e7-4975-a7d0-d876a3a7941c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca49f3a-b0fd-4ad5-8bdc-4970212e190a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be5f8937-23fc-40eb-891b-a0fa04353c81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c6e85d4e-7bdf-4992-982a-e92d8569bb2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d768a213-35fb-44c4-b6d9-bf3d72c4c915",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8d419a7-cf19-46ef-bfdd-b3299330a1e4"
            }
          }
        ]
      },
      {
        "id": "227a8983-0721-4ef0-b4e3-0c89327c4b6d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0760a28c-b5e6-4867-b2d2-f87388d4c293",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb252207-e24a-4ef1-b369-e3a47d07c8e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd7ac0d1-7a0d-4b6c-93c5-2673216bca4c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0f559b-1104-45c5-a7f0-ae0096ba47b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e95d649b-3446-43bd-abea-f5434123b57f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5892eff2-0f70-4192-9296-5e9050cdb4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae2fa741-b922-4287-833b-b9a71c2be050"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9afc747e-e763-49fc-8047-072835a1f28f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5de1d290-afd8-43e0-9fe6-655a53d31b43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1762d8c7-88d9-423b-a194-9da38fbe49bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3448bc60-f63c-449b-85d9-d1df2dfd8c19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "750fa2be-edb8-4d46-b239-774abcd59e4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "226b4b11-adbc-42d8-8c8e-86452e473a00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0f740b7-f7a2-4f12-aea4-3ae9ce778090",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "089a6977-2b3b-472d-8d76-9600bdaeeea3"
            }
          }
        ]
      },
      {
        "id": "ba4a81c2-e781-4e1a-bbf7-7f26c7685782",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ccd09d59-972a-4981-a62d-7e36bd79a806",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59ae88a9-60c0-47da-8a6e-c16bcf0b244e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d243ab6-2f6f-4413-a656-f28ef91f559f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a27d6a-ab48-4a97-bde3-5db13a806a16",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9ff1264-a150-48e0-b61c-c806dc8e420c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1172ea0-d367-437c-88e4-3362f82d4983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cd4b048-7212-431b-b2aa-9875e4bbfef0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05b520f6-c2d9-471a-b394-c40300574ce0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c21cf35-d848-4767-92b6-6814ee232d9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eec374e5-e727-4588-97ca-5dad0daae3e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e64a25b9-a0d9-45f8-aecd-63704c6f344b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a70a049-64f3-4928-b27c-698e3c4a68da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8b1aa6b-e291-42a0-86c8-8e85425e1f8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b8d1972-4b81-424c-ad04-d128abca9244",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09697f95-5886-425d-bf90-9cbdd0fd12be"
            }
          }
        ]
      },
      {
        "id": "455731c4-1b99-417a-8281-330aced8ba08",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be913547-6425-44f6-aa0b-54736241cda3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0da30e1d-7d91-46c8-99dc-ece260842973",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3238fd40-b9a4-4d2a-883a-6f6105f869be",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "905cd1e3-b0f9-4074-8f20-49b2f12a74cd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10c02e9d-7f06-4265-b975-67b920f7221f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.15476190476191,
      "responseMin": 25,
      "responseMax": 634,
      "responseSd": 40.81923781425815,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727743886135,
      "completed": 1727743902167
    },
    "executions": [
      {
        "id": "85b15c87-77b0-4fe4-82bb-8d195fef7035",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dc21e3fe-812e-4c36-b26a-565bc2c51e35",
          "httpRequestId": "1dbffe30-f256-4874-b61d-61bf6fe05525"
        },
        "item": {
          "id": "85b15c87-77b0-4fe4-82bb-8d195fef7035",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "22b78df5-e402-4e01-8c6c-ba9c5c2f9af8",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 0
        }
      },
      {
        "id": "b9c49d52-dd8b-41d2-97c8-0c4b1d4dc9f7",
        "cursor": {
          "ref": "3ca90007-afe7-417e-89b4-b4b01f19a02a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2a7eb7e2-edca-4f5d-bb41-27925e5e759d"
        },
        "item": {
          "id": "b9c49d52-dd8b-41d2-97c8-0c4b1d4dc9f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "02efd683-a3bb-4b8f-94dd-f73e69a7ca33",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 0
        }
      },
      {
        "id": "fa2c08cb-b4ca-4326-a1e5-669d6e8124a0",
        "cursor": {
          "ref": "e1d53625-3b8c-466b-a0d3-7ee69ad390d0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "901e9d3b-3b69-4ecc-abea-d1ddee2f5bba"
        },
        "item": {
          "id": "fa2c08cb-b4ca-4326-a1e5-669d6e8124a0",
          "name": "did_json"
        },
        "response": {
          "id": "8f2d1ef1-85d5-4d90-9d51-c868f8f2a954",
          "status": "OK",
          "code": 200,
          "responseTime": 235,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6953fe1d-399f-4eab-a13e-44cdf679d924",
        "cursor": {
          "ref": "4e0819ed-fdb5-4d1c-96df-cb3218bccb4a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5b2e629f-0170-4c2f-b0f1-59db0e63765f"
        },
        "item": {
          "id": "6953fe1d-399f-4eab-a13e-44cdf679d924",
          "name": "did:invalid"
        },
        "response": {
          "id": "11dc0632-ee3f-4814-83d5-a3a63bf8ecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6953fe1d-399f-4eab-a13e-44cdf679d924",
        "cursor": {
          "ref": "4e0819ed-fdb5-4d1c-96df-cb3218bccb4a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5b2e629f-0170-4c2f-b0f1-59db0e63765f"
        },
        "item": {
          "id": "6953fe1d-399f-4eab-a13e-44cdf679d924",
          "name": "did:invalid"
        },
        "response": {
          "id": "11dc0632-ee3f-4814-83d5-a3a63bf8ecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1951bf3d-24c6-4549-a00b-68071625c4bf",
        "cursor": {
          "ref": "775e5c06-73d4-47dd-8924-1c39ebd28159",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f29707c3-5eff-46ff-a8e7-820a044cd770"
        },
        "item": {
          "id": "1951bf3d-24c6-4549-a00b-68071625c4bf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9abfefdc-d2b2-4fc4-b198-da089b908478",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be3adad-cd08-4dfc-a1f1-806e5950453d",
        "cursor": {
          "ref": "b45955d7-878a-4b54-be34-f605e5149bb0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8cdb2974-7189-4ef3-8ab6-ef8708cce739"
        },
        "item": {
          "id": "3be3adad-cd08-4dfc-a1f1-806e5950453d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a275a4ee-ebba-4922-b252-c892ea6be5a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ebb269-2bad-4fea-a2f2-5f2833719170",
        "cursor": {
          "ref": "b4c5e4d2-581e-4804-a364-b0e691103bdc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c5f9c079-7820-4141-a260-2bf3e30b6e9c"
        },
        "item": {
          "id": "87ebb269-2bad-4fea-a2f2-5f2833719170",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0a9ec73d-61fe-4ba0-bc67-9f70c5248d4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ad7cdb-0647-46a2-9df1-62d90990b3c8",
        "cursor": {
          "ref": "bf7599d9-5e2b-4001-984e-cacf3019479f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f34b6cab-aac7-4b26-a44d-41e8c5fee3f1"
        },
        "item": {
          "id": "d5ad7cdb-0647-46a2-9df1-62d90990b3c8",
          "name": "identifiers"
        },
        "response": {
          "id": "26b338c9-a5b8-4ef2-bd24-76893d028499",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e8fcde-f4d0-4e6f-ab4c-f76dc0deedab",
        "cursor": {
          "ref": "72037026-4a28-468a-a5bc-eb74e5b94435",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0d9861a7-a71b-4504-892e-1123dede32cf"
        },
        "item": {
          "id": "b8e8fcde-f4d0-4e6f-ab4c-f76dc0deedab",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "375d4712-fe07-46a1-b5bf-2c54349c9891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8fb50b-33fb-4508-9b92-47160e15703c",
        "cursor": {
          "ref": "2862a0ae-3328-4169-a5f1-8eb4f8e56625",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72e0b555-8027-4288-9378-3d745fadc2e1"
        },
        "item": {
          "id": "7c8fb50b-33fb-4508-9b92-47160e15703c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c404af24-bad6-4de2-a5c2-5ab996884844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0547d0-6949-41a6-8713-3fd0dd5ae0b0",
        "cursor": {
          "ref": "6049898b-00f3-49f7-83ad-a52d2f22e2e9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8c3efe26-38d0-41ee-9460-528a22c7daf6"
        },
        "item": {
          "id": "5e0547d0-6949-41a6-8713-3fd0dd5ae0b0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "599820c8-fe32-4d4e-ad09-b8c18881dc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8559159c-857b-4734-ab20-c40cfd310d27",
        "cursor": {
          "ref": "a6422e47-c154-4ee6-9207-225d6f54a85c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cdbc52af-7681-4815-b96b-84d7e4280ac7"
        },
        "item": {
          "id": "8559159c-857b-4734-ab20-c40cfd310d27",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "14c3bf7e-fb38-489d-a768-6aeb72362325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986b8fc8-7eb0-449d-9b57-b936ec4c9bbd",
        "cursor": {
          "ref": "6fbe53f5-9bef-4110-925b-3e9bc2e586a0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "522e1b28-b0f8-494c-bb3e-1abdf9bce7c1"
        },
        "item": {
          "id": "986b8fc8-7eb0-449d-9b57-b936ec4c9bbd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "10103162-00b2-4210-af8d-7246bc74e820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf71d08-3841-4891-b575-007f3b217345",
        "cursor": {
          "ref": "1af771e3-61ea-4754-9aae-190c7da64f9d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "01885fc3-15cb-485d-989b-9b92505c5634"
        },
        "item": {
          "id": "fcf71d08-3841-4891-b575-007f3b217345",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fe1c6419-4a6c-4aef-8e3e-708810a2a8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2e9ae4-d658-4bf1-86e2-335c32195b06",
        "cursor": {
          "ref": "9c96cdf2-51b1-4ea5-b3cd-9f7e1f5436b5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3c2a78a7-2859-42e0-ba5a-64fa84513ec1"
        },
        "item": {
          "id": "8b2e9ae4-d658-4bf1-86e2-335c32195b06",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d9eb646f-8d4c-43f5-a555-95ddf1083d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1617d7-93aa-4679-a102-efdef1a7fd6a",
        "cursor": {
          "ref": "94dc288c-7bff-41c3-bccd-ca78565ded2b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9e3aeda9-c5a6-4942-bd18-39d9ed95969d"
        },
        "item": {
          "id": "4d1617d7-93aa-4679-a102-efdef1a7fd6a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "868a8a89-78ec-45d1-941a-d562f9ef16bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3192271d-c429-44ad-8337-c3e639c2b109",
        "cursor": {
          "ref": "e9ffb9c0-b359-43d8-abf6-c767dedfc1d3",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "da14d5f8-221b-4fb9-bfd3-6e7f9922c2cd"
        },
        "item": {
          "id": "3192271d-c429-44ad-8337-c3e639c2b109",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c89b20d5-39e6-4fc2-82b3-bce486dde896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d04ca7-8e82-4bca-a640-cb91d9f30310",
        "cursor": {
          "ref": "d91b0a56-2ccb-47b3-9fc8-83d009e3883a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2409505f-c8d6-4673-9954-95a7431a6d33"
        },
        "item": {
          "id": "18d04ca7-8e82-4bca-a640-cb91d9f30310",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "11b517de-4950-4f41-b80b-0d6c624688ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33087de3-6a32-4fa7-ba83-e385a8f6f4df",
        "cursor": {
          "ref": "09ee5765-fb1b-4694-80b8-e61272ad006d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "05e401d8-c66a-44af-9c6d-fc70e42456e2"
        },
        "item": {
          "id": "33087de3-6a32-4fa7-ba83-e385a8f6f4df",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d060d30b-aaae-4b62-875c-b8674cfd0d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a1f622-4e8d-40d2-b152-1e07316e87fa",
        "cursor": {
          "ref": "02617cc2-edf7-4c96-a390-6ec2f62b8e3e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "23b2a68e-e5a5-4b61-a1fa-c7bd19ea235b"
        },
        "item": {
          "id": "18a1f622-4e8d-40d2-b152-1e07316e87fa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "255b3da1-30ed-4959-8bd4-9cda02f17594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775babe0-b038-4de2-a4b5-98422bf4e053",
        "cursor": {
          "ref": "ab3f5918-356f-4c10-a860-73fdebb1309c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6f7fdd25-b355-4826-b153-c98ee9eb12a3"
        },
        "item": {
          "id": "775babe0-b038-4de2-a4b5-98422bf4e053",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9f4ed5ca-6ab1-41eb-8ba8-7ec15c33db41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e02cb8-78c8-41ab-962b-80a140eb11b9",
        "cursor": {
          "ref": "3ed54444-46fb-4318-8b46-526078055b29",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5f1b9fb8-51f1-4ca2-92b7-e421b65b906b"
        },
        "item": {
          "id": "33e02cb8-78c8-41ab-962b-80a140eb11b9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5a63c3ab-c386-4f60-bf96-dfaaad2bc936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867fe4e2-8865-466a-9a8f-120c228266db",
        "cursor": {
          "ref": "dd518533-6e84-4407-95c0-18d7a714b2f7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d18a4ac3-9bfc-4137-8435-1eb122996996"
        },
        "item": {
          "id": "867fe4e2-8865-466a-9a8f-120c228266db",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "847ab14e-be0e-440a-baa9-15206fe1ebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0426234-2c78-44f4-b697-d0f7575fef47",
        "cursor": {
          "ref": "9a6a79f7-3f6e-4909-8615-a4e3415e5379",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ec1eba83-b28b-4066-93fd-837bae68464e"
        },
        "item": {
          "id": "c0426234-2c78-44f4-b697-d0f7575fef47",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1158352b-9215-4e24-80f0-fcd2cd2dc043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f2a943-2665-4077-b52f-1692cd3d0d55",
        "cursor": {
          "ref": "a2e78498-bcff-49cb-87a2-ecc4d95cbdc7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e1db5028-0aec-4cf9-ab3a-b98e0eeaaa9d"
        },
        "item": {
          "id": "47f2a943-2665-4077-b52f-1692cd3d0d55",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3a54ead3-b192-46ef-979f-9ad3d5c4a259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9c16e7-9b18-4562-ac7e-38809ac00c63",
        "cursor": {
          "ref": "bab151ab-d8fa-431b-a43a-5bb5998a2076",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "960ce506-d4a1-499e-a08b-61737f142e4a"
        },
        "item": {
          "id": "4a9c16e7-9b18-4562-ac7e-38809ac00c63",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e728a7bf-6c18-4b34-8706-bdd634911de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2962e194-dbae-42f9-b552-9436ed2a02b9",
        "cursor": {
          "ref": "da734864-3424-46d9-90d6-36014d2baa22",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0d272944-7542-4479-9d10-74aaeb8d814e"
        },
        "item": {
          "id": "2962e194-dbae-42f9-b552-9436ed2a02b9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "751679e5-5edd-4da5-bc01-4b1e760a42bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b739bfaa-e8d5-4495-a3e6-a0c2b39bf9a7",
        "cursor": {
          "ref": "f8bad5bf-c787-4743-abeb-157222f07b3b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "53340f13-6a9e-4e46-814b-ce7facc9dbf7"
        },
        "item": {
          "id": "b739bfaa-e8d5-4495-a3e6-a0c2b39bf9a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "55dfbb7b-09c0-4812-9d80-2b4b6e250511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c972713-9565-421b-9026-60df5c9dcd61",
        "cursor": {
          "ref": "53a1217c-27aa-4e07-b7d6-7d2dced683bd",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "00bc6bfe-27f3-4e3b-9a20-3bc247eadb2c"
        },
        "item": {
          "id": "8c972713-9565-421b-9026-60df5c9dcd61",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c8d3f569-50d0-4dda-854a-063ab9860165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c2a2b-13f1-4e94-9627-81949138298a",
        "cursor": {
          "ref": "7b4e990d-1d5f-4e8e-861b-6edbdc7f3e5e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b6503f12-467e-4f73-892c-7152d56ed884"
        },
        "item": {
          "id": "d02c2a2b-13f1-4e94-9627-81949138298a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0405285b-10b3-40ba-aa40-27d1953f064f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0307eeb-851f-4190-b732-45011147ad50",
        "cursor": {
          "ref": "4e5755ee-9859-40a0-9849-547d0a14ad52",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c39a5c2e-774d-4cac-9247-8b6b91c173bb"
        },
        "item": {
          "id": "a0307eeb-851f-4190-b732-45011147ad50",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f232d71c-e44f-4fd6-81b0-bb1324204e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7004c62-5d31-4d2b-9fa5-c9c714b4f11a",
        "cursor": {
          "ref": "ce79d2bf-2a96-498b-b503-db65bcbec14a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e3b746fd-90e4-41a2-a6f4-ac589afccd8e"
        },
        "item": {
          "id": "e7004c62-5d31-4d2b-9fa5-c9c714b4f11a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7ce316fb-db62-4d9e-bff4-4809bce07cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1f28f6-1aa5-4bce-a692-32ea5f55029f",
        "cursor": {
          "ref": "fe85a51f-9c98-4e51-a911-ec57c603916c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "28ccd44e-7749-4492-99f2-795e11621c4c"
        },
        "item": {
          "id": "3b1f28f6-1aa5-4bce-a692-32ea5f55029f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b0470503-c3f7-4c98-aca7-00a051281f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a097aaa-73b0-40c2-887d-163540401b52",
        "cursor": {
          "ref": "1a2076ad-b532-449b-908e-27b4c7af2eb8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cf48d449-f47b-4892-bbb2-76d47d1cc6c8"
        },
        "item": {
          "id": "9a097aaa-73b0-40c2-887d-163540401b52",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "941f234b-5d03-47e3-9e40-ec1b1cc63873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd95f5c-6566-4aa9-ac49-acf78cefb723",
        "cursor": {
          "ref": "7679dd8c-5b81-4b15-950f-f2472c6e7146",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b5f5992-c312-4548-b25c-380b8263e4c9"
        },
        "item": {
          "id": "ffd95f5c-6566-4aa9-ac49-acf78cefb723",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f28cf2df-0a81-428e-b55c-d32001788954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a063c2b-68d4-4a1c-bd11-a52eb6dc12c7",
        "cursor": {
          "ref": "b30a0680-db59-4ef0-b537-b5421989f7ec",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d0bffa9e-d647-42ef-a2d2-7aab888c70f9"
        },
        "item": {
          "id": "0a063c2b-68d4-4a1c-bd11-a52eb6dc12c7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fef3d1db-0752-418e-9ed0-70b64a49ed99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b771d5-b7dd-4d58-b216-899db3eef014",
        "cursor": {
          "ref": "8d1ebdad-ef60-41cc-b588-544be35193a7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e4262b0d-1da6-468e-bd49-1f2b85591315"
        },
        "item": {
          "id": "30b771d5-b7dd-4d58-b216-899db3eef014",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6001fc4a-71bd-44c8-b2e5-088bdbfd6f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa02e34f-ff0e-481d-8389-eae6c70721a1",
        "cursor": {
          "ref": "f9803aaa-e71b-4f31-b762-9a79b14935ac",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9724c016-e67b-47e6-b492-2408dbff5f45"
        },
        "item": {
          "id": "fa02e34f-ff0e-481d-8389-eae6c70721a1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "377a32f1-12ef-4655-ba81-855ec28ffd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63182f43-f687-4a51-9104-673496ff3ccc",
        "cursor": {
          "ref": "4361e9f5-7d33-4f4d-a3c9-2a1159afef6a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "38824acc-479d-4c6c-a0fd-17642ef6c826"
        },
        "item": {
          "id": "63182f43-f687-4a51-9104-673496ff3ccc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a465903f-db19-4ad0-8caa-8388a2af1afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6446ca6b-4f65-4537-b898-e4ee1f463a8d",
        "cursor": {
          "ref": "26349dc3-e4b9-4a5a-a3cf-25e8b8e351f1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "27f0daaf-1432-49e7-ba57-e9839ff1dc67"
        },
        "item": {
          "id": "6446ca6b-4f65-4537-b898-e4ee1f463a8d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "74424fcc-c865-4f14-b52e-a59ae4daaabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5b7d13-d3af-40eb-ab11-207bfad17cd0",
        "cursor": {
          "ref": "8da2ca42-069e-4a7d-8ca1-567f141a92cf",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8faf1c9c-a56f-49a7-a1fd-e9b1324bd507"
        },
        "item": {
          "id": "4a5b7d13-d3af-40eb-ab11-207bfad17cd0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c1ed009b-cdf7-49b5-bbc7-77cdeee1aefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b86ff7-298b-4328-80c9-ff630460c68b",
        "cursor": {
          "ref": "9ed72be4-c178-424c-a28c-81f89c35dfb5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1fec3842-248e-4e4d-893d-a1fb701f1bb7"
        },
        "item": {
          "id": "f7b86ff7-298b-4328-80c9-ff630460c68b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b8afd6ab-7612-4808-b718-eed3d64b665e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeb8ab3-f84c-4905-8b16-ea4a6d0904cb",
        "cursor": {
          "ref": "297ce114-00ea-4941-8a6d-188927050897",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "908cedfc-0c87-43e8-9d0c-d45d501a8f24"
        },
        "item": {
          "id": "cdeb8ab3-f84c-4905-8b16-ea4a6d0904cb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0b0a1f93-94f0-4cc2-a920-e9796e47cefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6545f5a1-892e-45a5-81fc-0f47e5a8ae64",
        "cursor": {
          "ref": "052315a4-6402-44f4-8322-47ca70e70226",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "48d6dd84-4e71-48c5-ae10-27d596eb6eda"
        },
        "item": {
          "id": "6545f5a1-892e-45a5-81fc-0f47e5a8ae64",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2098fac8-4324-484e-a740-8ec27792755c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e000c16-90a2-434f-abf1-c620f5ddc88d",
        "cursor": {
          "ref": "2ff0ee54-0213-457b-9240-f49fea8c1e56",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "37c7f09a-e1bc-435c-ac71-f3c196ebed97"
        },
        "item": {
          "id": "2e000c16-90a2-434f-abf1-c620f5ddc88d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3eca069e-101d-4d8b-80f0-b43457b324b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d34f062-8509-4daf-9749-b2e1c398d7b5",
        "cursor": {
          "ref": "b19b5bef-2b94-4121-9a46-d69654c88ba1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "701c527e-7965-46b7-b590-c03a9fad9e44"
        },
        "item": {
          "id": "1d34f062-8509-4daf-9749-b2e1c398d7b5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d6d3e01a-f5e0-4fc7-ac72-fa0eaeb5fbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f22955c-7dd7-46d1-ae40-e2077dad1677",
        "cursor": {
          "ref": "72b7d014-0d38-4112-856c-73b01fcc08d3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb80c688-f984-49ed-a8d0-a788dda999b8"
        },
        "item": {
          "id": "1f22955c-7dd7-46d1-ae40-e2077dad1677",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d8e5b7bd-da16-4cad-b7e9-0586d8828b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23989774-b482-41fb-b4e4-3481a50ca281",
        "cursor": {
          "ref": "83fe7a8e-2034-4fab-b474-9a78952b758c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "27e75510-52e5-474d-9152-843e06b2d481"
        },
        "item": {
          "id": "23989774-b482-41fb-b4e4-3481a50ca281",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "40d4baa8-54c1-4c4e-8bdd-77ae518ca7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451e7f63-c249-4544-9012-a765a1f03cef",
        "cursor": {
          "ref": "84279c63-0a05-4efd-89b3-53d8a76fdfbe",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "23605fa8-adb4-4c5f-8079-faeee3fb8ceb"
        },
        "item": {
          "id": "451e7f63-c249-4544-9012-a765a1f03cef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8e1829e9-0f72-4e9e-9630-2d1ffa1ad7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534c4272-d756-4145-af19-eb6de4e1dcbc",
        "cursor": {
          "ref": "705eef12-b028-4a1a-96d0-49be1a9df178",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "44d66822-74df-4e1b-a752-d6513124459b"
        },
        "item": {
          "id": "534c4272-d756-4145-af19-eb6de4e1dcbc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e81312a9-035c-49a9-b9ae-2d4826d8e855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb45116-052e-4c1e-a74a-3ac094f58cd4",
        "cursor": {
          "ref": "247fb831-5e4f-4e1f-b029-b4a0ace707a6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0c1e9637-b103-4bab-acc5-63eeba2912b1"
        },
        "item": {
          "id": "dbb45116-052e-4c1e-a74a-3ac094f58cd4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2b7ba929-5d7b-4a86-aab1-b53e4b036db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d313e95-bd40-46a1-907b-c9e931e05f90",
        "cursor": {
          "ref": "54ff7fb3-3f3e-48df-bfba-3fac67e6f286",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3f5a659c-f8f7-4f0b-9911-12915656ce8f"
        },
        "item": {
          "id": "6d313e95-bd40-46a1-907b-c9e931e05f90",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f2b2756a-655d-4be7-9522-b59cbff4fd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a148c5-0553-44b2-948f-86386ec59118",
        "cursor": {
          "ref": "2818c43d-eaf2-488a-bac8-38363863c749",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4542db63-41f8-418d-82fb-984dbf39dafd"
        },
        "item": {
          "id": "38a148c5-0553-44b2-948f-86386ec59118",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "54c80918-d102-45d9-8204-fb2cdf6eb527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ab8861-26fc-4128-a952-88c110fe97ec",
        "cursor": {
          "ref": "b20e8877-30f6-4273-9f31-d662c4dcde32",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d853f77b-81e6-4566-8525-c84297f8bfd8"
        },
        "item": {
          "id": "94ab8861-26fc-4128-a952-88c110fe97ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ff84bda-bdf0-4c2b-a189-a7f0a2586034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a2cf2f-c6ce-4a5c-a4b3-0eabc64e3c79",
        "cursor": {
          "ref": "518a9290-4bbc-4da8-b018-a111f4499790",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "20e874d0-059e-48c7-b061-9e458bfca24f"
        },
        "item": {
          "id": "63a2cf2f-c6ce-4a5c-a4b3-0eabc64e3c79",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ac009454-c71d-40bf-9b89-89ee7978981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c210616-e73d-4cf8-ab23-c97aceb3bc31",
        "cursor": {
          "ref": "19cced4d-7308-4f84-ad90-b1fc24cd6f64",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6eb9e089-d03b-4865-b8eb-f538051d9fdf"
        },
        "item": {
          "id": "6c210616-e73d-4cf8-ab23-c97aceb3bc31",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "933766e5-ce88-4fa9-8e56-f6bdffaae9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec13455-b2d4-4ee2-8f47-7c4ef318222e",
        "cursor": {
          "ref": "6c818678-9522-4c30-bf4d-767aa47027b2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e9e9686-f59b-4abd-92ca-b24464c9c90e"
        },
        "item": {
          "id": "6ec13455-b2d4-4ee2-8f47-7c4ef318222e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c73e05c2-1115-4288-b1dc-78de5b61367e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca1806b-16ab-47cf-92e4-8fef723f68f3",
        "cursor": {
          "ref": "ecad7a73-d82b-45dc-9af6-f738b1e0f9a2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "be4bf1ff-65f4-4c01-920d-ece66c89b833"
        },
        "item": {
          "id": "1ca1806b-16ab-47cf-92e4-8fef723f68f3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2c249e56-1045-41f3-bff3-7aa74622d994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4949ec02-5ebb-462a-9137-3955a69a3260",
        "cursor": {
          "ref": "899ccbfe-c975-4fcd-8e30-e31099f7dffb",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0872bb1f-5826-43a3-93fc-5d7c6b0ce799"
        },
        "item": {
          "id": "4949ec02-5ebb-462a-9137-3955a69a3260",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "05cdc152-626f-4afc-8bdc-847bdf023df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c676a48-a072-48a8-a56e-e89f4884901f",
        "cursor": {
          "ref": "44681acf-4449-41ec-b474-dbd4a70962ba",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fb8f996d-8ad4-46b6-a094-ea9dc699a701"
        },
        "item": {
          "id": "6c676a48-a072-48a8-a56e-e89f4884901f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "82565d92-7f9d-4786-b54d-586a5bec03fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff4920c-6ee9-476e-b33d-e094e4ce7200",
        "cursor": {
          "ref": "42d86e18-6614-4a5c-9906-ed84c8fcdf89",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2bda64b5-5e3f-40d8-a046-f56458e39b1e"
        },
        "item": {
          "id": "7ff4920c-6ee9-476e-b33d-e094e4ce7200",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cfb4d80b-968e-4cc2-8245-f1d22f80225c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abec87db-039a-4d36-b3b6-412714359299",
        "cursor": {
          "ref": "10f51820-a4fb-4e5c-85c7-738a715a4fe6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dd522d56-20ea-4647-819d-50939533e2a9"
        },
        "item": {
          "id": "abec87db-039a-4d36-b3b6-412714359299",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e686a51c-fe28-465a-9be0-5bd12715dd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad85147c-4ed6-416f-953f-5f8db7ee2e56",
        "cursor": {
          "ref": "3ea109f4-1bcb-4cf1-b643-62aa5c84c2f4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d1372597-ac39-4a5b-8f94-5687a2b62dec"
        },
        "item": {
          "id": "ad85147c-4ed6-416f-953f-5f8db7ee2e56",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f1f3761e-fe13-4ca4-a7af-6c7e2a3eed92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8746556d-2fcf-4c25-ab03-250dd94ff659",
        "cursor": {
          "ref": "5a685b12-22d6-4f0f-aeef-2a23155be57e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "42fa3321-f581-427b-98e0-3e1e33d0c602"
        },
        "item": {
          "id": "8746556d-2fcf-4c25-ab03-250dd94ff659",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0d0e5214-5ddd-4ba5-9917-604299ba712a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0653d1b1-e0d0-4eea-8f60-7c2b2d7c7cb2",
        "cursor": {
          "ref": "50fe9c2c-4b86-496a-8304-ff9ff3c708cc",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "109280b1-0a5e-49f9-9c67-d981967a8804"
        },
        "item": {
          "id": "0653d1b1-e0d0-4eea-8f60-7c2b2d7c7cb2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "45ce1133-208b-4442-8cc3-80b133d4c911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aaa293-dfbc-4af8-84e6-0c1f57543788",
        "cursor": {
          "ref": "0aa15ce0-8e81-492e-b068-52eaba3dde30",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b44b0db2-3183-458a-a5be-44f3b1ceb9ad"
        },
        "item": {
          "id": "e5aaa293-dfbc-4af8-84e6-0c1f57543788",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "58a1eae2-8257-4243-8b72-3abdd0a02c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c910604-e6ed-4746-9918-632e5a308cd0",
        "cursor": {
          "ref": "70930a2e-49c5-4164-a172-c913fc7bac3c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dda33575-ed26-4f37-83d0-5138513d627c"
        },
        "item": {
          "id": "2c910604-e6ed-4746-9918-632e5a308cd0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dcdcdc22-7fbb-4c80-83a0-6ca10f992af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cc85af-8f75-4c15-99ad-d6de6a311e6b",
        "cursor": {
          "ref": "79fce6e9-3427-4093-bf7f-84ad6273016c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ffe45512-5d48-4606-a1e4-7f5de59dba2a"
        },
        "item": {
          "id": "93cc85af-8f75-4c15-99ad-d6de6a311e6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "071ad1fb-8767-457b-b09a-425c1c37b484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeae17b-4758-4465-bfe7-bc6c75ce525c",
        "cursor": {
          "ref": "fe86e9a3-0fe2-430f-bf4e-1d7a9379d1e1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "288ea4f7-7cda-4bc4-985f-b835bd43c222"
        },
        "item": {
          "id": "7eeae17b-4758-4465-bfe7-bc6c75ce525c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cbe849e6-6ad5-45fc-8360-e49fab694d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ceef5c-abba-4752-8051-f1d8bf24f96a",
        "cursor": {
          "ref": "a5c4b26d-8a92-4d69-a082-5b2d35a3b385",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7e0e5b56-80af-4d65-a20d-d288d5e5a1e6"
        },
        "item": {
          "id": "e3ceef5c-abba-4752-8051-f1d8bf24f96a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "65703e4f-a28c-47d9-840b-02d2fc752c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e46a9a1-a390-4f08-9e04-01a8a2b90b33",
        "cursor": {
          "ref": "d6d85476-1018-4cb6-9323-ce416c461fac",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4752d602-d199-44a7-a25c-7b41206479dc"
        },
        "item": {
          "id": "0e46a9a1-a390-4f08-9e04-01a8a2b90b33",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1e9f073e-ffcf-4127-87ac-2141c58b2ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c8bc8-8bee-4b73-9ff8-351f5ed3b018",
        "cursor": {
          "ref": "98674f6e-76da-4ee4-b989-6da0a8dc58d8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1351efe9-d99c-4247-8ea8-0c5f19316905"
        },
        "item": {
          "id": "ba8c8bc8-8bee-4b73-9ff8-351f5ed3b018",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6c79aa6d-976d-46be-b408-31cfaa0e5ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ef2f92-dde7-4972-91bc-a9a2b0e01dfe",
        "cursor": {
          "ref": "963cab3f-8dc1-472c-a14f-67b72aa75f06",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "80551a91-5615-4b31-9848-2745f9280779"
        },
        "item": {
          "id": "84ef2f92-dde7-4972-91bc-a9a2b0e01dfe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a0ce6311-d2f9-4213-8b44-8853e92071ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca59d31-2598-4ff4-9ab7-73f9e1bd7bf4",
        "cursor": {
          "ref": "69beedd7-94d3-4120-b12f-334df2d89ce7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "86276203-b3fc-4d4c-a485-9648df59ba4b"
        },
        "item": {
          "id": "3ca59d31-2598-4ff4-9ab7-73f9e1bd7bf4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e18bea58-5a06-45f2-8237-0dfa13d16a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ca6151-55aa-4878-8c15-5be02da67742",
        "cursor": {
          "ref": "ddaccc56-edb2-43b2-b5a3-1d6399ccd083",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "49351962-a20a-49d6-8abd-d67ec4e1e1d2"
        },
        "item": {
          "id": "67ca6151-55aa-4878-8c15-5be02da67742",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "feeace74-dad4-45a7-ba34-33dc11c44252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0107936d-8e2b-4fb5-8f42-4c6f5cc213f9",
        "cursor": {
          "ref": "7c2141ea-c4cb-480e-bf34-fa04a400aba3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "876b046f-bafa-4a1a-a2be-621d971117df"
        },
        "item": {
          "id": "0107936d-8e2b-4fb5-8f42-4c6f5cc213f9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "97c74499-d900-4ba5-9829-151fc7475645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1296eadd-1bd4-4fba-81b1-b63264dd33cf",
        "cursor": {
          "ref": "b8be3ae5-bd45-42a0-8e99-244721883acb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4674462d-8041-45ab-9a24-80bce1397e4a"
        },
        "item": {
          "id": "1296eadd-1bd4-4fba-81b1-b63264dd33cf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7ef5e540-6855-48b9-898e-7dedeee6a9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f7cefc-4fe7-46ec-88b9-684d07c3a015",
        "cursor": {
          "ref": "2feba05d-801b-435e-9d98-0798f55dcffb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a428bb46-ff2f-45b1-a885-e5cc76bea473"
        },
        "item": {
          "id": "63f7cefc-4fe7-46ec-88b9-684d07c3a015",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "84da6dd5-9a08-4fd0-be02-3557b144ac84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fe0f83-8c6c-4b28-87a2-be839e1483d5",
        "cursor": {
          "ref": "b8312085-6804-4b1e-ac75-7ddfa16c39d0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "65bd2d72-ccf5-40a9-82ef-158ebe3f3f67"
        },
        "item": {
          "id": "d8fe0f83-8c6c-4b28-87a2-be839e1483d5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "71e77fba-572f-4f91-9f02-84f991966c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46540d4-bebd-49d2-8c6b-dff717193cb1",
        "cursor": {
          "ref": "43cf1fda-5586-4b5a-8c93-d5a3d5a0d379",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ba4fc43a-59e7-41dd-89af-fcab7699879c"
        },
        "item": {
          "id": "d46540d4-bebd-49d2-8c6b-dff717193cb1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1ffc15af-e0aa-461d-b1ae-dfe221f00d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108ea165-9472-452a-b5ea-66a59fcd3650",
        "cursor": {
          "ref": "e645ccc5-5e0e-4e30-81a2-b4d3084b7e59",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "56fd77d8-3a90-40d2-9f34-ed7cae43e9c3"
        },
        "item": {
          "id": "108ea165-9472-452a-b5ea-66a59fcd3650",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8b54fae0-d495-44cf-8383-69c5ae75648c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87459f72-1bb4-440f-8dc6-cf1409af8ccc",
        "cursor": {
          "ref": "11ba90f1-8793-46d4-8b8a-cce3c54a72d4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "65b3c7d3-ed89-4384-83e3-d1dccff6441a"
        },
        "item": {
          "id": "87459f72-1bb4-440f-8dc6-cf1409af8ccc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e0cda8db-b6e6-4502-b6e6-99e9e5bee38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb30cfe2-cd0f-4227-b0d3-250e4b6a11da",
        "cursor": {
          "ref": "d83cd4a5-c2ff-43ee-9441-4008d2c99117",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "57da0d86-5b20-4688-adef-b20e38ac9fe6"
        },
        "item": {
          "id": "bb30cfe2-cd0f-4227-b0d3-250e4b6a11da",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1135552c-5f14-48da-b8a4-c47cbc554a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b172cdec-94fc-4cb9-837c-f5765cdbd59f",
        "cursor": {
          "ref": "d96e6ae9-63fe-4e67-bf33-1d3048dbfa7d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6c42b19f-82c5-4967-b183-ec305c002e63"
        },
        "item": {
          "id": "b172cdec-94fc-4cb9-837c-f5765cdbd59f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "22fcfb0a-1bbc-4bdc-93dc-9865b405b560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab65d049-99b6-4bea-8424-49159c22108b",
        "cursor": {
          "ref": "93459bab-2389-4060-b6e2-ef6e4d8cb8ca",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0db0d034-6e41-4754-8e39-b3a88b73edc8"
        },
        "item": {
          "id": "ab65d049-99b6-4bea-8424-49159c22108b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "923fa602-2393-4fe9-85de-defd08270cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271e51c0-fe9f-4acb-bdfe-eb333f8b71ac",
        "cursor": {
          "ref": "d6e26948-d35b-4a91-8488-f66f01602d1a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "20c9cd0d-af73-48ad-8a72-1e74e37d7f32"
        },
        "item": {
          "id": "271e51c0-fe9f-4acb-bdfe-eb333f8b71ac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ff790d8e-8a1e-4098-bf04-a69d75c8a2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c80c3e-a56e-44d7-9593-7596f9a4d126",
        "cursor": {
          "ref": "1efdcc5a-5da0-4781-b345-94fdbe52f45c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a8f8ad4a-d572-4c14-be86-58aa125af25d"
        },
        "item": {
          "id": "72c80c3e-a56e-44d7-9593-7596f9a4d126",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "113da863-9594-4278-9714-2988ce5d8fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da78da3-4a2f-411b-bc01-18691fefaaed",
        "cursor": {
          "ref": "6619c7af-e59a-41e5-9bb7-2694fa9d932d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a9ec0b48-2479-4186-98ed-0acec258f90a"
        },
        "item": {
          "id": "2da78da3-4a2f-411b-bc01-18691fefaaed",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1792ca8d-dc02-4117-8864-e63c01748b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59b9f6d-136a-4886-9ab1-1bd9fee1c57e",
        "cursor": {
          "ref": "b21f8037-5052-41b4-b7b7-bd7f1f8e8621",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "79acbe8d-412f-4c0e-a0c4-2142012905c2"
        },
        "item": {
          "id": "a59b9f6d-136a-4886-9ab1-1bd9fee1c57e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "40eb85ee-23d4-4f0e-b791-4e66e5d43c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbb29b6-3a80-48b7-8884-605878da85dc",
        "cursor": {
          "ref": "eeee5c24-f2ae-4996-bde1-905f952532c1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "828c8ebf-680e-4a25-91fd-ac7e9f9a1cd4"
        },
        "item": {
          "id": "1fbb29b6-3a80-48b7-8884-605878da85dc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "55c74071-f2d4-4d3f-88ae-a3443879a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de65ae35-1bb9-4edd-bfd2-beb0827afb73",
        "cursor": {
          "ref": "9c6931fd-dfc3-48e0-9e2d-4fcb54ee6ce1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fbd9edea-3c18-477f-acc6-bd5d8d9e79da"
        },
        "item": {
          "id": "de65ae35-1bb9-4edd-bfd2-beb0827afb73",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "614e7885-42e0-478c-bb58-e24c9aad8b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef938af-6ce4-462b-97ab-4a0135168097",
        "cursor": {
          "ref": "6cf010fd-7563-4096-b48d-671f069e1cc9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f4323354-4e8d-4035-9094-f94fd94c5ffe"
        },
        "item": {
          "id": "7ef938af-6ce4-462b-97ab-4a0135168097",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8240ffbc-585e-4c94-9f00-af865ee9193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20bfc8a-7e76-425d-b892-a3f5e13893d5",
        "cursor": {
          "ref": "8a024c07-c458-4106-ac92-245a72d864aa",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7bf47c57-7474-4ac9-a760-0a612d4eea33"
        },
        "item": {
          "id": "f20bfc8a-7e76-425d-b892-a3f5e13893d5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c8fd2ad9-4f09-4be5-bf93-ad1f1f1608e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44546a47-ed1c-496b-8a28-d3e04c4c6c88",
        "cursor": {
          "ref": "c6d24a16-77f8-4a73-a232-f2368f2cab60",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9cf3f35d-fda9-422b-a1bf-464372c767c4"
        },
        "item": {
          "id": "44546a47-ed1c-496b-8a28-d3e04c4c6c88",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "18749108-d3a1-4f89-bc69-b2116f3604c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371d6430-6d76-4e4e-9350-658da8e29af1",
        "cursor": {
          "ref": "45f835d6-139d-4a8a-913e-eb8b73394e92",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b44578ea-75d5-436d-ac48-1304d031df80"
        },
        "item": {
          "id": "371d6430-6d76-4e4e-9350-658da8e29af1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "56bce496-e747-4155-90aa-21163444f936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0cb2f-1b18-46f6-b036-759aeb3e0296",
        "cursor": {
          "ref": "5ce88c8e-86d3-4e4e-b081-49ca2c3f8744",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "60743227-eae0-41e2-8b48-59af518ca9d9"
        },
        "item": {
          "id": "94c0cb2f-1b18-46f6-b036-759aeb3e0296",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f35a3010-9a94-4f6d-aa27-e15ebde10df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e547e857-57d6-4d6f-b1ad-e2da6e5a5c4d",
        "cursor": {
          "ref": "9cedc424-ef6e-4706-9d96-9eed76fa6b52",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b22f77c-de3e-487d-ba23-df5f79e12b70"
        },
        "item": {
          "id": "e547e857-57d6-4d6f-b1ad-e2da6e5a5c4d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "00f010aa-ce0d-4ef7-be20-e8fc15726a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420d72b5-b24b-4cff-8b47-db9666b7af94",
        "cursor": {
          "ref": "d5c43157-b2fd-4602-b8ec-613fe1b7f9c5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7d164bc7-331a-41e4-88d5-405f7e3f7236"
        },
        "item": {
          "id": "420d72b5-b24b-4cff-8b47-db9666b7af94",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "334312e5-c9d3-4707-bfb6-2eaf42ad7ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52301457-0b33-4a69-9adb-466e0d4d3110",
        "cursor": {
          "ref": "918f195c-85d3-425f-821f-c237af224b4d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "801bf53a-f465-4c4c-b8c6-dfc065821f46"
        },
        "item": {
          "id": "52301457-0b33-4a69-9adb-466e0d4d3110",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c1d4e340-73a8-408e-96b9-77f1def47d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a916a8-677a-43fa-a807-494307022211",
        "cursor": {
          "ref": "7bc3a635-c200-4f2e-be7f-16e9063b0d44",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cb062186-7b2e-4fe6-9ff3-23fb8e095573"
        },
        "item": {
          "id": "f9a916a8-677a-43fa-a807-494307022211",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cfef38b0-3158-40fc-bb77-86c74848e93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e7959-a56a-41a7-a67d-898546fca8ea",
        "cursor": {
          "ref": "b06080a0-e337-4471-977d-b15198ff5165",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a0ca0c85-69db-4445-be0f-44c6c072d195"
        },
        "item": {
          "id": "671e7959-a56a-41a7-a67d-898546fca8ea",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cbd35f33-39fe-4d7a-91a1-7e6e8aff0fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5096b575-45a7-4d3c-929c-fd2da8940c9a",
        "cursor": {
          "ref": "944d2980-0c47-43f6-82f3-48849338c356",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "219908a5-175b-4ba4-9f30-12cf426fdb81"
        },
        "item": {
          "id": "5096b575-45a7-4d3c-929c-fd2da8940c9a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "99b77f6b-523b-4219-a101-76ad9aade027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "db88cd43-dc1e-4435-a3a3-ab8a1153821f",
        "cursor": {
          "ref": "3e61f6a6-a361-440a-a2f6-7e9f5be57732",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "505e17dd-9500-4731-a101-a64304a6402b"
        },
        "item": {
          "id": "db88cd43-dc1e-4435-a3a3-ab8a1153821f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1a7f5599-8e3d-4549-be14-6024505fd5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6086a324-24ab-4947-97fe-fb858780165b",
        "cursor": {
          "ref": "9d1c685b-2031-450a-abb6-f76cc8668a8a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7af7032d-80a1-413b-8280-74ff0485687c"
        },
        "item": {
          "id": "6086a324-24ab-4947-97fe-fb858780165b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c544dd02-dd33-4b60-8480-5f803e309e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "035468ae-b36d-4cb2-83f4-8642d5049996",
        "cursor": {
          "ref": "e98061e7-35ef-4b54-bf44-7029cbda5f0a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "75fb317b-119c-41e2-adfe-7c818a9574ae"
        },
        "item": {
          "id": "035468ae-b36d-4cb2-83f4-8642d5049996",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "df689a4f-a1ee-4655-a6b6-2cbe0846f484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3f23ae24-3c46-4ee3-ba38-eb8babe976d4",
        "cursor": {
          "ref": "c1a3a4f3-7a07-4e4a-b433-edea09943004",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bbe795e2-20d7-4f93-8a5e-5e59c8715867"
        },
        "item": {
          "id": "3f23ae24-3c46-4ee3-ba38-eb8babe976d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c9af8337-ae0a-4fd1-a25e-006bbff1ee84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b1d9bb34-cb21-4741-959a-dc1b21782957",
        "cursor": {
          "ref": "7655f6e7-40cd-4d9b-8b69-88f16a386a4b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "12d8bff6-ee50-4740-b321-4dedd85e96c1"
        },
        "item": {
          "id": "b1d9bb34-cb21-4741-959a-dc1b21782957",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2e59543e-448f-4c96-8aae-28faf63b0f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "acd203c1-99db-4c31-91ce-7d597b7ea0ea",
        "cursor": {
          "ref": "2334dc9c-c315-457e-b9c1-6c647843df30",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6d89463e-82b8-4bbe-ae24-2311d87e8fdc"
        },
        "item": {
          "id": "acd203c1-99db-4c31-91ce-7d597b7ea0ea",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "666658de-dbe9-4a07-bef6-03e218c3ecdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "45628327-df65-49b2-a277-46cb7e89071f",
        "cursor": {
          "ref": "992b126b-77b8-409a-ae6a-07d752689408",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b5580080-9fa0-4bc2-a884-159c706c5af7"
        },
        "item": {
          "id": "45628327-df65-49b2-a277-46cb7e89071f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "322acb73-58b5-4d74-b64a-fcfbe570498c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3156e178-972e-43ce-986c-988f11ebac78",
        "cursor": {
          "ref": "4e410f29-5af4-467b-9147-ff21f10e4964",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4b026081-117a-4a49-9688-ebf62a5709af"
        },
        "item": {
          "id": "3156e178-972e-43ce-986c-988f11ebac78",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "80794b88-50af-4dec-83f0-6de9948c9a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a94610-ce36-4ec4-bd4f-349d64ecc7a1",
        "cursor": {
          "ref": "d4ca55ca-4bd9-4bf1-93a7-f2fd19079818",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1a4da191-2a6b-4ce5-b123-a7e4ffe3b9c4"
        },
        "item": {
          "id": "34a94610-ce36-4ec4-bd4f-349d64ecc7a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aa71ea9a-a69b-4fb4-8f64-88767fa626ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49185351-ab07-4b20-aaf0-3ce180a37e88",
        "cursor": {
          "ref": "92e152e2-bcbe-4f25-af80-4da6f68d3333",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c62a5cb8-adaa-4b1f-aec9-2a7ad8e98858"
        },
        "item": {
          "id": "49185351-ab07-4b20-aaf0-3ce180a37e88",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0c8acb09-4d17-4d70-9e1e-a45eb05fb5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8755f3-ca5e-464c-9c5e-d8d3af39f7be",
        "cursor": {
          "ref": "7bb857d1-7eee-4222-8c83-99e5bb1e3b6b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7bc5e86f-e83c-4e26-9589-881734690736"
        },
        "item": {
          "id": "0c8755f3-ca5e-464c-9c5e-d8d3af39f7be",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8a5f610a-26c6-4e42-a4ca-a9fd27b1a77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6642e5e8-5b24-45bf-9e69-0504af08fd0a",
        "cursor": {
          "ref": "a4c357bf-64be-476b-ba6d-f9f8a0bd7890",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "debda2a3-cf0e-4999-9e82-969443601390"
        },
        "item": {
          "id": "6642e5e8-5b24-45bf-9e69-0504af08fd0a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d0a8c8c4-9f12-4d85-8c15-12af8ed4e588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44af01ed-3b73-408d-a6a5-9811bd3647de",
        "cursor": {
          "ref": "fa37c565-f73c-4939-bade-8537d73de714",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eebb93dd-fb76-47d6-803c-b893e45cc3cd"
        },
        "item": {
          "id": "44af01ed-3b73-408d-a6a5-9811bd3647de",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7ef4a203-f016-46bd-ad2e-b26fb91ef5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8a5994-3587-4dff-aa0f-850d3649c198",
        "cursor": {
          "ref": "d1614bbe-74a9-4052-9786-b5f60e00438a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b581a669-8813-4fff-917b-7632ea288f2c"
        },
        "item": {
          "id": "db8a5994-3587-4dff-aa0f-850d3649c198",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ff939c42-7cef-44b1-af80-3900c4246608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed56062-b99d-4451-b33b-5b15760ee9b1",
        "cursor": {
          "ref": "bd8a3c68-cabf-4522-9622-f906030ad6cc",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "54013931-1bd5-4aac-8b03-d8aab189913b"
        },
        "item": {
          "id": "0ed56062-b99d-4451-b33b-5b15760ee9b1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "edce5674-db1c-46c6-a558-1b6cfe89e6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd2e4cb-0f6a-4343-ace4-5950217f1716",
        "cursor": {
          "ref": "579b9cc1-1d41-4abc-aa19-88ad4e32b491",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8c78e216-affa-4950-bcf6-afdd3f70a554"
        },
        "item": {
          "id": "ebd2e4cb-0f6a-4343-ace4-5950217f1716",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "720cd1af-641a-4208-a26a-1fa2324ba44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b7447a-6ab6-4d0c-bb9e-1e0208763d3d",
        "cursor": {
          "ref": "37049573-a1be-4d76-8dbc-be5847c84699",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "03a0be00-eeaa-45d0-a49b-349d65b7e38a"
        },
        "item": {
          "id": "30b7447a-6ab6-4d0c-bb9e-1e0208763d3d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "64f3e973-21c1-49da-892f-15410091d803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeba514-b0db-4ee4-a1d0-57f240e4d819",
        "cursor": {
          "ref": "4d006247-0882-463e-9902-eb90b972a54e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8bfc74b7-c6e9-43a0-8af7-ba8936f2f274"
        },
        "item": {
          "id": "faeba514-b0db-4ee4-a1d0-57f240e4d819",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "565a8ed7-82ff-4fab-9445-0141e2aaffbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75973a07-0750-41e6-a0e4-20758503e259",
        "cursor": {
          "ref": "f4f1172d-56e3-48dd-89ed-7d6bd56c4f99",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e40df0eb-796d-4a37-bd05-7604651c9052"
        },
        "item": {
          "id": "75973a07-0750-41e6-a0e4-20758503e259",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed6c6202-3f04-4110-b1d6-374e368c0236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b7a174-86ef-486a-bb3e-1a4b36a4f5ce",
        "cursor": {
          "ref": "e5907fbe-1f56-4ea4-8861-ea95544fe437",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bf0bccdb-167e-4877-a183-6262b36d21bb"
        },
        "item": {
          "id": "21b7a174-86ef-486a-bb3e-1a4b36a4f5ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d516a925-98ff-41ac-8814-ff232968870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23803a5b-bcfe-40df-ad85-32a17f4844e2",
        "cursor": {
          "ref": "43147818-e23b-4aee-a965-6c48068aae17",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e050dcff-64c2-4200-b1c0-538a5e31fcfc"
        },
        "item": {
          "id": "23803a5b-bcfe-40df-ad85-32a17f4844e2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b613cae3-9d42-494f-971a-633bc05bd078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b348e9-84ef-482c-9733-5e0826be7080",
        "cursor": {
          "ref": "bfee5ae2-a600-41cd-aa49-ca930ca49f53",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7626d14c-8485-4399-8601-a5d87ac1a993"
        },
        "item": {
          "id": "72b348e9-84ef-482c-9733-5e0826be7080",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "85589aa5-3ce4-45b7-bb3f-c9b492aca30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201bcfff-dd75-4f35-a531-34f608d3a3e6",
        "cursor": {
          "ref": "ee6e5897-66b8-4494-b0bc-9acc54070905",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "336c83de-976a-4107-92a2-e36adf75da9b"
        },
        "item": {
          "id": "201bcfff-dd75-4f35-a531-34f608d3a3e6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4bbf7715-37cf-4b9d-9982-0fc569018f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e15cb55-a186-42ab-9110-fc568c8853f4",
        "cursor": {
          "ref": "1459e95d-edac-4f1a-96c4-c35e30388092",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f76bbff8-e8ad-42fc-b9ef-968189a6fc0a"
        },
        "item": {
          "id": "1e15cb55-a186-42ab-9110-fc568c8853f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1606ab08-b59a-41db-86e5-21193c8c8987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e145a592-5217-4829-8f59-59dae443f09b",
        "cursor": {
          "ref": "57131eec-b4e7-4ae8-9c7d-1205ba8db167",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "df50a9eb-2a07-4e0d-a25e-f366a0091862"
        },
        "item": {
          "id": "e145a592-5217-4829-8f59-59dae443f09b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a5de2f92-fed8-44e5-a222-3d1759c64963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959a1910-d5bc-47c0-8c2e-634dbc6c8dce",
        "cursor": {
          "ref": "926b21ff-3089-43a7-a946-580baa158a59",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f3d1d9d4-0828-4cde-a43a-7406afeed523"
        },
        "item": {
          "id": "959a1910-d5bc-47c0-8c2e-634dbc6c8dce",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff9a1225-d16d-467c-bcb9-38f657c1c5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc07831e-8c39-4d40-af59-0a565d71c47b",
        "cursor": {
          "ref": "efb3f40a-4b27-429e-a237-da67c3959959",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6747226f-30a6-4b93-88c9-86d2e87a1072"
        },
        "item": {
          "id": "fc07831e-8c39-4d40-af59-0a565d71c47b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1c5365a5-8e3e-4950-8589-1985eaab8b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4ba824-be38-4aa3-bfc2-eeaed3be7c9a",
        "cursor": {
          "ref": "41b4a2bb-5ec3-4cae-aabf-b8bd89755065",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f6d690d3-d815-41ce-83e3-f84f6e780880"
        },
        "item": {
          "id": "2b4ba824-be38-4aa3-bfc2-eeaed3be7c9a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4ff379e2-97e4-4769-9b2f-6c5595dbc8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877540c0-023d-4916-93a3-8642684bd336",
        "cursor": {
          "ref": "73867e89-6dbc-4e7c-b60d-8c2b07232d5b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "78121e17-8d35-473d-acb5-174f3d7abcad"
        },
        "item": {
          "id": "877540c0-023d-4916-93a3-8642684bd336",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d709cbd3-d6b4-4af5-a9ff-68109f0afe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad695c59-f3dd-43a6-b245-69d95ff9e355",
        "cursor": {
          "ref": "bbbb73bd-316e-487c-a8c4-583e39dde91f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1e22ea4e-6cd0-46eb-baf6-d6c0908c3041"
        },
        "item": {
          "id": "ad695c59-f3dd-43a6-b245-69d95ff9e355",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "894de4f9-c521-4ec1-af96-2bc70528bdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab81d985-1f74-42b3-b768-407f1d6df137",
        "cursor": {
          "ref": "305d6eb8-8e6d-46a4-bb54-56d86f2731f2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "06b88ed1-1c1d-476e-a692-1bd2c4c877c6"
        },
        "item": {
          "id": "ab81d985-1f74-42b3-b768-407f1d6df137",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e15da382-1a0c-419e-8068-973aff81a7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e1f8d8-7ecc-4c5d-a2b3-c00e93491b59",
        "cursor": {
          "ref": "e041eef3-a577-4db2-9dd3-e0767d4e6d23",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "975e2b60-f3a4-46c7-9664-eb6401eb876a"
        },
        "item": {
          "id": "19e1f8d8-7ecc-4c5d-a2b3-c00e93491b59",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fa5bc3bb-ad30-4645-a76d-f85e41f2cd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98926a7-a2a2-409c-9e53-9c9c71ece5c9",
        "cursor": {
          "ref": "9cecbba2-8779-4eed-8c86-e2293ad135b4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "46f2934c-d3a7-4924-9e42-df0176479a46"
        },
        "item": {
          "id": "a98926a7-a2a2-409c-9e53-9c9c71ece5c9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "06ed298a-1804-4e4b-bdcd-7564a93d4190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50dc82c-1deb-4344-9731-34a41aeb58bf",
        "cursor": {
          "ref": "0f57a6e0-b0b4-4f6e-b12a-ae5d8159d881",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f4130773-fe3b-406f-bab6-55fe19920697"
        },
        "item": {
          "id": "e50dc82c-1deb-4344-9731-34a41aeb58bf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2720ef4a-fb54-4613-8d79-8fb97235c9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2529c2-9e5a-498b-8163-43a8654b795a",
        "cursor": {
          "ref": "df3d50fa-6971-4763-99e3-65f577e955e2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "99e53501-923b-4259-8f4f-b971a678e550"
        },
        "item": {
          "id": "cc2529c2-9e5a-498b-8163-43a8654b795a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c4499eb2-b7ae-4525-97ce-2c09ea2418ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab611afe-de93-49e6-ae00-93f7dccec4e4",
        "cursor": {
          "ref": "7932811a-560d-4a6d-99a7-f8163e24f40f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a9627fbe-c364-4fdf-b70a-45be2656067b"
        },
        "item": {
          "id": "ab611afe-de93-49e6-ae00-93f7dccec4e4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f8fada34-05b4-47d8-8a3d-18271dc99ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f072e3-abeb-43d9-861c-592b5b28b33a",
        "cursor": {
          "ref": "28a233eb-b84e-4142-9571-a800e5fb60eb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6dcb7fd7-7fb6-47ea-8add-e56a4076013c"
        },
        "item": {
          "id": "a8f072e3-abeb-43d9-861c-592b5b28b33a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "26c98fd2-8051-4597-bb76-3f8838593a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3add3ea-3dd5-43da-ab85-18c791b1cf57",
        "cursor": {
          "ref": "36ef9ee0-286c-4e37-a4d7-e45e3f046da7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "635fc38a-39d0-42d8-a34d-9b30bb829ed6"
        },
        "item": {
          "id": "a3add3ea-3dd5-43da-ab85-18c791b1cf57",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aee20314-aacf-46e1-b0f2-988be85f1b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbfa81a-4fc0-4850-a8b3-06bb7be660c2",
        "cursor": {
          "ref": "6f9547bf-7a96-4ea7-b5d9-c55f3a37c71e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7119468b-274a-40d3-9beb-5642b637997c"
        },
        "item": {
          "id": "fcbfa81a-4fc0-4850-a8b3-06bb7be660c2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8a174069-0118-4eed-b318-b1c74f0726c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b35e793-0591-4583-a872-0f39fa52a076",
        "cursor": {
          "ref": "bda1dbb6-745b-4e2b-9209-247b6016397f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b7c65272-5113-49b3-984c-2bb9300d7e31"
        },
        "item": {
          "id": "4b35e793-0591-4583-a872-0f39fa52a076",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fc6e0d46-9502-4db9-9dd0-1a4ea101a9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e41526-dfd3-486f-9e43-3b017a81de03",
        "cursor": {
          "ref": "63dee572-d685-4260-87ef-70eb55279f80",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "95e96db1-1dd9-4950-8eea-b853cd71f337"
        },
        "item": {
          "id": "96e41526-dfd3-486f-9e43-3b017a81de03",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "72dc561a-7529-4467-8e13-123f0dd84ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9e35d7-aaa5-41ef-af16-89d1b4451317",
        "cursor": {
          "ref": "992f8e75-f807-4147-8483-d3b85246bb23",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "56148409-7523-425c-97fd-adc717cbebf5"
        },
        "item": {
          "id": "dc9e35d7-aaa5-41ef-af16-89d1b4451317",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "62269dc0-572d-4804-a2b1-b2b735982d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7391fb6d-c7f5-485f-83ad-d4048d0ccf85",
        "cursor": {
          "ref": "d51152bc-6097-49e4-8d6b-95c8199d7f51",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f075e43-52c3-4e9a-8274-5ecf08b024ed"
        },
        "item": {
          "id": "7391fb6d-c7f5-485f-83ad-d4048d0ccf85",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7fa76768-f13e-4cef-a2c7-66abdf9271d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f92a5a-21e6-4369-b776-012799f80bd1",
        "cursor": {
          "ref": "fb0a6307-e027-423a-83a9-8926342a29b2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "70ea15cb-e2cc-4274-b16c-ff0b5193da04"
        },
        "item": {
          "id": "f7f92a5a-21e6-4369-b776-012799f80bd1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5f4efbb5-9d83-4f85-9f89-0fc30a795360",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcbe825-b3a3-4ccc-9601-f9394c2ea10d",
        "cursor": {
          "ref": "c16ce79a-0730-4e18-8f33-47aa912f867f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b40ab71c-c04c-43ae-9181-048a1bff680a"
        },
        "item": {
          "id": "4fcbe825-b3a3-4ccc-9601-f9394c2ea10d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0d33f42f-c463-4224-ba9f-ca0de063b6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8a261d-31b8-4663-9e5a-07f8d2ec6cb6",
        "cursor": {
          "ref": "d0d8ee93-e41f-441c-8e3d-f851892512bb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0ca9a100-1168-4572-a5c8-f0b67a520c1a"
        },
        "item": {
          "id": "eb8a261d-31b8-4663-9e5a-07f8d2ec6cb6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9fc46817-f079-471b-a5ad-dd1e429b6147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2d9338-a623-49e4-a5e2-a226dec06018",
        "cursor": {
          "ref": "c7ee9e13-fa60-45ca-94a8-4afaa82dab07",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a5cc9835-3724-4099-a047-42ecd8447749"
        },
        "item": {
          "id": "1e2d9338-a623-49e4-a5e2-a226dec06018",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8f8defef-e61e-46bf-b94e-495e4a2f3464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4d6373-c36f-49e0-8d0e-92b31f4936de",
        "cursor": {
          "ref": "e26ac9ff-3d6d-4958-a3f2-fdcecad37a75",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2dd321e4-ff74-4c69-931b-562625cc4fe1"
        },
        "item": {
          "id": "ab4d6373-c36f-49e0-8d0e-92b31f4936de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eb34ad2e-1698-46d7-929f-c6a54a0e6ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8839cd-3674-4115-969e-5a967e834f36",
        "cursor": {
          "ref": "f2b19d28-96d8-4bb2-b884-0b4041386a7a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "366943fa-3d2a-4356-a536-738cbdf4e451"
        },
        "item": {
          "id": "7a8839cd-3674-4115-969e-5a967e834f36",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2eb607ed-cad7-4d2b-be94-c29b384b7a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f6ec1a-5f62-4834-88de-29d7b8c9badb",
        "cursor": {
          "ref": "f752a29e-aede-4b09-99b5-36dcffbd4bce",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "860a11bf-81e8-4f31-b7cc-062acc955ad4"
        },
        "item": {
          "id": "f3f6ec1a-5f62-4834-88de-29d7b8c9badb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "256b55e1-f6f6-48b2-9fdf-489ce5549f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1c7691-1257-4a16-9de2-644382628922",
        "cursor": {
          "ref": "2c2939f8-ba1c-4022-a1f1-bfb35bc498f2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6fd6949a-9956-44c0-809e-c73278dea716"
        },
        "item": {
          "id": "bf1c7691-1257-4a16-9de2-644382628922",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2cf647da-bd2b-429e-a24c-e1537d66fdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd99174a-c7b3-4c89-95f3-578e72cddc9a",
        "cursor": {
          "ref": "6a8f1677-e2a8-43de-9a35-bbca5bb61cd5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "403126be-a2b9-41d6-a812-6412da1bc734"
        },
        "item": {
          "id": "bd99174a-c7b3-4c89-95f3-578e72cddc9a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9948645-7027-45e3-9a28-ce172c1ee0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433d335e-e35e-482c-a524-bdb86d5994b1",
        "cursor": {
          "ref": "9d670833-8976-4734-8699-5f8516ac4910",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "debb4381-df43-453a-9163-9d46d6a964fb"
        },
        "item": {
          "id": "433d335e-e35e-482c-a524-bdb86d5994b1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "051c47cf-37a9-4eaa-b46b-cee2b6773226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6859d7ee-a4bf-490c-8122-e65a5a9bb011",
        "cursor": {
          "ref": "86d3d4b2-a335-4745-8d51-d950039c411d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ef9ed409-c269-466a-936d-a48f685edd58"
        },
        "item": {
          "id": "6859d7ee-a4bf-490c-8122-e65a5a9bb011",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c1d35380-32dc-46b5-802e-a78a2b63f84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95f6eac-fdc9-4a1f-8e65-2e1d07a6b553",
        "cursor": {
          "ref": "cfbe4723-0d54-415d-8680-46f491a607bb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "077bbee5-58b6-437c-a693-5af2019780ea"
        },
        "item": {
          "id": "b95f6eac-fdc9-4a1f-8e65-2e1d07a6b553",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6e7c4406-0c3c-426d-89f8-71de11715e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a672a0fb-f034-41e7-b0e5-4ffc3e35c75a",
        "cursor": {
          "ref": "864d1c21-2f7f-447a-96f5-2da0d7629002",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "73ece682-3156-4f41-8e7f-615210cd29e8"
        },
        "item": {
          "id": "a672a0fb-f034-41e7-b0e5-4ffc3e35c75a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "00dff579-f37c-4a7f-b8f9-87c9dfd9bff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae8ebdf-c54b-4d20-8032-4cac62895876",
        "cursor": {
          "ref": "53a87cf2-e515-472f-8751-6d6e150cb3d0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5466f52f-1d89-4ed6-b1f2-ff15c2613d08"
        },
        "item": {
          "id": "cae8ebdf-c54b-4d20-8032-4cac62895876",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "745c622c-7d03-498b-9e97-e28c02fc39ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dec706-3756-4513-bc40-c74c0aaa05ec",
        "cursor": {
          "ref": "da4b89df-56c6-49e8-bfc6-a78fef30d154",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ad03bfc6-5fca-4e5d-ae82-7f433cd32d6f"
        },
        "item": {
          "id": "31dec706-3756-4513-bc40-c74c0aaa05ec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3b7bd6a5-937f-42e1-8ba7-d7592c45fd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e796a5a-e735-473f-be21-2de35e995e5b",
        "cursor": {
          "ref": "a6b6a333-71ae-4038-a738-2a4d47153740",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f325b954-8cf2-4165-a679-0df5e281693d"
        },
        "item": {
          "id": "6e796a5a-e735-473f-be21-2de35e995e5b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4112c3de-2318-4875-a9fc-83d0d2073fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21132b1-25ff-428c-997a-623b3c53e2bd",
        "cursor": {
          "ref": "01b3a675-d3fe-466b-8923-ff7254b5dfe5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8669e5c0-7871-48e9-b404-0b44f5711a94"
        },
        "item": {
          "id": "a21132b1-25ff-428c-997a-623b3c53e2bd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b13977a3-e310-4116-ada7-94535629b9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e620e21a-44a9-418f-9be4-9bfb893c957c",
        "cursor": {
          "ref": "18c4afa4-2f7a-40aa-a16f-7c455719404e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9992e418-2681-4104-a83d-653f096328aa"
        },
        "item": {
          "id": "e620e21a-44a9-418f-9be4-9bfb893c957c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e7bfb472-fd4e-4f94-a8c0-c962662690a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb8e45e-96fb-42b5-9170-94c3cf55fcd8",
        "cursor": {
          "ref": "f3d84bf5-5381-42ed-b546-0c80bc9961df",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c6370cc5-62f9-4220-a7e1-95ccae4ff761"
        },
        "item": {
          "id": "fcb8e45e-96fb-42b5-9170-94c3cf55fcd8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "14bad2e7-b937-4853-8c0a-8877267dd781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e72961-d864-41d3-a45d-97de12c602ab",
        "cursor": {
          "ref": "13ea2523-d28d-4744-9125-8fb07fde2d04",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0d25ede6-7051-4e48-b474-8b003a4d6f8a"
        },
        "item": {
          "id": "98e72961-d864-41d3-a45d-97de12c602ab",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "61a1e1e2-ab60-428e-b474-8f73456abf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9955d7b9-4792-4592-b201-4d7b36bf0532",
        "cursor": {
          "ref": "3354dd1f-280f-4675-966b-2992f7f1ac96",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3d7e53b7-c2a2-491e-8260-503a76289e3d"
        },
        "item": {
          "id": "9955d7b9-4792-4592-b201-4d7b36bf0532",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e36d98f-84f9-4545-ab7e-1a2cca8a6e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338010f7-13ab-4603-aef5-8e26631ed9e6",
        "cursor": {
          "ref": "aa768e1c-7269-46dd-bad6-bde4b2d41650",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "393981af-f3b2-4160-868b-fee6f905b75a"
        },
        "item": {
          "id": "338010f7-13ab-4603-aef5-8e26631ed9e6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0c7753fc-8cc0-400b-8197-d44bee2ef75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a171176-2014-4c5e-adb4-a4cfbd20f02b",
        "cursor": {
          "ref": "e2a37db0-4fe8-4a7a-ba0c-c72114191d72",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aba8a910-b739-4284-a38c-742dacfbfc19"
        },
        "item": {
          "id": "6a171176-2014-4c5e-adb4-a4cfbd20f02b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "de8a7891-220b-4eee-aedb-b385a34d8724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84bc3ac-33e0-4eb8-85a8-ef97b4fd91c0",
        "cursor": {
          "ref": "7839a73d-381b-4020-a2d2-ee4146218685",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5b3af35e-d24e-4d34-8a1d-fbdb7f1153ed"
        },
        "item": {
          "id": "c84bc3ac-33e0-4eb8-85a8-ef97b4fd91c0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b34f2d50-2ae6-49b8-a37c-da565db7b7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ceebd4-d97a-4f60-a170-d25168d2eec4",
        "cursor": {
          "ref": "b5861ab5-0ea7-400b-98ef-dc67da9cdeac",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d87cf111-1f8e-41e6-b1b7-8586e3be072c"
        },
        "item": {
          "id": "87ceebd4-d97a-4f60-a170-d25168d2eec4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e7ca89dc-5e11-4a42-913a-bef45b1681d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e176db9e-c981-4ac6-be93-232c033db946",
        "cursor": {
          "ref": "cb064aa7-2afe-4055-a65c-518b23de6696",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "190aab97-753a-461a-8ad0-cde13f77762d"
        },
        "item": {
          "id": "e176db9e-c981-4ac6-be93-232c033db946",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d0948cbe-8c6f-453d-82dd-031986d7707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00c5d7f-b039-40f9-a254-0aae03919d41",
        "cursor": {
          "ref": "c03984a7-18f7-40c3-8129-7bdd8617a14a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ec299679-5626-470c-b233-5a03dce760a7"
        },
        "item": {
          "id": "a00c5d7f-b039-40f9-a254-0aae03919d41",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aff2dd35-34ee-4002-b0bb-02496c335db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba898464-6dd6-4588-bde6-bf6adaef05cb",
        "cursor": {
          "ref": "486a6f67-3b7a-46d1-b95c-4eaaa8c64429",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5fdbfd4d-5ef6-4b16-bf8a-319cff25f5e8"
        },
        "item": {
          "id": "ba898464-6dd6-4588-bde6-bf6adaef05cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6755bcd9-4a54-4d08-b727-5272dc95c778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108c6d6a-47ba-47b1-be9a-ad8c7c552e42",
        "cursor": {
          "ref": "d81abc07-2f4f-4e29-8289-5cd4e44556b1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bc389c1b-9914-438f-b843-e7c465849586"
        },
        "item": {
          "id": "108c6d6a-47ba-47b1-be9a-ad8c7c552e42",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f2c7eab8-2d92-494d-b43e-a6b8a48aa080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0f4d09-d755-4b8c-8944-0d693600e830",
        "cursor": {
          "ref": "868b8da7-0670-4153-a60c-7420252e0fc4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c428e301-473d-4ee2-8551-ba71c70b30db"
        },
        "item": {
          "id": "bd0f4d09-d755-4b8c-8944-0d693600e830",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "21facc25-2f02-4c18-bedf-e1fb85038bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc6a3e7-920c-44c1-93d1-64c2541f1c7c",
        "cursor": {
          "ref": "500bc8d0-a9bd-4168-9920-5b09d4e2b35c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2a14b731-fc72-4c05-a752-981352a6e5a2"
        },
        "item": {
          "id": "edc6a3e7-920c-44c1-93d1-64c2541f1c7c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7e68a9ca-bd86-43fe-a5b1-be9f4286de6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c34d8e-6b5a-460d-94eb-7d2665d0650d",
        "cursor": {
          "ref": "576ebcc2-112e-414c-b30b-026aedaa6555",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c7037847-a8dd-4d25-bab4-80c3becbab11"
        },
        "item": {
          "id": "40c34d8e-6b5a-460d-94eb-7d2665d0650d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f9809cdc-b010-4d20-8b0b-52280b494d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f4913a-3d24-4cd6-a2ac-0911828efacd",
        "cursor": {
          "ref": "5155e32f-8ec5-41c5-874f-add8f25d5795",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ec03c013-b63d-4f37-bbf7-c7bac4e96b27"
        },
        "item": {
          "id": "53f4913a-3d24-4cd6-a2ac-0911828efacd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d496a09c-3170-43c4-8f21-9b274ad8f931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd740cd-e62c-4765-af85-da880ea04425",
        "cursor": {
          "ref": "a159ecdd-6e41-4c72-a437-8462142de174",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6bbaf442-012b-4eeb-a168-9224a5bed11d"
        },
        "item": {
          "id": "7fd740cd-e62c-4765-af85-da880ea04425",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "299669d6-ff40-456e-8305-a577e918faf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa73a422-10bb-4a9f-abc1-a89264f97004",
        "cursor": {
          "ref": "610a5071-41f5-409a-9c97-e753772a6d90",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "31486683-4df2-4b74-95ee-41f7d6113609"
        },
        "item": {
          "id": "fa73a422-10bb-4a9f-abc1-a89264f97004",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0773bf7d-9d05-45bc-a108-5ccfeb7e805b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e973153f-85be-44a0-837a-b70d41d5cfdf",
        "cursor": {
          "ref": "68401920-d376-421f-82a7-bd8e3cb546a8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4a93c46e-588a-4595-9dfc-174d4bfebb5b"
        },
        "item": {
          "id": "e973153f-85be-44a0-837a-b70d41d5cfdf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "090f40ed-1976-434b-bd1b-a5c54b5a3f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07790de8-4008-4a9f-968d-7bf21adf9733",
        "cursor": {
          "ref": "f485a5ce-8901-4ead-b266-5a0cc03ab802",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2144e4c6-eda4-45fc-b791-21780aef1783"
        },
        "item": {
          "id": "07790de8-4008-4a9f-968d-7bf21adf9733",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "736450c3-8228-4149-bba8-ba2e34ca8f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34856d9-245e-4515-aff5-1d021bd18baa",
        "cursor": {
          "ref": "a6e34881-f871-4eeb-864f-6bd9625235c6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ea1f91d5-fb30-40e6-b244-67ac5968e8ed"
        },
        "item": {
          "id": "b34856d9-245e-4515-aff5-1d021bd18baa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4fdf2086-9e28-4a06-b0ee-298ef0f4647b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fad48d0-2576-4539-8c89-61438d6998bf",
        "cursor": {
          "ref": "0b349923-0834-4f8a-ad74-9fe57f236097",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1cfeafd6-122e-49a1-8dd9-add1d3f033b1"
        },
        "item": {
          "id": "3fad48d0-2576-4539-8c89-61438d6998bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "517c79ab-f136-4b13-9ad0-3e8ee4fbca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804a9a53-d1b5-40a9-8a81-8a886ff7dbf5",
        "cursor": {
          "ref": "dce8c8f3-6cf5-46f0-9a45-fbfae26f9c22",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f84c5f13-d50e-4527-af68-2ed2eacfb501"
        },
        "item": {
          "id": "804a9a53-d1b5-40a9-8a81-8a886ff7dbf5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90dcd755-f710-4083-a989-a4fade7bd175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe0fda0-d7f1-40e2-8a50-6c4f4ddfe612",
        "cursor": {
          "ref": "dd886128-fdc1-4b97-9dce-d9af449b3843",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e4aef9fc-ee5b-488e-a3ef-337e5b2a483d"
        },
        "item": {
          "id": "bfe0fda0-d7f1-40e2-8a50-6c4f4ddfe612",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "87850fea-0a2c-4384-b555-f53a1a887f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a00e86-4aca-46a1-824b-1df727e2af5c",
        "cursor": {
          "ref": "cc7a245a-2294-4800-85c5-b7eb06acbb62",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4bd41f5f-4ace-4d7a-9bb4-b8a7e8d98be8"
        },
        "item": {
          "id": "f9a00e86-4aca-46a1-824b-1df727e2af5c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ecaa9259-a693-48ce-a772-4f33225c1c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22947fc-63be-463d-81f8-1a17c1809aba",
        "cursor": {
          "ref": "ade6c040-922e-441a-bd0e-1666d32145df",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ac726be7-b67c-4797-b641-531590b4b677"
        },
        "item": {
          "id": "f22947fc-63be-463d-81f8-1a17c1809aba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6e49cc47-a492-40c4-b8d3-17d83b938a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7612ea58-d316-428e-beeb-b71e680ebce9",
        "cursor": {
          "ref": "e5a51a28-c2af-4e42-9941-78cd46776037",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ff726749-982f-485d-b4e7-ff868ca0c5af"
        },
        "item": {
          "id": "7612ea58-d316-428e-beeb-b71e680ebce9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ad5bf096-7ff5-4a72-bc37-36c6d3c15165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec5c485-8c22-440c-ae4d-630f44027cee",
        "cursor": {
          "ref": "f752d56d-b2f0-48b8-8562-11ad99ec234f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c00ff044-d85d-432e-9cf6-020400873616"
        },
        "item": {
          "id": "0ec5c485-8c22-440c-ae4d-630f44027cee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b458f66d-38d6-4bef-94e3-2a21c88190c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfb375c-fc47-404f-8f01-7e8775be3dab",
        "cursor": {
          "ref": "5c6da87e-3ed7-422e-ace1-a4ea8b28f4eb",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5f836fe6-85c8-41fe-88e9-4540dc261a70"
        },
        "item": {
          "id": "7cfb375c-fc47-404f-8f01-7e8775be3dab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e9e6d007-c1e1-42f2-a83a-03d082f9d448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f31a4b-291d-46b4-a310-be817ae9b570",
        "cursor": {
          "ref": "e4b0fda1-fd4f-43eb-9e07-fe2c0f50595a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "24f32cff-4678-4c16-a0d2-4f0f089ab3b5"
        },
        "item": {
          "id": "87f31a4b-291d-46b4-a310-be817ae9b570",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "70fcceb6-7fce-4b7c-8623-8a85258e819e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f4536a-376d-491d-ba36-f822e11420ef",
        "cursor": {
          "ref": "5f144691-d710-4d70-b215-79bf97ca51b8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2d73cac3-9ab4-4572-8713-ebcab94b09c8"
        },
        "item": {
          "id": "b1f4536a-376d-491d-ba36-f822e11420ef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9d67ecf3-4a8f-416c-8c68-e7befb5403bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e66c932-5812-418c-8a37-a3dd5511170c",
        "cursor": {
          "ref": "e2aca77e-d2d2-4966-8d5e-9c2b695e58b8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ad0dd068-1c6f-4675-a576-e0083ba1e7af"
        },
        "item": {
          "id": "0e66c932-5812-418c-8a37-a3dd5511170c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ff46f62e-d227-4e67-a0a9-d8b7ee062291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557ee934-4cc4-4976-a140-7e5511c3393d",
        "cursor": {
          "ref": "ab3e9474-65e7-4f05-b292-129a23d9e7a5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "95f0d2d1-0fd6-41c2-89b1-34e6ff641c05"
        },
        "item": {
          "id": "557ee934-4cc4-4976-a140-7e5511c3393d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "42e87a25-ddf2-4ff4-a40a-528b238abc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2f488b-5864-4511-a962-f6f489a64435",
        "cursor": {
          "ref": "f2c372ab-497a-4b6c-9c0e-6d6a507f537c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8ec9df39-98ae-4a0f-b9b5-fcb8c5e8b1b5"
        },
        "item": {
          "id": "bc2f488b-5864-4511-a962-f6f489a64435",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aea688ad-0721-491c-8b74-b76f6888e554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcd486f-2d78-4106-bb75-27f1ce2e2db9",
        "cursor": {
          "ref": "4d39e1e0-0d91-43e3-8b0f-01559b4dbb53",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b1e86f6c-ea29-41c4-aa31-22c4a36cff8b"
        },
        "item": {
          "id": "efcd486f-2d78-4106-bb75-27f1ce2e2db9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "edc91865-e52b-4be4-bfa7-020c3d4608fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72008804-35ee-45a2-b94b-8b0b8d8f66f3",
        "cursor": {
          "ref": "41a32da3-234c-43c9-aeb5-08aaa7c9ff59",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f52fee58-a596-4773-93c9-5ed86e6bbf56"
        },
        "item": {
          "id": "72008804-35ee-45a2-b94b-8b0b8d8f66f3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aadf9e10-0354-4db8-9b7f-26f8d43d12b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d3f2f3-f7d9-44c6-b4d7-7c08d1010a54",
        "cursor": {
          "ref": "fbadfd81-4cc6-4f73-a9c8-e01797719b57",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5507243f-ae9a-4e07-b93e-1a3f79b4c465"
        },
        "item": {
          "id": "91d3f2f3-f7d9-44c6-b4d7-7c08d1010a54",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b3e33e1a-7260-4632-9379-a9f26abfe136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6959236d-ce26-4e09-ade3-255d8b57fb4d",
        "cursor": {
          "ref": "330f86f0-d8a8-40a7-beca-90ea644f9c6d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "63bfc761-a9a6-46d7-86da-039d3154a544"
        },
        "item": {
          "id": "6959236d-ce26-4e09-ade3-255d8b57fb4d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "edd5c37f-a89d-4aba-9ad0-708cf233c49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a679cdf-05ef-4c8d-b660-286a17f8a71a",
        "cursor": {
          "ref": "833a0484-b341-4579-8ff8-666f604411ff",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0b8fcaee-b5ad-4037-9810-49c4a2298e9b"
        },
        "item": {
          "id": "8a679cdf-05ef-4c8d-b660-286a17f8a71a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a3dbb140-2b90-4ecb-ba98-2565ea427695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01681f01-0350-4a02-b789-05aa60d1cb3d",
        "cursor": {
          "ref": "322f3633-36b6-49d9-beca-4f58099326e4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e689fdd-c789-49cd-9340-4cb0a28de64a"
        },
        "item": {
          "id": "01681f01-0350-4a02-b789-05aa60d1cb3d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "39c7d138-ee24-4cf0-8184-a82ec93d2095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e75a14-60fe-4cfe-9f1a-32b57b0b56d7",
        "cursor": {
          "ref": "66395942-dcb8-4cc9-bd5e-c5d19919ca67",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0339b0bd-cc5b-4047-b85e-a94a1cb14737"
        },
        "item": {
          "id": "e8e75a14-60fe-4cfe-9f1a-32b57b0b56d7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d9abf04d-8010-4716-9fd8-4f664d8dfc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c2e544-30f6-4637-a975-431d7e92dad5",
        "cursor": {
          "ref": "06e4721a-8abe-47f8-9c87-ebbd5382f632",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "40e02fab-9ba8-459f-8c37-a3414d0d663e"
        },
        "item": {
          "id": "c5c2e544-30f6-4637-a975-431d7e92dad5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fd48d5f7-4364-4d37-bea0-09e88f390d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a78c240-f304-4208-b2ea-0cdbf582d3cb",
        "cursor": {
          "ref": "bc940a63-01d9-4b22-8331-92f8c8c12265",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3f2dca3f-6961-48a3-abbb-b08d04c55e5a"
        },
        "item": {
          "id": "8a78c240-f304-4208-b2ea-0cdbf582d3cb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d71adb2b-0cae-41df-b32f-48f052c06306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf17eb-06c4-43aa-97a0-c624e645da14",
        "cursor": {
          "ref": "6dfe5868-9b58-45a4-84d0-d7456bbdf188",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5d971696-759e-4f0b-ba3a-91fa11973375"
        },
        "item": {
          "id": "6ebf17eb-06c4-43aa-97a0-c624e645da14",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b967260d-66b4-4e2b-8678-23cbe8f38aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e712942-58e7-40d5-9e8c-53aa6cbb3e7e",
        "cursor": {
          "ref": "d1b6b367-932e-4b32-93d4-3f1e1668ff8d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0f91b271-e76a-41e8-bf5d-181f1cda7fb6"
        },
        "item": {
          "id": "9e712942-58e7-40d5-9e8c-53aa6cbb3e7e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3795c16c-99d3-4c17-ab61-5f726a9ace59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2e9bc1-f222-4ea0-b8a0-e9e3e4baf963",
        "cursor": {
          "ref": "25177515-4461-462e-9180-fafdb2895e6c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8772022a-9b0f-4b9e-8e6b-b74336ce4b22"
        },
        "item": {
          "id": "fa2e9bc1-f222-4ea0-b8a0-e9e3e4baf963",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b2a6f33c-316f-4b5e-93ab-0e4464b7b417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd6e597-89cd-49fa-8ec6-7170710dbbb4",
        "cursor": {
          "ref": "78627932-8aea-4df6-bcdc-830ac1b66937",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "423159e5-9e14-4272-8609-6b4614b46f9e"
        },
        "item": {
          "id": "1cd6e597-89cd-49fa-8ec6-7170710dbbb4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ba55eb98-75d1-432e-ad79-be062f5595c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2232eb-ff34-4fd4-9123-cf978e29c3d0",
        "cursor": {
          "ref": "37516b95-8001-4ebd-a06d-7a9a60568034",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cb8df7a3-aaf1-466c-aa45-098055d78705"
        },
        "item": {
          "id": "5e2232eb-ff34-4fd4-9123-cf978e29c3d0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2703b635-134b-44f7-ad5a-33d64aaa87ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe58882-87ba-4249-8788-2e42beddacde",
        "cursor": {
          "ref": "fce3e103-f43c-4022-90e4-b170ffa348d1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c4753c6b-0d97-4db2-9789-152b088d5621"
        },
        "item": {
          "id": "2fe58882-87ba-4249-8788-2e42beddacde",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "555e93f9-1a63-4bb7-8c72-a4fe7b24ebd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0266fe58-5477-4d66-9022-c7eb561f1096",
        "cursor": {
          "ref": "26584ed4-323e-40dc-88bc-14a96774472e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5c9250a8-5bbe-4317-8609-e61dd754e595"
        },
        "item": {
          "id": "0266fe58-5477-4d66-9022-c7eb561f1096",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "50a94c8b-b550-413e-a70b-e07335eb1c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a3c2f7-c034-45ac-8eb1-ee9d00f29094",
        "cursor": {
          "ref": "3eb9308d-8b7a-45d7-b986-81c08bc2e304",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ee5a4526-62bd-467d-8b26-49c0b862f676"
        },
        "item": {
          "id": "f8a3c2f7-c034-45ac-8eb1-ee9d00f29094",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "00219ab0-bd30-46f7-8921-a315b4a7e791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa28d98-ee7a-4cc8-b555-bdcdde6401ad",
        "cursor": {
          "ref": "2af7ec18-a059-4170-a065-5e602640d328",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b359dd4c-391a-4648-b02f-9463667ce9cc"
        },
        "item": {
          "id": "6fa28d98-ee7a-4cc8-b555-bdcdde6401ad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4af53e4f-6c99-4d85-89f8-f6d42ed67d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ebefda-137d-4b6c-88d6-e87312c465d0",
        "cursor": {
          "ref": "77ee5811-bdd0-473d-a57d-b9dc969f464a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f51638cd-e59d-48a0-af14-a6b29e00d23e"
        },
        "item": {
          "id": "85ebefda-137d-4b6c-88d6-e87312c465d0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "874cf20c-0a11-4a39-bfd0-4a593882b52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bf4ef4-5a80-401c-b912-c99bba769002",
        "cursor": {
          "ref": "a1a730cf-12f8-477e-b77f-d48fb07de5a4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1576ae24-1f52-43e4-b500-5d5cf76a3062"
        },
        "item": {
          "id": "02bf4ef4-5a80-401c-b912-c99bba769002",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "afb10ef6-844d-40cd-a75f-9bbf809317f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280cb7aa-675d-4033-b93f-ce814dc5da68",
        "cursor": {
          "ref": "93f81c3d-782b-4f70-8f5e-9b8a17108fc8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3214cf2c-b0ef-4ab1-995c-7e84405ce00f"
        },
        "item": {
          "id": "280cb7aa-675d-4033-b93f-ce814dc5da68",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3a156537-4240-41c6-bcd4-9fcc2836a6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ab2091-d1e6-40b2-a80d-bed8fc559ec1",
        "cursor": {
          "ref": "ccd0058a-98ce-4f1b-a8fc-414fc2d6d4c0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "786fedcb-3d7b-451d-ab05-98b4eeab0f26"
        },
        "item": {
          "id": "b3ab2091-d1e6-40b2-a80d-bed8fc559ec1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "393cb088-7413-4422-a59f-9313c05596e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c692dab6-d467-4cd2-a417-1895572aadfc",
        "cursor": {
          "ref": "63a95fb5-7d05-40ab-aa25-70c2d030e043",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bb78195b-f543-401e-abcc-29a62d89ba3c"
        },
        "item": {
          "id": "c692dab6-d467-4cd2-a417-1895572aadfc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a6ce0dbe-3771-4c14-8c09-ae1671af49b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99d42e6-0466-42b2-a3a5-4781cc7acc29",
        "cursor": {
          "ref": "0575c0bb-bb43-4ae8-a9e1-7e087530f621",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "57c43793-c41f-40c5-a236-5e78fba900f8"
        },
        "item": {
          "id": "f99d42e6-0466-42b2-a3a5-4781cc7acc29",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "11468452-1306-4c22-9a67-d68b50e8676c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5d018e-a191-436e-940f-8b6ef97cd9db",
        "cursor": {
          "ref": "4bedf267-8a36-4773-8222-ed5735f4c6df",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a9325a98-cac0-480a-bfe9-b585b683aef8"
        },
        "item": {
          "id": "3a5d018e-a191-436e-940f-8b6ef97cd9db",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e4457894-e275-4bff-af4f-c82ec84d16a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ab979c-e753-4c7a-b2db-4bb00ff97166",
        "cursor": {
          "ref": "e5a7dd50-0d37-4927-8824-58b20dc2e1d4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9eadbc5a-cf23-48f0-88d5-19a2bb2f63fa"
        },
        "item": {
          "id": "b9ab979c-e753-4c7a-b2db-4bb00ff97166",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d9500fd-b9e7-4edd-97db-c74976108e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a26f2c7-2356-452d-b86f-91ad02bd8d7a",
        "cursor": {
          "ref": "d32e0150-755b-4048-b862-77699c32154d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "04db1cbd-24a2-4563-8b8b-557a56692797"
        },
        "item": {
          "id": "8a26f2c7-2356-452d-b86f-91ad02bd8d7a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "29bf3d8b-6981-45e2-b07e-0c88db67a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a2125c-dae0-419d-80b3-a6abf6f6862e",
        "cursor": {
          "ref": "fcff9103-ecbc-4608-9fe1-42736e1b99b1",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "322e34ca-a4f6-4616-a62f-c62cef57c374"
        },
        "item": {
          "id": "89a2125c-dae0-419d-80b3-a6abf6f6862e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c717ae64-bf6f-4128-8c05-d093f90a9611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b78a16-3538-41b6-8445-92f3e4c7732a",
        "cursor": {
          "ref": "3a57b07b-2821-4726-a3a3-6c3a9fab7715",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2b4bd51f-5eed-43a1-9e1a-0890d5ee3b64"
        },
        "item": {
          "id": "50b78a16-3538-41b6-8445-92f3e4c7732a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0a51baac-6718-4823-a7fa-d5d4bd1e733e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a27cc7-2328-418c-b837-c72c3277b66b",
        "cursor": {
          "ref": "b11f4f52-d68e-4579-a834-d45c5b40f8ad",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c16ff890-dd8a-405a-b91e-524b54ca4792"
        },
        "item": {
          "id": "f9a27cc7-2328-418c-b837-c72c3277b66b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8e73679a-2066-4591-903d-6763e122be87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc50422-e7d1-4c76-afbb-cc60868b87fc",
        "cursor": {
          "ref": "ec0ecd73-9a93-45e4-806a-391595c87944",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "623013e2-caf9-4fc9-a9e7-680622044f25"
        },
        "item": {
          "id": "dbc50422-e7d1-4c76-afbb-cc60868b87fc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ececef2f-a3bd-4151-8af3-97764cf8c1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552a75f0-b217-4335-86c1-e80441ae75e3",
        "cursor": {
          "ref": "3aba2c82-fc53-4c6f-808c-c33e349f9a5c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8e0d904a-2864-4880-8a68-d93e183cbfd8"
        },
        "item": {
          "id": "552a75f0-b217-4335-86c1-e80441ae75e3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "423447aa-295b-4f51-ae54-99b9931c7289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e098888-543a-4900-8c2d-9ff8c7b7c519",
        "cursor": {
          "ref": "b4e97dad-2c2c-451e-8801-93ec41a1be25",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a058f6e4-6d6e-4348-a7cf-7064d044f7d6"
        },
        "item": {
          "id": "7e098888-543a-4900-8c2d-9ff8c7b7c519",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "62ce708d-0fd6-49ae-a203-8118b70c0f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ecd682-6c9c-453e-88e5-09594f3eddae",
        "cursor": {
          "ref": "91b50da5-2acf-4209-9898-04308ce3292a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9cb4c86d-71a2-4c57-962b-b9269dcf9bef"
        },
        "item": {
          "id": "85ecd682-6c9c-453e-88e5-09594f3eddae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3b3774c2-1123-4825-9b38-e3c0fc34fff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fdd72d-4334-4751-b876-fdf1a18e487f",
        "cursor": {
          "ref": "59e588d8-195a-4b93-91b9-e0a7cd80c3af",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8e406707-b2e2-4428-a491-f737df3d9667"
        },
        "item": {
          "id": "35fdd72d-4334-4751-b876-fdf1a18e487f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d379dad0-f20b-4e49-98e1-13241325f9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6f3cde-58cd-4c88-9b9c-5f2ed284959f",
        "cursor": {
          "ref": "f4c86ed4-3419-455a-9cb3-6f75e7a051b2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3ab2fe1d-f86f-40a2-8848-82df79249a16"
        },
        "item": {
          "id": "4d6f3cde-58cd-4c88-9b9c-5f2ed284959f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5ccb1d38-d008-4353-b192-72e0299b93a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b787163-fa3a-475a-9c23-0d89d0eece25",
        "cursor": {
          "ref": "fa272420-9237-4d3c-8f2e-045ee793223c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c861f8b-29e9-4e1e-8376-2c143506b268"
        },
        "item": {
          "id": "9b787163-fa3a-475a-9c23-0d89d0eece25",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a081bad5-cf06-49f4-86b2-604b014165d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32701534-03b4-414b-aee2-c2f0b74ae86e",
        "cursor": {
          "ref": "85322817-8fe8-4333-b943-5c32d9cdb6bf",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6976096b-e500-429d-85ee-2198ca1da3d2"
        },
        "item": {
          "id": "32701534-03b4-414b-aee2-c2f0b74ae86e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "99fdfef1-83d8-4600-9b9b-2dace7433d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571a94a7-4bff-4ac1-8c8d-51983f78df53",
        "cursor": {
          "ref": "e22023c9-57c3-4d09-bcb5-02bfdae475f2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fb89d2fd-905d-4426-ae9a-09df9743aaaa"
        },
        "item": {
          "id": "571a94a7-4bff-4ac1-8c8d-51983f78df53",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "508bef19-fcb2-4fe2-a9a6-76f9a2664801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce928f9-6b72-4f7a-87ac-74419be5ebfd",
        "cursor": {
          "ref": "d96f5a55-f29d-4c82-bd00-80894be82bb7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f9d50f11-2df2-415a-85c9-acb852519560"
        },
        "item": {
          "id": "cce928f9-6b72-4f7a-87ac-74419be5ebfd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c7e9b1dd-7418-48cb-9feb-ed79d0dc5b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f183240-94d2-4195-ba4a-c845d2357eb5",
        "cursor": {
          "ref": "ee70a366-0cd7-4de9-a079-b0c3087554c7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aed483fa-b2bb-410a-bc00-515fbfc2de52"
        },
        "item": {
          "id": "6f183240-94d2-4195-ba4a-c845d2357eb5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "af127040-f4d2-437f-8fe8-46fceb0abc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4804ddc-cd03-4dc3-a7ce-d5d185737885",
        "cursor": {
          "ref": "8c59a180-a25d-4a8a-9126-bd0e9da1f7e5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5631f182-dc36-4a68-81b3-8e0640424bd0"
        },
        "item": {
          "id": "c4804ddc-cd03-4dc3-a7ce-d5d185737885",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "abf40dd8-a0e3-417c-b2bb-c9ed8e07bb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78d70ce-4e4d-47f1-8e4d-6c675436f6f5",
        "cursor": {
          "ref": "6e5a523b-7a06-49f1-ad8e-05bafaf13e22",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "20a1c0b9-f818-494e-9a42-ac8e7eb9bfe7"
        },
        "item": {
          "id": "a78d70ce-4e4d-47f1-8e4d-6c675436f6f5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9081adc3-cf95-4c39-9909-86965197b6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7998f6da-7f76-4e4a-8329-5204c233d89d",
        "cursor": {
          "ref": "36d7bab3-6f83-423a-bfa5-ab256442adaa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "90b5add7-a3fb-4ddc-bdfb-9d384415d546"
        },
        "item": {
          "id": "7998f6da-7f76-4e4a-8329-5204c233d89d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "126f0c94-f075-4691-a5aa-81208f28ec5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92544ea-3167-4a7b-b05f-178019c9b9fd",
        "cursor": {
          "ref": "2ae91174-9987-4341-9036-6f6cf6fc8aea",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ca57e98d-d73a-4556-b042-44a93ce363f8"
        },
        "item": {
          "id": "a92544ea-3167-4a7b-b05f-178019c9b9fd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "925cfe39-0318-43b4-80fc-ad6d0d382376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9637a596-e3e7-4700-91d9-e24e405037bc",
        "cursor": {
          "ref": "0d223b0d-ddf4-4ea9-8206-1c6cccc3f9c5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "84a29a18-93dc-4505-87c6-a3b697ba204c"
        },
        "item": {
          "id": "9637a596-e3e7-4700-91d9-e24e405037bc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b693ef38-279e-4f65-ae27-1703feeda874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758f7647-73e8-4f85-a99a-da9ece7f6dd4",
        "cursor": {
          "ref": "595bbe1a-c0a2-4315-b2b6-f5caa90cbb9a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "39583683-c15a-4c4e-b2e5-fc10363c2dbc"
        },
        "item": {
          "id": "758f7647-73e8-4f85-a99a-da9ece7f6dd4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1c04ac12-a156-4696-84a5-44e74933c9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da88ab6a-cd99-486f-a77e-fbc1615785e2",
        "cursor": {
          "ref": "757de6ea-9f70-46b4-858b-4f096224a01c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6b9dbf7e-9534-45d9-a6a2-e01f16d34d4a"
        },
        "item": {
          "id": "da88ab6a-cd99-486f-a77e-fbc1615785e2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d8a540c9-fb34-42e3-905f-fae8dff47fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c4663-4cc0-4a30-9be8-4f9acdb854cc",
        "cursor": {
          "ref": "5e22e6d5-3eac-4a26-9386-4dc45db3f50b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "99fb890f-4e89-4466-9b8c-54fe0fd5933e"
        },
        "item": {
          "id": "7d9c4663-4cc0-4a30-9be8-4f9acdb854cc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d9e44f1-4758-40ae-9bd3-addd037c3e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "3a9f8f25-c646-4bf1-ae54-b1dbd38fd9b3",
        "cursor": {
          "ref": "72e555e5-d12b-4f20-9218-ce3bf356b10a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65dfefc4-0b30-458a-b3a4-fe877c79865b"
        },
        "item": {
          "id": "3a9f8f25-c646-4bf1-ae54-b1dbd38fd9b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "81df476b-68f1-4876-828d-da867940ca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "8ca375ad-740a-4ed6-a918-701c7614ea38",
        "cursor": {
          "ref": "2cf4d1d4-6446-4a98-b04c-d856c4dd0f02",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9725b0d2-03f2-4c8a-b877-1ad51d8f2601"
        },
        "item": {
          "id": "8ca375ad-740a-4ed6-a918-701c7614ea38",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3a87d828-a22d-463f-bac8-6d7dce0d49ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e03852cc-6724-448b-a55a-fbfd938b4497",
        "cursor": {
          "ref": "8f9c14ee-6bd2-405d-bbcd-e413262bd91e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "090edd9f-e009-4143-9561-6fd3c4184d9b"
        },
        "item": {
          "id": "e03852cc-6724-448b-a55a-fbfd938b4497",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60bd1ae4-34f5-4e5a-95d1-4b6c81e91a37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03852cc-6724-448b-a55a-fbfd938b4497",
        "cursor": {
          "ref": "8f9c14ee-6bd2-405d-bbcd-e413262bd91e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "090edd9f-e009-4143-9561-6fd3c4184d9b"
        },
        "item": {
          "id": "e03852cc-6724-448b-a55a-fbfd938b4497",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60bd1ae4-34f5-4e5a-95d1-4b6c81e91a37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7ac0d1-7a0d-4b6c-93c5-2673216bca4c",
        "cursor": {
          "ref": "d4b55910-26f8-45f0-a151-16fc9c22416c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4b14721d-b24c-4675-a183-c82b731f3c96"
        },
        "item": {
          "id": "cd7ac0d1-7a0d-4b6c-93c5-2673216bca4c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "92bc8c1c-6aae-46dc-a979-3d1333693c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d243ab6-2f6f-4413-a656-f28ef91f559f",
        "cursor": {
          "ref": "6dbc3ae6-3953-4a52-b3be-1c96a393d7f6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf8e9533-bb67-42af-8f19-80f6a183a236"
        },
        "item": {
          "id": "4d243ab6-2f6f-4413-a656-f28ef91f559f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "25c34906-1369-47c3-9a51-abcba92dfc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}